Implementation smell,Namespace,Class,File,Method,Description
Long Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The method has 110 lines of code.
Long Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,The method has 100 lines of code.
Long Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The method has 166 lines of code.
Long Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The method has 125 lines of code.
Long Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The method has 188 lines of code.
Long Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The method has 181 lines of code.
Long Method,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The method has 143 lines of code.
Long Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The method has 177 lines of code.
Long Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The method has 257 lines of code.
Long Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The method has 142 lines of code.
Long Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The method has 299 lines of code.
Long Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The method has 174 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PhysicsHandler,The method has 129 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,The method has 136 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,The method has 268 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The method has 281 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The method has 255 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The method has 107 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The method has 212 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The method has 113 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The method has 212 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The method has 211 lines of code.
Long Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,The method has 161 lines of code.
Long Method,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The method has 101 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The method has 215 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The method has 115 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The method has 141 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The method has 103 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The method has 365 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The method has 133 lines of code.
Long Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,UpdateVisibleEntities,The method has 111 lines of code.
Long Method,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Map,The method has 190 lines of code.
Long Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanAll,The method has 102 lines of code.
Long Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The method has 155 lines of code.
Long Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The method has 127 lines of code.
Long Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The method has 115 lines of code.
Long Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The method has 149 lines of code.
Long Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The method has 106 lines of code.
Long Method,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The method has 214 lines of code.
Long Method,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The method has 164 lines of code.
Long Method,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,HandleMessage,The method has 179 lines of code.
Long Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,Load,The method has 114 lines of code.
Long Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The method has 118 lines of code.
Long Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The method has 212 lines of code.
Long Method,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The method has 102 lines of code.
Long Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The method has 179 lines of code.
Long Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The method has 173 lines of code.
Long Method,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The method has 109 lines of code.
Long Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The method has 155 lines of code.
Long Method,fCraft.Utils,BroMode,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,GetInstance,The method has 125 lines of code.
Long Method,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,The method has 102 lines of code.
Long Method,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The method has 108 lines of code.
Long Method,fCraft.MapConversion,MapFCMv4,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The method has 100 lines of code.
Complex Method,fCraft.AutoRank,Condition,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\AutoRank\Conditions.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,fCraft.AutoRank,ConditionIntRange,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\AutoRank\Conditions.cs,Eval,Cyclomatic complexity of the method is 21
Complex Method,fCraft.AutoRank,ConditionPreviousRank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\AutoRank\Conditions.cs,Eval,Cyclomatic complexity of the method is 8
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,Cyclomatic complexity of the method is 19
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,Cyclomatic complexity of the method is 16
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BanXHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BindHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,MirrorHandler,Cyclomatic complexity of the method is 26
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,Cyclomatic complexity of the method is 17
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,Cyclomatic complexity of the method is 17
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BlockDBUndoConfirmCallback,Cyclomatic complexity of the method is 10
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaLookup,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerLookup,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,TimerHandler,Cyclomatic complexity of the method is 13
Complex Method,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,Cyclomatic complexity of the method is 11
Complex Method,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,Cyclomatic complexity of the method is 8
Complex Method,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,Cyclomatic complexity of the method is 10
Complex Method,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,Cyclomatic complexity of the method is 18
Complex Method,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,Cyclomatic complexity of the method is 12
Complex Method,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,Cyclomatic complexity of the method is 8
Complex Method,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,Cyclomatic complexity of the method is 12
Complex Method,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ChangedWorld,Cyclomatic complexity of the method is 14
Complex Method,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,PlayerDisconnected,Cyclomatic complexity of the method is 12
Complex Method,fCraft,FuncDrawOperationSurface,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,Cyclomatic complexity of the method is 10
Complex Method,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,Parse,Cyclomatic complexity of the method is 16
Complex Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,Cyclomatic complexity of the method is 18
Complex Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,Cyclomatic complexity of the method is 20
Complex Method,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,Cyclomatic complexity of the method is 8
Complex Method,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,Cyclomatic complexity of the method is 27
Complex Method,fCraft,CommandManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,Cyclomatic complexity of the method is 17
Complex Method,fCraft,CommandManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\CommandManager.cs,ParseCommand,Cyclomatic complexity of the method is 9
Complex Method,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,GameHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,Cyclomatic complexity of the method is 35
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ReqsHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,Cyclomatic complexity of the method is 18
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,Cyclomatic complexity of the method is 47
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,Cyclomatic complexity of the method is 28
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RankInfoHandler,Cyclomatic complexity of the method is 13
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RulesHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PlayersHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,HelpHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,CommandsHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,NickHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpStatsHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,Cyclomatic complexity of the method is 57
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DoAutoRankAll,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,Cyclomatic complexity of the method is 34
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetPlayerInfoField,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ShutdownHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,RestartHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ImportBans,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TitleHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,ModerateHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,Cyclomatic complexity of the method is 12
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,RankHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,Cyclomatic complexity of the method is 15
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,WorldBringHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringAllHandler,Cyclomatic complexity of the method is 23
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SpectateHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,Cyclomatic complexity of the method is 21
Complex Method,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,Cyclomatic complexity of the method is 13
Complex Method,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,DrawOneBlock,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,Cyclomatic complexity of the method is 21
Complex Method,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,Cyclomatic complexity of the method is 13
Complex Method,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawOneBlock,Cyclomatic complexity of the method is 8
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,Cyclomatic complexity of the method is 16
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PhysicsHandler,Cyclomatic complexity of the method is 35
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlock,Cyclomatic complexity of the method is 19
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,Cyclomatic complexity of the method is 31
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalCreateCallback,Cyclomatic complexity of the method is 11
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,Cyclomatic complexity of the method is 64
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,Cyclomatic complexity of the method is 53
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockInfoSchedulerCallback,Cyclomatic complexity of the method is 12
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,Cyclomatic complexity of the method is 52
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,Cyclomatic complexity of the method is 10
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,Cyclomatic complexity of the method is 41
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,JoinHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLockHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldUnlockHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,Cyclomatic complexity of the method is 22
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldsHandler,Cyclomatic complexity of the method is 14
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldInfoHandler,Cyclomatic complexity of the method is 15
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,Cyclomatic complexity of the method is 19
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldMainHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSaveHandler,Cyclomatic complexity of the method is 16
Complex Method,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,Cyclomatic complexity of the method is 18
Complex Method,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,Cyclomatic complexity of the method is 21
Complex Method,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneListHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Interval,Cyclomatic complexity of the method is 11
Complex Method,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,Cyclomatic complexity of the method is 11
Complex Method,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,Cyclomatic complexity of the method is 10
Complex Method,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,Cyclomatic complexity of the method is 52
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MessageNow,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MessageNowPrefixed,Cyclomatic complexity of the method is 9
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,Cyclomatic complexity of the method is 20
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,CanPlace,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Kick,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,Cyclomatic complexity of the method is 30
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,Cyclomatic complexity of the method is 21
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,Cyclomatic complexity of the method is 55
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,Cyclomatic complexity of the method is 21
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,UpdateVisibleEntities,Cyclomatic complexity of the method is 27
Complex Method,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MoveEntity,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessUpdates,Cyclomatic complexity of the method is 13
Complex Method,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Life2d,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,PerformInternal,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,Cyclomatic complexity of the method is 17
Complex Method,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,Cyclomatic complexity of the method is 16
Complex Method,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,Cyclomatic complexity of the method is 18
Complex Method,fCraft,GrassTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,SendGlobal,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,Cyclomatic complexity of the method is 15
Complex Method,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,Cyclomatic complexity of the method is 12
Complex Method,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayerInfoOrPrintMatches,Cyclomatic complexity of the method is 9
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanPlayerInfoInternal,Cyclomatic complexity of the method is 23
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanIP,Cyclomatic complexity of the method is 16
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanIP,Cyclomatic complexity of the method is 12
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanAll,Cyclomatic complexity of the method is 23
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanAll,Cyclomatic complexity of the method is 19
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,Cyclomatic complexity of the method is 29
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Freeze,Cyclomatic complexity of the method is 11
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Unfreeze,Cyclomatic complexity of the method is 10
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Mute,Cyclomatic complexity of the method is 12
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Unmute,Cyclomatic complexity of the method is 11
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,Cyclomatic complexity of the method is 35
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,Cyclomatic complexity of the method is 31
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,Cyclomatic complexity of the method is 48
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,Cyclomatic complexity of the method is 9
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,Cyclomatic complexity of the method is 20
Complex Method,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,Cyclomatic complexity of the method is 39
Complex Method,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Serialize,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,fCraft,SecurityController,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Plugins\SecurityController.cs,SecurityController,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Scheduler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Scheduler.cs,MainLoop,Cyclomatic complexity of the method is 8
Complex Method,fCraft,PlayerProximityTracker,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,FindPlayersAtDistance,Cyclomatic complexity of the method is 10
Complex Method,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,Cyclomatic complexity of the method is 37
Complex Method,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,Cyclomatic complexity of the method is 12
Complex Method,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,HandleMessage,Cyclomatic complexity of the method is 41
Complex Method,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanIP,Cyclomatic complexity of the method is 17
Complex Method,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanIP,Cyclomatic complexity of the method is 11
Complex Method,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,Cyclomatic complexity of the method is 23
Complex Method,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,Cyclomatic complexity of the method is 19
Complex Method,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ReleaseInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,StringToReleaseFlags,Cyclomatic complexity of the method is 12
Complex Method,fCraft,ReleaseInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,ReleaseFlagsToString,Cyclomatic complexity of the method is 11
Complex Method,fCraft,ReleaseInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,ReleaseFlagsToStringArray,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,InitServer,Cyclomatic complexity of the method is 9
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,StartServer,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,FindPlayers,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,FindPlayers,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,FindPlayerOrPrintMatches,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,Load,Cyclomatic complexity of the method is 24
Complex Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,Cyclomatic complexity of the method is 38
Complex Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,Save,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,LoadRankList,Cyclomatic complexity of the method is 9
Complex Method,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,GetOneMatch,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,Add,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,Remove,Cyclomatic complexity of the method is 13
Complex Method,fCraft,TrieNode,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,GetAllChildren,Cyclomatic complexity of the method is 9
Complex Method,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Generate,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,Cyclomatic complexity of the method is 15
Complex Method,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,Cyclomatic complexity of the method is 12
Complex Method,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ForesterArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,Cyclomatic complexity of the method is 13
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,Cyclomatic complexity of the method is 10
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,Cyclomatic complexity of the method is 38
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,Cyclomatic complexity of the method is 12
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,Cyclomatic complexity of the method is 10
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,Cyclomatic complexity of the method is 16
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddBeaches,Cyclomatic complexity of the method is 14
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,Cyclomatic complexity of the method is 13
Complex Method,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,Cyclomatic complexity of the method is 15
Complex Method,fCraft,MapGeneratorArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,MapGeneratorArgs,Cyclomatic complexity of the method is 21
Complex Method,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,AcceptPlayer,Cyclomatic complexity of the method is 13
Complex Method,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,GenerateWoMConfig,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,Cyclomatic complexity of the method is 17
Complex Method,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,Cyclomatic complexity of the method is 17
Complex Method,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,Cyclomatic complexity of the method is 17
Complex Method,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,Cyclomatic complexity of the method is 10
Complex Method,fCraft,IntKeyAttribute,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,Validate,Cyclomatic complexity of the method is 14
Complex Method,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,Flush,Cyclomatic complexity of the method is 10
Complex Method,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,Cyclomatic complexity of the method is 8
Complex Method,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,Traverse,Cyclomatic complexity of the method is 10
Complex Method,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,LoadSettings,Cyclomatic complexity of the method is 9
Complex Method,fCraft,DateTimeUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,Cyclomatic complexity of the method is 11
Complex Method,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,Cyclomatic complexity of the method is 11
Complex Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,Cyclomatic complexity of the method is 35
Complex Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,SaveWorldList,Cyclomatic complexity of the method is 21
Complex Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,RenameWorld,Cyclomatic complexity of the method is 10
Complex Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,ReplaceWorld,Cyclomatic complexity of the method is 8
Complex Method,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,FindMapFile,Cyclomatic complexity of the method is 11
Complex Method,fCraft,WorldOpException,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldOpException.cs,GetMessage,Cyclomatic complexity of the method is 28
Complex Method,fCraft.Utils,BroMode,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,CalculateRange,Cyclomatic complexity of the method is 14
Complex Method,fCraft.Doors,DoorHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\DoorHandler.cs,PlayerPlacedDoor,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,DiagonalBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\DiagonalBrush.cs,MakeInstance,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,BlockDBDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\BlockDBDrawOperation.cs,FindBounds,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,GetPalette,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 17
Complex Method,fCraft.Drawing,DrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,DrawOneBlock,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 19
Complex Method,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,ReadParams,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,BlockEnumerator,Cyclomatic complexity of the method is 11
Complex Method,fCraft.Drawing,ReplaceBrushBrushFactory,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceBrushBrush.cs,MakeBrush,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,ReplaceBrushBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceBrushBrush.cs,MakeInstance,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,TriangleDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 12
Complex Method,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 13
Complex Method,fCraft.Drawing,Fill2DDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,Fill2DDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,BlockEnumeratorX,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,Fill2DDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,BlockEnumeratorY,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,Fill2DDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,BlockEnumeratorZ,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,UndoState,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\UndoState.cs,GetBounds,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,ReplaceNotBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceNotBrush.cs,MakeInstance,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,ReplaceBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceBrush.cs,MakeInstance,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,CloudyBrushFactory,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\CloudyBrush.cs,MakeBrush,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,CloudyBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\CloudyBrush.cs,MakeInstance,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 19
Complex Method,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,BlockEnumerator,Cyclomatic complexity of the method is 15
Complex Method,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,Cyclomatic complexity of the method is 23
Complex Method,fCraft.Drawing,MarbledBrushFactory,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MakeBrush,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MakeInstance,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,RandomBrushFactory,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,MakeBrush,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,MakeInstance,Cyclomatic complexity of the method is 10
Complex Method,fCraft.Drawing,NormalBrushFactory,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\NormalBrush.cs,MakeInstance,Cyclomatic complexity of the method is 8
Complex Method,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Mazefy,Cyclomatic complexity of the method is 12
Complex Method,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 8
Complex Method,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 8
Complex Method,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,Cyclomatic complexity of the method is 19
Complex Method,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Identify,Cyclomatic complexity of the method is 10
Complex Method,fCraft.MapConversion,NBTag,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\NBTag.cs,ReadTag,Cyclomatic complexity of the method is 19
Complex Method,fCraft.MapConversion,NBTag,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\NBTag.cs,WriteTag,Cyclomatic complexity of the method is 17
Complex Method,fCraft.MapConversion,MapOpticraft,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapOpticraft.cs,LoadZones,Cyclomatic complexity of the method is 13
Complex Method,fCraft.MapConversion,MapFCMv4,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,Cyclomatic complexity of the method is 13
Complex Method,TrollPlugin,Init,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Plugins\Plugins\TrollPlugin.cs,TrollHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,CalculateRange,Cyclomatic complexity of the method is 14
Complex Method,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,GenerateName,Cyclomatic complexity of the method is 12
Complex Method,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,Cyclomatic complexity of the method is 15
Complex Method,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ExtractFile,Cyclomatic complexity of the method is 8
Long Parameter List,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawOneBlock,The method has 8 parameters. Parameters: player' map' drawBlock' coord' context' blocks' blocksDenied' undoState
Long Parameter List,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,FeedData,The method has 6 parameters. Parameters: _textType' _pos' Image' world' direction_' player_
Long Parameter List,fCraft,EqualityDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,InternalDraw,The method has 19 parameters. Parameters: arg1' arg2' arg3' min1' max1' min2' max2' min3' max3' argX' argY' argZ' minX' maxX' minY' maxY' minZ' maxZ' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,InternalDraw,The method has 10 parameters. Parameters: arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawFase1,The method has 11 parameters. Parameters: fval' arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawFase2,The method has 10 parameters. Parameters: arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperationPoints,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase1,The method has 11 parameters. Parameters: fval' arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperationPoints,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,The method has 10 parameters. Parameters: arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperationFill,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase1,The method has 11 parameters. Parameters: fval' arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperationFill,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,The method has 10 parameters. Parameters: arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperationSurface,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase1,The method has 11 parameters. Parameters: fval' arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,FuncDrawOperationSurface,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,The method has 10 parameters. Parameters: arg1' arg2' val' min1' max1' min2' max2' minV' maxV' maxBlocksToDraw
Long Parameter List,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The method has 6 parameters. Parameters: player' cmd' fileName' worldName' buildRankName' accessRankName
Long Parameter List,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The method has 5 parameters. Parameters: player' cmd' worldName' name' NameIfRankIsName
Long Parameter List,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetPlayerInfoField,The method has 5 parameters. Parameters: player' fieldName' info' oldValue' newValue
Long Parameter List,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,The method has 5 parameters. Parameters: player' target' world' overridePermissions' usePlayerPosition
Long Parameter List,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,DrawOneBlock,The method has 8 parameters. Parameters: player' map' drawBlock' coord' context' blocks' blocksDenied' undoState
Long Parameter List,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,ShapesLib,The method has 5 parameters. Parameters: BlockColor' Marks' p' radius' dir
Long Parameter List,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The method has 6 parameters. Parameters: points' x' y' wid' hgt' orientation
Long Parameter List,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,FindIntersection,The method has 9 parameters. Parameters: p1' p2' p3' p4' lines_intersect' segments_intersect' intersection' close_p1' close_p2
Long Parameter List,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawOneBlock,The method has 8 parameters. Parameters: player' map' drawBlock' coord' context' blocks' blocksDenied' undoState
Long Parameter List,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,MessageBlock,The method has 5 parameters. Parameters: world' affectedBlock' Name' Creator' Message
Long Parameter List,fCraft,MessageBlockRange,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockRange.cs,MessageBlockRange,The method has 6 parameters. Parameters: Xmin' Xmax' Ymin' Ymax' Zmin' Zmax
Long Parameter List,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,The method has 6 parameters. Parameters: player' reason' context' announce' raiseEvents' recordToPlayerDB
Long Parameter List,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Kick,The method has 6 parameters. Parameters: player' reason' context' announce' raiseEvents' recordToPlayerDB
Long Parameter List,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,RaisePlayerPlacedBlockEvent,The method has 6 parameters. Parameters: player' map' coords' oldBlock' newBlock' context
Long Parameter List,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,RaisePlayerJoiningWorldEvent,The method has 5 parameters. Parameters: player' newWorld' reason' textLine1' textLine2
Long Parameter List,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The method has 12 parameters. Parameters: ID' Label' StartX' StartY' StartZ' EndX' EndY' EndZ' R' G' B' A
Long Parameter List,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Map,The method has 5 parameters. Parameters: world' width' length' height' initBlockArray
Long Parameter List,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TNTTask,The method has 5 parameters. Parameters: world' position' owner' gun' particles
Long Parameter List,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Life2DZone,The method has 5 parameters. Parameters: name' map' marks' creator' minRankToChange
Long Parameter List,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,ReadToArray,The method has 6 parameters. Parameters: i' j' minI' maxI' minJ' maxJ
Long Parameter List,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Draw,The method has 6 parameters. Parameters: i' j' minI' maxI' minJ' maxJ
Long Parameter List,fCraft,IParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters. Parameters: world' pos' block' owner' restDistance' updates' Sending
Long Parameter List,fCraft,IParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters. Parameters: world' pos' hitted' by' restDistance' updates
Long Parameter List,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The method has 6 parameters. Parameters: world' pos' direction' owner' block' behavior
Long Parameter List,fCraft,ExplosionParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters. Parameters: world' pos' block' owner' restDistance' updates' sending
Long Parameter List,fCraft,ExplosionParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters. Parameters: world' pos' hitted' by' restDistance' updates
Long Parameter List,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters. Parameters: world' pos' block' owner' restDistance' updates' sending
Long Parameter List,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters. Parameters: world' pos' hitted' by' restDistance' updates
Long Parameter List,fCraft,SpellStartBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters. Parameters: world' pos' block' owner' restDistance' updates' sending
Long Parameter List,fCraft,SpellStartBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters. Parameters: world' pos' hitted' by' restDistance' updates
Long Parameter List,fCraft,TntBulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters. Parameters: world' pos' block' owner' restDistance' updates' sending
Long Parameter List,fCraft,TntBulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters. Parameters: world' pos' hitted' by' restDistance' updates
Long Parameter List,fCraft,FootballBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters. Parameters: world' pos' block' owner' restDistance' updates' sending
Long Parameter List,fCraft,FootballBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters. Parameters: world' pos' hitted' by' restDistance' updates
Long Parameter List,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanPlayerInfoInternal,The method has 5 parameters. Parameters: player' reason' unban' announce' raiseEvents
Long Parameter List,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The method has 6 parameters. Parameters: player' newRank' reason' announce' raiseEvents' auto
Long Parameter List,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseRankChangingEvent,The method has 6 parameters. Parameters: playerInfo' rankChanger' newRank' reason' rankChangeType' announce
Long Parameter List,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseRankChangedEvent,The method has 6 parameters. Parameters: playerInfo' rankChanger' oldRank' reason' rankChangeType' announce
Long Parameter List,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseMuteChangingEvent,The method has 5 parameters. Parameters: target' muter' duration' unmuting' announce
Long Parameter List,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseMuteChangedEvent,The method has 5 parameters. Parameters: target' muter' duration' unmuting' announce
Long Parameter List,fCraft,PlayerOpException,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,PlayerOpException,The method has 5 parameters. Parameters: player' target' errorCode' message' messageColored
Long Parameter List,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,Position,The method has 5 parameters. Parameters: x' y' z' r' l
Long Parameter List,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanIP,The method has 5 parameters. Parameters: targetAddress' player' reason' announce' raiseEvents
Long Parameter List,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanIP,The method has 5 parameters. Parameters: targetAddress' player' reason' announce' raiseEvents
Long Parameter List,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,The method has 5 parameters. Parameters: targetAddress' player' reason' announce' raiseEvents
Long Parameter List,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,The method has 5 parameters. Parameters: targetAddress' player' reason' announce' raiseEvents
Long Parameter List,fCraft,IRCMessage,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRCMessage.cs,IRCMessage,The method has 9 parameters. Parameters: from' nick' ident' host' channel' message' rawMessage' type' replycode
Long Parameter List,fCraft,BoundingBox,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,BoundingBox,The method has 6 parameters. Parameters: x1' y1' z1' x2' y2' z2
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateLinear,The method has 6 parameters. Parameters: v00' v01' v10' v11' x' y
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateCosine,The method has 6 parameters. Parameters: v00' v01' v10' v11' x' y
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateCubic,The method has 5 parameters. Parameters: v0' v1' v2' v3' mu
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The method has 5 parameters. Parameters: v0' v1' v2' v3' mu
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 5 parameters. Parameters: x' y' startOctave' endOctave' decay
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 6 parameters. Parameters: x' y' z' startOctave' endOctave' decay
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 6 parameters. Parameters: map' startOctave' endOctave' decay' offsetX' offsetY
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 7 parameters. Parameters: map' startOctave' endOctave' decay' offsetX' offsetY' offsetZ
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateNormalizationParams,The method has 5 parameters. Parameters: map' multiplier' constant' low' high
Long Parameter List,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The method has 6 parameters. Parameters: data' c00' c01' c10' c11' midpoint
Long Parameter List,fCraft,ReleaseInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,ReleaseInfo,The method has 6 parameters. Parameters: version' revision' releaseDate' summary' changeLog' releaseType
Long Parameter List,fCraft,ShutdownParams,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,ShutdownParams,The method has 6 parameters. Parameters: reason' delay' killProcess' restart' customReason' initiatedBy
Long Parameter List,fCraft,BlockUpdate,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockUpdate.cs,BlockUpdate,The method has 5 parameters. Parameters: origin' x' y' z' blockType
Long Parameter List,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,DistanceToBlock,The method has 5 parameters. Parameters: map' coord' vec' blockType' invert
Long Parameter List,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The method has 6 parameters. Parameters: rand' map' bedrockType' fillingType' length' maxDiameter
Long Parameter List,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The method has 7 parameters. Parameters: rand' map' bedrockType' fillingType' k' maxDiameter' l
Long Parameter List,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The method has 8 parameters. Parameters: rand' map' bedrockType' fillingType' k' maxDiameter' l' i1
Long Parameter List,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The method has 5 parameters. Parameters: max' area' info' exclude' span
Long Parameter List,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The method has 5 parameters. Parameters: max' area' infos' exclude' span
Long Parameter List,fCraft,BlockDBEntry,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDBEntry.cs,BlockDBEntry,The method has 8 parameters. Parameters: timestamp' playerID' x' y' z' oldBlock' newBlock' flags
Long Parameter List,fCraft,BlockDBEntry,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDBEntry.cs,BlockDBEntry,The method has 6 parameters. Parameters: timestamp' playerID' coords' oldBlock' newBlock' flags
Long Parameter List,fCraft.Events,ChatSendingEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,ChatSendingEventArgs,The method has 5 parameters. Parameters: player' message' formattedMessage' messageType' recepientList
Long Parameter List,fCraft.Events,ChatSentEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,ChatSentEventArgs,The method has 6 parameters. Parameters: player' message' formattedMessage' messageType' recepientList' recepientCount
Long Parameter List,fCraft.Events,PlayerPlacingBlockEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerPlacingBlockEventArgs,The method has 7 parameters. Parameters: player' map' coords' oldBlock' newBlock' context' result
Long Parameter List,fCraft.Events,PlayerPlacedBlockEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerPlacedBlockEventArgs,The method has 6 parameters. Parameters: player' map' coords' oldBlock' newBlock' context
Long Parameter List,fCraft.Events,PlayerBeingKickedEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerBeingKickedEventArgs,The method has 6 parameters. Parameters: player' kicker' reason' announce' recordToPlayerDB' context
Long Parameter List,fCraft.Events,PlayerKickedEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerKickedEventArgs,The method has 6 parameters. Parameters: player' kicker' reason' announce' recordToPlayerDB' context
Long Parameter List,fCraft.Events,PlayerJoiningWorldEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerJoiningWorldEventArgs,The method has 6 parameters. Parameters: player' oldWorld' newWorld' reason' textLine1' textLine2
Long Parameter List,fCraft.Events,PlayerInfoRankChangedEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoRankChangedEventArgs,The method has 6 parameters. Parameters: playerInfo' rankChanger' oldRank' reason' rankChangeType' announce
Long Parameter List,fCraft.Events,PlayerInfoRankChangingEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoRankChangingEventArgs,The method has 6 parameters. Parameters: playerInfo' rankChanger' newRank' reason' rankChangeType' announce
Long Parameter List,fCraft.Events,PlayerInfoBanChangedEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoBanChangedEventArgs,The method has 5 parameters. Parameters: target' banner' isBeingUnbanned' reason' announce
Long Parameter List,fCraft.Events,PlayerInfoBanChangingEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoBanChangingEventArgs,The method has 5 parameters. Parameters: target' banner' isBeingUnbanned' reason' announce
Long Parameter List,fCraft.Events,PlayerInfoMuteChangingEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoMuteChangingEventArgs,The method has 5 parameters. Parameters: target' muter' duration' unmuting' announce
Long Parameter List,fCraft.Events,PlayerInfoMuteChangedEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoMuteChangedEventArgs,The method has 5 parameters. Parameters: target' muter' duration' unmuting' announce
Long Parameter List,fCraft.Events,LogEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,LogEventArgs,The method has 5 parameters. Parameters: rawMessage' message' messageType' writeToFile' writeToConsole
Long Parameter List,fCraft.Events,CrashedEventArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,CrashedEventArgs,The method has 6 parameters. Parameters: message' location' exception' submitCrashReport' isCommonProblem' shutdownImminent
Long Parameter List,fCraft.Doors,DoorRange,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\DoorRange.cs,DoorRange,The method has 6 parameters. Parameters: Xmin' Xmax' Ymin' Ymax' Zmin' Zmax
Long Parameter List,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The method has 8 parameters. Parameters: x' y' z' xFrom' yFrom' zFrom' cellSize' fun
Long Parameter List,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The method has 8 parameters. Parameters: x' y' z' xFrom' yFrom' zFrom' cellSize' fun
Long Parameter List,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,Portal,The method has 6 parameters. Parameters: world' affectedBlocks' Name' Creator' Place' CustomOutput
Long Parameter List,fCraft.Portals,PortalRange,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalRange.cs,PortalRange,The method has 6 parameters. Parameters: Xmin' Xmax' Ymin' Ymax' Zmin' Zmax
Long Parameter List,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,AddStream,The method has 5 parameters. Parameters: method' filenameInZip' source' modTime' fileComment
Long Identifier,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,,The length of the parameter FullPositionUpdateIntervalDefault is 33.
Long Identifier,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,,The length of the parameter IRCColorsAndNonStandardCharsExceptEmotes is 40.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The length of the statement  "                    System.Text.StringBuilder output = new System.Text.StringBuilder( "There are " + player.World.Map.Doors.Count + " doors in " + player.World.ClassyName + "&S: " ); " is 162.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The length of the statement  "                        if ( player.CanPlace( player.World.Map' new Vector3I( x' y' z )' Block.Wood' BlockChangeContext.Manual ) != CanPlaceResult.Allowed ) { " is 134.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The length of the statement  "                if (DoorHandler.GetInstance().GetAffectedBlocks( door ).Any(v => DoorHandler.GetInstance().GetDoor( player.World' v ) != null)) " is 127.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The length of the statement  "                    player.Message( "There are no fonts available for this server. Font is set to default: {0}"' player.font.FontFamily.Name ); " is 123.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The length of the statement  "                    player.Message( "{0} fonts Available: {1}"' sectionList.Length' sectionList.JoinToString() ); //print the folder contents " is 121.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The length of the statement  "                player.Message( String.Format( "You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' " is 134.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The length of the statement  "                if ( player.CanPlace( player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual ) != CanPlaceResult.Allowed ) { " is 128.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The length of the statement  "                Player.RaisePlayerPlacedBlockEvent( player' player.WorldMap' Pos' player.WorldMap.GetBlock( Pos )' player.LastUsedBlockType' BlockChangeContext.Manual ); " is 153.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BanXHandler,The length of the statement  "                    Server.Players.Message( "{0}&S was BanX'd by {1}&S (with auto-demote):&W {2}"' target.ClassyName' player.ClassyName' reason ); " is 126.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,The length of the statement  "            BlockDBUndoArgs args = new BlockDBUndoArgs() { Player = player' World = player.World' CountLimit = 50000' Not = false' Targets = target }; " is 138.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawOperationCallback,The length of the statement  "                player.MessageNow( "You are only allowed to run draw commands that affect up to {0} blocks. This one would affect {1} blocks."' " is 127.
Long Statement,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopyCallback,The length of the statement  "                player.MessageNow( String.Format( "You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' " is 137.
Long Statement,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,High5Handler,The length of the statement  "            Server.Players.CanSee( target ).Except( target ).Message( "{0}&S was just &chigh fived &Sby {1}&S"' target.ClassyName' player.ClassyName ); " is 139.
Long Statement,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Review,The length of the statement  "                player.Message( "&WOnline players who can review you: {0}"' ReviewerNames.JoinToString( r => String.Format( "{0}&S"' r.ClassyName ) ) ); " is 136.
Long Statement,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The length of the statement  "                                var dir = new Vector3F( ( float )( r * Math.Cos( phi ) )' ( float )( r * Math.Sin( phi ) )' ( float )( Math.Sin( ksi ) ) ); " is 123.
Long Statement,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The length of the statement  "                            var dir = new Vector3F( ( float )( r * Math.Cos( phi ) )' ( float )( r * Math.Sin( phi ) )' ( float )( Math.Sin( ksi ) ) ); " is 123.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateParams,The length of the statement  "                Help = "&hIf >0 the intermediate state of the life is drawn and shown for this anount of timein msec. If 0 the intermediate state is not shown."' " is 145.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateParams,The length of the statement  "                Help = "&hBoolean parameter telling if the life area must be understood as a torus (i.e. the top side is connected to the bottom and the left side with the right one."' " is 168.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateParams,The length of the statement  "                Help = "&hThis parameter tells if the life must be auto reset after the detection of a short-periodical state. Possible values are None (no)' ToInitial (i)' ToRandom (r)."' " is 172.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "                Help = "&hPrints help on commands. Usage: /life help <command|param>. For the list of parameters type '/life help set'. Commands are: "' " is 136.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "                Help = "&hCreates a new life. Usage: /life create <name>. Then mark two blocks to define a *flat* rectangle. The life is created stopped and with default settings. After that you can set params by 'set' command and start it by 'start' command."' " is 245.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "                Help = "&hDeletes a life. Usage: /life delete <name>. If this life exists it will be stopped and removed from the map book keeping."' " is 133.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "                Help = "&hStarts a stopped life. Usage: /life start <name>. If this life exists and is stopped it will be started. Otherwise nothing happens."' " is 143.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "                Help = "&hStops a life. Usage: /life stop <name>. If this life exists and is started it will be stopped. Otherwise nothing happens."' " is 133.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "                Help = "&hSets a life parameter. Usage: /life set <name> <param>=<value>[| <param>=<value>]. Sets parameter 'param' value for the life 'name'. Parameters are: " " is 160.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnHelp,The length of the statement  "                    ".\nType '/life help <command|param> for detailed command or param info. Type '/life help set' for the list of parameters." ); " is 126.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,LifeCreateCallback,The length of the statement  "                    Life2DZone life = new Life2DZone( _name' _world.Map' marks' player' ( player.Info.Rank.NextRankUp ?? player.Info.Rank ).Name ); " is 127.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,LifeCreateCallback,The length of the statement  "                        player.Message( "&WCoulnd't create life for some reason unknown." ); //really unknown: we are under a lock so nobody could create a life with the same name in between " is 166.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnPrint,The length of the statement  "                "' block types: " + l.Normal + " is normal' " + l.Empty + " is empty' " + l.Dead + " is dead' " + l.Newborn + " is newborn" ); " is 126.
Long Statement,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,SetAutoReset,The length of the statement  "                    p.Message( "&WUnrecognized auto reset method " + val + ".\n&h Type '/life help AutoReset' to see all the possible values." ); " is 125.
Long Statement,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,GetVarArray,The length of the statement  "            throw new ArgumentException( "Unknown value axis direction " + axis + ". This software is not released for use in spaces with dimension higher than three." ); " is 158.
Long Statement,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,InternalDraw,The length of the statement  "                            Player.Message( "Function drawing is interrupted: too many (>" + MathCommands.MaxCalculationExceptions + ") calculation exceptions." ); " is 135.
Long Statement,fCraft,InequalityDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\InequalityDrawOperation.cs,DrawBatch,The length of the statement  "            for ( Coords.X = Bounds.XMin; Coords.X <= Bounds.XMax && MathCommands.MaxCalculationExceptions >= exCount; ++Coords.X ) { " is 121.
Long Statement,fCraft,InequalityDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\InequalityDrawOperation.cs,DrawBatch,The length of the statement  "                for ( Coords.Y = Bounds.YMin; Coords.Y <= Bounds.YMax && MathCommands.MaxCalculationExceptions >= exCount; ++Coords.Y ) { " is 121.
Long Statement,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,ReadTerm,The length of the statement  "            if ( _operators.ContainsKey( ch ) || _soperators.ContainsKey( ch ) || _uoperators.ContainsKey( ch ) || /*tmp*/ch == '=' ) { " is 123.
Long Statement,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "                        PlayerInfo[] noLongerIncluded = exceptionList.Included.Where( includedPlayer => includedPlayer.Rank >= rank ).ToArray(); " is 120.
Long Statement,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "                        PlayerInfo[] noLongerIncluded = exceptionList.Included.Where( includedPlayer => includedPlayer.Rank >= rank ).ToArray(); " is 120.
Long Statement,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The length of the statement  "                        Logger.Log( LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason ); " is 131.
Long Statement,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The length of the statement  "                Server.Players.Message( "{0}&S wanted to get {1} kicked. Reason: {2} \n&SResults are in! Yes: &A{3} &SNo: &C{4}"' VoteStarter' " is 126.
Long Statement,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The length of the statement  "                    Scheduler.NewTask( t => target.Kick( Player.Console' "VoteKick by: " + VoteStarter + " - " + VoteKickReason' LeaveReason.Kick' false' true' false ) ).RunOnce( TimeSpan.FromSeconds( 3 ) ); " is 187.
Long Statement,fCraft,CommandManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,The length of the statement  "                    throw new CommandRegistrationException( "One of the aliases for \"{0}\" is using the name of an already-defined command." ); " is 124.
Long Statement,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The length of the statement  "                Vector3F direction = ( new Vector3F( ( float )( Math.Cos( phi ) * Math.Cos( ksi ) )' ( float )( Math.Sin( phi ) * Math.Cos( ksi ) )' ( float )Math.Sin( ksi ) ) ).Normalize(); " is 174.
Long Statement,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The length of the statement  "                world.AddPhysicsTask( new Particle( world' ( pos1 + 2 * direction ).Round()' direction' player' Block.Obsidian' particleBehavior )' 0 ); " is 136.
Long Statement,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "                        StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " ); " is 142.
Long Statement,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ReqsHandler,The length of the statement  "                    player.Message( "Requirement sections: {0}. Type &H/reqs SectionName&S to read information on how to gain that rank."' sections.JoinToString() ); " is 145.
Long Statement,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "                player.Message( "  Kicked {0}' Promoted {1} and banned {2} players."' info.TimesKickedOthers' info.PromoCount' info.TimesBannedOthers ); " is 136.
Long Statement,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "            player.Message( "  Players built {0}' deleted {1}' drew {2} blocks' wrote {3} messages' issued {4} kicks' spent {5:0} hours total."' " is 132.
Long Statement,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,HelpHandler,The length of the statement  "                    if ( descriptor.HelpSections != null && descriptor.HelpSections.TryGetValue( sectionName.ToLower()' out sectionHelp ) ) { " is 121.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.BlocksDeletedMedian = infos.OrderByDescending( info => info.BlocksDeleted ).ElementAt( infos.Count / 2 ).BlocksDeleted; " is 124.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            PlayerInfo medianBlocksChangedPlayerInfo = infos.OrderByDescending( info => ( info.BlocksDeleted + info.BlocksBuilt ) ).ElementAt( infos.Count / 2 ); " is 149.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            PlayerInfo medianBlockRatioPlayerInfo = infos.OrderByDescending( info => ( info.BlocksBuilt / ( double )Math.Max( info.BlocksDeleted' 1 ) ) ) " is 141.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.BlockRatioMedian = medianBlockRatioPlayerInfo.BlocksBuilt / ( double )Math.Max( medianBlockRatioPlayerInfo.BlocksDeleted' 1 ); " is 131.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.TimesVisitedMedian = infos.OrderByDescending( info => info.TimesVisited ).ElementAt( infos.Count / 2 ).TimesVisited; " is 121.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.MessagesWrittenMedian = infos.OrderByDescending( info => info.MessagesWritten ).ElementAt( infos.Count / 2 ).MessagesWritten; " is 130.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.TimesKickedOthersMedian = infos.OrderByDescending( info => info.TimesKickedOthers ).ElementAt( infos.Count / 2 ).TimesKickedOthers; " is 136.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.TimesBannedOthersMedian = infos.OrderByDescending( info => info.TimesBannedOthers ).ElementAt( infos.Count / 2 ).TimesBannedOthers; " is 136.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "            stat.TopBlockRatio = infos.OrderByDescending( info => ( info.BlocksBuilt / ( double )Math.Max( info.BlocksDeleted' 1 ) ) ).ToArray(); " is 133.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "                    writer.WriteLine( "        {0'20:0.000}  {1}"' ( info.BlocksBuilt / ( double )Math.Max( info.BlocksDeleted' 1 ) )' info.Name ); " is 127.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "                    writer.WriteLine( "        {0'20:0.000}  {1}"' ( info.BlocksBuilt / ( double )Math.Max( info.BlocksDeleted' 1 ) )' info.Name ); " is 127.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "                    writer.WriteLine( "        {0'20:0.000}  {1}"' ( info.BlocksBuilt / ( double )Math.Max( info.BlocksDeleted' 1 ) )' info.Name ); " is 127.
Long Statement,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DoAutoRankAll,The length of the statement  "            player.Message( "AutoRankAll: Worked for {0}ms' {1} players promoted' {2} demoted."' sw.ElapsedMilliseconds' promoted' demoted ); " is 129.
Long Statement,fCraft,MathCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MathCommands.cs,DrawOperationBegin,The length of the statement  "                player.SelectionStart( op.ExpectedMarks' new SelectionCallback( DrawOperationCallback )' op' new Permission[] { Permission.DrawAdvanced } ); " is 140.
Long Statement,fCraft,MathCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MathCommands.cs,DrawOperationBegin,The length of the statement  "                player.Message( "{0}: Click {1} blocks or use &H/Mark&S to make a selection."' new object[] { op.Description' op.ExpectedMarks } ); " is 131.
Long Statement,fCraft,MathCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MathCommands.cs,DrawOperationCallback,The length of the statement  "                    player.Message( "You are only allowed to run draw commands that affect up to {0} blocks. This one would affect {1} blocks."' new object[] { player.Info.Rank.DrawLimit' operation.Bounds.Volume } ); " is 196.
Long Statement,fCraft,MathCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MathCommands.cs,DrawOperationCallback,The length of the statement  "                    player.Message( "{0}: Processing ~{1} blocks."' new object[] { operation.Description' operation.BlocksTotalEstimate } ); " is 120.
Long Statement,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The length of the statement  "                        Server.Players.CanSee( target ).Union( target ).Message( "{0}&C was &4Killed&C by {1}&W: {2}"' target.ClassyName' player.ClassyName' OReason ); " is 143.
Long Statement,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The length of the statement  "                        Server.Players.CanSee( target ).Union( target ).Message( "{0}&C was &4Killed&C by {1}"' target.ClassyName' player.ClassyName ); " is 127.
Long Statement,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The length of the statement  "                    Server.Players.CanSee( target ).Union( target ).Message( "{0} &Swas slapped sky high by {1}"' target.ClassyName' player.ClassyName ); " is 133.
Long Statement,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The length of the statement  "                        Server.Players.CanSee( target ).Union( target ).Message( "{0} &Swas slapped sky high by {1}"' target.ClassyName' player.ClassyName ); " is 133.
Long Statement,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,The length of the statement  "                player.MessageNow( String.Format( "You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' Count ) ); " is 176.
Long Statement,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,The length of the statement  "                player.Message( String.Format( "You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' " is 134.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlock,The length of the statement  "                    System.Text.StringBuilder output = new System.Text.StringBuilder( "There are " + player.World.Map.MessageBlocks.Count + " MessageBlocks in " + player.World.ClassyName + "&S: " ); " is 178.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "                if ( player.CanPlace( player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual ) != CanPlaceResult.Allowed ) { " is 128.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "                Player.RaisePlayerPlacedBlockEvent( player' player.WorldMap' Pos' player.WorldMap.GetBlock( Pos )' player.LastUsedBlockType' BlockChangeContext.Manual ); " is 153.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "            Logger.Log( LogType.UserActivity' "{0} created MessageBlock {1} (on world {2})"' player.Name' MessageBlock.Name' player.World.Name ); " is 133.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,The length of the statement  "                        player.SelectionStart( operation.ExpectedMarks' PortalCreateCallback' new PDATA() { op = operation' custom = CustomOutput }' Permission.Draw ); " is 143.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,The length of the statement  "                        StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " ); " is 142.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalCreateCallback,The length of the statement  "                        player.MessageNow( "You are only allowed to run draw commands that affect up to {0} blocks. This one would affect {1} blocks."' " is 127.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,The length of the statement  "                        RealmHandler.RealmLoad( player' cmd' playerName + ".fcm"' playerName' RankManager.HighestRank.Name' RankManager.DefaultBuildRank.Name ); " is 136.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "                World[] autoEnabledWorlds = WorldManager.Worlds.Where( w => ( w.BlockDB.EnabledState == YesNoAuto.Auto ) && w.BlockDB.IsEnabled ).ToArray(); " is 140.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The length of the statement  "                    player.Message( "&A/Env [WorldName] terrain [Normal' arbot' cool' deadly' shroom' prometheus' woodpunk' fall' snow' tron' " + " is 125.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The length of the statement  "                        player.Message( "&A/Env [WorldName] terrain [Normal' arbot' cool' deadly' shroom' prometheus' woodpunk' fall' snow' tron' " + " is 125.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "            if ( !cmd.IsConfirmed && ( !Map.IsRecommendedDimension( mapWidth ) || !Map.IsRecommendedDimension( mapLength ) || !Map.IsRecommendedDimension( mapHeight ) ) ) { " is 160.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "                        PlayerInfo[] noLongerIncluded = exceptionList.Included.Where( includedPlayer => includedPlayer.Rank >= rank ).ToArray(); " is 120.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "                        PlayerInfo[] noLongerIncluded = exceptionList.Included.Where( includedPlayer => includedPlayer.Rank >= rank ).ToArray(); " is 120.
Long Statement,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldRenameHandler,The length of the statement  "                        player.MessageNow( "WRename: World \"{0}\" was renamed to \"{1}\"' but the map file could not be moved due to an error: {2}"' " is 125.
Long Statement,fCraft,Football,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The length of the statement  "                Vector3F dir = new Vector3F( ( float )( r * Math.Cos( phi ) )' ( float )( r * Math.Sin( phi ) )' ( float )( Math.Sin( ksi ) ) ); " is 128.
Long Statement,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The length of the statement  "                if ( ( e.OldPosition.X != e.NewPosition.X ) || ( e.OldPosition.Y != e.NewPosition.Y ) || ( e.OldPosition.Z != ( e.NewPosition.Z ) ) ) { " is 135.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,The length of the statement  "                Logger.Log( LogType.SystemActivity' "Expected: {0} / Received: {1}"' OpCode.CustomBlocks' customBlockSupportLevelReply ); " is 121.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,SendBlockPermissions,The length of the statement  "            Send( Packet.MakeSetBlockPermission( Block.Admincrete' Can( Permission.PlaceAdmincrete )' Can( Permission.DeleteAdmincrete ) ) ); " is 129.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,The length of the statement  "                kickReason = String.Format( "Got blasted out of the server with the BASSCANNON executed by {0}: {1}"' player.Name' reason ); " is 124.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ContainsValidCharacters,The length of the statement  "                if ( ( ch < '0' && ch != '.' ) || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < '_' ) || ( ch > '_' && ch < 'a' ) || ch > 'z' ) { " is 130.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "                        string trimmedName = givenName.Split( '@' )[0].Replace( "@"' "" ); //this should be the first part of the name ("Jonty800"@email.com) " is 133.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "                            if ( ( ch < '0' && ch != '.' ) || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < '_' ) || ( ch > '_' && ch < 'a' ) || ch > 'z' ) { " is 130.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "                Send( Packet.MakeAddSelectionBox( ( byte )i' "Whatever"' ( short )zone.Bounds.XMin' ( short )zone.Bounds.ZMin' ( short )zone.Bounds.YMin' " is 137.
Long Statement,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "                    ( short )zone.Bounds.XMax' ( short )zone.Bounds.ZMax' ( short )zone.Bounds.YMax' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 ) ) ); " is 192.
Long Statement,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The length of the statement  "            if ( coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0 && ( byte )type < 50 ) { " is 139.
Long Statement,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The length of the statement  "            if ( Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0 ) { " is 124.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The length of the statement  "                Vector3F direction = ( new Vector3F( ( float )( Math.Cos( phi ) * Math.Cos( ksi ) )' ( float )( Math.Sin( phi ) * Math.Cos( ksi ) )' ( float )Math.Sin( ksi ) ) ).Normalize(); " is 174.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The length of the statement  "                if ( _owner.CanPlace( _map' ( _pos + 2 * direction ).Round()' Block.Obsidian' BlockChangeContext.Manual ) == CanPlaceResult.Allowed ) { " is 135.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The length of the statement  "                        _world.AddPhysicsTask( new Particle( _world' ( _pos + 2 * direction ).Round()' direction' _owner' Block.Obsidian' _particleBehavior )' 0 ); " is 139.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "                        for ( int iy = ix > rPrev ? 0 : ( int )Math.Round( y ); iy < Math.Max( Math.Round( y ) + 1' Math.Round( yPrev ) ); ++iy ) { " is 123.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "                                        if ( _owner.CanPlace( _map' new Vector3I( mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z )' Block.Wood' BlockChangeContext.Manual ) == CanPlaceResult.Allowed ) { " is 166.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "                    if ( _owner.CanPlace( _map' new Vector3I( pt.X' pt.Y' pt.Z )' Block.Wood' BlockChangeContext.Manual ) == CanPlaceResult.Allowed ) { " is 131.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "                                if ( p.CanBeKilled() && p.Position.DistanceSquaredTo( ( new Vector3I( pt.X' pt.Y' pt.Z ) ).ToPlayerCoords() ) <= 64 * 64 ) //less or equal than 2 blocks " is 152.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "                    if ( _owner.CanPlace( _map' new Vector3I( pt.X' pt.Y' pt.Z )' Block.Wood' BlockChangeContext.Manual ) == CanPlaceResult.Allowed ) { " is 131.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The length of the statement  "                    _world.AddPhysicsTask( new TNTTask( _world' new Vector3I( x' y' z )' _owner' false' _particles )' _r.Next( 150' 300 ) ); " is 120.
Long Statement,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,HitPlayer,The length of the statement  "            hitted.Kill( world' String.Format( "{0}&S was torn to pieces by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName ) ); " is 158.
Long Statement,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,CheckPermissionsToDraw,The length of the statement  "                        if ( creator.CanPlace( _map' new Vector3I( i' j' k )' DefaultBlocks[EmptyIdx]' BlockChangeContext.Physics ) != CanPlaceResult.Allowed ) " is 135.
Long Statement,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,PerformInternal,The length of the statement  "                        _state = _life2d.FinalizeStep() ? State.HalfStep : ( _autoReset != AutoResetMethod.None ? State.Resetting : State.Stopped ); " is 124.
Long Statement,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "                _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_startingPos.X' ( short )_startingPos.Y' ( short )_nextZ' _block ) ); " is 125.
Long Statement,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "            _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_startingPos.X' ( short )_startingPos.Y' ( short )_nextZ' Block.Air ) ); " is 128.
Long Statement,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "            _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_startingPos.X' ( short )_startingPos.Y' ( short )_nextZ' _block ) ); " is 125.
Long Statement,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "            //delete at the previous position' restore water unconditionally' lava only when bullet is still there to prevent restoration of explosion lava " is 143.
Long Statement,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "                _behavior.ModifyDirection( ref _direction' _prevBlock ); //e.g. if you want it to be dependent on gravity or change direction depending on current block etc " is 156.
Long Statement,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "                if ( _behavior.VisitBlock( _world' _pos' _prevBlock' _owner' ref _restDistance' updates' _block ) && _behavior.CanKillPlayer ) " is 126.
Long Statement,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The length of the statement  "                if ( ReferenceEquals( p' _owner ) && ( _startingPos - _pos ).LengthSquared <= 2 * 2 ) //do not react on owner within 2 blocks of the starting position " is 150.
Long Statement,fCraft,ExplosionParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The length of the statement  "            hitted.Kill( world' String.Format( "{0}&S was blown up by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName ) ); " is 152.
Long Statement,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The length of the statement  "            hitted.Kill( world' String.Format( "{0}&S was shot by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName ) ); " is 148.
Long Statement,fCraft,TntBulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The length of the statement  "            hitted.Kill( world' String.Format( "{0}&S was torn to pieces by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName ) ); " is 158.
Long Statement,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,Load,The length of the statement  "            SchedulerTask drownCheck = Scheduler.NewBackgroundTask( WaterPhysics.drownCheck ).RunForever( TimeSpan.FromSeconds( 3 ) ); " is 122.
Long Statement,fCraft,PlantPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,blockSquash,The length of the statement  "                            world.AddPhysicsTask( new PlantTask( world' ( short )e.Coords.X' ( short )e.Coords.Y' ( short )e.Coords.Z )' PlantTask.GetRandomDelay() ); " is 138.
Long Statement,fCraft,PlantPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,blockSquash,The length of the statement  "                            Player.RaisePlayerPlacedBlockEvent( player' world.Map' z' world.Map.GetBlock( z )' e.NewBlock' BlockChangeContext.Physics ); " is 124.
Long Statement,fCraft,GrassTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The length of the statement  "            if ( !_world.plantPhysics || 0 >= _rndCoords.Length ) //+sanity check' now we are sure that we have at least 1 element in _rndCoords " is 132.
Long Statement,fCraft,GrassTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The length of the statement  "                if ( !shadowed && Block.Dirt == b ) //we have found dirt and there were nothing casting shadows above' so change it to grass and return " is 135.
Long Statement,fCraft,GrassTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The length of the statement  "                    shadowed = CastsShadow( b ); //check if the rest of the column is under a block which casts shadow and thus prevents plants from growing and makes grass to die " is 159.
Long Statement,fCraft,PlantTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The length of the statement  "            if ( _map.GetBlock( _x' _y' _z ) != Block.Plant ) //superflous task added by grass scanner or deleted plant. just forget it " is 123.
Long Statement,fCraft,SandTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\SandPhysics.cs,PerformInternal,The length of the statement  "                        _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_pos.X' ( short )_pos.Y' ( short )( _nextPos + 1 )' Block.Air ) ); " is 122.
Long Statement,fCraft,TreeGeneration,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The length of the statement  "                                world.Map.QueueUpdate( new BlockUpdate( null' ( short )( Pos.Z + xoff )' ( short )( Pos.Y + yoff )' ( short )z' Block.Leaves ) ); " is 129.
Long Statement,fCraft,BlockSink,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,PerformInternal,The length of the statement  "                        _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_pos.X' ( short )_pos.Y' ( short )( _nextPos + 1 )' Block.Water ) ); " is 124.
Long Statement,fCraft,BlockFloat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,PerformInternal,The length of the statement  "                        _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_pos.X' ( short )_pos.Y' ( short )( _nextPos - 1 )' Block.Water ) ); " is 124.
Long Statement,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,SendGlobal,The length of the statement  "            rawMessage = rawMessage.Replace( "$awesome"' "It is my professional opinion' that " + ConfigKey.ServerName.GetString() + " is the best server on Minecraft" ); " is 158.
Long Statement,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,OpenRead,The length of the statement  "            return new FileStream( fileName' FileMode.Open' FileAccess.Read' FileShare.Read' BufferSize' FileOptions.SequentialScan ); " is 122.
Long Statement,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "                string colorMsg = String.Format( "&SCannot demote {0}&S (ranked {1}&S): you may only demote players ranked {2}&S or below."' " is 124.
Long Statement,fCraft,PlayerOpException,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "                colorMsg = String.Format( "&SIP {0} is used by player {1}&S' ranked {2}&S. You may only ban players ranked {3}&S and below."' " is 125.
Long Statement,fCraft,PlayerOpException,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "                colorMsg = String.Format( "&SGiven IP is used by player {0}&S' ranked {1}&S. You may only ban players ranked {2}&S and below."' " is 127.
Long Statement,fCraft,PluginManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Plugins\PluginManager.cs,Initialize,The length of the statement  "                        String args = plugin.Substring( plugin.LastIndexOf("\\"' System.StringComparison.Ordinal) + 1' plugin.IndexOf(".dll"' System.StringComparison.Ordinal) - plugin.LastIndexOf("\\"' System.StringComparison.Ordinal) - 1 ); " is 217.
Long Statement,fCraft,Paths,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Paths.cs,Contains,The length of the statement  "            string fullParentPath = Path.GetFullPath( parentPath ).TrimEnd( Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar ); " is 126.
Long Statement,fCraft,Paths,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Paths.cs,Contains,The length of the statement  "            string fullChildPath = Path.GetFullPath( childPath ).TrimEnd( Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar ); " is 124.
Long Statement,fCraft,PlayerProximityTracker,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,MovePlayer,The length of the statement  "            //the new pos is given as an argument (assumed from PlayerMoved event args) so that the new position would match the previous in the next moved event " is 149.
Long Statement,fCraft,PlayerProximityTracker,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,MovePlayer,The length of the statement  "            if ( null == _players[oldPos.X' oldPos.Y] || !_players[oldPos.X' oldPos.Y].Remove( p ) ) {//this is not a fatal error' the player' even when existing at some wrong position will not be returned by the find call looking around this wrong position " is 245.
Long Statement,fCraft,PlayerProximityTracker,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,MovePlayer,The length of the statement  "                Logger.Log( LogType.Error' "PlayerProximityTracker.MovePlayer: Player " + p.Name + " is not found at its previous position" ); " is 126.
Long Statement,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The length of the statement  "                    data[x + offsetX' y + offsetY] += InterpolateCosine( midpoint' ( c01 + c11 ) / 2' ( c11 + c10 ) / 2' c11' x * maxX' y * maxY ); " is 127.
Long Statement,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The length of the statement  "                        output[x' y] = ( heightmap[x - 2' y - 2] + heightmap[x - 1' y - 2] * 4 + heightmap[x' y - 2] * 7 + heightmap[x + 1' y - 2] * 4 + heightmap[x + 2' y - 2] + " is 154.
Long Statement,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The length of the statement  "                                        heightmap[x - 1' y - 1] * 4 + heightmap[x - 1' y - 1] * 16 + heightmap[x' y - 1] * 26 + heightmap[x + 1' y - 1] * 16 + heightmap[x + 2' y - 1] * 4 + " is 148.
Long Statement,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The length of the statement  "                                        heightmap[x - 2' y] * 7 + heightmap[x - 1' y] * 26 + heightmap[x' y] * 41 + heightmap[x + 1' y] * 26 + heightmap[x + 2' y] * 7 + " is 128.
Long Statement,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The length of the statement  "                                        heightmap[x - 2' y + 1] * 4 + heightmap[x - 1' y + 1] * 16 + heightmap[x' y + 1] * 26 + heightmap[x + 1' y + 1] * 16 + heightmap[x + 2' y + 1] * 4 + " is 148.
Long Statement,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The length of the statement  "                                        heightmap[x - 2' y + 2] + heightmap[x - 1' y + 2] * 4 + heightmap[x' y + 2] * 7 + heightmap[x + 1' y + 2] * 4 + heightmap[x + 2' y + 2] ) * GaussianBlurDivisor; " is 160.
Long Statement,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The length of the statement  "                byte[] postBytes = Encoding.ASCII.GetBytes( string.Format( "ServerName={0}&Url={1}&Players={2}&MaxPlayers={3}&Uptime={4}"' " is 122.
Long Statement,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,StartServer,The length of the statement  "                throw new InvalidOperationException( "Server.InitLibrary and Server.InitServer must be called before Server.StartServer" ); " is 123.
Long Statement,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,The length of the statement  "                    Logger.Log( LogType.SystemActivity' "Shutdown: Saving databases... ({0} players and {1} IP bans)"' PlayerDB.PlayerInfoList.Length' IPBanList.Count ); " is 149.
Long Statement,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,Save,The length of the statement  "                legacyRankMappingTag.Add( new XComment( "Legacy rank mapping is used for compatibility if cases when ranks are renamed or deleted." ) ); " is 136.
Long Statement,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,SetValue,The length of the statement  "                throw new ArgumentNullException( "rawValue"' key + ": ConfigKey values cannot be null. Use an empty string to indicate unset value." ); " is 135.
Long Statement,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "                if ( ( ex is FileNotFoundException && ex.Message.Contains( "Version=3.5" ) ) || ( ex is FileNotFoundException && ex.Message.Contains( "Version=3.5" ) ) ) { " is 155.
Long Statement,fCraft,ForesterArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlaceBlock,The length of the statement  "                h( this' new ForesterBlockPlacingEventArgs( new Vector3I( coord.X' coord.Z' coord.Y )' block ) ); // todo: rewrite the whole thing to use XYZ coords " is 148.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The length of the statement  "            map.Blocks.MemSet( ( byte )Block.Dirt' width * length * ( height / 2 - FlatgrassDirtLevel )' width * length * ( FlatgrassDirtLevel - 1 ) ); " is 139.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The length of the statement  "                new Noise( rand.Next()' NoiseInterpolationMode.Bicubic ).PerlinNoise( heightmap2' 0' args.DetailScale' args.Roughness' 0' 0 ); " is 126.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "                            heightmap[x' y] = desiredWaterLevel + ( float )Math.Pow( normalizedHeight' args.AboveFuncExponent ) * ( 1 - desiredWaterLevel ); " is 128.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "                        level = args.WaterLevel - ( int )Math.Round( Math.Pow( 1 - heightmap[x' y] / desiredWaterLevel' args.BelowFuncExponent ) * depth ); " is 131.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "                                    if ( blendmap != null && blendmap[x' y] > CliffsideBlockThreshold && blendmap[x' y] < ( 1 - CliffsideBlockThreshold ) ) { " is 121.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "                            level = args.WaterLevel + ( int )Math.Round( Math.Pow( heightmap[x' y] - desiredWaterLevel' args.AboveFuncExponent ) * aboveWaterMultiplier / args.MaxHeight * height ); " is 168.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "                                    ( level > snowStartThreshold && rand.NextDouble() < ( level - snowStartThreshold ) / ( double )( snowThreshold - snowStartThreshold ) ) ); " is 138.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "                                if ( blendmap != null && blendmap[x' y] > CliffsideBlockThreshold && blendmap[x' y] < ( 1 - CliffsideBlockThreshold ) ) { " is 121.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The length of the statement  "            for ( k1 = 0; map.Blocks[startX + map.Width * map.Length * ( map.Height - 1 - startZ ) + map.Width * startY] != bedrockType && k1 < 10000; k1++ ) { " is 147.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The length of the statement  "                            if ( ( j3 - radius ) * ( j3 - radius ) + ( k3 - radius ) * ( k3 - radius ) + ( l3 - radius ) * ( l3 - radius ) >= radius * radius || " is 132.
Long Statement,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The length of the statement  "                                if ( ( k4 - radius ) * ( k4 - radius ) + ( l4 - radius ) * ( l4 - radius ) + ( i5 - radius ) * ( i5 - radius ) < radius * radius && " is 131.
Long Statement,fCraft,MapGeneratorArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The length of the statement  "            if ( RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4 ) { " is 128.
Long Statement,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,AcceptPlayer,The length of the statement  "                if ( ConfigKey.BackupOnJoin.Enabled() && ( Map.HasChangedSinceBackup || !ConfigKey.BackupOnlyWhenChanged.Enabled() ) ) { " is 120.
Long Statement,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "                                    "WorldManager: Could not parse \"cloud\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' " is 122.
Long Statement,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "                                    "WorldManager: Could not parse \"fog\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' " is 120.
Long Statement,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "                                    "WorldManager: Could not parse \"sky\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' " is 120.
Long Statement,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "                                    "WorldManager: Could not parse \"level\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' " is 122.
Long Statement,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "                                    "WorldManager: Could not parse \"edge\" attribute of Environment settings for world \"{0}\"' assuming default (Water)."' " is 120.
Long Statement,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "                                        "WorldManager: Unacceptable blocktype given for \"edge\" attribute of Environment settings for world \"{0}\"' assuming default (Water)."' " is 137.
Long Statement,fCraft.Utils,BroMode,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The length of the statement  "                                    player.Info.DisplayedName = Color.ReplacePercentCodes( player.Info.Rank.Color + player.Info.Rank.Prefix + broNames[index] ); " is 124.
Long Statement,fCraft.Drawing,DrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCompletion,The length of the statement  "                            "Player {0} executed {1} on world {2} (between {3} and {4}). Processed {5}' Updated {6}' Skipped {7}' Denied {8} blocks."' " is 122.
Long Statement,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The length of the statement  "                BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ); " is 125.
Long Statement,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The length of the statement  "                BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ); " is 125.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "            int hollowVolume = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ); " is 121.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "            int sideVolumeX = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * ( Bounds.ZMax != Bounds.ZMin ? 2 : 1 ); " is 126.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "            int sideVolumeY = Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ) * ( Bounds.XMax != Bounds.XMin ? 2 : 1 ); " is 127.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "            int sideVolumeZ = Math.Max( 0' Bounds.Height - 2 ) * Math.Max( 0' Bounds.Width - 2 ) * ( Bounds.YMax != Bounds.YMin ? 2 : 1 ); " is 126.
Long Statement,RandomMaze,Path,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The length of the statement  "                if ( ReferenceEquals( next.Path' this ) && Math.Abs( last.IndexInPath - next.IndexInPath ) < 10 ) //same path only if distance >=10 " is 131.
Long Statement,RandomMaze,Path,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The length of the statement  "                if ( next.IndexInPath + ( null == next.Path._parent ? 0 : next.Path._forkedAtParents ) < 5 ) //only take long paths' consider the immediate parent too " is 150.
Long Statement,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Mazefy,The length of the statement  "                if ( extendible.Count == 0 || r.NextDouble() < ForkProbability / ( forkable.Count + 1 ) && forkable.Count > 0 )//fork when either we are totally entangled or just randomly " is 171.
Long Statement,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The length of the statement  "                if ( world.Map.GetBlock( p.Position.X / 32' p.Position.Y / 32' ( short )( p.Position.Z / 32 - 1.59375 ) ) != Block.Grass ) { " is 124.
Long Statement,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,playerClicking,The length of the statement  "                                Player.RaisePlayerPlacedBlockEvent( e.Player' world.Map' block' world.Map.GetBlock( e.Coords )' world.Map.GetBlock( e.Coords )' BlockChangeContext.Manual ); " is 156.
Long Statement,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,interval,The length of the statement  "            world.Players.Message( "&SScores so far: &9Blues {0} &S- &CReds {1}"' blueRoundsWon.ToString()' redRoundsWon.ToString() ); " is 122.
Long Statement,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,Stop,The length of the statement  "            world.Players.Message( "&SThe game has ended! The scores are: \n&9Blue Team {0} &S- &CRed Team {1}"' blueRoundsWon' redRoundsWon ); " is 131.
Long Statement,fCraft.MapConversion,MapOpticraft,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapOpticraft.cs,LoadZones,The length of the statement  "            PlayerInfo conversionPlayer = new PlayerInfo( "OpticraftConversion"' RankManager.HighestRank' true' RankChangeType.AutoPromoted ); " is 130.
Long Statement,fCraft.MapConversion,MapOpticraft,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapOpticraft.cs,Save,The length of the statement  "                oMetadate.CreationDate = 0; // This is ctime for when the world was created. Unsure on how to extract it. Opticraft makes no use of it as of yet " is 144.
Long Statement,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The length of the statement  "                if ( e.Player.World.Map.Portals != null && e.Player.World.Map.Portals.Count > 0 && e.Context != BlockChangeContext.Portal ) { " is 125.
Long Statement,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The length of the statement  "                                e.Player.Message( " Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString()' e.Player.World.ClassyName ); " is 120.
Long Statement,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "                            if ( ( e.OldPosition.X != e.NewPosition.X ) || ( e.OldPosition.Y != e.NewPosition.Y ) || ( e.OldPosition.Z != ( e.NewPosition.Z ) ) ) { " is 135.
Long Statement,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "                                                e.Player.Message( "You cannot use portals for another {0} seconds."' 4 - ( DateTime.UtcNow - e.Player.LastUsedPortal ).Seconds ); " is 129.
Long Statement,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "                                                        e.Player.TeleportTo( new Position( ( short )portal.DesiredOutputX' ( short )portal.DesiredOutputY' ( short )portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL ) ); " is 180.
Long Statement,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "                                                        e.Player.JoinWorld( WorldManager.FindWorldExact( portal.World )' WorldChangeReason.Portal' new Position( ( short )portal.DesiredOutputX' ( short )portal.DesiredOutputY' ( short )portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL ) ); " is 250.
Long Statement,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Open,The length of the statement  "            Stream stream = new FileStream( filename' FileMode.Open' fileAccess == FileAccess.Read ? FileAccess.Read : FileAccess.ReadWrite ); " is 130.
Long Statement,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The length of the statement  "            zipFileStream.Write( BitConverter.GetBytes( ( ushort )( zfe.EncodeUTF8 ? 0x0800 : 0 ) )' 0' 2 ); // filename and comment encoding " is 129.
Long Statement,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The length of the statement  "            zipFileStream.Write( new byte[] { 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0 }' 0' 12 ); // unused CRC' un/compressed size' updated later " is 129.
Long Statement,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The length of the statement  "            zipFileStream.Write( BitConverter.GetBytes( ( ushort )( zfe.EncodeUTF8 ? 0x0800 : 0 ) )' 0' 2 ); // filename and comment encoding " is 129.
Complex Conditional,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The conditional expression  "shapeName == null ||                  !cmd.NextInt( out height ) ||                  !EnumUtil.TryParse( shapeName' out shape' true ) ||                  shape == Forester.TreeShape.Stickly ||                  shape == Forester.TreeShape.Procedural"  is complex.
Complex Conditional,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The conditional expression  "!cmd.NextInt( out degrees ) || ( degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270 )"  is complex.
Complex Conditional,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,The conditional expression  "!not &&                           player.Info != target && !player.Can( Permission.UndoAll ) &&                           !player.Can( Permission.UndoOthersActions' target.Rank )"  is complex.
Complex Conditional,fCraft,PrepareParametrizedManifold,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,CheckCoordVar,The conditional expression  "string.IsNullOrWhiteSpace( s ) || ( s != "x" && s != "y" && s != "z" )"  is complex.
Complex Conditional,fCraft,PrepareParametrizedManifold,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,CheckParamVar,The conditional expression  "string.IsNullOrWhiteSpace( s ) || ( s != "t" && s != "u" && s != "v" )"  is complex.
Complex Conditional,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,ReadTerm,The conditional expression  "_operators.ContainsKey( ch ) || _soperators.ContainsKey( ch ) || _uoperators.ContainsKey( ch ) || /*tmp*/ch == '='"  is complex.
Complex Conditional,fCraft,CommandManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\CommandManager.cs,IsValidCommandName,The conditional expression  "( ch < '0' && ch != '.' ) || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < '_' ) ||                       ( ch > '_' && ch < 'a' ) || ch > 'z'"  is complex.
Complex Conditional,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The conditional expression  "Server.IsIP( ipString ) && IPAddress.TryParse( ipString' out ip ) &&                      Byte.TryParse( rangeString' out range ) && range <= 32"  is complex.
Complex Conditional,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The conditional expression  "String.IsNullOrEmpty( targetName ) || String.IsNullOrEmpty( timeString ) ||                  !timeString.TryParseMiniTimespan( out duration ) || duration <= TimeSpan.Zero"  is complex.
Complex Conditional,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,The conditional expression  "playerName == null || playerName.Length < 2 || ( playerName[0] != '-' && playerName[0] != '+' )"  is complex.
Complex Conditional,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The conditional expression  "x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024"  is complex.
Complex Conditional,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,MuteHandler,The conditional expression  "String.IsNullOrEmpty( targetName ) || String.IsNullOrEmpty( timeString ) ||                  !timeString.TryParseMiniTimespan( out duration ) || duration <= TimeSpan.Zero"  is complex.
Complex Conditional,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The conditional expression  "!cmd.IsConfirmed && ( !Map.IsRecommendedDimension( mapWidth ) || !Map.IsRecommendedDimension( mapLength ) || !Map.IsRecommendedDimension( mapHeight ) )"  is complex.
Complex Conditional,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The conditional expression  "oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1"  is complex.
Complex Conditional,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The conditional expression  "Info.IsFrozen ||                  Math.Abs( coord.X * 32 - Position.X ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Y * 32 - Position.Y ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Z * 32 - Position.Z ) > MaxBlockPlacementRange"  is complex.
Complex Conditional,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,CanPlace,The conditional expression  "( Can( Permission.Build ) || newBlock == Block.Air ) &&                              ( Can( Permission.Delete ) || oldBlock == Block.Air )"  is complex.
Complex Conditional,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ContainsValidCharacters,The conditional expression  "( ch < '0' && ch != '.' ) || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < '_' ) || ( ch > '_' && ch < 'a' ) || ch > 'z'"  is complex.
Complex Conditional,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The conditional expression  "( ch < '0' && ch != '.' ) || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < '_' ) || ( ch > '_' && ch < 'a' ) || ch > 'z'"  is complex.
Complex Conditional,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,UpdateVisibleEntities,The conditional expression  "otherPlayer == this ||                      !CanSeeMoving( otherPlayer ) ||                      spectatedPlayer == otherPlayer || possessionPlayer != null"  is complex.
Complex Conditional,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The conditional expression  "x < Width && y < Length && z < Height && x >= 0 && y >= 0 && z >= 0"  is complex.
Complex Conditional,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The conditional expression  "coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0 && ( byte )type < 50"  is complex.
Complex Conditional,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GetBlock,The conditional expression  "x < Width && y < Length && z < Height && x >= 0 && y >= 0 && z >= 0"  is complex.
Complex Conditional,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GetBlock,The conditional expression  "coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0"  is complex.
Complex Conditional,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The conditional expression  "Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0"  is complex.
Complex Conditional,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The conditional expression  "x < 0 || x >= _map.Width                  || y < 0 || y >= _map.Length                  || z < 0 || z >= _map.Height"  is complex.
Complex Conditional,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The conditional expression  "idx >= 0 && updates[idx].X == _pos.X                      && updates[idx].Y == _pos.Y                      && updates[idx].Z == _pos.Z"  is complex.
Complex Conditional,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The conditional expression  "!Physics.CanFloat( e.NewBlock )                  && e.NewBlock != Block.Air                  && e.NewBlock != Block.Water                  && e.NewBlock != Block.Lava                  && e.NewBlock != Block.BrownMushroom                  && e.NewBlock != Block.RedFlower                  && e.NewBlock != Block.RedMushroom                  && e.NewBlock != Block.YellowFlower                  && e.NewBlock != Block.Plant"  is complex.
Complex Conditional,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The conditional expression  "Color.IsValidColorCode( colorCode ) || allowNewlines && ( colorCode == 'n' || colorCode == 'N' )"  is complex.
Complex Conditional,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,The conditional expression  "( info.LastIP.Equals( IPAddress.None ) || info.LastIP.Equals( IPAddress.Any ) || info.TimesVisited == 0 ) &&                              !info.IsBanned && info.Rank == RankManager.DefaultRank"  is complex.
Complex Conditional,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The conditional expression  "player.BanStatus != BanStatus.NotBanned || player.UnbanDate != DateTime.MinValue ||                  player.IsFrozen || player.IsMuted || player.TimesKicked != 0 ||                  player.Rank != RankManager.DefaultRank || player.PreviousRank != null"  is complex.
Complex Conditional,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidRankName,The conditional expression  "ch < '0' || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < '_' ) || ( ch > '_' && ch < 'a' ) ||                      ch > 'z'"  is complex.
Complex Conditional,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidID,The conditional expression  "ch < '0' || ( ch > '9' && ch < 'A' ) || ( ch > 'Z' && ch < 'a' ) || ch > 'z'"  is complex.
Complex Conditional,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The conditional expression  "( x == 0 ) || ( y == 0 ) || ( x == heightmap.GetLength( 0 ) - 1 ) || ( y == heightmap.GetLength( 1 ) - 1 )"  is complex.
Complex Conditional,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The conditional expression  "( x < 2 ) || ( y < 2 ) || ( x > heightmap.GetLength( 0 ) - 3 ) || ( y > heightmap.GetLength( 1 ) - 3 )"  is complex.
Complex Conditional,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The conditional expression  "( x == 0 ) || ( y == 0 ) || ( x == heightmap.GetLength( 0 ) - 1 ) || ( y == heightmap.GetLength( 1 ) - 1 )"  is complex.
Complex Conditional,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The conditional expression  "oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122"  is complex.
Complex Conditional,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,ParseKeyElementPreSettings,The conditional expression  "keyName != "consoleoptions" &&                         keyName != "logfileoptions" &&                         keyName != "ranks" &&                         keyName != "legacyrankmapping""  is complex.
Complex Conditional,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,LoadRankList,The conditional expression  "fromRankID == null || String.IsNullOrEmpty( fromRankID.Value ) ||                          toRankID == null || String.IsNullOrEmpty( toRankID.Value )"  is complex.
Complex Conditional,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The conditional expression  "( ex is FileNotFoundException && ex.Message.Contains( "Version=3.5" ) ) || ( ex is FileNotFoundException && ex.Message.Contains( "Version=3.5" ) )"  is complex.
Complex Conditional,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,CanonicizeChar,The conditional expression  "ch >= 'a' && ch <= 'z' || ch >= '0' && ch <= '9' || ch == '_'"  is complex.
Complex Conditional,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,DistanceToBlock,The conditional expression  "( blockAtPos == blockType && !invert ) ||                      ( blockAtPos != blockType && invert )"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The conditional expression  "y == height || ( Math.Abs( x ) == width && Math.Abs( z ) == width && y >= 0 )"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The conditional expression  "y > 0 && y < height && Math.Abs( z ) < width && Math.Abs( x ) < width"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The conditional expression  "( j3 - radius ) * ( j3 - radius ) + ( k3 - radius ) * ( k3 - radius ) + ( l3 - radius ) * ( l3 - radius ) >= radius * radius ||                                  x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length ||                                  x + j3 < 0 || z + k3 < 0 || y + l3 < 0"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The conditional expression  "( fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9 ) &&                                  z + k3 < startZ"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The conditional expression  "( k4 - radius ) * ( k4 - radius ) + ( l4 - radius ) * ( l4 - radius ) + ( i5 - radius ) * ( i5 - radius ) < radius * radius &&                                      i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length &&                                      i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The conditional expression  "( map.Blocks[index] == 10 || map.Blocks[index] == 11 || map.Blocks[index] == 8 || map.Blocks[index] == 9 ) &&                              ( map.GetBlock( x - 1' y' z ) == Block.Air || map.GetBlock( x + 1' y' z ) == Block.Air ||                              map.GetBlock( x' y - 1' z ) == Block.Air || map.GetBlock( x' y + 1' z ) == Block.Air ||                              map.GetBlock( x' y' z - 1 ) == Block.Air )"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddBeaches,The conditional expression  "xx < 0 || xx >= map.Width || yy < 0 || yy >= map.Length || zz < 0 ||                                          zz >= map.Height"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The conditional expression  "nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length"  is complex.
Complex Conditional,fCraft,MapGeneratorArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The conditional expression  "RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4"  is complex.
Complex Conditional,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,CheckIfToStopPhysics,The conditional expression  "null == _plantTask && !tntPhysics                  && !gunPhysics && !plantPhysics                  && !sandPhysics && !fireworkPhysics                  && !waterPhysics"  is complex.
Complex Conditional,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,SaveTask,The conditional expression  "BackupsEnabled &&                          DateTime.UtcNow.Subtract( lastBackup ) > BackupInterval &&                          ( HasChangedSinceBackup || !ConfigKey.BackupOnlyWhenChanged.Enabled() )"  is complex.
Complex Conditional,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,IsValidName,The conditional expression  "ch < '0' ||                          ch > '9' && ch < 'A' ||                          ch > 'Z' && ch < '_' ||                          ch > '_' && ch < 'a' ||                          ch > 'z'"  is complex.
Complex Conditional,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The conditional expression  "ch >= ( byte )'a' && ch <= ( byte )'f' ||                  ch >= ( byte )'0' && ch <= ( byte )'9'"  is complex.
Complex Conditional,fCraft.Utils,FlyHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The conditional expression  "!( x >= -1 && x <= 1 ) || !( y >= -1 && y <= 1 ) || !( z >= -3 && z <= 4 )"  is complex.
Complex Conditional,fCraft.Utils,FlyHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The conditional expression  "!( x >= -1 && x <= 1 ) || !( y >= -1 && y <= 1 ) || !( z >= -3 && z <= 4 )"  is complex.
Complex Conditional,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,The conditional expression  "Coords.Z <= ( int )center.Z &&                                      ( ( delta.X + 1 ) * ( delta.X + 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      ( delta.X - 1 ) * ( delta.X - 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y + 1 ) * ( delta.Y + 1 ) * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y - 1 ) * ( delta.Y - 1 ) * radius.Y + delta.Z2 * radius.Z > 1 )"  is complex.
Complex Conditional,fCraft.Drawing,PlaneDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,IsPlaneBlock,The conditional expression  "( Coords - a ).Dot( s1 ) > Extra ||                  ( Coords - b ).Dot( s2 ) > Extra ||                  ( Coords - c ).Dot( s3 ) > Extra ||                  ( Coords - d ).Dot( s4 ) > Extra"  is complex.
Complex Conditional,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,The conditional expression  "(response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved ||                       response.StatusCode == HttpStatusCode.Redirect) &&                      response.ContentType.StartsWith( "image"' StringComparison.OrdinalIgnoreCase )"  is complex.
Complex Conditional,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,The conditional expression  "Coords.Z <= ( int )center.Z &&                                      ( ( delta.X + 1 ) * ( delta.X + 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      ( delta.X - 1 ) * ( delta.X - 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y + 1 ) * ( delta.Y + 1 ) * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y - 1 ) * ( delta.Y - 1 ) * radius.Y + delta.Z2 * radius.Z > 1 )"  is complex.
Complex Conditional,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,GetCell,The conditional expression  "x < 0 || x >= XSize || y < 0 || y >= YSize || z < 0 || z >= ZSize"  is complex.
Complex Conditional,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The conditional expression  "zfe.Method == Compression.Deflate && !ForceDeflating && source.CanSeek && zfe.CompressedSize > zfe.FileSize"  is complex.
Virtual Method Call from Constructor,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,FeedData,The constructor "FeedData" calls a virtual method "Prepare".
Virtual Method Call from Constructor,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,FeedData,The constructor "FeedData" calls a virtual method "Begin".
Empty Catch Block,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,FreezeIfAllowed,The method has an empty catch block.
Empty Catch Block,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,WaitForDisconnect,The method has an empty catch block.
Empty Catch Block,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,WaitForDisconnect,The method has an empty catch block.
Empty Catch Block,fCraft,Paths,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Paths.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,fCraft,Paths,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Paths.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,fCraft,Paths,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Paths.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,fCraft,Scheduler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Scheduler.cs,EndShutdown,The method has an empty catch block.
Empty Catch Block,fCraft,Scheduler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Scheduler.cs,EndShutdown,The method has an empty catch block.
Empty Catch Block,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,DisconnectThread,The method has an empty catch block.
Empty Catch Block,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,DisconnectThread,The method has an empty catch block.
Empty Catch Block,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,DisconnectThread,The method has an empty catch block.
Empty Catch Block,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,Dispose,The method has an empty catch block.
Empty Catch Block,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,Dispose,The method has an empty catch block.
Empty Catch Block,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,Dispose,The method has an empty catch block.
Empty Catch Block,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The method has an empty catch block.
Empty Catch Block,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseMiniTimespan,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseMiniTimespan,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseMiniTimespan,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseLocalDate,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Identify,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Identify,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Load,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Load,The method has an empty catch block.
Empty Catch Block,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The method has an empty catch block.
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The following statement contains a magic number: const int maxNumberOfDoorsPerPlayer = 4;
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The following statement contains a magic number: player.SelectionStart( 2' DoorAdd' door' CdDoor.Permissions );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following statement contains a magic number: player.Message( "Doors are only allowed to be {0} blocks"' 30 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following statement contains a magic number: volume > 30
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawImageHandler,The following statement contains a magic number: player.SelectionStart(2' DrawImageCallback' op' Permission.DrawAdvanced);
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: player.font = new Font( "Times New Roman"' 20' FontStyle.Regular );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: Size > 48 || Size < 10
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: Size > 48 || Size < 10
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: radius = 20;
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: Points = 5;
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: player.SelectionStart( 2' Draw2DCallback' tag' Permission.DrawAdvanced );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DCallback,The following statement contains a magic number: switch ( Shape.ToLower() ) {                      case "polygon":                          lib.DrawRegularPolygon( Points' 18' fill );                          break;                        case "star":                          lib.DrawStar( Points' radius' fill );                          break;                        case "spiral":                          lib.DrawSpiral();                          break;                        default:                          player.Message( "&WUnknown shape" );                          CdDraw2D.PrintUsage( player );                          lib = null;                          return;                  }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The following statement contains a magic number: height < 6 || height > 1024
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The following statement contains a magic number: height < 6 || height > 1024
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The following statement contains a magic number: int volume = ( int )Math.Pow( height' 3 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: Vector3I Pos = new Vector3I( player.Position.X / 32' player.Position.Y / 32' ( player.Position.Z / 32 ) - 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: Vector3I Pos = new Vector3I( player.Position.X / 32' player.Position.Y / 32' ( player.Position.Z / 32 ) - 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: Vector3I Pos = new Vector3I( player.Position.X / 32' player.Position.Y / 32' ( player.Position.Z / 32 ) - 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: Vector3I Pos = new Vector3I( player.Position.X / 32' player.Position.Y / 32' ( player.Position.Z / 32 ) - 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterHandler,The following statement contains a magic number: player.SelectionStart( 2' CenterCallback' null' CdCenter.Permissions );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The following statement contains a magic number: Vector3I cPos = new Vector3I( ( bounds.XMin + bounds.XMax ) / 2'                      ( bounds.YMin + bounds.YMax ) / 2'                      ( bounds.ZMin + bounds.ZMax ) / 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The following statement contains a magic number: Vector3I cPos = new Vector3I( ( bounds.XMin + bounds.XMax ) / 2'                      ( bounds.YMin + bounds.YMax ) / 2'                      ( bounds.ZMin + bounds.ZMax ) / 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The following statement contains a magic number: Vector3I cPos = new Vector3I( ( bounds.XMin + bounds.XMax ) / 2'                      ( bounds.YMin + bounds.YMax ) / 2'                      ( bounds.ZMin + bounds.ZMax ) / 2 );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,The following statement contains a magic number: BlockDBUndoArgs args = new BlockDBUndoArgs() { Player = player' World = player.World' CountLimit = 50000' Not = false' Targets = target };
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ReplaceHandlerInternal,The following statement contains a magic number: player.SelectionStart( 2' DrawOperationCallback' op' Permission.Draw );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopyHandler,The following statement contains a magic number: player.SelectionStart( 2' CopyCallback' null' CdCopy.Permissions );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CutHandler,The following statement contains a magic number: player.SelectionStart( 2' DrawOperationCallback' op' Permission.Draw );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: !cmd.NextInt( out degrees ) || ( degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270 )
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: !cmd.NextInt( out degrees ) || ( degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270 )
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: !cmd.NextInt( out degrees ) || ( degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270 )
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: !cmd.NextInt( out degrees ) || ( degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270 )
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: newBuffer = new Block[oldBuffer.GetLength( 0 )' oldBuffer.GetLength( 1 )' oldBuffer.GetLength( 2 )];
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: degrees == 180
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch ( axis ) {                  case Axis.X:                      a = 1;                      b = 2;                      break;                    case Axis.Y:                      a = 0;                      b = 2;                      break;                    default:                      a = 0;                      b = 1;                      break;              }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch ( axis ) {                  case Axis.X:                      a = 1;                      b = 2;                      break;                    case Axis.Y:                      a = 0;                      b = 2;                      break;                    default:                      a = 0;                      b = 1;                      break;              }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch ( degrees ) {                  case 90:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = -1;                      matrix[b' a] = 1;                      break;                    case 180:                      matrix[a' a] = -1;                      matrix[b' b] = -1;                      break;                    case -90:                  case 270:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = 1;                      matrix[b' a] = -1;                      break;              }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch ( degrees ) {                  case 90:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = -1;                      matrix[b' a] = 1;                      break;                    case 180:                      matrix[a' a] = -1;                      matrix[b' b] = -1;                      break;                    case -90:                  case 270:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = 1;                      matrix[b' a] = -1;                      break;              }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch ( degrees ) {                  case 90:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = -1;                      matrix[b' a] = 1;                      break;                    case 180:                      matrix[a' a] = -1;                      matrix[b' b] = -1;                      break;                    case -90:                  case 270:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = 1;                      matrix[b' a] = -1;                      break;              }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch ( degrees ) {                  case 90:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = -1;                      matrix[b' a] = 1;                      break;                    case 180:                      matrix[a' a] = -1;                      matrix[b' b] = -1;                      break;                    case -90:                  case 270:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = 1;                      matrix[b' a] = -1;                      break;              }
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nx = ( matrix[0' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[0' 0] > 0 ? x : 0 ) ) +                                   ( matrix[0' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[0' 1] > 0 ? y : 0 ) ) +                                   ( matrix[0' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[0' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nx = ( matrix[0' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[0' 0] > 0 ? x : 0 ) ) +                                   ( matrix[0' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[0' 1] > 0 ? y : 0 ) ) +                                   ( matrix[0' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[0' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nx = ( matrix[0' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[0' 0] > 0 ? x : 0 ) ) +                                   ( matrix[0' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[0' 1] > 0 ? y : 0 ) ) +                                   ( matrix[0' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[0' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int ny = ( matrix[1' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[1' 0] > 0 ? x : 0 ) ) +                                   ( matrix[1' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[1' 1] > 0 ? y : 0 ) ) +                                   ( matrix[1' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[1' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int ny = ( matrix[1' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[1' 0] > 0 ? x : 0 ) ) +                                   ( matrix[1' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[1' 1] > 0 ? y : 0 ) ) +                                   ( matrix[1' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[1' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int ny = ( matrix[1' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[1' 0] > 0 ? x : 0 ) ) +                                   ( matrix[1' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[1' 1] > 0 ? y : 0 ) ) +                                   ( matrix[1' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[1' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: int nz = ( matrix[2' 0] < 0 ? oldBuffer.GetLength( 0 ) - 1 - x : ( matrix[2' 0] > 0 ? x : 0 ) ) +                                   ( matrix[2' 1] < 0 ? oldBuffer.GetLength( 1 ) - 1 - y : ( matrix[2' 1] > 0 ? y : 0 ) ) +                                   ( matrix[2' 2] < 0 ? oldBuffer.GetLength( 2 ) - 1 - z : ( matrix[2' 2] > 0 ? z : 0 ) );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,PasteXHandler,The following statement contains a magic number: player.SelectionStart( 2' DrawOperationCallback' op' Permission.Draw' Permission.CopyAndPaste );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,PasteNotXHandler,The following statement contains a magic number: player.SelectionStart( 2' DrawOperationCallback' op' Permission.Draw' Permission.CopyAndPaste );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RestoreHandler,The following statement contains a magic number: player.SelectionStart( 2' RestoreCallback' map' CdRestore.Permissions );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaHandler,The following statement contains a magic number: player.SelectionStart( 2' UndoAreaSelectionCallback' args' permission );
Magic Number,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaNotHandler,The following statement contains a magic number: player.SelectionStart( 2' UndoAreaSelectionCallback' args' CdUndoAreaNot.Permissions );
Magic Number,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,ChatCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Start,The following statement contains a magic number: task.RunForever( TimeSpan.FromMilliseconds( 600 ) );
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: pixels[x].Add( bmp.GetPixel( x' y ).GetBrightness() > 0.5 );
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: int bmpOffsetX = ( ( c - 32 ) % 16 ) * 8;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: int bmpOffsetX = ( ( c - 32 ) % 16 ) * 8;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: int bmpOffsetX = ( ( c - 32 ) % 16 ) * 8;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: int bmpOffsetY = ( ( int )( ( c - 32 ) / 16 ) ) * 8;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: int bmpOffsetY = ( ( int )( ( c - 32 ) / 16 ) ) * 8;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: int bmpOffsetY = ( ( int )( ( c - 32 ) / 16 ) ) * 8;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: Y < 8
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: chars[c - 32] = charBlocks;
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: c < 126
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: i < ( SPACE_UNIT - 2 ) * 8
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: i < ( SPACE_UNIT - 2 ) * 8
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          EndPos.X -= 7;                          break;                        case Direction.two:                          EndPos.X += 7;                          break;                        case Direction.three:                          EndPos.Y -= 7;                          break;                        case Direction.four:                          EndPos.Y += 7;                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          EndPos.X -= 7;                          break;                        case Direction.two:                          EndPos.X += 7;                          break;                        case Direction.three:                          EndPos.Y -= 7;                          break;                        case Direction.four:                          EndPos.Y += 7;                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          EndPos.X -= 7;                          break;                        case Direction.two:                          EndPos.X += 7;                          break;                        case Direction.three:                          EndPos.Y -= 7;                          break;                        case Direction.four:                          EndPos.Y += 7;                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          EndPos.X -= 7;                          break;                        case Direction.two:                          EndPos.X += 7;                          break;                        case Direction.three:                          EndPos.Y -= 7;                          break;                        case Direction.four:                          EndPos.Y += 7;                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,The following statement contains a magic number: List<bool> charTemp = chars[c - 32];
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,The following statement contains a magic number: s < 8
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: double ksi = 2.0 * Math.PI * ( -player.Position.L ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: double ksi = 2.0 * Math.PI * ( -player.Position.L ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: var glassBlockPos = new Vector3I( ( int )( cphi * cksi * 4 - sphi * ( 0.5 + y ) - cphi * sksi * ( 0.5 + z ) )'                                            ( int )( sphi * cksi * 4 + cphi * ( 0.5 + y ) - sphi * sksi * ( 0.5 + z ) )'                                            ( int )( sksi * 4 + cksi * ( 0.5 + z ) ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: z < 2
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: y < 2
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: double ksi = 2.0 * Math.PI * ( -e.Player.Position.L ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: double ksi = 2.0 * Math.PI * ( -e.Player.Position.L ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( e.Player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( e.Player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( e.Player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.LastUsedPortal != null && ( DateTime.UtcNow - e.Player.LastUsedPortal ).TotalSeconds < 4
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: var newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' ( e.NewPosition.Z / 32 ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: var newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' ( e.NewPosition.Z / 32 ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: var newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' ( e.NewPosition.Z / 32 ) );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.orangePortal[0].X ) + 0.5 ) * 32 )'                                              Y = ( short )( ( ( p.orangePortal[0].Y ) + 0.5 ) * 32 )'                                              Z = ( short )( ( ( p.orangePortal[0].Z ) + 1.59375 ) * 32 )'                                              R = ( byte )( p.blueOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo( new Position {                                              X = ( short )( ( ( p.bluePortal[0].X + 0.5 ) ) * 32 )'                                              Y = ( short )( ( ( p.bluePortal[0].Y + 0.5 ) ) * 32 )'                                              Z = ( short )( ( ( p.bluePortal[0].Z ) + 1.59375 ) * 32 )' //fixed point 1.59375 lol.                                              R = ( byte )( p.orangeOut - 128 )'                                              L = e.Player.Position.L                                          } );
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,CanPlacePortal,The following statement contains a magic number: Z < z + 2
Magic Number,fCraft,GunClass,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,CanPlacePortal,The following statement contains a magic number: return count == 2;
Magic Number,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,AliasesStr,The following statement contains a magic number: cmd.Names.Length < 2
Magic Number,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnCreate,The following statement contains a magic number: p.SelectionStart( 2' handler.LifeCreateCallback' null' Permission.DrawAdvanced );
Magic Number,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,SetDelay,The following statement contains a magic number: !int.TryParse( val' out delay ) || delay <= 20
Magic Number,fCraft,EqualityDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,EqualityDrawOperation,The following statement contains a magic number: strFunc.Length < 3
Magic Number,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,FuncDrawOperation,The following statement contains a magic number: strFunc.Length < 3
Magic Number,fCraft,InequalityDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\InequalityDrawOperation.cs,InequalityDrawOperation,The following statement contains a magic number: strFunc.Length < 3
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: null == _expressions[2]
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: null == _paramIterations[0] && null == _paramIterations[1] && null == _paramIterations[2]
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: GetNumOfSteps( 0 ) * GetNumOfSteps( 1 ) * GetNumOfSteps( 2 ) > MaxIterationSteps
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: p.Message( "Going to draw the following parametrization:\nx=" + _expressions[0].Print() +                  "\ny=" + _expressions[1].Print() + "\nz=" + _expressions[2].Print() );
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: GetIterationBounds( 2' out fromV' out toV' out stepV );
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: Coords.Z = _scaler.FromFuncResult( _expressions[2].Evaluate( t' u' v )' Bounds.ZMin' Bounds.ZMax );
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,GetNumOfSteps,The following statement contains a magic number: return ( _paramIterations[idx][1] - _paramIterations[idx][0] ) / _paramIterations[idx][2] + 1;
Magic Number,fCraft,ManifoldDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,GetIterationBounds,The following statement contains a magic number: step = _paramIterations[idx][2];
Magic Number,fCraft,PrepareParametrizedManifold,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,SetParametrization,The following statement contains a magic number: strFunc.Length < 3
Magic Number,fCraft,PrepareParametrizedManifold,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,GetPlayerParametrizationCoordsStorage,The following statement contains a magic number: o = new Expression[3];
Magic Number,fCraft,PrepareParametrizedManifold,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,GetPlayerParametrizationParamsStorage,The following statement contains a magic number: o = new double[3][];
Magic Number,fCraft,PrepareParametrizedManifold,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,VarNameToIdx,The following statement contains a magic number: switch ( varName ) {                  case 'x':                  case 't':                      return 0;                  case 'y':                  case 'u':                      return 1;                  case 'z':                  case 'v':                      return 2;                  default:                      throw new ArgumentException( "unknown variable " + varName );              }
Magic Number,fCraft,Scaler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\Scaler.cs,ToFuncParam,The following statement contains a magic number: switch ( _scaling ) {                  case Scaling.ZeroToMaxBound:                      return coord - min;                  case Scaling.Normalized:                      return ( coord - min ) / Math.Max( 1' max - min );                  case Scaling.DoubleNormalized:                      return max == min ? 0 : 2.0 * ( coord - min ) / Math.Max( 1' max - min ) - 1;                  default:                      throw new Exception( "unknown scaling" );              }
Magic Number,fCraft,Scaler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\Scaler.cs,FromFuncResult,The following statement contains a magic number: switch ( _scaling ) {                  case Scaling.ZeroToMaxBound:                      return ( int )( result + min );                  case Scaling.Normalized:                      return ( int )( result * Math.Max( 1' max - min ) + min );                  case Scaling.DoubleNormalized:                      return ( int )( ( result + 1 ) * Math.Max( 1' max - min ) / 2.0 + min );                  default:                      throw new Exception( "unknown scaling" );              }
Magic Number,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData>  			    {  			        {'+'' new FuncData() {Func = new Sum()' Precedence = 2}}'  			        {'*'' new FuncData() {Func = new Mul()' Precedence = 3}}'  			        {'-'' new FuncData() {Func = new Sub()' Precedence = 2}}'  			        {'/'' new FuncData() {Func = new Div()' Precedence = 3}}'  			        {'%'' new FuncData() {Func = new Mod()' Precedence = 3}}'  			        {'^'' new FuncData() {Func = new Pow()' Precedence = 4}}'  			        //comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  					{'>'' new FuncData() {Func = new Greater()' Precedence = 1}}'  					{'<'' new FuncData() {Func = new Less()' Precedence = 1}}'  					{'='' new FuncData() {Func = new Equal()' Precedence = 1}}'  					{'&'' new FuncData() {Func = new And()' Precedence = 0}}'  					{'|'' new FuncData() {Func = new And()' Precedence = 0}}'  			    };
Magic Number,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData>  			    {  			        {'+'' new FuncData() {Func = new Sum()' Precedence = 2}}'  			        {'*'' new FuncData() {Func = new Mul()' Precedence = 3}}'  			        {'-'' new FuncData() {Func = new Sub()' Precedence = 2}}'  			        {'/'' new FuncData() {Func = new Div()' Precedence = 3}}'  			        {'%'' new FuncData() {Func = new Mod()' Precedence = 3}}'  			        {'^'' new FuncData() {Func = new Pow()' Precedence = 4}}'  			        //comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  					{'>'' new FuncData() {Func = new Greater()' Precedence = 1}}'  					{'<'' new FuncData() {Func = new Less()' Precedence = 1}}'  					{'='' new FuncData() {Func = new Equal()' Precedence = 1}}'  					{'&'' new FuncData() {Func = new And()' Precedence = 0}}'  					{'|'' new FuncData() {Func = new And()' Precedence = 0}}'  			    };
Magic Number,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData>  			    {  			        {'+'' new FuncData() {Func = new Sum()' Precedence = 2}}'  			        {'*'' new FuncData() {Func = new Mul()' Precedence = 3}}'  			        {'-'' new FuncData() {Func = new Sub()' Precedence = 2}}'  			        {'/'' new FuncData() {Func = new Div()' Precedence = 3}}'  			        {'%'' new FuncData() {Func = new Mod()' Precedence = 3}}'  			        {'^'' new FuncData() {Func = new Pow()' Precedence = 4}}'  			        //comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  					{'>'' new FuncData() {Func = new Greater()' Precedence = 1}}'  					{'<'' new FuncData() {Func = new Less()' Precedence = 1}}'  					{'='' new FuncData() {Func = new Equal()' Precedence = 1}}'  					{'&'' new FuncData() {Func = new And()' Precedence = 0}}'  					{'|'' new FuncData() {Func = new And()' Precedence = 0}}'  			    };
Magic Number,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData>  			    {  			        {'+'' new FuncData() {Func = new Sum()' Precedence = 2}}'  			        {'*'' new FuncData() {Func = new Mul()' Precedence = 3}}'  			        {'-'' new FuncData() {Func = new Sub()' Precedence = 2}}'  			        {'/'' new FuncData() {Func = new Div()' Precedence = 3}}'  			        {'%'' new FuncData() {Func = new Mod()' Precedence = 3}}'  			        {'^'' new FuncData() {Func = new Pow()' Precedence = 4}}'  			        //comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  					{'>'' new FuncData() {Func = new Greater()' Precedence = 1}}'  					{'<'' new FuncData() {Func = new Less()' Precedence = 1}}'  					{'='' new FuncData() {Func = new Equal()' Precedence = 1}}'  					{'&'' new FuncData() {Func = new And()' Precedence = 0}}'  					{'|'' new FuncData() {Func = new And()' Precedence = 0}}'  			    };
Magic Number,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData>  			    {  			        {'+'' new FuncData() {Func = new Sum()' Precedence = 2}}'  			        {'*'' new FuncData() {Func = new Mul()' Precedence = 3}}'  			        {'-'' new FuncData() {Func = new Sub()' Precedence = 2}}'  			        {'/'' new FuncData() {Func = new Div()' Precedence = 3}}'  			        {'%'' new FuncData() {Func = new Mod()' Precedence = 3}}'  			        {'^'' new FuncData() {Func = new Pow()' Precedence = 4}}'  			        //comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  					{'>'' new FuncData() {Func = new Greater()' Precedence = 1}}'  					{'<'' new FuncData() {Func = new Less()' Precedence = 1}}'  					{'='' new FuncData() {Func = new Equal()' Precedence = 1}}'  					{'&'' new FuncData() {Func = new And()' Precedence = 0}}'  					{'|'' new FuncData() {Func = new And()' Precedence = 0}}'  			    };
Magic Number,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData>  			    {  			        {'+'' new FuncData() {Func = new Sum()' Precedence = 2}}'  			        {'*'' new FuncData() {Func = new Mul()' Precedence = 3}}'  			        {'-'' new FuncData() {Func = new Sub()' Precedence = 2}}'  			        {'/'' new FuncData() {Func = new Div()' Precedence = 3}}'  			        {'%'' new FuncData() {Func = new Mod()' Precedence = 3}}'  			        {'^'' new FuncData() {Func = new Pow()' Precedence = 4}}'  			        //comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  					{'>'' new FuncData() {Func = new Greater()' Precedence = 1}}'  					{'<'' new FuncData() {Func = new Less()' Precedence = 1}}'  					{'='' new FuncData() {Func = new Equal()' Precedence = 1}}'  					{'&'' new FuncData() {Func = new And()' Precedence = 0}}'  					{'|'' new FuncData() {Func = new And()' Precedence = 0}}'  			    };
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: int wx' wy' height = 128;
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: wx = 128;
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: wy = 128;
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: height = 128;
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: args.MaxHeight = ( int )( args.MaxHeight / 80d * height );
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: args.MaxDepth = ( int )( args.MaxDepth / 80d * height );
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following statement contains a magic number: name.Length < 2
Magic Number,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following statement contains a magic number: name.Length < 2
Magic Number,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch ( option ) {                  default:                      if ( VoteIsOn ) {                          if ( VoteKickReason == null ) {                              player.Message( "Last Question: {0}&C asked: {1}"' VoteStarter' Question );                              player.Message( Usage );                              return;                          } else                              player.Message( "Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason );                          player.Message( Usage );                          return;                      } else                          player.Message( option );                      break;                    case "abort":                  case "stop":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have Permission to abort votes" );                          return;                      }                      VoteIsOn = false;                      foreach ( Player V in Voted ) {                          if ( V.Info.HasVoted )                              V.Info.HasVoted = false;                          V.Message( "Your vote was cancelled" );                      }                      Voted.Clear();                      TargetName = null;                      Server.Players.Message( "{0} &Saborted the vote."' player.ClassyName );                      break;                    case "yes":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      Voted.Add( player );                      VotedYes++;                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'Yes'" );                      break;                    case "kick":                      string toKick = cmd.Next();                      string Reason = cmd.NextAll();                      VoteKickReason = Reason;                      if ( toKick == null ) {                          player.Message( "Target cannot be empty. " + Usage );                          return;                      }                        Player target = Server.FindPlayerOrPrintMatches( player' toKick' false' true );                        if ( target == null ) {                          // FIX: Target is null when no such player is online' this caused crashes                          return;                      }                        if ( !Player.IsValidName( target.Name ) ) {                          return;                      }                        if ( !player.Can( Permission.MakeVoteKicks ) ) {                          player.Message( "You do not have permissions to start a VoteKick" );                          return;                      }                        if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                        if ( VoteKickReason.Length < 3 ) {                          player.Message( "Invalid reason" );                          return;                      }                        if ( target == player ) {                          player.Message( "You cannot VoteKick yourself' lol" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          TargetName = target.Name;                          if ( !Player.IsValidName( TargetName ) ) {                              player.Message( "Invalid name" );                              return;                          }                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName );                          Server.Players.Message( "&WReason: {0}"' VoteKickReason );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Logger.Log( LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason );                          Thread.Sleep( 60000 );                          VoteKickCheck();                      } ) );                      VoteThread.Start();                      break;                    case "no":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                      if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      VotedNo++;                      Voted.Add( player );                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'No'" );                      break;                    case "ask":                      string AskQuestion = cmd.NextAll();                      Question = AskQuestion;                      if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have permissions to ask a question" );                          return;                      }                      if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                      if ( Question.Length < 5 ) {                          player.Message( "Invalid question" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S Asked: {1}"' player.ClassyName' Question );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Thread.Sleep( 60000 );                          VoteCheck();                      } ) );                      VoteThread.Start();                      break;              }
Magic Number,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch ( option ) {                  default:                      if ( VoteIsOn ) {                          if ( VoteKickReason == null ) {                              player.Message( "Last Question: {0}&C asked: {1}"' VoteStarter' Question );                              player.Message( Usage );                              return;                          } else                              player.Message( "Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason );                          player.Message( Usage );                          return;                      } else                          player.Message( option );                      break;                    case "abort":                  case "stop":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have Permission to abort votes" );                          return;                      }                      VoteIsOn = false;                      foreach ( Player V in Voted ) {                          if ( V.Info.HasVoted )                              V.Info.HasVoted = false;                          V.Message( "Your vote was cancelled" );                      }                      Voted.Clear();                      TargetName = null;                      Server.Players.Message( "{0} &Saborted the vote."' player.ClassyName );                      break;                    case "yes":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      Voted.Add( player );                      VotedYes++;                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'Yes'" );                      break;                    case "kick":                      string toKick = cmd.Next();                      string Reason = cmd.NextAll();                      VoteKickReason = Reason;                      if ( toKick == null ) {                          player.Message( "Target cannot be empty. " + Usage );                          return;                      }                        Player target = Server.FindPlayerOrPrintMatches( player' toKick' false' true );                        if ( target == null ) {                          // FIX: Target is null when no such player is online' this caused crashes                          return;                      }                        if ( !Player.IsValidName( target.Name ) ) {                          return;                      }                        if ( !player.Can( Permission.MakeVoteKicks ) ) {                          player.Message( "You do not have permissions to start a VoteKick" );                          return;                      }                        if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                        if ( VoteKickReason.Length < 3 ) {                          player.Message( "Invalid reason" );                          return;                      }                        if ( target == player ) {                          player.Message( "You cannot VoteKick yourself' lol" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          TargetName = target.Name;                          if ( !Player.IsValidName( TargetName ) ) {                              player.Message( "Invalid name" );                              return;                          }                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName );                          Server.Players.Message( "&WReason: {0}"' VoteKickReason );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Logger.Log( LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason );                          Thread.Sleep( 60000 );                          VoteKickCheck();                      } ) );                      VoteThread.Start();                      break;                    case "no":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                      if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      VotedNo++;                      Voted.Add( player );                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'No'" );                      break;                    case "ask":                      string AskQuestion = cmd.NextAll();                      Question = AskQuestion;                      if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have permissions to ask a question" );                          return;                      }                      if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                      if ( Question.Length < 5 ) {                          player.Message( "Invalid question" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S Asked: {1}"' player.ClassyName' Question );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Thread.Sleep( 60000 );                          VoteCheck();                      } ) );                      VoteThread.Start();                      break;              }
Magic Number,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch ( option ) {                  default:                      if ( VoteIsOn ) {                          if ( VoteKickReason == null ) {                              player.Message( "Last Question: {0}&C asked: {1}"' VoteStarter' Question );                              player.Message( Usage );                              return;                          } else                              player.Message( "Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason );                          player.Message( Usage );                          return;                      } else                          player.Message( option );                      break;                    case "abort":                  case "stop":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have Permission to abort votes" );                          return;                      }                      VoteIsOn = false;                      foreach ( Player V in Voted ) {                          if ( V.Info.HasVoted )                              V.Info.HasVoted = false;                          V.Message( "Your vote was cancelled" );                      }                      Voted.Clear();                      TargetName = null;                      Server.Players.Message( "{0} &Saborted the vote."' player.ClassyName );                      break;                    case "yes":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      Voted.Add( player );                      VotedYes++;                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'Yes'" );                      break;                    case "kick":                      string toKick = cmd.Next();                      string Reason = cmd.NextAll();                      VoteKickReason = Reason;                      if ( toKick == null ) {                          player.Message( "Target cannot be empty. " + Usage );                          return;                      }                        Player target = Server.FindPlayerOrPrintMatches( player' toKick' false' true );                        if ( target == null ) {                          // FIX: Target is null when no such player is online' this caused crashes                          return;                      }                        if ( !Player.IsValidName( target.Name ) ) {                          return;                      }                        if ( !player.Can( Permission.MakeVoteKicks ) ) {                          player.Message( "You do not have permissions to start a VoteKick" );                          return;                      }                        if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                        if ( VoteKickReason.Length < 3 ) {                          player.Message( "Invalid reason" );                          return;                      }                        if ( target == player ) {                          player.Message( "You cannot VoteKick yourself' lol" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          TargetName = target.Name;                          if ( !Player.IsValidName( TargetName ) ) {                              player.Message( "Invalid name" );                              return;                          }                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName );                          Server.Players.Message( "&WReason: {0}"' VoteKickReason );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Logger.Log( LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason );                          Thread.Sleep( 60000 );                          VoteKickCheck();                      } ) );                      VoteThread.Start();                      break;                    case "no":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                      if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      VotedNo++;                      Voted.Add( player );                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'No'" );                      break;                    case "ask":                      string AskQuestion = cmd.NextAll();                      Question = AskQuestion;                      if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have permissions to ask a question" );                          return;                      }                      if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                      if ( Question.Length < 5 ) {                          player.Message( "Invalid question" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S Asked: {1}"' player.ClassyName' Question );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Thread.Sleep( 60000 );                          VoteCheck();                      } ) );                      VoteThread.Start();                      break;              }
Magic Number,fCraft,VoteHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch ( option ) {                  default:                      if ( VoteIsOn ) {                          if ( VoteKickReason == null ) {                              player.Message( "Last Question: {0}&C asked: {1}"' VoteStarter' Question );                              player.Message( Usage );                              return;                          } else                              player.Message( "Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason );                          player.Message( Usage );                          return;                      } else                          player.Message( option );                      break;                    case "abort":                  case "stop":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have Permission to abort votes" );                          return;                      }                      VoteIsOn = false;                      foreach ( Player V in Voted ) {                          if ( V.Info.HasVoted )                              V.Info.HasVoted = false;                          V.Message( "Your vote was cancelled" );                      }                      Voted.Clear();                      TargetName = null;                      Server.Players.Message( "{0} &Saborted the vote."' player.ClassyName );                      break;                    case "yes":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                        if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      Voted.Add( player );                      VotedYes++;                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'Yes'" );                      break;                    case "kick":                      string toKick = cmd.Next();                      string Reason = cmd.NextAll();                      VoteKickReason = Reason;                      if ( toKick == null ) {                          player.Message( "Target cannot be empty. " + Usage );                          return;                      }                        Player target = Server.FindPlayerOrPrintMatches( player' toKick' false' true );                        if ( target == null ) {                          // FIX: Target is null when no such player is online' this caused crashes                          return;                      }                        if ( !Player.IsValidName( target.Name ) ) {                          return;                      }                        if ( !player.Can( Permission.MakeVoteKicks ) ) {                          player.Message( "You do not have permissions to start a VoteKick" );                          return;                      }                        if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                        if ( VoteKickReason.Length < 3 ) {                          player.Message( "Invalid reason" );                          return;                      }                        if ( target == player ) {                          player.Message( "You cannot VoteKick yourself' lol" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          TargetName = target.Name;                          if ( !Player.IsValidName( TargetName ) ) {                              player.Message( "Invalid name" );                              return;                          }                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName );                          Server.Players.Message( "&WReason: {0}"' VoteKickReason );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Logger.Log( LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason );                          Thread.Sleep( 60000 );                          VoteKickCheck();                      } ) );                      VoteThread.Start();                      break;                    case "no":                      if ( !VoteIsOn ) {                          player.Message( "No vote is currently running" );                          return;                      }                      if ( player.Info.HasVoted ) {                          player.Message( "&CYou have already voted" );                          return;                      }                      VotedNo++;                      Voted.Add( player );                      player.Info.HasVoted = true;                      player.Message( "&8You have voted for 'No'" );                      break;                    case "ask":                      string AskQuestion = cmd.NextAll();                      Question = AskQuestion;                      if ( !player.Can( Permission.MakeVotes ) ) {                          player.Message( "You do not have permissions to ask a question" );                          return;                      }                      if ( VoteIsOn ) {                          player.Message( "A vote has already started. Each vote lasts 1 minute." );                          return;                      }                      if ( Question.Length < 5 ) {                          player.Message( "Invalid question" );                          return;                      }                        VoteThread = new Thread( new ThreadStart( delegate {                          NewVote();                          VoteStarter = player.ClassyName;                          Server.Players.Message( "{0}&S Asked: {1}"' player.ClassyName' Question );                          Server.Players.Message( "&9Vote now! &S/Vote &AYes &Sor /Vote &CNo" );                          VoteIsOn = true;                          Thread.Sleep( 60000 );                          VoteCheck();                      } ) );                      VoteThread.Start();                      break;              }
Magic Number,fCraft,CommandManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\CommandManager.cs,IsValidCommandName,The following statement contains a magic number: name.Length == 0 || name.Length > 16
Magic Number,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: int n = _r.Next( 8' 12 );
Magic Number,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: int n = _r.Next( 8' 12 );
Magic Number,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: double phi = -_r.NextDouble() + -player.Position.L * 2 * Math.PI;
Magic Number,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: double ksi = -_r.NextDouble() + player.Position.R * Math.PI - Math.PI / 2.0;
Magic Number,fCraft,DevCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: world.AddPhysicsTask( new Particle( world' ( pos1 + 2 * direction ).Round()' direction' player' Block.Obsidian' particleBehavior )' 0 );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The following statement contains a magic number: Names.Length <= 15
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch ( Option.ToLower() ) {                  default:                      CdList.PrintUsage( player );                      player.Message( "  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes" );                      break;                    case "emotes":                      const string Usage = "Shows a list of all available emotes and their keywords. " +                                           "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";                      int page = 1;                      if ( cmd.HasNext ) {                          if ( !cmd.NextInt( out page ) ) {                              player.Message( Usage );                              return;                          }                      }                      if ( page < 1 || page > 3 ) {                          player.Message( Usage );                          return;                      }                        var emoteChars = Chat.EmoteKeywords                                           .Values                                           .Distinct()                                           .Skip( ( page - 1 ) * 11 )                                           .Take( 11 );                        player.Message( "List of emotes' page {0} of 3:"' page );                      foreach ( char ch in emoteChars ) {                          char ch1 = ch;                          string keywords = Chat.EmoteKeywords                                                .Where( pair => pair.Value == ch1 )                                                .Select( kvp => "{&F" + kvp.Key.UppercaseFirst() + "&7}" )                                                .JoinToString( " " );                          player.Message( "&F  {0} &7= {1}"' ch' keywords );                      }                      if ( page < 3 )                          player.Message( "Type /List Emotes {0} for the next page"' page + 1 );                        break;                    case "top10":                      List<World> WorldNames = new List<World>( WorldManager.Worlds.Where( w => w.VisitCount > 0 )                                           .OrderBy( c => c.VisitCount )                                           .ToArray()                                           .Reverse() );                      string list = WorldNames.Take( 10 ).JoinToString( w => String.Format( "{0}&S: {1}"' w.ClassyName' w.VisitCount ) );                      if ( WorldNames.Count() < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      player.Message( "&WShowing worlds with the most visits: " + list );                      WorldNames.Clear();                      break;                    case "idles":                  case "idle":                      var Idles = Server.Players.Where( p => p.IdleTime.TotalMinutes > 5 ).ToArray();                      var visiblePlayers = Idles.Where( player.CanSee );                      if ( visiblePlayers.Count() > 0 )                          player.Message( "Listing players idle for 5 mins or more: {0}"'                                          visiblePlayers.JoinToString( r => String.Format( "{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString() ) ) );                      else                          player.Message( "No players have been idle for more than 5 minutes" );                      break;                    case "portals":                      if ( player.World == null ) {                          player.Message( "/List portals cannot be used from Console" );                          return;                      }                      if ( player.World.Map.Portals == null ||                          player.World.Map.Portals.Count == 0 ) {                          player.Message( "There are no portals in {0}&S."' player.World.ClassyName );                      } else {                          String[] portalNames = new String[player.World.Map.Portals.Count];                          StringBuilder output = new StringBuilder( "There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: " );                            for ( int i = 0; i < player.World.Map.Portals.Count; i++ ) {                              portalNames[i] = ( ( fCraft.Portals.Portal )player.World.Map.Portals[i] ).Name;                          }                          output.Append( portalNames.JoinToString( "' " ) );                          player.Message( output.ToString() );                      }                      break;                    case "staff":                      var StaffNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank.Can( Permission.ReadStaffChat ) &&                                               r.Rank.Can( Permission.Ban ) &&                                               r.Rank.Can( Permission.Promote ) )                                               .OrderBy( p => p.Rank )                                               .ToArray();                      if ( StaffNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( StaffNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "staff"' StaffNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= StaffNames.Length )                              offset = Math.Max( 0' StaffNames.Length - PlayersPerPage );                          PlayerInfo[] StaffPart = StaffNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "staff"' StaffPart );                          if ( offset + StaffPart.Length < StaffNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length'                                              "staff"' offset + StaffPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + StaffPart.Length' StaffNames.Length );                      }                      break;                    case "rank":                      string rankName = cmd.Next();                      if ( rankName == null ) {                          player.Message( "Usage: /List rank rankName" );                          return;                      }                      Rank rank = RankManager.FindRank( rankName );                      var RankNames = PlayerDB.PlayerInfoList                                           .Where( r => r.Rank == rank )                                               .ToArray();                      if ( RankNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( RankNames.Length <= PlayersPerPage ) {                          player.MessageManyMatches( "players"' RankNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= RankNames.Length )                              offset = Math.Max( 0' RankNames.Length - PlayersPerPage );                          PlayerInfo[] RankPart = RankNames.Skip( offset ).Take( PlayersPerPage ).ToArray();                          player.MessageManyMatches( "rank list"' RankPart );                          if ( offset + RankPart.Length < RankNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + RankPart.Length' RankNames.Length'                                              "rank " + rank.ClassyName' offset + RankPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + RankPart.Length' RankNames.Length );                      }                      break;                    case "displayednames":                  case "displayedname":                  case "dn":                      var DisplayedNames = PlayerDB.PlayerInfoList                                               .Where( r => r.DisplayedName != null ).OrderBy( p => p.Rank ).ToArray();                      if ( DisplayedNames.Length < 1 ) {                          player.Message( "&WNo results found" );                          return;                      }                      if ( DisplayedNames.Length <= 15 ) {                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DisplayedNames );                      } else {                          int offset;                          if ( !cmd.NextInt( out offset ) )                              offset = 0;                          if ( offset >= DisplayedNames.Count() )                              offset = Math.Max( 0' DisplayedNames.Length - 15 );                          PlayerInfo[] DnPart = DisplayedNames.Skip( offset ).Take( 15 ).ToArray();                          player.MessageManyDisplayedNamesMatches( "DisplayedNames"' DnPart );                          if ( offset + DisplayedNames.Length < DisplayedNames.Length )                              player.Message( "Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length'                                              "DisplayedNames"' offset + DnPart.Length );                          else                              player.Message( "Showing matches {0}-{1} (out of {2})."'                                              offset + 1' offset + DnPart.Length' DisplayedNames.Length );                      }                      break;              }
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The following statement contains a magic number: Server.IsIP( ipString ) && IPAddress.TryParse( ipString' out ip ) &&                      Byte.TryParse( rangeString' out range ) && range <= 32
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: player.MessagePrefixed( "&S  "'                                                      "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"'                                                      MaxAltsToPrint'                                                      bannedAltCount'                                                      altNames.Take( 15 ).ToArray().JoinToClassyString() );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: player.Message( "  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."'                                  info.BlocksBuilt'                                  info.BlocksDeleted'                                  info.BlocksDrawn / 1000000'                                  info.MessagesWritten );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: info.BlocksDrawn > 500000000
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: player.MessagePrefixed( "&S  "'                                                  "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"'                                                  MaxAltsToPrint'                                                  bannedAltCount'                                                  altNames.Take( 15 ).ToArray().JoinToClassyString() );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message( "Servers status: Up for {0:0.0} hours' using {1:0} MB"'                              DateTime.UtcNow.Subtract( Server.StartTime ).TotalHours'                              ( Process.GetCurrentProcess().PrivateMemorySize64 / ( 1024 * 1024 ) ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message( "Servers status: Up for {0:0.0} hours' using {1:0} MB"'                              DateTime.UtcNow.Subtract( Server.StartTime ).TotalHours'                              ( Process.GetCurrentProcess().PrivateMemorySize64 / ( 1024 * 1024 ) ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message( "  Averaging {0:0.0}% CPU now' {1:0.0}% overall"'                                  Server.CPUUsageLastMinute * 100'                                  Server.CPUUsageTotal * 100 );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message( "  Averaging {0:0.0}% CPU now' {1:0.0}% overall"'                                  Server.CPUUsageLastMinute * 100'                                  Server.CPUUsageTotal * 100 );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message( "  Bandwidth: {0:0.0} KB/s up' {1:0.0} KB/s down"'                              bytesSentRate / 1000' bytesReceivedRate / 1000 );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message( "  Bandwidth: {0:0.0} KB/s up' {1:0.0} KB/s down"'                              bytesSentRate / 1000' bytesReceivedRate / 1000 );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,MeasureHandler,The following statement contains a magic number: player.SelectionStart( 2' MeasureCallback' null );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,MeasureCallback,The following statement contains a magic number: var blockString = topBlocks.JoinToString( p => String.Format( "{0}: {1} ({2}%)"'                                                                            p.Key'                                                                            p.Value'                                                                            ( p.Value * 100 ) / box.Volume ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: int offset = ( int )( rotation / 255f * 64f ) + 32;
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: int offset = ( int )( rotation / 255f * 64f ) + 32;
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: int offset = ( int )( rotation / 255f * 64f ) + 32;
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format( "&F[{0}&C{1}&F{2}]"'                                    Compass.Substring( offset - 12' 11 )'                                    Compass.Substring( offset - 1' 3 )'                                    Compass.Substring( offset + 2' 11 ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format( "&F[{0}&C{1}&F{2}]"'                                    Compass.Substring( offset - 12' 11 )'                                    Compass.Substring( offset - 1' 3 )'                                    Compass.Substring( offset + 2' 11 ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format( "&F[{0}&C{1}&F{2}]"'                                    Compass.Substring( offset - 12' 11 )'                                    Compass.Substring( offset - 1' 3 )'                                    Compass.Substring( offset + 2' 11 ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format( "&F[{0}&C{1}&F{2}]"'                                    Compass.Substring( offset - 12' 11 )'                                    Compass.Substring( offset - 1' 3 )'                                    Compass.Substring( offset + 2' 11 ) );
Magic Number,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format( "&F[{0}&C{1}&F{2}]"'                                    Compass.Substring( offset - 12' 11 )'                                    Compass.Substring( offset - 1' 3 )'                                    Compass.Substring( offset + 2' 11 ) );
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: int inactiveCount = infos.Count( info => info.TimeSinceLastSeen.TotalDays >= 30 );
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos = infos.Where( info => ( info.TimeSinceLastSeen.TotalDays < 30 && !info.IsBanned ) ).ToList();
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimeSinceFirstLoginMedian = DateTime.UtcNow.Subtract( infos.OrderByDescending( info => info.FirstLoginDate )                                                                              .ElementAt( infos.Count / 2 ).FirstLoginDate );
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimeSinceLastLoginMedian = DateTime.UtcNow.Subtract( infos.OrderByDescending( info => info.LastLoginDate )                                                                             .ElementAt( infos.Count / 2 ).LastLoginDate );
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TotalTimeMedian = infos.OrderByDescending( info => info.TotalTime ).ElementAt( infos.Count / 2 ).TotalTime;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.BlocksBuiltMedian = infos.OrderByDescending( info => info.BlocksBuilt ).ElementAt( infos.Count / 2 ).BlocksBuilt;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.BlocksDeletedMedian = infos.OrderByDescending( info => info.BlocksDeleted ).ElementAt( infos.Count / 2 ).BlocksDeleted;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.BlocksDrawnMedian = infos.OrderByDescending( info => info.BlocksDrawn ).ElementAt( infos.Count / 2 ).BlocksDrawn;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: PlayerInfo medianBlocksChangedPlayerInfo = infos.OrderByDescending( info => ( info.BlocksDeleted + info.BlocksBuilt ) ).ElementAt( infos.Count / 2 );
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: PlayerInfo medianBlockRatioPlayerInfo = infos.OrderByDescending( info => ( info.BlocksBuilt / ( double )Math.Max( info.BlocksDeleted' 1 ) ) )                                                      .ElementAt( infos.Count / 2 );
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesVisitedMedian = infos.OrderByDescending( info => info.TimesVisited ).ElementAt( infos.Count / 2 ).TimesVisited;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.MessagesWrittenMedian = infos.OrderByDescending( info => info.MessagesWritten ).ElementAt( infos.Count / 2 ).MessagesWritten;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesKickedMedian = infos.OrderByDescending( info => info.TimesKicked ).ElementAt( infos.Count / 2 ).TimesKicked;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesKickedOthersMedian = infos.OrderByDescending( info => info.TimesKickedOthers ).ElementAt( infos.Count / 2 ).TimesKickedOthers;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesBannedOthersMedian = infos.OrderByDescending( info => info.TimesBannedOthers ).ElementAt( infos.Count / 2 ).TimesBannedOthers;
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos.Count() > TopPlayersToList * 2 + 1
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The following statement contains a magic number: switch ( propertyName.ToLower() ) {                  case "timeskicked":                      int oldTimesKicked = info.TimesKicked;                      if ( ValidateInt( valName' 0' 9999 ) ) {                          info.TimesKicked = Int32.Parse( valName );                          player.Message( "SetInfo: TimesKicked for {0}&S changed from {1} to {2}"'                                          info.ClassyName'                                          oldTimesKicked'                                          info.TimesKicked );                          break;                      } else {                          player.Message( "SetInfo: TimesKicked value acceptible (Acceptible value range: 0-9999)" );                          return;                      }                    case "previousrank":                      Rank newPreviousRank;                      if ( valName.Length > 0 ) {                          newPreviousRank = RankManager.FindRank( valName );                          if ( newPreviousRank == null ) {                              player.MessageNoRank( valName );                              return;                          }                      } else {                          newPreviousRank = null;                      }                        Rank oldPreviousRank = info.PreviousRank;                        if ( newPreviousRank == oldPreviousRank ) {                          if ( newPreviousRank == null ) {                              player.Message( "SetInfo: PreviousRank for {0}&S is not set."'                                              info.ClassyName );                          } else {                              player.Message( "SetInfo: PreviousRank for {0}&S is already set to {1}"'                                              info.ClassyName'                                              newPreviousRank.ClassyName );                          }                          return;                      }                      info.PreviousRank = newPreviousRank;                        if ( oldPreviousRank == null ) {                          player.Message( "SetInfo: PreviousRank for {0}&S set to {1}&"'                                          info.ClassyName'                                          newPreviousRank.ClassyName );                      } else if ( newPreviousRank == null ) {                          player.Message( "SetInfo: PreviousRank for {0}&S was reset (was {1}&S)"'                                          info.ClassyName'                                          oldPreviousRank.ClassyName );                      } else {                          player.Message( "SetInfo: PreviousRank for {0}&S changed from {1}&S to {2}"'                                          info.ClassyName'                                          oldPreviousRank.ClassyName'                                          newPreviousRank.ClassyName );                      }                      break;                    case "totaltime":                      TimeSpan newTotalTime;                      TimeSpan oldTotalTime = info.TotalTime;                      if ( valName.TryParseMiniTimespan( out newTotalTime ) ) {                          if ( newTotalTime > DateTimeUtil.MaxTimeSpan ) {                              player.MessageMaxTimeSpan();                              return;                          }                          info.TotalTime = newTotalTime;                          player.Message( "SetInfo: TotalTime for {0}&S changed from {1} ({2}) to {3} ({4})"'                                          info.ClassyName'                                          oldTotalTime.ToMiniString()'                                          oldTotalTime.ToCompactString()'                                          info.TotalTime.ToMiniString()'                                          info.TotalTime.ToCompactString() );                          break;                      } else {                          player.Message( "SetInfo: Could not parse value given for TotalTime." );                          return;                      }                    case "rankchangetype":                      RankChangeType oldType = info.RankChangeType;                      try {                          info.RankChangeType = ( RankChangeType )Enum.Parse( typeof( RankChangeType )' valName' true );                      } catch ( ArgumentException ) {                          player.Message( "SetInfo: Could not parse RankChangeType. Allowed values: {0}"'                                          String.Join( "' "' Enum.GetNames( typeof( RankChangeType ) ) ) );                          return;                      }                      player.Message( "SetInfo: RankChangeType for {0}&S changed from {1} to {2}"'                                      info.ClassyName'                                      oldType'                                      info.RankChangeType );                      break;                    case "banreason":                      if ( valName.Length == 0 )                          valName = null;                      if ( SetPlayerInfoField( player' "BanReason"' info' info.BanReason' valName ) ) {                          info.BanReason = valName;                          break;                      } else {                          return;                      }                    case "unbanreason":                      if ( valName.Length == 0 )                          valName = null;                      if ( SetPlayerInfoField( player' "UnbanReason"' info' info.UnbanReason' valName ) ) {                          info.UnbanReason = valName;                          break;                      } else {                          return;                      }                    case "rankreason":                      if ( valName.Length == 0 )                          valName = null;                      if ( SetPlayerInfoField( player' "RankReason"' info' info.RankChangeReason' valName ) ) {                          info.RankChangeReason = valName;                          break;                      } else {                          return;                      }                    case "kickreason":                      if ( valName.Length == 0 )                          valName = null;                      if ( SetPlayerInfoField( player' "KickReason"' info' info.LastKickReason' valName ) ) {                          info.LastKickReason = valName;                          break;                      } else {                          return;                      }                    case "displayedname":                  case "dn":                      string oldDisplayedName = info.DisplayedName;                      if ( valName.Length == 0 )                          valName = null;                      if ( valName == info.DisplayedName ) {                          if ( valName == null ) {                              player.Message( "SetInfo: DisplayedName for {0} is not set."'                                              info.Name );                          } else {                              player.Message( "SetInfo: DisplayedName for {0} is already set to \"{1}&S\""'                                              info.Name'                                              valName );                          }                          return;                      }                      info.DisplayedName = valName;                        if ( oldDisplayedName == null ) {                          player.Message( "SetInfo: DisplayedName for {0} set to \"{1}&S\""'                                          info.Name'                                          valName );                      } else if ( valName == null ) {                          player.Message( "SetInfo: DisplayedName for {0} was reset (was \"{1}&S\")"'                                          info.Name'                                          oldDisplayedName );                      } else {                          player.Message( "SetInfo: DisplayedName for {0} changed from \"{1}&S\" to \"{2}&S\""'                                          info.Name'                                          oldDisplayedName'                                          valName );                      }                      break;                    default:                      player.Message( "Only the following properties are editable: " +                                      "TimesKicked' PreviousRank' TotalTime' RankChangeType' " +                                      "BanReason' UnbanReason' RankReason' KickReason' DisplayedName" );                      return;              }
Magic Number,fCraft,MaintenanceCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,The following statement contains a magic number: switch ( whatToReload ) {                      case "config":                          success = Config.Load( true' true );                          break;                        case "autorank":                          success = AutoRankManager.Init();                          break;                        case "swears":                          Chat.badWordMatchers = null;                          Chat.Swears.Clear();                          success = true;                          break;                        case "salt":                          Heartbeat.Salt = Server.GetRandomString( 32 );                          player.Message( "&WNote: Until server synchronizes with Minecraft.net' " +                                          "connecting players may have trouble verifying names." );                          success = true;                          break;                        default:                          CdReload.PrintUsage( player );                          return;                  }
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The following statement contains a magic number: player.Message( "&WYou can use /Kill again in " + Math.Round( 10 - time ) + " seconds." );
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The following statement contains a magic number: time < 10
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: player.Message( "&WYou can use /Slap again in " + Math.Round( 10 - time ) + " seconds." );
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: time < 10
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: var slap = new Position( target.Position.X' target.Position.Y' ( target.World.Map.Bounds.ZMax ) * 32 );
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Warn,The following statement contains a magic number: Scheduler.NewTask( t => target.Info.UnWarn() ).RunOnce( TimeSpan.FromMinutes( 15 ) );
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,The following statement contains a magic number: playerName == null || playerName.Length < 2 || ( playerName[0] != '-' && playerName[0] != '+' )
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: player.Send( PacketWriter.MakeAddEntity( 255' player.ListName' player.Position ) );
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024
Magic Number,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024
Magic Number,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The following statement contains a magic number: Func<int' bool> allWhiteRow = row => {                  for ( int i = 0; i < w; ++i )                      if ( bmp.GetPixel( i' row ).R != 255 )                          return false;                  return true;              };
Magic Number,fCraft,FontHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The following statement contains a magic number: Func<int' bool> allWhiteColumn = col => {                  for ( int i = 0; i < h; ++i )                      if ( bmp.GetPixel( col' i ).R != 255 )                          return false;                  return true;              };
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: double phi = ( 1 + Math.Sqrt( 5 ) ) / 2;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: double phi = ( 1 + Math.Sqrt( 5 ) ) / 2;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: wid *= 0.9f;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: hgt *= 0.9f;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: double x = ( client_wid - wid ) / 2;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: double y = ( client_hgt - hgt ) / 2;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: const int num_slices = 1000;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: double dtheta = Math.PI / 2 / num_slices;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: double factor = 1 - ( 1 / phi ) / num_slices * 0.78;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawRegularPolygon,The following statement contains a magic number: Point center = new Point( Radius / 2' Radius / 2 );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawRegularPolygon,The following statement contains a magic number: Point center = new Point( Radius / 2' Radius / 2 );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawRegularPolygon,The following statement contains a magic number: Point[] verticies = CalculateVertices( sides' Radius / 2' startingAngle' center );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateVertices,The following statement contains a magic number: sides < 3
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateVertices,The following statement contains a magic number: float step = 360.0f / sides;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateVertices,The following statement contains a magic number: i < startingAngle + 360.0
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawStar,The following statement contains a magic number: PointF[] star_points = MakeStarPoints( -Math.PI / 2' num_points' Radius / 2 );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawStar,The following statement contains a magic number: PointF[] star_points = MakeStarPoints( -Math.PI / 2' num_points' Radius / 2 );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: int skip = ( int )( ( num_points - 1 ) / 2.0 );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: dtheta = 2 * Math.PI / num_points;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: result = new PointF[2 * num_points];
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: result[2 * i] = new PointF(                      ( float )( cx + cx * Math.Cos( theta ) )'                      ( float )( cy + cy * Math.Sin( theta ) ) );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: result[2 * i + 1] = new PointF(                      ( float )( cx + cx * Math.Cos( theta ) * concave_radius )'                      ( float )( cy + cy * Math.Sin( theta ) * concave_radius ) );
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateConcaveRadius,The following statement contains a magic number: return 0.33f;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateConcaveRadius,The following statement contains a magic number: num_points < 5
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateConcaveRadius,The following statement contains a magic number: double dtheta = 2 * Math.PI / num_points;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateConcaveRadius,The following statement contains a magic number: double theta00 = -Math.PI / 2;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DegreesToXY,The following statement contains a magic number: double radians = degrees * Math.PI / 180.0;
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The following statement contains a magic number: Func<int' bool> allWhiteRow = row => {                  for ( int i = 0; i < w; ++i )                      if ( bmp.GetPixel( i' row ).R != 255 )                          return false;                  return true;              };
Magic Number,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The following statement contains a magic number: Func<int' bool> allWhiteColumn = col => {                  for ( int i = 0; i < h; ++i )                      if ( bmp.GetPixel( col' i ).R != 255 )                          return false;                  return true;              };
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Init,The following statement contains a magic number: SchedulerTask timeCheckR = Scheduler.NewTask( TimeCheck ).RunForever( TimeSpan.FromSeconds( 120 ) );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedHandler,The following statement contains a magic number: player.SelectionStart( 2' FeedCallback' Option' Permission.Draw );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: worldName.Length < 2
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch ( text.Length ) {                  case 3:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[0] ) );                      green = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      blue = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      break;                    case 4:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[2] ) );                      blue = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[3] ) );                      break;                    case 6:                      red = ( byte )( HexToValue( text[0] ) * 16 + HexToValue( text[1] ) );                      green = ( byte )( HexToValue( text[2] ) * 16 + HexToValue( text[3] ) );                      blue = ( byte )( HexToValue( text[4] ) * 16 + HexToValue( text[5] ) );                      break;                    case 7:                      if ( text[0] != '#' )                          throw new FormatException();                      red = ( byte )( HexToValue( text[1] ) * 16 + HexToValue( text[2] ) );                      green = ( byte )( HexToValue( text[3] ) * 16 + HexToValue( text[4] ) );                      blue = ( byte )( HexToValue( text[5] ) * 16 + HexToValue( text[6] ) );                      break;                    default:                      throw new FormatException();              }
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: return red * 256 * 256 + green * 256 + blue;
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: return red * 256 * 256 + green * 256 + blue;
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: return red * 256 * 256 + green * 256 + blue;
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunriseStart = new TimeSpan( 6' 30' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunriseStart = new TimeSpan( 6' 30' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunriseEnd = new TimeSpan( 7' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunriseEnd = new TimeSpan( 7' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunriseEnd = new TimeSpan( 7' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var MorningStart = new TimeSpan( 7' 30' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var MorningStart = new TimeSpan( 7' 30' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var MorningEnd = new TimeSpan( 11' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var MorningEnd = new TimeSpan( 11' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var MorningEnd = new TimeSpan( 11' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NormalStart = new TimeSpan( 12' 0' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NormalEnd = new TimeSpan( 16' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NormalEnd = new TimeSpan( 16' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NormalEnd = new TimeSpan( 16' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var EveningStart = new TimeSpan( 17' 0' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var EveningEnd = new TimeSpan( 18' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var EveningEnd = new TimeSpan( 18' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var EveningEnd = new TimeSpan( 18' 59' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunsetStart = new TimeSpan( 19' 0' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunsetEnd = new TimeSpan( 19' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunsetEnd = new TimeSpan( 19' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var SunsetEnd = new TimeSpan( 19' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NightaStart = new TimeSpan( 19' 30' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NightaStart = new TimeSpan( 19' 30' 0 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NightbStart = new TimeSpan( 1' 0' 2 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NightbEnd = new TimeSpan( 6' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NightbEnd = new TimeSpan( 6' 29' 59 );
Magic Number,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: var NightbEnd = new TimeSpan( 6' 29' 59 );
Magic Number,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: player.SelectionStart( 2' ZoneAddCallback' newZone' CdZoneAdd.Permissions );
Magic Number,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The following statement contains a magic number: player.Message( "  Zone center is at ({0}'{1}'{2})."'                              ( zone.Bounds.XMin + zone.Bounds.XMax ) / 2'                              ( zone.Bounds.YMin + zone.Bounds.YMax ) / 2'                              ( zone.Bounds.ZMin + zone.Bounds.ZMax ) / 2 );
Magic Number,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The following statement contains a magic number: player.Message( "  Zone center is at ({0}'{1}'{2})."'                              ( zone.Bounds.XMin + zone.Bounds.XMax ) / 2'                              ( zone.Bounds.YMin + zone.Bounds.YMax ) / 2'                              ( zone.Bounds.ZMin + zone.Bounds.ZMax ) / 2 );
Magic Number,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The following statement contains a magic number: player.Message( "  Zone center is at ({0}'{1}'{2})."'                              ( zone.Bounds.XMin + zone.Bounds.XMax ) / 2'                              ( zone.Bounds.YMin + zone.Bounds.YMax ) / 2'                              ( zone.Bounds.ZMin + zone.Bounds.ZMax ) / 2 );
Magic Number,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneMarkHandler,The following statement contains a magic number: switch (player.SelectionMarksExpected)              {                  case 0:                      player.MessageNow( "Cannot use ZMark - no selection in progress." );                      break;                  case 2:                  {                      string zoneName = cmd.Next();                      if ( zoneName == null ) {                          CdZoneMark.PrintUsage( player );                          return;                      }                        Zone zone = player.WorldMap.Zones.Find( zoneName );                      if ( zone == null ) {                          player.MessageNoZone( zoneName );                          return;                      }                        player.SelectionResetMarks();                      player.SelectionAddMark( zone.Bounds.MinVertex' false );                      player.SelectionAddMark( zone.Bounds.MaxVertex' true );                  }                      break;                  default:                      player.MessageNow( "ZMark can only be used for 2-block selection." );                      break;              }
Magic Number,fCraft,Football,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: double ksi = 2.0 * Math.PI * ( -e.Player.Position.L ) / 256.0;
Magic Number,fCraft,Football,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: double ksi = 2.0 * Math.PI * ( -e.Player.Position.L ) / 256.0;
Magic Number,fCraft,Football,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( e.Player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,Football,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( e.Player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,Football,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: double phi = 2.0 * Math.PI * ( e.Player.Position.R - 64 ) / 256.0;
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: Map map = MapGeneratorOld.GenerateEmpty( 64' 128' 16 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: Map map = MapGeneratorOld.GenerateEmpty( 64' 128' 16 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: Map map = MapGeneratorOld.GenerateEmpty( 64' 128' 16 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: _map.Spawn = new Position( _map.Width / 2' 5' _ground + 3 ).ToVector3I().ToPlayerCoords();
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: _map.Spawn = new Position( _map.Width / 2' 5' _ground + 3 ).ToVector3I().ToPlayerCoords();
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: _map.Spawn = new Position( _map.Width / 2' 5' _ground + 3 ).ToVector3I().ToPlayerCoords();
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpRed,The following statement contains a magic number: y <= 10
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMiddleWater,The following statement contains a magic number: y >= _map.Length - 56
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpGreen,The following statement contains a magic number: y >= _map.Length - 10
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: _rand.Next( 1' 100 ) > 96
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: _rand.Next( 1' 100 ) > 96
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: newPos.Z > _ground + 2
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: newPos == new Vector3I( pos.X' pos.Y' pos.Z + 2 ) ||                                      newPos == new Vector3I( pos.X' pos.Y' pos.Z + 1 ) ||                                      newPos == new Vector3I( pos.X' pos.Y' pos.Z )
Magic Number,fCraft,MineField,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: _map.GetBlock( newPos.X' newPos.Y' newPos.Z - 2 ) == Block.Green                                  && !_stopped
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Start,The following statement contains a magic number: Scheduler.NewTask( t => _world.Players.Message( "&WThe game will be starting soon..." ) )                  .RunRepeating( TimeSpan.FromSeconds( 0 )' TimeSpan.FromSeconds( 20 )' 2 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Start,The following statement contains a magic number: Scheduler.NewTask( t => _world.Players.Message( "&WThe game will be starting soon..." ) )                  .RunRepeating( TimeSpan.FromSeconds( 0 )' TimeSpan.FromSeconds( 20 )' 2 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Interval,The following statement contains a magic number: _started && startTime != null && ( DateTime.UtcNow - startTime ).TotalMinutes >= 5
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Interval,The following statement contains a magic number: lastChecked != null && ( DateTime.UtcNow - lastChecked ).TotalSeconds >= 30
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: Vector3I oldPos = new Vector3I( e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: Vector3I newPos = new Vector3I( e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32 );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: e.NewPosition.DistanceSquaredTo( pos.ToPlayerCoords() ) <= 33 * 33
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: e.NewPosition.DistanceSquaredTo( pos.ToPlayerCoords() ) <= 33 * 33
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: int x = rand.Next( 2' _world.Map.Width );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: int y = rand.Next( 2' _world.Map.Length );
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: z1 = z + 3;
Magic Number,fCraft,ZombieGame,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: p.TeleportTo( new Position( x' y' z1 + 2 ).ToVector3I().ToPlayerCoords() );
Magic Number,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: ( ( player.Position.Z / 32 ) - 1 ) <= Range.Zmax + 1 && ( ( player.Position.Z / 32 ) - 1 ) >= Range.Zmin - 1
Magic Number,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: ( ( player.Position.Z / 32 ) - 1 ) <= Range.Zmax + 1 && ( ( player.Position.Z / 32 ) - 1 ) >= Range.Zmin - 1
Magic Number,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: ( player.Position.Y / 32 ) <= Range.Ymax + 1 && ( player.Position.Y / 32 ) >= Range.Ymin - 1
Magic Number,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: ( player.Position.Y / 32 ) <= Range.Ymax + 1 && ( player.Position.Y / 32 ) >= Range.Ymin - 1
Magic Number,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: ( player.Position.X / 32 ) <= Range.Xmax + 1 && ( player.Position.X / 32 ) >= Range.Xmin - 1
Magic Number,fCraft,MessageBlock,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: ( player.Position.X / 32 ) <= Range.Xmax + 1 && ( player.Position.X / 32 ) >= Range.Xmin - 1
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: ( DateTime.UtcNow - e.Player.LastUsedMessageBlock ).TotalSeconds > 4
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: ( DateTime.UtcNow - e.Player.LastUsedMessageBlock ).TotalSeconds > 4
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: int Xdistance = ( world.Map.Spawn.X / 32 ) - block.X;
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: int Ydistance = ( world.Map.Spawn.Y / 32 ) - block.Y;
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: int Zdistance = ( world.Map.Spawn.Z / 32 ) - block.Z;
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Zdistance <= 10 && Zdistance >= -10
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Zdistance <= 10 && Zdistance >= -10
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Ydistance <= 10 && Ydistance >= -10
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Ydistance <= 10 && Ydistance >= -10
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Xdistance <= 10 && Xdistance >= -10
Magic Number,fCraft,MessageBlockHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Xdistance <= 10 && Xdistance >= -10
Magic Number,fCraft,PacketReader,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketReader.cs,ReadString,The following statement contains a magic number: return Encoding.ASCII.GetString( ReadBytes( 64 ) ).Trim();
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,The following statement contains a magic number: writer.Write( Packet.MakeExtInfo( 2 ).Data );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: packet.Data[7] = ( byte )Map.GetFallbackBlock( ( Block )packet.Data[7] );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: packet.Data[7] = ( byte )Map.GetFallbackBlock( ( Block )packet.Data[7] );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: packet.Data[7] > ( byte )Map.MaxLegalBlockType && !UsesCustomBlocks
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,CanBeKilled,The following statement contains a magic number: ( DateTime.UtcNow - LastTimeKilled ).TotalSeconds < 15
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following statement contains a magic number: Info.IsFrozen ||                  Math.Abs( coord.X * 32 - Position.X ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Y * 32 - Position.Y ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Z * 32 - Position.Z ) > MaxBlockPlacementRange
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following statement contains a magic number: Info.IsFrozen ||                  Math.Abs( coord.X * 32 - Position.X ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Y * 32 - Position.Y ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Z * 32 - Position.Z ) > MaxBlockPlacementRange
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following statement contains a magic number: Info.IsFrozen ||                  Math.Abs( coord.X * 32 - Position.X ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Y * 32 - Position.Y ) > MaxBlockPlacementRange ||                  Math.Abs( coord.Z * 32 - Position.Z ) > MaxBlockPlacementRange
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidName,The following statement contains a magic number: name.Length < 2 || name.Length > 16
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidName,The following statement contains a magic number: name.Length < 2 || name.Length > 16
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Player,The following statement contains a magic number: MaxBlockPlacementRange = 7 * 32;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Player,The following statement contains a magic number: MaxBlockPlacementRange = 7 * 32;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,Player,The following statement contains a magic number: SocketTimeout = 10000;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The following statement contains a magic number: !client.Connected ||                              ( client.Client.Poll( 1000' SelectMode.SelectRead ) && client.Client.Available == 0 )
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMessagePacket,The following statement contains a magic number: BytesReceived += 66;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: BytesReceived += 10;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: delta.X * delta.X + delta.Y * delta.Y > AntiSpeedMaxDistanceSquared ||                      Math.Abs( delta.Z ) > 40
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: Vector3I oldPosi = new Vector3I( oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: Vector3I oldPosi = new Vector3I( oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: Vector3I oldPosi = new Vector3I( oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: Vector3I newPosi = new Vector3I( newPos.X / 32' newPos.Y / 32' newPos.Z / 32 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: Vector3I newPosi = new Vector3I( newPos.X / 32' newPos.Y / 32' newPos.Z / 32 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: Vector3I newPosi = new Vector3I( newPos.X / 32' newPos.Y / 32' newPos.Z / 32 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: k <= 3
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessSetBlockPacket,The following statement contains a magic number: BytesReceived += 9;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessSetBlockPacket,The following statement contains a magic number: type > 49
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: switch ( opcode ) {                  case ( byte )OpCode.Handshake:                      break;                    case 2:                      GentlyKickBetaClients();                      return false;                    case 250:                      GentlyKickBetaClients();                      return false;                    case ( byte )'G':                      ServeCfg();                      return false;                    default:                      Logger.Log( LogType.Error'                                  "Player.LoginSequence: Unexpected opcode in the first packet from {0}: {1}."'                                  IP' opcode );                      KickNow( "Incompatible client' or a network error."' LeaveReason.ProtocolViolation );                      return false;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: switch ( opcode ) {                  case ( byte )OpCode.Handshake:                      break;                    case 2:                      GentlyKickBetaClients();                      return false;                    case 250:                      GentlyKickBetaClients();                      return false;                    case ( byte )'G':                      ServeCfg();                      return false;                    default:                      Logger.Log( LogType.Error'                                  "Player.LoginSequence: Unexpected opcode in the first packet from {0}: {1}."'                                  IP' opcode );                      KickNow( "Incompatible client' or a network error."' LeaveReason.ProtocolViolation );                      return false;              }
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: BytesReceived += 131;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send( Packet.MakeAddSelectionBox( ( byte )i' "Whatever"' ( short )zone.Bounds.XMin' ( short )zone.Bounds.ZMin' ( short )zone.Bounds.YMin'                      ( short )zone.Bounds.XMax' ( short )zone.Bounds.ZMax' ( short )zone.Bounds.YMax' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 ) ) );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send( Packet.MakeAddSelectionBox( ( byte )i' "Whatever"' ( short )zone.Bounds.XMin' ( short )zone.Bounds.ZMin' ( short )zone.Bounds.YMin'                      ( short )zone.Bounds.XMax' ( short )zone.Bounds.ZMax' ( short )zone.Bounds.YMax' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 ) ) );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send( Packet.MakeAddSelectionBox( ( byte )i' "Whatever"' ( short )zone.Bounds.XMin' ( short )zone.Bounds.ZMin' ( short )zone.Bounds.YMin'                      ( short )zone.Bounds.XMax' ( short )zone.Bounds.ZMax' ( short )zone.Bounds.YMax' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 ) ) );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send( Packet.MakeAddSelectionBox( ( byte )i' "Whatever"' ( short )zone.Bounds.XMin' ( short )zone.Bounds.ZMin' ( short )zone.Bounds.YMin'                      ( short )zone.Bounds.XMax' ( short )zone.Bounds.ZMax' ( short )zone.Bounds.YMax' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 )' ( short )rand.Next( 255 ) ) );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: PlayerInfo[] bannedPlayerNames = PlayerDB.FindPlayers( IP' 25 )                                                       .Where( playerFromSameIP => playerFromSameIP.IsBanned )                                                       .ToArray();
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: string smpPlayerName = Encoding.BigEndianUnicode.GetString( reader.ReadBytes( strLen * 2 ) );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: writer.Write( ( byte )255 );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: strLen >= 2 && strLen <= 16
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: strLen >= 2 && strLen <= 16
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ServeCfg,The following statement contains a magic number: bool firstTime = match.Groups[2].Success;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: chunkSize = 1024;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: chunkSize > 1024
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: byte progress = ( byte )( 100 * mapBytesSent / blockData.Length );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 1028;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 7;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: writer.WriteAddEntity( 255' this' map.Spawn );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 74;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: writer.WriteTeleport( 255' Position );
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 10;
Magic Number,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ReadString,The following statement contains a magic number: return Encoding.ASCII.GetString( reader.ReadBytes( 64 ) ).TrimEnd();
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtInfo,The following statement contains a magic number: Encoding.ASCII.GetBytes( VersionString.PadRight( 64 )' 0' 64' packet.Data' 1 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtInfo,The following statement contains a magic number: Encoding.ASCII.GetBytes( VersionString.PadRight( 64 )' 0' 64' packet.Data' 1 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtInfo,The following statement contains a magic number: ToNetOrder( extCount' packet.Data' 65 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtEntry,The following statement contains a magic number: Encoding.ASCII.GetBytes( name.PadRight( 64 )' 0' 64' packet.Data' 1 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtEntry,The following statement contains a magic number: Encoding.ASCII.GetBytes( name.PadRight( 64 )' 0' 64' packet.Data' 1 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtEntry,The following statement contains a magic number: ToNetOrder( version' packet.Data' 65 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: Encoding.ASCII.GetBytes( Label.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: Encoding.ASCII.GetBytes( Label.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: Encoding.ASCII.GetBytes( Label.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( StartX' packet.Data' 66 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( StartY' packet.Data' 68 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( StartZ' packet.Data' 70 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( EndX' packet.Data' 72 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( EndY' packet.Data' 74 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( EndZ' packet.Data' 76 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( R' packet.Data' 78 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( G' packet.Data' 80 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( B' packet.Data' 82 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder( A' packet.Data' 84 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeSetBlockPermission,The following statement contains a magic number: packet.Data[2] = ( byte )( canPlace ? 1 : 0 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeSetBlockPermission,The following statement contains a magic number: packet.Data[3] = ( byte )( canDelete ? 1 : 0 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr[offset] = ( byte )( ( number & 0xff00 ) >> 8 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr[offset] = ( byte )( ( number & 0xff000000 ) >> 24 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr[offset + 1] = ( byte )( ( number & 0x00ff0000 ) >> 16 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr[offset + 2] = ( byte )( ( number & 0x0000ff00 ) >> 8 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr[offset + 2] = ( byte )( ( number & 0x0000ff00 ) >> 8 );
Magic Number,fCraft,Packet,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr[offset + 3] = ( byte )( number & 0x000000ff );
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ResetSpawn,The following statement contains a magic number: Spawn = new Position( Width * 16'                                    Length * 16'                                    Math.Min( short.MaxValue' Height * 32 ) );
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ResetSpawn,The following statement contains a magic number: Spawn = new Position( Width * 16'                                    Length * 16'                                    Math.Min( short.MaxValue' Height * 32 ) );
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ResetSpawn,The following statement contains a magic number: Spawn = new Position( Width * 16'                                    Length * 16'                                    Math.Min( short.MaxValue' Height * 32 ) );
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The following statement contains a magic number: coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0 && ( byte )type < 50
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The following statement contains a magic number: Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The following statement contains a magic number: Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The following statement contains a magic number: Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidDimension,The following statement contains a magic number: return dimension >= 16 && dimension <= 2048;
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidDimension,The following statement contains a magic number: return dimension >= 16 && dimension <= 2048;
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IsRecommendedDimension,The following statement contains a magic number: return dimension >= 16 && ( dimension & ( dimension - 1 ) ) == 0 && dimension <= 1024;
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,IsRecommendedDimension,The following statement contains a magic number: return dimension >= 16 && ( dimension & ( dimension - 1 ) ) == 0 && dimension <= 1024;
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ConvertBlockTypes,The following statement contains a magic number: mapping.Length != 256
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ConvertBlockTypes,The following statement contains a magic number: ptr[j] > 49
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,GetCompressedCopy,The following statement contains a magic number: compressor.Write( BitConverter.GetBytes( convertedBlockCount )' 0' 4 );
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeFloodBarrier,The following statement contains a magic number: z < Height / 2
Magic Number,fCraft,Map,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,MakeFloodBarrier,The following statement contains a magic number: z < Height / 2
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: int n = _r.Next( 1' 4 );
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: double phi = _r.NextDouble() * 2 * Math.PI;
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: double ksi = _r.NextDouble() * Math.PI - Math.PI / 2.0;
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: _world.AddPhysicsTask( new Particle( _world' ( _pos + 2 * direction ).Round()' direction' _owner' Block.Obsidian' _particleBehavior )' 0 );
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: _map.GetBlock( ( _pos + 2 * direction ).Round() ) != Block.Obsidian
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: _owner.CanPlace( _map' ( _pos + 2 * direction ).Round()' Block.Obsidian' BlockChangeContext.Manual ) == CanPlaceResult.Allowed
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: mz < 2
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: my < 2
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: mx < 2
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: p.CanBeKilled() && p.Position.DistanceSquaredTo( ( new Vector3I( pt.X' pt.Y' pt.Z ) ).ToPlayerCoords() ) <= 64 * 64
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: p.CanBeKilled() && p.Position.DistanceSquaredTo( ( new Vector3I( pt.X' pt.Y' pt.Z ) ).ToPlayerCoords() ) <= 64 * 64
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: _world.AddPhysicsTask( new TNTTask( _world' new Vector3I( x' y' z )' _owner' false' _particles )' _r.Next( 150' 300 ) );
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: _world.AddPhysicsTask( new TNTTask( _world' new Vector3I( x' y' z )' _owner' false' _particles )' _r.Next( 150' 300 ) );
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: ( 0.2 + 0.75 * ( R - _currentR ) / R ) * 0.65 > _r.NextDouble()
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: ( 0.2 + 0.75 * ( R - _currentR ) / R ) * 0.65 > _r.NextDouble()
Magic Number,fCraft,TNTTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: ( 0.2 + 0.75 * ( R - _currentR ) / R ) * 0.65 > _r.NextDouble()
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_pos.X' ( short )_pos.Y' ( short )( _z - 2 )' Block.Air ) );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.Map.GetBlock( _pos.X' _pos.Y' _z - 2 ) == Block.Lava
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: int blockId = new Random().Next( 1' 9 );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = ( Block )rand.Next( 21' 33 );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = ( Block )rand.Next( 21' 33 );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: blockId <= 6
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = ( Block )rand.Next( 21' 33 );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = ( Block )rand.Next( 21' 33 );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: blockId >= 7
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.AddPhysicsTask( new FireworkParticle( _world' new Vector3I( X2' Y2' Z2 )' fBlock )' rand.Next( 1' 100 ) );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: rand.Next( 1' 50 ) < 3
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: rand.Next( 1' 50 ) < 3
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: Z2 <= ( _z + 5 )
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: Y2 <= ( _pos.Y + 5 )
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: X2 <= _pos.X + 5
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.Map.QueueUpdate( new BlockUpdate( null' ( short )_pos.X' ( short )_pos.Y' ( short )( _z - 2 )' Block.Air ) );
Magic Number,fCraft,Firework,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.Map.GetBlock( _pos.X' _pos.Y' _z - 2 ) == Block.Lava
Magic Number,fCraft,Life2d,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: Hash = ( int )216713671;
Magic Number,fCraft,Life2d,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: const int p = 16777619;
Magic Number,fCraft,Life2d,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: int h = i | ( j << 16 );
Magic Number,fCraft,Life2d,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,SetStateToRandom,The following statement contains a magic number: _a[i' j] = r.NextDouble() < 0.3 ? Normal : Nothing;
Magic Number,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next( 100' 401 );
Magic Number,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next( 100' 401 );
Magic Number,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next( 100' 401 );
Magic Number,fCraft,FireworkParticle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next( 100' 401 );
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The following statement contains a magic number: _stepDelay = behavior.ProcessingStepsPerSecond <= 0 || behavior.ProcessingStepsPerSecond > 20                              ? 50                              : 1000 / behavior.ProcessingStepsPerSecond;
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The following statement contains a magic number: _stepDelay = behavior.ProcessingStepsPerSecond <= 0 || behavior.ProcessingStepsPerSecond > 20                              ? 50                              : 1000 / behavior.ProcessingStepsPerSecond;
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The following statement contains a magic number: _stepDelay = behavior.ProcessingStepsPerSecond <= 0 || behavior.ProcessingStepsPerSecond > 20                              ? 50                              : 1000 / behavior.ProcessingStepsPerSecond;
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: ReferenceEquals( p' _owner ) && ( _startingPos - _pos ).LengthSquared <= 2 * 2
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: ReferenceEquals( p' _owner ) && ( _startingPos - _pos ).LengthSquared <= 2 * 2
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: p.CanBeKilled() && p.Position.DistanceSquaredTo( _pos.ToPlayerCoords() ) <= 33 * 33
Magic Number,fCraft,Particle,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: p.CanBeKilled() && p.Position.DistanceSquaredTo( _pos.ToPlayerCoords() ) <= 33 * 33
Magic Number,fCraft,ExplosionParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: world.AddPhysicsTask( new TNTTask( world' pos' owner' false' true )' _r.Next( 150' 300 ) );
Magic Number,fCraft,ExplosionParticleBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: world.AddPhysicsTask( new TNTTask( world' pos' owner' false' true )' _r.Next( 150' 300 ) );
Magic Number,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: z < pos.Z + 2
Magic Number,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CanPlacePortal,The following statement contains a magic number: Z < z + 2
Magic Number,fCraft,BulletBehavior,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CanPlacePortal,The following statement contains a magic number: Count == 2
Magic Number,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,Load,The following statement contains a magic number: SchedulerTask drownCheck = Scheduler.NewBackgroundTask( WaterPhysics.drownCheck ).RunForever( TimeSpan.FromSeconds( 3 ) );
Magic Number,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.FireworkCount > 10
Magic Number,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask( new TNTTask( world' e.Coords' e.Player' false' true )' 3000 );
Magic Number,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask( new SandTask( world' e.Coords' e.NewBlock )' 150 );
Magic Number,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask( new BlockFloat( world' e.Coords' e.NewBlock )' 200 );
Magic Number,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask( new BlockSink( world' e.Coords' e.NewBlock )' 200 );
Magic Number,fCraft,MinBinaryHeap<T;K>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PhysicsHeap.cs,ParentIdx,The following statement contains a magic number: return ( idx - 1 ) / 2;
Magic Number,fCraft,MinBinaryHeap<T;K>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PhysicsHeap.cs,Kids,The following statement contains a magic number: kid1 = 2 * idx + 1;
Magic Number,fCraft,PhysScheduler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PhysicsScheduler.cs,Stop,The following statement contains a magic number: _thread.Join( 10000 )
Magic Number,fCraft,PlantTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The following statement contains a magic number: short height = ( short )_r.Next( 4' 7 );
Magic Number,fCraft,PlantTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The following statement contains a magic number: short height = ( short )_r.Next( 4' 7 );
Magic Number,fCraft,PlantTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: y < _y + 5
Magic Number,fCraft,PlantTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: x < _x + 5
Magic Number,fCraft,TreeGeneration,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: int start = topy - 2;
Magic Number,fCraft,TreeGeneration,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: int end = topy + 2;
Magic Number,fCraft,TreeGeneration,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: Rand.NextDouble() > .618 &&                                  Math.Abs( xoff ) == Math.Abs( zoff ) &&                                  Math.Abs( xoff ) == rad
Magic Number,fCraft,TreeGeneration,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: yoff < 3
Magic Number,fCraft,TreeGeneration,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: xoff < 3
Magic Number,fCraft,WaterPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: Position pos = new Position(                                  ( short )( p.Position.X / 32 )'                                  ( short )( p.Position.Y / 32 )'                                  ( short )( ( p.Position.Z + 1 ) / 32 )                              );
Magic Number,fCraft,WaterPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: Position pos = new Position(                                  ( short )( p.Position.X / 32 )'                                  ( short )( p.Position.Y / 32 )'                                  ( short )( ( p.Position.Z + 1 ) / 32 )                              );
Magic Number,fCraft,WaterPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: Position pos = new Position(                                  ( short )( p.Position.X / 32 )'                                  ( short )( p.Position.Y / 32 )'                                  ( short )( ( p.Position.Z + 1 ) / 32 )                              );
Magic Number,fCraft,WaterPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: p.DrownTime == null || ( DateTime.UtcNow - p.DrownTime ).TotalSeconds > 33
Magic Number,fCraft,WaterPhysics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: ( DateTime.UtcNow - p.DrownTime ).TotalSeconds > 30
Magic Number,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,The following statement contains a magic number: output.Append( message' lastAppendedIndex' startIndex - lastAppendedIndex - 2 );
Magic Number,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: output.Append( message' lastAppendedIndex' startIndex - lastAppendedIndex - 2 );
Magic Number,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch ( message[0] ) {                  case '/':                      if ( message.Length < 2 ) {                          // message too short to be a command                          return RawMessageType.Invalid;                      }                      if ( message[1] == '/' ) {                          // escaped slash in the beginning: "//blah"                          return RawMessageType.Chat;                      }                      if ( message[1] != ' ' ) {                          // normal command: "/cmd"                          return RawMessageType.Command;                      }                      return RawMessageType.Invalid;                    case '@':                      if ( message.Length < 4 || message.IndexOf( ' ' ) == -1 ) {                          // message too short to be a PM or rank chat                          return RawMessageType.Invalid;                      }                      if ( message[1] == '@' ) {                          return RawMessageType.RankChat;                      }                      if ( message[1] == '-' && message[2] == ' ' ) {                          // name shortcut: "@- blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] == ' ' && message.IndexOf( ' '' 2 ) != -1 ) {                          // alternative PM notation: "@ name blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] != ' ' ) {                          // primary PM notation: "@name blah"                          return RawMessageType.PrivateChat;                      }                      return RawMessageType.Invalid;              }
Magic Number,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch ( message[0] ) {                  case '/':                      if ( message.Length < 2 ) {                          // message too short to be a command                          return RawMessageType.Invalid;                      }                      if ( message[1] == '/' ) {                          // escaped slash in the beginning: "//blah"                          return RawMessageType.Chat;                      }                      if ( message[1] != ' ' ) {                          // normal command: "/cmd"                          return RawMessageType.Command;                      }                      return RawMessageType.Invalid;                    case '@':                      if ( message.Length < 4 || message.IndexOf( ' ' ) == -1 ) {                          // message too short to be a PM or rank chat                          return RawMessageType.Invalid;                      }                      if ( message[1] == '@' ) {                          return RawMessageType.RankChat;                      }                      if ( message[1] == '-' && message[2] == ' ' ) {                          // name shortcut: "@- blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] == ' ' && message.IndexOf( ' '' 2 ) != -1 ) {                          // alternative PM notation: "@ name blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] != ' ' ) {                          // primary PM notation: "@name blah"                          return RawMessageType.PrivateChat;                      }                      return RawMessageType.Invalid;              }
Magic Number,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch ( message[0] ) {                  case '/':                      if ( message.Length < 2 ) {                          // message too short to be a command                          return RawMessageType.Invalid;                      }                      if ( message[1] == '/' ) {                          // escaped slash in the beginning: "//blah"                          return RawMessageType.Chat;                      }                      if ( message[1] != ' ' ) {                          // normal command: "/cmd"                          return RawMessageType.Command;                      }                      return RawMessageType.Invalid;                    case '@':                      if ( message.Length < 4 || message.IndexOf( ' ' ) == -1 ) {                          // message too short to be a PM or rank chat                          return RawMessageType.Invalid;                      }                      if ( message[1] == '@' ) {                          return RawMessageType.RankChat;                      }                      if ( message[1] == '-' && message[2] == ' ' ) {                          // name shortcut: "@- blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] == ' ' && message.IndexOf( ' '' 2 ) != -1 ) {                          // alternative PM notation: "@ name blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] != ' ' ) {                          // primary PM notation: "@name blah"                          return RawMessageType.PrivateChat;                      }                      return RawMessageType.Invalid;              }
Magic Number,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch ( message[0] ) {                  case '/':                      if ( message.Length < 2 ) {                          // message too short to be a command                          return RawMessageType.Invalid;                      }                      if ( message[1] == '/' ) {                          // escaped slash in the beginning: "//blah"                          return RawMessageType.Chat;                      }                      if ( message[1] != ' ' ) {                          // normal command: "/cmd"                          return RawMessageType.Command;                      }                      return RawMessageType.Invalid;                    case '@':                      if ( message.Length < 4 || message.IndexOf( ' ' ) == -1 ) {                          // message too short to be a PM or rank chat                          return RawMessageType.Invalid;                      }                      if ( message[1] == '@' ) {                          return RawMessageType.RankChat;                      }                      if ( message[1] == '-' && message[2] == ' ' ) {                          // name shortcut: "@- blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] == ' ' && message.IndexOf( ' '' 2 ) != -1 ) {                          // alternative PM notation: "@ name blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] != ' ' ) {                          // primary PM notation: "@name blah"                          return RawMessageType.PrivateChat;                      }                      return RawMessageType.Invalid;              }
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,RunCompatibilityChecks,The following statement contains a magic number: loadedVersion < 4
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,IdentifyFormatVersion,The following statement contains a magic number: headerParts.Length < 2
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,IdentifyFormatVersion,The following statement contains a magic number: maxIDField >= 255
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,StartSaveTask,The following statement contains a magic number: saveTask = Scheduler.NewBackgroundTask( SaveTask )                                  .RunForever( SaveInterval' SaveInterval + TimeSpan.FromSeconds( 15 ) );
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayersCidr,The following statement contains a magic number: range > 32
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayersCidr,The following statement contains a magic number: range > 32
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The following statement contains a magic number: player.TotalTime.TotalMinutes > 30 || player.TimeSinceLastSeen.TotalDays < 30
Magic Number,fCraft,PlayerDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The following statement contains a magic number: player.TotalTime.TotalMinutes > 30 || player.TimeSinceLastSeen.TotalDays < 30
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.Rank = Rank.Parse( fields[2] ) ?? RankManager.DefaultRank;
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[3].ToDateTime( ref info.RankChangeDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.RankChangedBy = fields[4];
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[4].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: switch ( fields[5] ) {                  case "b":                      info.BanStatus = BanStatus.Banned;                      break;                    case "x":                      info.BanStatus = BanStatus.IPBanExempt;                      break;                    default:                      info.BanStatus = BanStatus.NotBanned;                      break;              }
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.BannedBy = Unescape( fields[7] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[7].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.BanReason = Unescape( fields[10] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[10].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[6].ToDateTime( ref info.BanDate )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.UnbannedBy = Unescape( fields[9] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[9].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.UnbanReason = Unescape( fields[11] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[11].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[8].ToDateTime( ref info.UnbanDate )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[12].ToDateTime( ref info.LastFailedLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[13].Length > 1 || !IPAddress.TryParse( fields[13]' out info.LastFailedLoginIP )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[13].Length > 1 || !IPAddress.TryParse( fields[13]' out info.LastFailedLoginIP )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.MojangAccount = fields[14];
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[14].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[15].ToDateTime( ref info.FirstLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[16].ToDateTime( ref info.LastLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[17].ToTimeSpan( out info.TotalTime );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[18]' out info.BlocksBuilt );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[18].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[19]' out info.BlocksDeleted );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[19].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[20]' out info.TimesVisited );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[21]' out info.MessagesWritten );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[20].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[22]' out info.PromoCount );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.TitleName = fields[23].ToString();
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[23].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.PreviousRank = Rank.Parse( fields[24] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[24].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.RankChangeReason = Unescape( fields[25] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[25].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[26]' out info.TimesKicked );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[27]' out info.TimesKickedOthers );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[28]' out info.TimesBannedOthers );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.ID = Int32.Parse( fields[29] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.ID < 256
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Byte.TryParse( fields[30]' out rankChangeTypeCode )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[31].ToDateTime( ref info.LastKickDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: !fields[32].ToDateTime( ref info.LastSeen ) || info.LastSeen < info.LastLoginDate
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int64.TryParse( fields[33]' out info.BlocksDrawn );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.LastKickBy = Unescape( fields[34] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[34].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.LastKickReason = Unescape( fields[35] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[35].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[36].ToDateTime( ref info.BannedUntil );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.IsFrozen = ( fields[37] == "f" );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.FrozenBy = Unescape( fields[38] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[38].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[39].ToDateTime( ref info.FrozenOn );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[40].ToDateTime( ref info.MutedUntil );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.MutedBy = Unescape( fields[41] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[41].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.Password = Unescape( fields[42] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Byte.TryParse( fields[44]' out bandwidthUseModeCode )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[45].Length == 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields.Length > 45
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields[46].ToDateTime( ref info.LastModified );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields.Length > 46
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.DisplayedName = Unescape( fields[47] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields.Length > 47 && fields[47].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields.Length > 47 && fields[47].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.Rank = Rank.Parse( fields[2] ) ?? RankManager.DefaultRank;
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[3].ToDateTimeLegacy( ref info.RankChangeDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.RankChangedBy = fields[4];
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[4].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: switch ( fields[5] ) {                  case "b":                      info.BanStatus = BanStatus.Banned;                      break;                    case "x":                      info.BanStatus = BanStatus.IPBanExempt;                      break;                    default:                      info.BanStatus = BanStatus.NotBanned;                      break;              }
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.BannedBy = Unescape( fields[7] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[7].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.BanReason = Unescape( fields[10] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[10].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[6].ToDateTimeLegacy( ref info.BanDate )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.UnbannedBy = Unescape( fields[9] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[9].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.UnbanReason = Unescape( fields[11] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[11].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[8].ToDateTimeLegacy( ref info.UnbanDate )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[12].ToDateTimeLegacy( ref info.LastFailedLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[13].Length > 1 || !IPAddress.TryParse( fields[13]' out info.LastFailedLoginIP )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[13].Length > 1 || !IPAddress.TryParse( fields[13]' out info.LastFailedLoginIP )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[15].ToDateTimeLegacy( ref info.FirstLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[16].ToDateTimeLegacy( ref info.LastLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[17].ToTimeSpanLegacy( ref info.TotalTime );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[18]' out info.BlocksBuilt );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[18].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[19]' out info.BlocksDeleted );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[19].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[20]' out info.TimesVisited );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[21]' out info.MessagesWritten );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[20].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.PreviousRank = Rank.Parse( fields[24] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[24].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.RankChangeReason = Unescape( fields[25] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[25].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[26]' out info.TimesKicked );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[27]' out info.TimesKickedOthers );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[28]' out info.TimesBannedOthers );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.ID = Int32.Parse( fields[29] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.ID < 256
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Byte.TryParse( fields[30]' out rankChangeTypeCode )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[31].ToDateTimeLegacy( ref info.LastKickDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: !fields[32].ToDateTimeLegacy( ref info.LastSeen ) || info.LastSeen < info.LastLoginDate
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int64.TryParse( fields[33]' out info.BlocksDrawn );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.LastKickBy = Unescape( fields[34] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[34].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.LastKickReason = Unescape( fields[35] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[34].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[36].ToDateTimeLegacy( ref info.BannedUntil );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.IsFrozen = ( fields[37] == "f" );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.FrozenBy = Unescape( fields[38] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[38].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[39].ToDateTimeLegacy( ref info.FrozenOn );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[40].ToDateTimeLegacy( ref info.MutedUntil );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.MutedBy = Unescape( fields[41] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[41].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.Password = Unescape( fields[42] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Byte.TryParse( fields[44]' out bandwidthUseModeCode )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields[45].Length == 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields.Length > 45
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.Rank = Rank.Parse( fields[2] ) ?? RankManager.DefaultRank;
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[3]' out info.RankChangeDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.RankChangedBy = fields[4];
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[4].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: switch ( fields[5] ) {                  case "b":                      info.BanStatus = BanStatus.Banned;                      break;                    case "x":                      info.BanStatus = BanStatus.IPBanExempt;                      break;                    default:                      info.BanStatus = BanStatus.NotBanned;                      break;              }
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.BannedBy = fields[7];
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[7].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.BanReason = UnescapeOldFormat( fields[10] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[10].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[6]' out info.BanDate )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.UnbannedBy = fields[9];
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[9].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.UnbanReason = UnescapeOldFormat( fields[11] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[11].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[8]' out info.UnbanDate )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[12]' out info.LastFailedLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[12].Length > 1
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[13].Length > 1 || !IPAddress.TryParse( fields[13]' out info.LastFailedLoginIP )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[13].Length > 1 || !IPAddress.TryParse( fields[13]' out info.LastFailedLoginIP )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[15]' out info.FirstLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[16]' out info.LastLoginDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: TimeSpan.TryParse( fields[17]' out info.TotalTime );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[18]' out info.BlocksBuilt );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[18].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[19]' out info.BlocksDeleted );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[19].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[20]' out info.TimesVisited );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[21]' out info.MessagesWritten );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[20].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.PreviousRank = Rank.Parse( fields[24] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[24].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.RankChangeReason = UnescapeOldFormat( fields[25] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[25].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[26]' out info.TimesKicked );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[27]' out info.TimesKickedOthers );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse( fields[28]' out info.TimesBannedOthers );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.ID = Int32.Parse( fields[29] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.ID < 256
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Byte.TryParse( fields[30]' out rankChangeTypeCode )
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[31]' out info.LastKickDate );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: !DateTimeUtil.TryParseLocalDate( fields[32]' out info.LastSeen ) || info.LastSeen < info.LastLoginDate
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int64.TryParse( fields[33]' out info.BlocksDrawn );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.LastKickBy = UnescapeOldFormat( fields[34] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[34].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.LastKickReason = UnescapeOldFormat( fields[35] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[35].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields.Length > 29
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[36]' out info.BannedUntil );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.IsFrozen = ( fields[37] == "f" );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.FrozenBy = UnescapeOldFormat( fields[38] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[38].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[39]' out info.FrozenOn );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[40]' out info.MutedUntil );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.MutedBy = UnescapeOldFormat( fields[41] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[41].Length > 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.Password = UnescapeOldFormat( fields[42] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields.Length > 36
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.BandwidthUseMode = ( BandwidthUseMode )Int32.Parse( fields[44] );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields[44].Length != 0
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: fields.Length > 44
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,The following statement contains a magic number: info.LastFailedLoginIP = new IPAddress( reader.ReadBytes( 4 ) );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,The following statement contains a magic number: info.LastIP = new IPAddress( reader.ReadBytes( 4 ) );
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Read7BitEncodedInt,The following statement contains a magic number: num2 += 7;
Magic Number,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Write7BitEncodedInt,The following statement contains a magic number: num = num >> 7;
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,GetFixed,The following statement contains a magic number: return new Position {                  X = ( X )'                  Y = ( Y )'                  Z = ( short )( Z - 22 )'                  R = R'                  L = L              };
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I( ( X - 16 ) / 32' ( Y - 16 ) / 32' ( Z - 16 ) / 32 );
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I( ( X - 16 ) / 32' ( Y - 16 ) / 32' ( Z - 16 ) / 32 );
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I( ( X - 16 ) / 32' ( Y - 16 ) / 32' ( Z - 16 ) / 32 );
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I( ( X - 16 ) / 32' ( Y - 16 ) / 32' ( Z - 16 ) / 32 );
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I( ( X - 16 ) / 32' ( Y - 16 ) / 32' ( Z - 16 ) / 32 );
Magic Number,fCraft,Position,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I( ( X - 16 ) / 32' ( Y - 16 ) / 32' ( Z - 16 ) / 32 );
Magic Number,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: value >= 0 && value < 1000
Magic Number,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: value >= 0 && value < 100
Magic Number,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: value >= 0 && value < 100000000
Magic Number,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: value > 0 && value < 256
Magic Number,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidRankName,The following statement contains a magic number: rankName.Length < 1 || rankName.Length > 16
Magic Number,fCraft,Rank,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidID,The following statement contains a magic number: id.Length != 16
Magic Number,fCraft,RankManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\RankManager.cs,GenerateID,The following statement contains a magic number: return Server.GetRandomString( 16 );
Magic Number,fCraft,Bot,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: time += 0.03 / 2;
Magic Number,fCraft,Bot,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: time += 0.03 / 2;
Magic Number,fCraft,Bot,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: time >= 6
Magic Number,fCraft,Bot,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: heading = 64;
Magic Number,fCraft,Bot,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: time < 3
Magic Number,fCraft,Scheduler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Scheduler.cs,MainLoop,The following statement contains a magic number: Thread.Sleep( 10 );
Magic Number,fCraft,Scheduler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Scheduler.cs,BackgroundLoop,The following statement contains a magic number: Thread.Sleep( 10 );
Magic Number,fCraft,PlayerProximityTracker,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,FindPlayersAtDistance,The following statement contains a magic number: d *= d * 32 * 32;
Magic Number,fCraft,PlayerProximityTracker,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,FindPlayersAtDistance,The following statement contains a magic number: d *= d * 32 * 32;
Magic Number,fCraft,Vector3F,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3F.cs,GetHashCode,The following statement contains a magic number: return ( int )( X + Y * 1625 + Z * 2642245 );
Magic Number,fCraft,Vector3F,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3F.cs,GetHashCode,The following statement contains a magic number: return ( int )( X + Y * 1625 + Z * 2642245 );
Magic Number,fCraft,Vector3F,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3F.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( ( int )( X * 32 )' ( int )( Y * 32 )' ( int )( Z * 32 ) );
Magic Number,fCraft,Vector3F,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3F.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( ( int )( X * 32 )' ( int )( Y * 32 )' ( int )( Z * 32 ) );
Magic Number,fCraft,Vector3F,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3F.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( ( int )( X * 32 )' ( int )( Y * 32 )' ( int )( Z * 32 ) );
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,SendRawMessage,The following statement contains a magic number: int maxContentLength = MaxMessageSize - prefix.Length - suffix.Length - userHostLength - 3 - maxNickLength;
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,SendRawMessage,The following statement contains a magic number: int length = Math.Min( line.Length - offset' maxContentLength - 2 );
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: switch ( replycode ) {                      case IRCReplyCode.Welcome:                      case IRCReplyCode.YourHost:                      case IRCReplyCode.Created:                      case IRCReplyCode.MyInfo:                      case IRCReplyCode.Bounce:                          return IRCMessageType.Login;                      case IRCReplyCode.StatsConn:                      case IRCReplyCode.LocalUsers:                      case IRCReplyCode.GlobalUsers:                      case IRCReplyCode.LuserClient:                      case IRCReplyCode.LuserOp:                      case IRCReplyCode.LuserUnknown:                      case IRCReplyCode.LuserMe:                      case IRCReplyCode.LuserChannels:                          return IRCMessageType.Info;                      case IRCReplyCode.MotdStart:                      case IRCReplyCode.Motd:                      case IRCReplyCode.EndOfMotd:                          return IRCMessageType.Motd;                      case IRCReplyCode.NamesReply:                      case IRCReplyCode.EndOfNames:                          return IRCMessageType.Name;                      case IRCReplyCode.WhoReply:                      case IRCReplyCode.EndOfWho:                          return IRCMessageType.Who;                      case IRCReplyCode.ListStart:                      case IRCReplyCode.List:                      case IRCReplyCode.ListEnd:                          return IRCMessageType.List;                      case IRCReplyCode.BanList:                      case IRCReplyCode.EndOfBanList:                          return IRCMessageType.BanList;                      case IRCReplyCode.Topic:                      case IRCReplyCode.TopicSetBy:                      case IRCReplyCode.NoTopic:                          return IRCMessageType.Topic;                      case IRCReplyCode.WhoIsUser:                      case IRCReplyCode.WhoIsServer:                      case IRCReplyCode.WhoIsOperator:                      case IRCReplyCode.WhoIsIdle:                      case IRCReplyCode.WhoIsChannels:                      case IRCReplyCode.EndOfWhoIs:                          return IRCMessageType.WhoIs;                      case IRCReplyCode.WhoWasUser:                      case IRCReplyCode.EndOfWhoWas:                          return IRCMessageType.WhoWas;                      case IRCReplyCode.UserModeIs:                          return IRCMessageType.UserMode;                      case IRCReplyCode.ChannelModeIs:                          return IRCMessageType.ChannelMode;                      default:                          if ( ( ( int )replycode >= 400 ) &&                              ( ( int )replycode <= 599 ) ) {                              return IRCMessageType.ErrorMessage;                          } else {                              return IRCMessageType.Unknown;                          }                  }
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: switch ( replycode ) {                      case IRCReplyCode.Welcome:                      case IRCReplyCode.YourHost:                      case IRCReplyCode.Created:                      case IRCReplyCode.MyInfo:                      case IRCReplyCode.Bounce:                          return IRCMessageType.Login;                      case IRCReplyCode.StatsConn:                      case IRCReplyCode.LocalUsers:                      case IRCReplyCode.GlobalUsers:                      case IRCReplyCode.LuserClient:                      case IRCReplyCode.LuserOp:                      case IRCReplyCode.LuserUnknown:                      case IRCReplyCode.LuserMe:                      case IRCReplyCode.LuserChannels:                          return IRCMessageType.Info;                      case IRCReplyCode.MotdStart:                      case IRCReplyCode.Motd:                      case IRCReplyCode.EndOfMotd:                          return IRCMessageType.Motd;                      case IRCReplyCode.NamesReply:                      case IRCReplyCode.EndOfNames:                          return IRCMessageType.Name;                      case IRCReplyCode.WhoReply:                      case IRCReplyCode.EndOfWho:                          return IRCMessageType.Who;                      case IRCReplyCode.ListStart:                      case IRCReplyCode.List:                      case IRCReplyCode.ListEnd:                          return IRCMessageType.List;                      case IRCReplyCode.BanList:                      case IRCReplyCode.EndOfBanList:                          return IRCMessageType.BanList;                      case IRCReplyCode.Topic:                      case IRCReplyCode.TopicSetBy:                      case IRCReplyCode.NoTopic:                          return IRCMessageType.Topic;                      case IRCReplyCode.WhoIsUser:                      case IRCReplyCode.WhoIsServer:                      case IRCReplyCode.WhoIsOperator:                      case IRCReplyCode.WhoIsIdle:                      case IRCReplyCode.WhoIsChannels:                      case IRCReplyCode.EndOfWhoIs:                          return IRCMessageType.WhoIs;                      case IRCReplyCode.WhoWasUser:                      case IRCReplyCode.EndOfWhoWas:                          return IRCMessageType.WhoWas;                      case IRCReplyCode.UserModeIs:                          return IRCMessageType.UserMode;                      case IRCReplyCode.ChannelModeIs:                          return IRCMessageType.ChannelMode;                      default:                          if ( ( ( int )replycode >= 400 ) &&                              ( ( int )replycode <= 599 ) ) {                              return IRCMessageType.ErrorMessage;                          } else {                              return IRCMessageType.Unknown;                          }                  }
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: switch ( type ) {                  case IRCMessageType.Join:                  case IRCMessageType.Kick:                  case IRCMessageType.Part:                  case IRCMessageType.TopicChange:                  case IRCMessageType.ChannelModeChange:                  case IRCMessageType.ChannelMessage:                  case IRCMessageType.ChannelAction:                  case IRCMessageType.ChannelNotice:                      channel = linear[2];                      break;                    case IRCMessageType.Who:                  case IRCMessageType.Topic:                  case IRCMessageType.Invite:                  case IRCMessageType.BanList:                  case IRCMessageType.ChannelMode:                      channel = linear[3];                      break;                    case IRCMessageType.Name:                      channel = linear[4];                      break;              }
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: switch ( type ) {                  case IRCMessageType.Join:                  case IRCMessageType.Kick:                  case IRCMessageType.Part:                  case IRCMessageType.TopicChange:                  case IRCMessageType.ChannelModeChange:                  case IRCMessageType.ChannelMessage:                  case IRCMessageType.ChannelAction:                  case IRCMessageType.ChannelNotice:                      channel = linear[2];                      break;                    case IRCMessageType.Who:                  case IRCMessageType.Topic:                  case IRCMessageType.Invite:                  case IRCMessageType.BanList:                  case IRCMessageType.ChannelMode:                      channel = linear[3];                      break;                    case IRCMessageType.Name:                      channel = linear[4];                      break;              }
Magic Number,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: switch ( type ) {                  case IRCMessageType.Join:                  case IRCMessageType.Kick:                  case IRCMessageType.Part:                  case IRCMessageType.TopicChange:                  case IRCMessageType.ChannelModeChange:                  case IRCMessageType.ChannelMessage:                  case IRCMessageType.ChannelAction:                  case IRCMessageType.ChannelNotice:                      channel = linear[2];                      break;                    case IRCMessageType.Who:                  case IRCMessageType.Topic:                  case IRCMessageType.Invite:                  case IRCMessageType.BanList:                  case IRCMessageType.ChannelMode:                      channel = linear[3];                      break;                    case IRCMessageType.Name:                      channel = linear[4];                      break;              }
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,IoThread,The following statement contains a magic number: Send( IRCCommands.User( ActualBotNick' 8' ConfigKey.ServerName.GetString() ) );
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,IoThread,The following statement contains a magic number: Thread.Sleep( 10 );
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,HandleMessage,The following statement contains a magic number: switch ( msg.Type ) {                      case IRCMessageType.Login:                          if ( msg.ReplyCode == IRCReplyCode.Welcome ) {                              if ( ConfigKey.IRCRegisteredNick.Enabled() ) {                                  Send( IRCCommands.Privmsg( ConfigKey.IRCNickServ.GetString()'                                                             ConfigKey.IRCNickServMessage.GetString() ) );                              }                              foreach ( string channel in channelNames ) {                                  Send( IRCCommands.Join( channel ) );                              }                              IsReady = true;                              Send( IRCCommands.Userhost( ActualBotNick ) );                              AssignBotForInputParsing(); // bot should be ready to receive input after joining                          } else if ( msg.ReplyCode == IRCReplyCode.Bounce ) {                              Match nickLenMatch = MaxNickLengthRegex.Match( msg.Message );                              int maxNickLengthTemp;                              if ( nickLenMatch.Success && Int32.TryParse( nickLenMatch.Groups[1].Value' out maxNickLengthTemp ) ) {                                  maxNickLength = maxNickLengthTemp;                              }                          }                          return;                        case IRCMessageType.Ping:                          // ping-pong                          Send( IRCCommands.Pong( msg.RawMessageArray[1].Substring( 1 ) ) );                          return;                        case IRCMessageType.ChannelAction:                      case IRCMessageType.ChannelMessage:                          // channel chat                          if ( !ResponsibleForInputParsing )                              return;                          if ( !IsBotNick( msg.Nick ) ) {                              string processedMessage = msg.Message;                              if ( msg.Type == IRCMessageType.ChannelAction ) {                                  if ( processedMessage.StartsWith( "\u0001ACTION" ) ) {                                      processedMessage = processedMessage.Substring( 8 );                                  } else {                                      return;                                  }                              }                                processedMessage = ProcessMessageFromIRC( processedMessage );                                if ( processedMessage.Length > 0 ) {                                  if ( ConfigKey.IRCBotForwardFromIRC.Enabled() ) {                                      if ( msg.Type == IRCMessageType.ChannelAction ) {                                          Server.Message( "&i(IRC) * {0} {1}"'                                                          msg.Nick' processedMessage );                                      } else {                                          Server.Message( "&i(IRC) {0}{1}: {2}"'                                                          msg.Nick' Color.White' processedMessage );                                      }                                  } else if ( msg.Message.StartsWith( "#" ) ) {                                      Server.Message( "&i(IRC) {0}{1}: {2}"'                                                      msg.Nick' Color.White' processedMessage.Substring( 1 ) );                                  }                              }                          }                          return;                        case IRCMessageType.Join:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} joined {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.Kick:                          string kicked = msg.RawMessageArray[3];                          if ( kicked == ActualBotNick ) {                              Thread.Sleep( ReconnectDelay );                              Send( IRCCommands.Join( msg.Channel ) );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              string kickMessage = ProcessMessageFromIRC( msg.Message );                              Server.Message( "&i(IRC) {0} kicked {1} from {2} ({3})"'                                              msg.Nick' kicked' msg.Channel' kickMessage );                          }                          return;                        case IRCMessageType.Part:                      case IRCMessageType.Quit:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} left {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.NickChange:                          if ( msg.Nick == ActualBotNick ) {                              ActualBotNick = msg.Message;                              nickTry = 0;                              Logger.Log( LogType.IRC'                                          "Bot was forcefully renamed from {0} to {1}"'                                          msg.Nick' msg.Message );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              Server.Message( "&i(IRC) {0} is now known as {1}"'                                              msg.Nick' msg.Message );                          }                          return;                        case IRCMessageType.ErrorMessage:                      case IRCMessageType.Error:                          bool die = false;                          switch ( msg.ReplyCode ) {                              case IRCReplyCode.ErrorNicknameInUse:                              case IRCReplyCode.ErrorNicknameCollision:                                  string oldActualBotNick = ActualBotNick;                                  if ( ActualBotNick.Length < maxNickLength ) {                                      ActualBotNick += "_";                                  } else {                                      nickTry++;                                      if ( desiredBotNick.Length + nickTry / 10 + 1 > maxNickLength ) {                                          ActualBotNick = desiredBotNick.Substring( 0' maxNickLength - nickTry / 10 - 1 ) + nickTry;                                      } else {                                          ActualBotNick = desiredBotNick + nickTry;                                      }                                  }                                  Logger.Log( LogType.IRC'                                              "Error: Nickname \"{0}\" is already in use. Trying \"{1}\""'                                              oldActualBotNick' ActualBotNick );                                  Send( IRCCommands.Nick( ActualBotNick ) );                                  Send( IRCCommands.Userhost( ActualBotNick ) );                                  break;                                case IRCReplyCode.ErrorBannedFromChannel:                              case IRCReplyCode.ErrorNoSuchChannel:                                  Logger.Log( LogType.IRC'                                              "Error: {0} ({1})"'                                              msg.ReplyCode' msg.Channel );                                  die = true;                                  break;                                case IRCReplyCode.ErrorBadChannelKey:                                  Logger.Log( LogType.IRC'                                              "Error: Channel password required for {0}. fCraft does not currently support passworded channels."'                                              msg.Channel );                                  die = true;                                  break;                                default:                                  Logger.Log( LogType.IRC'                                              "Error ({0}): {1}"'                                              msg.ReplyCode' msg.RawMessage );                                  break;                          }                            if ( die ) {                              Logger.Log( LogType.IRC' "Error: Disconnecting." );                              reconnect = false;                              DisconnectThread();                          }                            return;                        case IRCMessageType.QueryAction:                          // TODO: PMs                          Logger.Log( LogType.IRC'                                      "Query: {0}"' msg.RawMessage );                          break;                        case IRCMessageType.Kill:                          Logger.Log( LogType.IRC'                                      "Bot was killed from {0} by {1} ({2})' reconnecting."'                                      hostName' msg.Nick' msg.Message );                          reconnect = true;                          isConnected = false;                          return;                        case IRCMessageType.Unknown:                          if ( msg.ReplyCode == IRCReplyCode.UserHost ) {                              Match match = UserHostRegex.Match( msg.Message );                              if ( match.Success ) {                                  userHostLength = match.Groups[1].Length;                              }                          }                          return;                  }
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,HandleMessage,The following statement contains a magic number: switch ( msg.Type ) {                      case IRCMessageType.Login:                          if ( msg.ReplyCode == IRCReplyCode.Welcome ) {                              if ( ConfigKey.IRCRegisteredNick.Enabled() ) {                                  Send( IRCCommands.Privmsg( ConfigKey.IRCNickServ.GetString()'                                                             ConfigKey.IRCNickServMessage.GetString() ) );                              }                              foreach ( string channel in channelNames ) {                                  Send( IRCCommands.Join( channel ) );                              }                              IsReady = true;                              Send( IRCCommands.Userhost( ActualBotNick ) );                              AssignBotForInputParsing(); // bot should be ready to receive input after joining                          } else if ( msg.ReplyCode == IRCReplyCode.Bounce ) {                              Match nickLenMatch = MaxNickLengthRegex.Match( msg.Message );                              int maxNickLengthTemp;                              if ( nickLenMatch.Success && Int32.TryParse( nickLenMatch.Groups[1].Value' out maxNickLengthTemp ) ) {                                  maxNickLength = maxNickLengthTemp;                              }                          }                          return;                        case IRCMessageType.Ping:                          // ping-pong                          Send( IRCCommands.Pong( msg.RawMessageArray[1].Substring( 1 ) ) );                          return;                        case IRCMessageType.ChannelAction:                      case IRCMessageType.ChannelMessage:                          // channel chat                          if ( !ResponsibleForInputParsing )                              return;                          if ( !IsBotNick( msg.Nick ) ) {                              string processedMessage = msg.Message;                              if ( msg.Type == IRCMessageType.ChannelAction ) {                                  if ( processedMessage.StartsWith( "\u0001ACTION" ) ) {                                      processedMessage = processedMessage.Substring( 8 );                                  } else {                                      return;                                  }                              }                                processedMessage = ProcessMessageFromIRC( processedMessage );                                if ( processedMessage.Length > 0 ) {                                  if ( ConfigKey.IRCBotForwardFromIRC.Enabled() ) {                                      if ( msg.Type == IRCMessageType.ChannelAction ) {                                          Server.Message( "&i(IRC) * {0} {1}"'                                                          msg.Nick' processedMessage );                                      } else {                                          Server.Message( "&i(IRC) {0}{1}: {2}"'                                                          msg.Nick' Color.White' processedMessage );                                      }                                  } else if ( msg.Message.StartsWith( "#" ) ) {                                      Server.Message( "&i(IRC) {0}{1}: {2}"'                                                      msg.Nick' Color.White' processedMessage.Substring( 1 ) );                                  }                              }                          }                          return;                        case IRCMessageType.Join:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} joined {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.Kick:                          string kicked = msg.RawMessageArray[3];                          if ( kicked == ActualBotNick ) {                              Thread.Sleep( ReconnectDelay );                              Send( IRCCommands.Join( msg.Channel ) );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              string kickMessage = ProcessMessageFromIRC( msg.Message );                              Server.Message( "&i(IRC) {0} kicked {1} from {2} ({3})"'                                              msg.Nick' kicked' msg.Channel' kickMessage );                          }                          return;                        case IRCMessageType.Part:                      case IRCMessageType.Quit:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} left {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.NickChange:                          if ( msg.Nick == ActualBotNick ) {                              ActualBotNick = msg.Message;                              nickTry = 0;                              Logger.Log( LogType.IRC'                                          "Bot was forcefully renamed from {0} to {1}"'                                          msg.Nick' msg.Message );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              Server.Message( "&i(IRC) {0} is now known as {1}"'                                              msg.Nick' msg.Message );                          }                          return;                        case IRCMessageType.ErrorMessage:                      case IRCMessageType.Error:                          bool die = false;                          switch ( msg.ReplyCode ) {                              case IRCReplyCode.ErrorNicknameInUse:                              case IRCReplyCode.ErrorNicknameCollision:                                  string oldActualBotNick = ActualBotNick;                                  if ( ActualBotNick.Length < maxNickLength ) {                                      ActualBotNick += "_";                                  } else {                                      nickTry++;                                      if ( desiredBotNick.Length + nickTry / 10 + 1 > maxNickLength ) {                                          ActualBotNick = desiredBotNick.Substring( 0' maxNickLength - nickTry / 10 - 1 ) + nickTry;                                      } else {                                          ActualBotNick = desiredBotNick + nickTry;                                      }                                  }                                  Logger.Log( LogType.IRC'                                              "Error: Nickname \"{0}\" is already in use. Trying \"{1}\""'                                              oldActualBotNick' ActualBotNick );                                  Send( IRCCommands.Nick( ActualBotNick ) );                                  Send( IRCCommands.Userhost( ActualBotNick ) );                                  break;                                case IRCReplyCode.ErrorBannedFromChannel:                              case IRCReplyCode.ErrorNoSuchChannel:                                  Logger.Log( LogType.IRC'                                              "Error: {0} ({1})"'                                              msg.ReplyCode' msg.Channel );                                  die = true;                                  break;                                case IRCReplyCode.ErrorBadChannelKey:                                  Logger.Log( LogType.IRC'                                              "Error: Channel password required for {0}. fCraft does not currently support passworded channels."'                                              msg.Channel );                                  die = true;                                  break;                                default:                                  Logger.Log( LogType.IRC'                                              "Error ({0}): {1}"'                                              msg.ReplyCode' msg.RawMessage );                                  break;                          }                            if ( die ) {                              Logger.Log( LogType.IRC' "Error: Disconnecting." );                              reconnect = false;                              DisconnectThread();                          }                            return;                        case IRCMessageType.QueryAction:                          // TODO: PMs                          Logger.Log( LogType.IRC'                                      "Query: {0}"' msg.RawMessage );                          break;                        case IRCMessageType.Kill:                          Logger.Log( LogType.IRC'                                      "Bot was killed from {0} by {1} ({2})' reconnecting."'                                      hostName' msg.Nick' msg.Message );                          reconnect = true;                          isConnected = false;                          return;                        case IRCMessageType.Unknown:                          if ( msg.ReplyCode == IRCReplyCode.UserHost ) {                              Match match = UserHostRegex.Match( msg.Message );                              if ( match.Success ) {                                  userHostLength = match.Groups[1].Length;                              }                          }                          return;                  }
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,HandleMessage,The following statement contains a magic number: switch ( msg.Type ) {                      case IRCMessageType.Login:                          if ( msg.ReplyCode == IRCReplyCode.Welcome ) {                              if ( ConfigKey.IRCRegisteredNick.Enabled() ) {                                  Send( IRCCommands.Privmsg( ConfigKey.IRCNickServ.GetString()'                                                             ConfigKey.IRCNickServMessage.GetString() ) );                              }                              foreach ( string channel in channelNames ) {                                  Send( IRCCommands.Join( channel ) );                              }                              IsReady = true;                              Send( IRCCommands.Userhost( ActualBotNick ) );                              AssignBotForInputParsing(); // bot should be ready to receive input after joining                          } else if ( msg.ReplyCode == IRCReplyCode.Bounce ) {                              Match nickLenMatch = MaxNickLengthRegex.Match( msg.Message );                              int maxNickLengthTemp;                              if ( nickLenMatch.Success && Int32.TryParse( nickLenMatch.Groups[1].Value' out maxNickLengthTemp ) ) {                                  maxNickLength = maxNickLengthTemp;                              }                          }                          return;                        case IRCMessageType.Ping:                          // ping-pong                          Send( IRCCommands.Pong( msg.RawMessageArray[1].Substring( 1 ) ) );                          return;                        case IRCMessageType.ChannelAction:                      case IRCMessageType.ChannelMessage:                          // channel chat                          if ( !ResponsibleForInputParsing )                              return;                          if ( !IsBotNick( msg.Nick ) ) {                              string processedMessage = msg.Message;                              if ( msg.Type == IRCMessageType.ChannelAction ) {                                  if ( processedMessage.StartsWith( "\u0001ACTION" ) ) {                                      processedMessage = processedMessage.Substring( 8 );                                  } else {                                      return;                                  }                              }                                processedMessage = ProcessMessageFromIRC( processedMessage );                                if ( processedMessage.Length > 0 ) {                                  if ( ConfigKey.IRCBotForwardFromIRC.Enabled() ) {                                      if ( msg.Type == IRCMessageType.ChannelAction ) {                                          Server.Message( "&i(IRC) * {0} {1}"'                                                          msg.Nick' processedMessage );                                      } else {                                          Server.Message( "&i(IRC) {0}{1}: {2}"'                                                          msg.Nick' Color.White' processedMessage );                                      }                                  } else if ( msg.Message.StartsWith( "#" ) ) {                                      Server.Message( "&i(IRC) {0}{1}: {2}"'                                                      msg.Nick' Color.White' processedMessage.Substring( 1 ) );                                  }                              }                          }                          return;                        case IRCMessageType.Join:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} joined {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.Kick:                          string kicked = msg.RawMessageArray[3];                          if ( kicked == ActualBotNick ) {                              Thread.Sleep( ReconnectDelay );                              Send( IRCCommands.Join( msg.Channel ) );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              string kickMessage = ProcessMessageFromIRC( msg.Message );                              Server.Message( "&i(IRC) {0} kicked {1} from {2} ({3})"'                                              msg.Nick' kicked' msg.Channel' kickMessage );                          }                          return;                        case IRCMessageType.Part:                      case IRCMessageType.Quit:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} left {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.NickChange:                          if ( msg.Nick == ActualBotNick ) {                              ActualBotNick = msg.Message;                              nickTry = 0;                              Logger.Log( LogType.IRC'                                          "Bot was forcefully renamed from {0} to {1}"'                                          msg.Nick' msg.Message );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              Server.Message( "&i(IRC) {0} is now known as {1}"'                                              msg.Nick' msg.Message );                          }                          return;                        case IRCMessageType.ErrorMessage:                      case IRCMessageType.Error:                          bool die = false;                          switch ( msg.ReplyCode ) {                              case IRCReplyCode.ErrorNicknameInUse:                              case IRCReplyCode.ErrorNicknameCollision:                                  string oldActualBotNick = ActualBotNick;                                  if ( ActualBotNick.Length < maxNickLength ) {                                      ActualBotNick += "_";                                  } else {                                      nickTry++;                                      if ( desiredBotNick.Length + nickTry / 10 + 1 > maxNickLength ) {                                          ActualBotNick = desiredBotNick.Substring( 0' maxNickLength - nickTry / 10 - 1 ) + nickTry;                                      } else {                                          ActualBotNick = desiredBotNick + nickTry;                                      }                                  }                                  Logger.Log( LogType.IRC'                                              "Error: Nickname \"{0}\" is already in use. Trying \"{1}\""'                                              oldActualBotNick' ActualBotNick );                                  Send( IRCCommands.Nick( ActualBotNick ) );                                  Send( IRCCommands.Userhost( ActualBotNick ) );                                  break;                                case IRCReplyCode.ErrorBannedFromChannel:                              case IRCReplyCode.ErrorNoSuchChannel:                                  Logger.Log( LogType.IRC'                                              "Error: {0} ({1})"'                                              msg.ReplyCode' msg.Channel );                                  die = true;                                  break;                                case IRCReplyCode.ErrorBadChannelKey:                                  Logger.Log( LogType.IRC'                                              "Error: Channel password required for {0}. fCraft does not currently support passworded channels."'                                              msg.Channel );                                  die = true;                                  break;                                default:                                  Logger.Log( LogType.IRC'                                              "Error ({0}): {1}"'                                              msg.ReplyCode' msg.RawMessage );                                  break;                          }                            if ( die ) {                              Logger.Log( LogType.IRC' "Error: Disconnecting." );                              reconnect = false;                              DisconnectThread();                          }                            return;                        case IRCMessageType.QueryAction:                          // TODO: PMs                          Logger.Log( LogType.IRC'                                      "Query: {0}"' msg.RawMessage );                          break;                        case IRCMessageType.Kill:                          Logger.Log( LogType.IRC'                                      "Bot was killed from {0} by {1} ({2})' reconnecting."'                                      hostName' msg.Nick' msg.Message );                          reconnect = true;                          isConnected = false;                          return;                        case IRCMessageType.Unknown:                          if ( msg.ReplyCode == IRCReplyCode.UserHost ) {                              Match match = UserHostRegex.Match( msg.Message );                              if ( match.Success ) {                                  userHostLength = match.Groups[1].Length;                              }                          }                          return;                  }
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,HandleMessage,The following statement contains a magic number: switch ( msg.Type ) {                      case IRCMessageType.Login:                          if ( msg.ReplyCode == IRCReplyCode.Welcome ) {                              if ( ConfigKey.IRCRegisteredNick.Enabled() ) {                                  Send( IRCCommands.Privmsg( ConfigKey.IRCNickServ.GetString()'                                                             ConfigKey.IRCNickServMessage.GetString() ) );                              }                              foreach ( string channel in channelNames ) {                                  Send( IRCCommands.Join( channel ) );                              }                              IsReady = true;                              Send( IRCCommands.Userhost( ActualBotNick ) );                              AssignBotForInputParsing(); // bot should be ready to receive input after joining                          } else if ( msg.ReplyCode == IRCReplyCode.Bounce ) {                              Match nickLenMatch = MaxNickLengthRegex.Match( msg.Message );                              int maxNickLengthTemp;                              if ( nickLenMatch.Success && Int32.TryParse( nickLenMatch.Groups[1].Value' out maxNickLengthTemp ) ) {                                  maxNickLength = maxNickLengthTemp;                              }                          }                          return;                        case IRCMessageType.Ping:                          // ping-pong                          Send( IRCCommands.Pong( msg.RawMessageArray[1].Substring( 1 ) ) );                          return;                        case IRCMessageType.ChannelAction:                      case IRCMessageType.ChannelMessage:                          // channel chat                          if ( !ResponsibleForInputParsing )                              return;                          if ( !IsBotNick( msg.Nick ) ) {                              string processedMessage = msg.Message;                              if ( msg.Type == IRCMessageType.ChannelAction ) {                                  if ( processedMessage.StartsWith( "\u0001ACTION" ) ) {                                      processedMessage = processedMessage.Substring( 8 );                                  } else {                                      return;                                  }                              }                                processedMessage = ProcessMessageFromIRC( processedMessage );                                if ( processedMessage.Length > 0 ) {                                  if ( ConfigKey.IRCBotForwardFromIRC.Enabled() ) {                                      if ( msg.Type == IRCMessageType.ChannelAction ) {                                          Server.Message( "&i(IRC) * {0} {1}"'                                                          msg.Nick' processedMessage );                                      } else {                                          Server.Message( "&i(IRC) {0}{1}: {2}"'                                                          msg.Nick' Color.White' processedMessage );                                      }                                  } else if ( msg.Message.StartsWith( "#" ) ) {                                      Server.Message( "&i(IRC) {0}{1}: {2}"'                                                      msg.Nick' Color.White' processedMessage.Substring( 1 ) );                                  }                              }                          }                          return;                        case IRCMessageType.Join:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} joined {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.Kick:                          string kicked = msg.RawMessageArray[3];                          if ( kicked == ActualBotNick ) {                              Thread.Sleep( ReconnectDelay );                              Send( IRCCommands.Join( msg.Channel ) );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              string kickMessage = ProcessMessageFromIRC( msg.Message );                              Server.Message( "&i(IRC) {0} kicked {1} from {2} ({3})"'                                              msg.Nick' kicked' msg.Channel' kickMessage );                          }                          return;                        case IRCMessageType.Part:                      case IRCMessageType.Quit:                          if ( !ResponsibleForInputParsing )                              return;                          if ( ConfigKey.IRCBotAnnounceIRCJoins.Enabled() ) {                              Server.Message( "&i(IRC) {0} left {1}"'                                              msg.Nick' msg.Channel );                          }                          return;                        case IRCMessageType.NickChange:                          if ( msg.Nick == ActualBotNick ) {                              ActualBotNick = msg.Message;                              nickTry = 0;                              Logger.Log( LogType.IRC'                                          "Bot was forcefully renamed from {0} to {1}"'                                          msg.Nick' msg.Message );                          } else {                              if ( !ResponsibleForInputParsing )                                  return;                              Server.Message( "&i(IRC) {0} is now known as {1}"'                                              msg.Nick' msg.Message );                          }                          return;                        case IRCMessageType.ErrorMessage:                      case IRCMessageType.Error:                          bool die = false;                          switch ( msg.ReplyCode ) {                              case IRCReplyCode.ErrorNicknameInUse:                              case IRCReplyCode.ErrorNicknameCollision:                                  string oldActualBotNick = ActualBotNick;                                  if ( ActualBotNick.Length < maxNickLength ) {                                      ActualBotNick += "_";                                  } else {                                      nickTry++;                                      if ( desiredBotNick.Length + nickTry / 10 + 1 > maxNickLength ) {                                          ActualBotNick = desiredBotNick.Substring( 0' maxNickLength - nickTry / 10 - 1 ) + nickTry;                                      } else {                                          ActualBotNick = desiredBotNick + nickTry;                                      }                                  }                                  Logger.Log( LogType.IRC'                                              "Error: Nickname \"{0}\" is already in use. Trying \"{1}\""'                                              oldActualBotNick' ActualBotNick );                                  Send( IRCCommands.Nick( ActualBotNick ) );                                  Send( IRCCommands.Userhost( ActualBotNick ) );                                  break;                                case IRCReplyCode.ErrorBannedFromChannel:                              case IRCReplyCode.ErrorNoSuchChannel:                                  Logger.Log( LogType.IRC'                                              "Error: {0} ({1})"'                                              msg.ReplyCode' msg.Channel );                                  die = true;                                  break;                                case IRCReplyCode.ErrorBadChannelKey:                                  Logger.Log( LogType.IRC'                                              "Error: Channel password required for {0}. fCraft does not currently support passworded channels."'                                              msg.Channel );                                  die = true;                                  break;                                default:                                  Logger.Log( LogType.IRC'                                              "Error ({0}): {1}"'                                              msg.ReplyCode' msg.RawMessage );                                  break;                          }                            if ( die ) {                              Logger.Log( LogType.IRC' "Error: Disconnecting." );                              reconnect = false;                              DisconnectThread();                          }                            return;                        case IRCMessageType.QueryAction:                          // TODO: PMs                          Logger.Log( LogType.IRC'                                      "Query: {0}"' msg.RawMessage );                          break;                        case IRCMessageType.Kill:                          Logger.Log( LogType.IRC'                                      "Bot was killed from {0} by {1} ({2})' reconnecting."'                                      hostName' msg.Nick' msg.Message );                          reconnect = true;                          isConnected = false;                          return;                        case IRCMessageType.Unknown:                          if ( msg.ReplyCode == IRCReplyCode.UserHost ) {                              Match match = UserHostRegex.Match( msg.Message );                              if ( match.Success ) {                                  userHostLength = match.Groups[1].Length;                              }                          }                          return;                  }
Magic Number,fCraft,IRCThread,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,DisconnectThread,The following statement contains a magic number: thread.Join( 1000 );
Magic Number,fCraft,IPBanList,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: switch ( version ) {                                      case 0:                                          ban = IPBanInfo.LoadFormat0( fields' true );                                          break;                                        case 1:                                          ban = IPBanInfo.LoadFormat1( fields );                                          break;                                        case 2:                                          ban = IPBanInfo.LoadFormat2( fields );                                          break;                                        default:                                          return;                                  }
Magic Number,fCraft,BoundingBox,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,BoundingBox,The following statement contains a magic number: int y1 = Int32.Parse( coords[2] );
Magic Number,fCraft,BoundingBox,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,BoundingBox,The following statement contains a magic number: int y2 = Int32.Parse( coords[3] );
Magic Number,fCraft,BoundingBox,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,BoundingBox,The following statement contains a magic number: int z1 = Int32.Parse( coords[4] );
Magic Number,fCraft,BoundingBox,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,BoundingBox,The following statement contains a magic number: int z2 = Int32.Parse( coords[5] );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateCosine,The following statement contains a magic number: double f = ( 1 - Math.Cos( x * Math.PI ) ) * .5;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a0 = -0.5f * v0 + 1.5f * v1 - 1.5f * v2 + 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a0 = -0.5f * v0 + 1.5f * v1 - 1.5f * v2 + 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a0 = -0.5f * v0 + 1.5f * v1 - 1.5f * v2 + 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a0 = -0.5f * v0 + 1.5f * v1 - 1.5f * v2 + 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a1 = v0 - 2.5f * v1 + 2 * v2 - 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a1 = v0 - 2.5f * v1 + 2 * v2 - 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a1 = v0 - 2.5f * v1 + 2 * v2 - 0.5f * v3;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a2 = -0.5f * v0 + 0.5f * v2;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The following statement contains a magic number: float a2 = -0.5f * v0 + 0.5f * v2;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: n = ( n << 13 ) ^ n;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: int n = Seed + x + y * 1625 + z * 2642245;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: int n = Seed + x + y * 1625 + z * 2642245;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: n = ( n << 13 ) ^ n;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return ( float )( 1.0 - ( ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF ) / 1073741824d );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch ( InterpolationMode ) {                  case NoiseInterpolationMode.Linear:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateLinear( InterpolateLinear( p00' p10' xFloat )' InterpolateLinear( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Cosine:                      p00 = StaticNoise( xInt' yInt );                      p01 = StaticNoise( xInt' yInt + 1 );                      p10 = StaticNoise( xInt + 1' yInt );                      p11 = StaticNoise( xInt + 1' yInt + 1 );                      return InterpolateCosine( InterpolateCosine( p00' p10' xFloat )' InterpolateCosine( p01' p11' xFloat )' yFloat );                    case NoiseInterpolationMode.Bicubic:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateCubic( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateCubic( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateCubic( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateCubic( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateCubic( p00' p01' p10' p11' yFloat );                    case NoiseInterpolationMode.Spline:                      for ( int xOffset = -1; xOffset < 3; xOffset++ ) {                          for ( int yOffset = -1; yOffset < 3; yOffset++ ) {                              points[xOffset + 1' yOffset + 1] = StaticNoise( xInt + xOffset' yInt + yOffset );                          }                      }                      p00 = InterpolateSpline( points[0' 0]' points[1' 0]' points[2' 0]' points[3' 0]' xFloat );                      p01 = InterpolateSpline( points[0' 1]' points[1' 1]' points[2' 1]' points[3' 1]' xFloat );                      p10 = InterpolateSpline( points[0' 2]' points[1' 2]' points[2' 2]' points[3' 2]' xFloat );                      p11 = InterpolateSpline( points[0' 3]' points[1' 3]' points[2' 3]' points[3' 3]' xFloat );                      return InterpolateSpline( p00' p01' p10' p11' yFloat );                    default:                      throw new ArgumentException();              }
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: float frequency = ( float )Math.Pow( 2' startOctave );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: frequency *= 2;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: float frequency = ( float )Math.Pow( 2' startOctave );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: frequency *= 2;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: float maxDim = 1f / Math.Max( map.GetLength( 0 )' Math.Max( map.GetLength( 2 )' map.GetLength( 1 ) ) );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,Normalize,The following statement contains a magic number: int length = map.GetLength( 0 ) * map.GetLength( 1 ) * map.GetLength( 2 );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: ptr[i] = Math.Abs( ptr[i] * 2 - 1 );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: ptr[i] = Math.Abs( ptr[i] * 2 - 1 );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: float maxX = 2f / data.GetLength( 0 );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: float maxY = 2f / data.GetLength( 1 );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: int offsetX = data.GetLength( 0 ) / 2;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: int offsetY = data.GetLength( 1 ) / 2;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x' y] += InterpolateCosine( c00' ( c00 + c01 ) / 2' ( c00 + c10 ) / 2' midpoint' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x' y] += InterpolateCosine( c00' ( c00 + c01 ) / 2' ( c00 + c10 ) / 2' midpoint' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x + offsetX' y] += InterpolateCosine( ( c00 + c10 ) / 2' midpoint' c10' ( c11 + c10 ) / 2' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x + offsetX' y] += InterpolateCosine( ( c00 + c10 ) / 2' midpoint' c10' ( c11 + c10 ) / 2' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x' y + offsetY] += InterpolateCosine( ( c00 + c01 ) / 2' c01' midpoint' ( c01 + c11 ) / 2' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x' y + offsetY] += InterpolateCosine( ( c00 + c01 ) / 2' c01' midpoint' ( c01 + c11 ) / 2' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x + offsetX' y + offsetY] += InterpolateCosine( midpoint' ( c01 + c11 ) / 2' ( c11 + c10 ) / 2' c11' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data[x + offsetX' y + offsetY] += InterpolateCosine( midpoint' ( c01 + c11 ) / 2' ( c11 + c10 ) / 2' c11' x * maxX' y * maxY );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,ScaleAndClip,The following statement contains a magic number: ptr[i] = Math.Min( 1' Math.Max( 0' ptr[i] * steepness * 2 - steepness ) );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: ( x < 2 ) || ( y < 2 ) || ( x > heightmap.GetLength( 0 ) - 3 ) || ( y > heightmap.GetLength( 1 ) - 3 )
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: ( x < 2 ) || ( y < 2 ) || ( x > heightmap.GetLength( 0 ) - 3 ) || ( y > heightmap.GetLength( 1 ) - 3 )
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: ( x < 2 ) || ( y < 2 ) || ( x > heightmap.GetLength( 0 ) - 3 ) || ( y > heightmap.GetLength( 1 ) - 3 )
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: ( x < 2 ) || ( y < 2 ) || ( x > heightmap.GetLength( 0 ) - 3 ) || ( y > heightmap.GetLength( 1 ) - 3 )
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: float threshold = 0.5f;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: threshold = threshold - 1 / ( float )( 4 << i );
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: float threshold = 0.5f;
Magic Number,fCraft,Noise,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: threshold = threshold - 1 / ( float )( 4 << i );
Magic Number,fCraft,Updater,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,Updater,The following statement contains a magic number: UpdateCheckTimeout = 4000;
Magic Number,fCraft,Updater,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,UpdateCheck,The following statement contains a magic number: stream.ReadTimeout = 1000;
Magic Number,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,GetName,The following statement contains a magic number: index >= 0 && index <= 15
Magic Number,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,The following statement contains a magic number: index >= 0 && index <= 15
Magic Number,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,The following statement contains a magic number: switch ( color.Length ) {                  case 2:                      if ( color[0] == '&' && IsValidColorCode( color[1] ) ) {                          return color;                      }                      break;                    case 1:                      return Parse( color[0] );                    case 0:                      return "";              }
Magic Number,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: color.Length == 2 && color[0] == '&'
Magic Number,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,The following statement contains a magic number: switch ( Char.ToLower( sb[i] ) ) {                          case 's':                              sb[i] = Sys[1];                              break;                            case 'y':                              sb[i] = Say[1];                              break;                            case 'p':                              sb[i] = PM[1];                              break;                            case 'r':                              sb[i] = Announcement[1];                              break;                            case 'h':                              sb[i] = Help[1];                              break;                            case 'w':                              sb[i] = Warning[1];                              break;                            case 'm':                              sb[i] = Me[1];                              break;                            case 'i':                              sb[i] = IRC[1];                              break;                            default:                              if ( !IsValidColorCode( sb[i] ) ) {                                  sb.Remove( i - 1' 2 );                              }                              break;                      }
Magic Number,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Heartbeat,The following statement contains a magic number: Delay = TimeSpan.FromSeconds( 25 );
Magic Number,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Heartbeat,The following statement contains a magic number: Timeout = TimeSpan.FromSeconds( 10 );
Magic Number,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Heartbeat,The following statement contains a magic number: Salt = Server.GetRandomString( 32 );
Magic Number,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The following statement contains a magic number: request.Timeout = 3000;
Magic Number,fCraft,Heartbeat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The following statement contains a magic number: request.Timeout = 3000;
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argKeyName = arg.Substring( 2' arg.IndexOf( '=' ) - 2 ).ToLower().Trim();
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argKeyName = arg.Substring( 2' arg.IndexOf( '=' ) - 2 ).ToLower().Trim();
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argValue = argValue.Substring( 1' argValue.Length - 2 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,StartServer,The following statement contains a magic number: gcTask = Scheduler.NewTask( DoGC ).RunForever( GCInterval' TimeSpan.FromSeconds( 45 ) );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,The following statement contains a magic number: Thread.Sleep( 1000 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,DoGC,The following statement contains a magic number: long usageBefore = proc.PrivateMemorySize64 / ( 1024 * 1024 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,DoGC,The following statement contains a magic number: long usageBefore = proc.PrivateMemorySize64 / ( 1024 * 1024 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,DoGC,The following statement contains a magic number: long usageAfter = proc.PrivateMemorySize64 / ( 1024 * 1024 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,DoGC,The following statement contains a magic number: long usageAfter = proc.PrivateMemorySize64 / ( 1024 * 1024 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,VerifyName,The following statement contains a magic number: hash.Length < 32
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,VerifyName,The following statement contains a magic number: StringBuilder sb = new StringBuilder( 32 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,CalculateMaxPacketsPerUpdate,The following statement contains a magic number: int maxPacketsPerUpdate = ( int )( MaxUploadSpeed / TicksPerSecond * 128 );
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: oneChar[0] >= 48 && oneChar[0] <= 57 ||                      oneChar[0] >= 65 && oneChar[0] <= 90 ||                      oneChar[0] >= 97 && oneChar[0] <= 122
Magic Number,fCraft,Server,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Server.cs,CheckExternalIP,The following statement contains a magic number: int startIndex = responseString.IndexOf(":"' System.StringComparison.Ordinal) + 2;
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The following statement contains a magic number: switch ( key ) {                  case ConfigKey.AnnouncementColor:                      Color.Announcement = Color.Parse( key.GetString() );                      break;                    case ConfigKey.AntispamInterval:                      Player.AntispamInterval = key.GetInt();                      break;                    case ConfigKey.AntispamMessageCount:                      Player.AntispamMessageCount = key.GetInt();                      break;                    case ConfigKey.DefaultBuildRank:                      RankManager.DefaultBuildRank = Rank.Parse( key.GetString() );                      break;                    case ConfigKey.DefaultRank:                      RankManager.DefaultRank = Rank.Parse( key.GetString() );                      break;                    case ConfigKey.BandwidthUseMode:                      Player[] playerListCache = Server.Players;                      if ( playerListCache != null ) {                          foreach ( Player p in playerListCache ) {                              if ( p.BandwidthUseMode == BandwidthUseMode.Default ) {                                  // resets the use tweaks                                  p.BandwidthUseMode = BandwidthUseMode.Default;                              }                          }                      }                      break;                    case ConfigKey.BlockDBAutoEnableRank:                      RankManager.BlockDBAutoEnableRank = Rank.Parse( key.GetString() );                      if ( BlockDB.IsEnabledGlobally ) {                          World[] worldListCache = WorldManager.Worlds;                          foreach ( World world in worldListCache ) {                              if ( world.BlockDB.AutoToggleIfNeeded() ) {                                  if ( world.BlockDB.IsEnabled ) {                                      Logger.Log( LogType.SystemActivity'                                                  "BlockDB is now auto-enabled on world {0}"' world.Name );                                  } else {                                      Logger.Log( LogType.SystemActivity'                                                  "BlockDB is now auto-disabled on world {0}"' world.Name );                                  }                              }                          }                      }                      break;                    case ConfigKey.BlockUpdateThrottling:                      Server.BlockUpdateThrottling = key.GetInt();                      break;                    case ConfigKey.ConsoleName:                      if ( Player.Console != null ) {                          Player.Console.Info.Name = key.GetString();                      }                      break;                    case ConfigKey.DefaultBackupInterval:                      // TODO: update SchedulerTasks                      WorldManager.DefaultBackupInterval = new TimeSpan( TimeSpan.TicksPerSecond * key.GetInt() );                      break;                    case ConfigKey.HelpColor:                      Color.Help = Color.Parse( key.GetString() );                      break;                    case ConfigKey.IRCDelay:                      IRC.SendDelay = key.GetInt();                      break;                    case ConfigKey.IRCMessageColor:                      Color.IRC = Color.Parse( key.GetString() );                      break;                    case ConfigKey.LogMode:                      Logger.SplittingType = key.GetEnum<LogSplittingType>();                      break;                    case ConfigKey.MapPath:                      if ( !Paths.IgnoreMapPathConfigKey && GetString( ConfigKey.MapPath ).Length > 0 ) {                          if ( Paths.TestDirectory( "MapPath"' GetString( ConfigKey.MapPath )' true ) ) {                              Paths.MapPath = Path.GetFullPath( GetString( ConfigKey.MapPath ) );                          }                      }                      break;                    case ConfigKey.MaxUndo:                      BuildingCommands.MaxUndoCount = key.GetInt();                      break;                    case ConfigKey.MeColor:                      Color.Me = Color.Parse( key.GetString() );                      break;                    case ConfigKey.NoPartialPositionUpdates:                      if ( key.Enabled() ) {                          Player.FullPositionUpdateInterval = 0;                      } else {                          Player.FullPositionUpdateInterval = Player.FullPositionUpdateIntervalDefault;                      }                      break;                    case ConfigKey.PatrolledRank:                      RankManager.PatrolledRank = Rank.Parse( key.GetString() );                      break;                    case ConfigKey.PrivateMessageColor:                      Color.PM = Color.Parse( key.GetString() );                      break;                    case ConfigKey.RelayAllBlockUpdates:                      Player.RelayAllUpdates = key.Enabled();                      break;                    case ConfigKey.SayColor:                      Color.Say = Color.Parse( key.GetString() );                      break;                    case ConfigKey.SystemMessageColor:                      Color.Sys = Color.Parse( key.GetString() );                      break;                    case ConfigKey.CustomChatColor:                      Color.Custom = Color.Parse( key.GetString() );                      break;                    case ConfigKey.TickInterval:                      Server.TicksPerSecond = 1000 / ( float )key.GetInt();                      break;                    case ConfigKey.UploadBandwidth:                      Server.MaxUploadSpeed = key.GetInt();                      break;                    case ConfigKey.WarningColor:                      Color.Warning = Color.Parse( key.GetString() );                      break;              }
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: owner.Add( new XAttribute( "rank"' 100 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: owner.Add( new XAttribute( "fillLimit"' 2048 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: owner.Add( new XAttribute( "copySlots"' 4 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: op.Add( new XAttribute( "rank"' 80 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: op.Add( new XAttribute( "fillLimit"' 512 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: op.Add( new XAttribute( "copySlots"' 3 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add( new XAttribute( "rank"' 30 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add( new XAttribute( "drawLimit"' 8000 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add( new XAttribute( "antiGriefBlocks"' 47 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add( new XAttribute( "antiGriefSeconds"' 6 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add( new XAttribute( "idleKickAfter"' 20 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add( new XAttribute( "drawLimit"' 512 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add( new XAttribute( "antiGriefBlocks"' 37 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add( new XAttribute( "antiGriefSeconds"' 5 ) );
Magic Number,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add( new XAttribute( "idleKickAfter"' 20 ) );
Magic Number,fCraft,Logger,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The following statement contains a magic number: request.Timeout = 15000;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,Write,The following statement contains a magic number: str.Length > 64
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,Write,The following statement contains a magic number: Write( Encoding.ASCII.GetBytes( str.PadRight( 64 ) ) );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,WriteMapChunk,The following statement contains a magic number: Write( chunk' 0' 1024 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes( serverName.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes( serverName.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes( serverName.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes( motd.PadRight( 64 )' 0' 64' packet.Data' 66 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes( motd.PadRight( 64 )' 0' 64' packet.Data' 66 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes( motd.PadRight( 64 )' 0' 64' packet.Data' 66 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: packet.Data[130] = ( byte )( player.Can( Permission.DeleteAdmincrete ) ? 100 : 0 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: packet.Data[130] = ( byte )( player.Can( Permission.DeleteAdmincrete ) ? 100 : 0 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMessage,The following statement contains a magic number: Encoding.ASCII.GetBytes( message.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMessage,The following statement contains a magic number: Encoding.ASCII.GetBytes( message.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMessage,The following statement contains a magic number: Encoding.ASCII.GetBytes( message.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: Encoding.ASCII.GetBytes( name.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: Encoding.ASCII.GetBytes( name.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: Encoding.ASCII.GetBytes( name.PadRight( 64 )' 0' 64' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: ToNetOrder( pos.X' packet.Data' 66 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: ToNetOrder( pos.Z' packet.Data' 68 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: ToNetOrder( pos.Y' packet.Data' 70 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: packet.Data[72] = pos.R;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: packet.Data[73] = pos.L;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeDisconnect,The following statement contains a magic number: Encoding.ASCII.GetBytes( reason.PadRight( 64 )' 0' 64' packet.Data' 1 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeDisconnect,The following statement contains a magic number: Encoding.ASCII.GetBytes( reason.PadRight( 64 )' 0' 64' packet.Data' 1 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: ToNetOrder( pos.X' packet.Data' 2 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: ToNetOrder( pos.Z' packet.Data' 4 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: ToNetOrder( pos.Y' packet.Data' 6 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: packet.Data[8] = pos.R;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: packet.Data[9] = pos.L;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSelfTeleport,The following statement contains a magic number: return MakeTeleport( 255' pos.GetFixed() );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data[2] = ( byte )( pos.X & 0xFF );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data[3] = ( byte )( pos.Z & 0xFF );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data[4] = ( byte )( pos.Y & 0xFF );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data[5] = pos.R;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data[6] = pos.L;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMove,The following statement contains a magic number: packet.Data[2] = ( byte )pos.X;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMove,The following statement contains a magic number: packet.Data[3] = ( byte )pos.Z;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMove,The following statement contains a magic number: packet.Data[4] = ( byte )pos.Y;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeRotate,The following statement contains a magic number: packet.Data[2] = pos.R;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeRotate,The following statement contains a magic number: packet.Data[3] = pos.L;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder( z' packet.Data' 3 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder( y' packet.Data' 5 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: packet.Data[7] = ( byte )type;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder( coords.Z' packet.Data' 3 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder( coords.Y' packet.Data' 5 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: packet.Data[7] = ( byte )type;
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetPermission,The following statement contains a magic number: packet.Data[1] = ( byte )( player.Can( Permission.DeleteAdmincrete ) ? 100 : 0 );
Magic Number,fCraft,PacketWriter,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\PacketWriter.cs,ToNetOrder,The following statement contains a magic number: arr[offset] = ( byte )( ( number & 0xff00 ) >> 8 );
Magic Number,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,CodeToChar,The following statement contains a magic number: code < 26
Magic Number,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,CodeToChar,The following statement contains a magic number: code >= 26 && code < 36
Magic Number,fCraft,Trie<T>,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Trie.cs,CodeToChar,The following statement contains a magic number: code >= 26 && code < 36
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,FindRandomTreeLocation,The following statement contains a magic number: int padding = ( int )( height / 3f + 1 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,FindRandomTreeLocation,The following statement contains a magic number: padding = ( int )( mindim / 2.2 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,FindRandomTreeLocation,The following statement contains a magic number: padding > mindim / 2.2
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: const int shortTreeFraction = 6;
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: float randomfac =                      ( float )( ( Math.Sqrt( args.Rand.NextDouble() ) * 1.618 - .618 ) * args.HeightVariation + .5 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: float randomfac =                      ( float )( ( Math.Sqrt( args.Rand.NextDouble() ) * 1.618 - .618 ) * args.HeightVariation + .5 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: float randomfac =                      ( float )( ( Math.Sqrt( args.Rand.NextDouble() ) * 1.618 - .618 ) * args.HeightVariation + .5 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: int tallz = otherLoc[2];
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: float dist = ( float )Math.Sqrt( Sqr( tallx - xyz.X + .5 ) + Sqr( tallz - xyz.Z + .5 ) );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: float dist = ( float )Math.Sqrt( Sqr( tallx - xyz.X + .5 ) + Sqr( tallz - xyz.Z + .5 ) );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: float threshold = ( otherheight + height ) * .193f;
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: int padding = ( int )( height / 3f + 1 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: padding = ( int )( mindim / 2.2 );
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: padding > mindim / 2.2
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: dist > height * .618 || dist == 0
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: y += ( int )Math.Sqrt( height - dist ) + 2;
Magic Number,fCraft,Forester,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: foliageHeight = 2;
Magic Number,fCraft,NormalTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: int start = topy - 2;
Magic Number,fCraft,NormalTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: int end = topy + 2;
Magic Number,fCraft,NormalTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: Args.Rand.NextDouble() > .618 &&                                  Math.Abs( xoff ) == Math.Abs( zoff ) &&                                  Math.Abs( xoff ) == rad
Magic Number,fCraft,NormalTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: Args.PlaceBlock( Pos[0] + xoff' Pos[2] + zoff' y' Args.FoliageBlock );
Magic Number,fCraft,BambooTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: int xoff = Args.Rand.Next( 0' 2 ) * 2 - 1;
Magic Number,fCraft,BambooTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: int xoff = Args.Rand.Next( 0' 2 ) * 2 - 1;
Magic Number,fCraft,BambooTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: int zoff = Args.Rand.Next( 0' 2 ) * 2 - 1;
Magic Number,fCraft,BambooTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: int zoff = Args.Rand.Next( 0' 2 ) * 2 - 1;
Magic Number,fCraft,BambooTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: Args.PlaceBlock( Pos[0] + xoff' Pos[2] + zoff' y' Args.FoliageBlock );
Magic Number,fCraft,BambooTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: i < 2
Magic Number,fCraft,PalmTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: Args.PlaceBlock( Pos[0] + xoff' Pos[2] + zoff' y' Args.FoliageBlock );
Magic Number,fCraft,PalmTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: zoff < 3
Magic Number,fCraft,PalmTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeFoliage,The following statement contains a magic number: xoff < 3
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,CrossSection,The following statement contains a magic number: int rad = ( int )( radius + .618 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,CrossSection,The following statement contains a magic number: int secidx1 = ( diraxis - 1 ) % 3;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,CrossSection,The following statement contains a magic number: int secidx2 = ( diraxis + 1 ) % 3;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,CrossSection,The following statement contains a magic number: float thisdist = ( float )Math.Sqrt( Sqr( Math.Abs( off1 ) + .5 ) +                                                             Sqr( Math.Abs( off2 ) + .5 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,CrossSection,The following statement contains a magic number: float thisdist = ( float )Math.Sqrt( Sqr( Math.Abs( off1 ) + .5 ) +                                                             Sqr( Math.Abs( off2 ) + .5 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: return Height * .12f;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: Args.Rand.NextDouble() < 100f / Sqr( Height ) && z < TrunkHeight
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,FoliageCluster,The following statement contains a magic number: CrossSection( new Vector3I( center[0]' z' center[2] )' i' 1' Args.FoliageBlock );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,TaperedLimb,The following statement contains a magic number: int secidx1 = ( primidx - 1 ) % 3;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,TaperedLimb,The following statement contains a magic number: int secidx2 = ( primidx + 1 ) % 3;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: int topy = Pos[1] + ( int )( TrunkHeight + .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float value = ( BranchDensity * 220 * Height ) / Cub( ydist + dist );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float slope = ( float )( BranchSlope + ( .5 - Args.Rand.NextDouble() ) * .16 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float slope = ( float )( BranchSlope + ( .5 - Args.Rand.NextDouble() ) * .16 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float startsize = ( float )( basesize * ( 1 + Args.Rand.NextDouble() ) *                                                .618 * Math.Pow( dist / Height' .618 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float startsize = ( float )( basesize * ( 1 + Args.Rand.NextDouble() ) *                                                .618 * Math.Pow( dist / Height' .618 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float rndr = ( float )( Math.Sqrt( Args.Rand.NextDouble() ) * basesize * .618 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: float rndang = ( float )( Args.Rand.NextDouble() * 2 * Math.PI );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: int rndx = ( int )( rndr * Math.Sin( rndang ) + .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: int rndz = ( int )( rndr * Math.Cos( rndang ) + .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeBranches,The following statement contains a magic number: Vector3I startcoord = new Vector3I {                          X = Pos[0] + rndx'                          Z = Pos[2] + rndz'                          Y = ( int )branchy                      };
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float dist = ( float )Math.Sqrt( Sqr( coord[0] - Pos[0] ) + Sqr( coord[2] - Pos[2] ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float dist = ( float )Math.Sqrt( Sqr( coord[0] - Pos[0] ) + Sqr( coord[2] - Pos[2] ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float value = ( BranchDensity * 220 * Height ) / Cub( ydist + dist );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float rndr = ( float )( Math.Sqrt( Args.Rand.NextDouble() ) * rootbaseradius * .618 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float rndang = ( float )( Args.Rand.NextDouble() * 2 * Math.PI );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: int rndx = ( int )( rndr * Math.Sin( rndang ) + .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: int rndz = ( int )( rndr * Math.Cos( rndang ) + .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: int rndy = ( int )( Args.Rand.NextDouble() * rootbaseradius * .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: offset = offset * 1.618f - HalfBlock * 3;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: offset = offset * 1.618f - HalfBlock * 3;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float rootstartsize = ( float )( rootbaseradius * .618 * Math.Abs( offset[1] ) / ( Height * .618 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: float rootstartsize = ( float )( rootbaseradius * .618 * Math.Abs( offset[1] ) / ( Height * .618 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: int startdist = ( int )( Args.Rand.NextDouble() * 6 * Math.Sqrt( rootstartsize ) + 2.8 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeRoots,The following statement contains a magic number: int startdist = ( int )( Args.Rand.NextDouble() * 6 * Math.Sqrt( rootstartsize ) + 2.8 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: int midy = ( int )( Pos[1] + TrunkHeight * .382 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: int topy = ( int )( Pos[1] + TrunkHeight + .5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: int z = Pos[2];
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: float midrad = TrunkRadius * .8f;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: startrad = TrunkRadius * .8f;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: float buttressRadius = TrunkRadius * .382f;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: posradius *= 2.618f;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: int numOfButtresss = ( int )( Math.Sqrt( TrunkRadius ) + 3.5 );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: float rndang = ( float )( Args.Rand.NextDouble() * 2 * Math.PI );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: float thisposradius = ( float )( posradius * ( .9 + Args.Rand.NextDouble() * .2 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: float thisposradius = ( float )( posradius * ( .9 + Args.Rand.NextDouble() * .2 ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,MakeTrunk,The following statement contains a magic number: float thisbuttressradius = ( float )( buttressRadius * ( .618 + Args.Rand.NextDouble() ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: TrunkHeight = Height * .618f;
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: int numOfClustersPerY = ( int )( 1.5 + Sqr( Args.FoliageDensity * Height / 19f ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: int numOfClustersPerY = ( int )( 1.5 + Sqr( Args.FoliageDensity * Height / 19f ) );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: float r = ( float )( ( Math.Sqrt( Args.Rand.NextDouble() ) + .328 ) * shapefac );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: float theta = ( float )( Args.Rand.NextDouble() * 2 * Math.PI );
Magic Number,fCraft,ProceduralTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: int z = ( int )( r * Math.Cos( theta ) ) + Pos[2];
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: BranchSlope = .382f;
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 2' 3' 3' 2.5f' 1.6f };
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 2' 3' 3' 2.5f' 1.6f };
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 2' 3' 3' 2.5f' 1.6f };
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 2' 3' 3' 2.5f' 1.6f };
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 2' 3' 3' 2.5f' 1.6f };
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: TrunkRadius *= .8f;
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: y < Height * ( .282 + .1 * Math.Sqrt( Args.Rand.NextDouble() ) )
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: y < Height * ( .282 + .1 * Math.Sqrt( Args.Rand.NextDouble() ) )
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: float radius = Height / 2f;
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: float adj = Height / 2f - y;
Magic Number,fCraft,RoundTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: dist *= .618f;
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: BranchSlope = .15f;
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 3' 2.6f' 2' 1 };
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 3' 2.6f' 2' 1 };
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 3' 2.6f' 2' 1 };
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: TrunkRadius *= .618f;
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: y < Height * ( .25 + .05 * Math.Sqrt( Args.Rand.NextDouble() ) )
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: y < Height * ( .25 + .05 * Math.Sqrt( Args.Rand.NextDouble() ) )
Magic Number,fCraft,ConeTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: float radius = ( Height - y ) * .382f;
Magic Number,fCraft,RainforestTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 3.4f' 2.6f };
Magic Number,fCraft,RainforestTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: FoliageShape = new[] { 3.4f' 2.6f };
Magic Number,fCraft,RainforestTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: TrunkRadius *= .382f;
Magic Number,fCraft,RainforestTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: TrunkHeight = Height * .9f;
Magic Number,fCraft,RainforestTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: twigs >= 0 && Args.Rand.NextDouble() < .05
Magic Number,fCraft,RainforestTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: y < Height * .8
Magic Number,fCraft,MangroveTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,Prepare,The following statement contains a magic number: TrunkRadius *= .618f;
Magic Number,fCraft,MangroveTree,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Forester.cs,ShapeFunc,The following statement contains a magic number: val *= 1.618f;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MapGeneratorOld,The following statement contains a magic number: args.WaterLevel = ( args.MapHeight - 1 ) / 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The following statement contains a magic number: map.Blocks.MemSet( ( byte )Block.Stone' 0' width * length * ( height / 2 - FlatgrassDirtLevel ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The following statement contains a magic number: map.Blocks.MemSet( ( byte )Block.Dirt' width * length * ( height / 2 - FlatgrassDirtLevel )' width * length * ( FlatgrassDirtLevel - 1 ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The following statement contains a magic number: map.Blocks.MemSet( ( byte )Block.Grass' width * length * ( height / 2 - 1 )' width * length );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateOcean,The following statement contains a magic number: map.Blocks.MemSet( ( byte )Block.Water' width * length' width * length * ( height / 2 - 1 ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate = 10;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 10;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 15;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 3;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,ReportProgress,The following statement contains a magic number: h( this' new ProgressChangedEventArgs( ( 100 * progressRunningTotal / progressTotalEstimate )' message ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress( 10' "Heightmap: Priming" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress( 2' "Heightmap: Biasing" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress( 10' "Heightmap: Layering" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: int blendmapDetailSize = ( int )Math.Log( Math.Max( args.MapWidth' args.MapLength )' 2 ) - 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: int blendmapDetailSize = ( int )Math.Log( Math.Max( args.MapWidth' args.MapLength )' 2 ) - 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: new Noise( rand.Next()' NoiseInterpolationMode.Cosine ).PerlinNoise( blendmap' 3' blendmapDetailSize' 0.5f' 0' 0 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: new Noise( rand.Next()' NoiseInterpolationMode.Cosine ).PerlinNoise( blendmap' 3' blendmapDetailSize' 0.5f' 0' 0 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: float cliffSteepness = Math.Max( args.MapWidth' args.MapLength ) / 6f;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress( 2' "Heightmap: Biasing" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The following statement contains a magic number: int width = rand.Next( 15' 30 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The following statement contains a magic number: int width = rand.Next( 15' 30 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The following statement contains a magic number: int height = rand.Next( 15' 30 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The following statement contains a magic number: int height = rand.Next( 15' 30 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyBias,The following statement contains a magic number: float[] corners = new float[4];
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyBias,The following statement contains a magic number: Noise.ApplyBias( heightmap' corners[0]' corners[1]' corners[2]' corners[3]' midpoint );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyBias,The following statement contains a magic number: Noise.ApplyBias( heightmap' corners[0]' corners[1]' corners[2]' corners[3]' midpoint );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: float desiredWaterLevel = .5f;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 2' "Heightmap Processing: Matching water coverage" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 5' "Heightmap Processing: Adjusting slope" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 2' "Heightmap Processing: Smoothing" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 5' "Heightmap Processing: Randomizing" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: int blendmapDetailSize = ( int )Math.Log( Math.Max( args.MapWidth' args.MapLength )' 2 ) - 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: int blendmapDetailSize = ( int )Math.Log( Math.Max( args.MapWidth' args.MapLength )' 2 ) - 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: new Noise( rand.Next()' NoiseInterpolationMode.Cosine ).PerlinNoise( altmap' 3' blendmapDetailSize' 0.5f' 0' 0 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: new Noise( rand.Next()' NoiseInterpolationMode.Cosine ).PerlinNoise( altmap' 3' blendmapDetailSize' 0.5f' 0' 0 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 10' "Filling" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: args.WaterLevel - level > 3
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 5' "Processing: Adding beaches" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress( 5' "Processing: Planting trees" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: var foresterArgs = new ForesterArgs {                          Map = map'                          Rand = rand'                          TreeCount = ( int )( map.Width * map.Length * 4 / ( 1024f * ( args.TreeSpacingMax + args.TreeSpacingMin ) / 2 ) )'                          Operation = Forester.ForesterOperation.Add'                          PlantOn = bGroundSurface                      };
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: var foresterArgs = new ForesterArgs {                          Map = map'                          Rand = rand'                          TreeCount = ( int )( map.Width * map.Length * 4 / ( 1024f * ( args.TreeSpacingMax + args.TreeSpacingMin ) / 2 ) )'                          Operation = Forester.ForesterOperation.Add'                          PlantOn = bGroundSurface                      };
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: var foresterArgs = new ForesterArgs {                          Map = map'                          Rand = rand'                          TreeCount = ( int )( map.Width * map.Length * 4 / ( 1024f * ( args.TreeSpacingMax + args.TreeSpacingMin ) / 2 ) )'                          Operation = Forester.ForesterOperation.Add'                          PlantOn = bGroundSurface                      };
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: map.Blocks[startX + map.Width * map.Length * ( map.Height - 1 - startZ ) + map.Width * startY] != bedrockType && k1 < 10000
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: k1 >= 10000
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: diameter = 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: int radius = diameter / 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: x += ( int )( 0.7 * ( rand.NextDouble() - 0.5D ) * diameter );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: x += ( int )( 0.7 * ( rand.NextDouble() - 0.5D ) * diameter );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: y += ( int )( 0.7 * ( rand.NextDouble() - 0.5D ) * diameter );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: y += ( int )( 0.7 * ( rand.NextDouble() - 0.5D ) * diameter );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: z += ( int )( 0.7 * ( rand.NextDouble() - 0.5D ) * diameter );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: z += ( int )( 0.7 * ( rand.NextDouble() - 0.5D ) * diameter );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: ( fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9 ) &&                                  z + k3 < startZ
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: ( fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9 ) &&                                  z + k3 < startZ
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: ( fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9 ) &&                                  z + k3 < startZ
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: ( fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9 ) &&                                  z + k3 < startZ
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: AddSingleVein( rand' map' bedrockType' fillingType' k' maxDiameter' l' 10 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int j2 = j1 + ( int )( .5 * ( rand.NextDouble() - .5 ) * map.Width );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int j2 = j1 + ( int )( .5 * ( rand.NextDouble() - .5 ) * map.Width );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int k2 = k1 + ( int )( .5 * ( rand.NextDouble() - .5 ) * map.Height );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int k2 = k1 + ( int )( .5 * ( rand.NextDouble() - .5 ) * map.Height );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int l2 = l1 + ( int )( .5 * ( rand.NextDouble() - .5 ) * map.Length );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int l2 = l1 + ( int )( .5 * ( rand.NextDouble() - .5 ) * map.Length );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: diameter = 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int radius = diameter / 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int i3 = ( int )( ( 1 - thirteenOverK ) * j1 + thirteenOverK * j2 + ( l * radius ) * ( rand.NextDouble() - .5 ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int j3 = ( int )( ( 1 - thirteenOverK ) * k1 + thirteenOverK * k2 + ( l * radius ) * ( rand.NextDouble() - .5 ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: int k3 = ( int )( ( 1 - thirteenOverK ) * l1 + thirteenOverK * l2 + ( l * radius ) * ( rand.NextDouble() - .5 ) );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: ( map.Blocks[index] == 10 || map.Blocks[index] == 11 || map.Blocks[index] == 8 || map.Blocks[index] == 9 ) &&                              ( map.GetBlock( x - 1' y' z ) == Block.Air || map.GetBlock( x + 1' y' z ) == Block.Air ||                              map.GetBlock( x' y - 1' z ) == Block.Air || map.GetBlock( x' y + 1' z ) == Block.Air ||                              map.GetBlock( x' y' z - 1 ) == Block.Air )
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: ( map.Blocks[index] == 10 || map.Blocks[index] == 11 || map.Blocks[index] == 8 || map.Blocks[index] == 9 ) &&                              ( map.GetBlock( x - 1' y' z ) == Block.Air || map.GetBlock( x + 1' y' z ) == Block.Air ||                              map.GetBlock( x' y - 1' z ) == Block.Air || map.GetBlock( x' y + 1' z ) == Block.Air ||                              map.GetBlock( x' y' z - 1 ) == Block.Air )
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: ( map.Blocks[index] == 10 || map.Blocks[index] == 11 || map.Blocks[index] == 8 || map.Blocks[index] == 9 ) &&                              ( map.GetBlock( x - 1' y' z ) == Block.Air || map.GetBlock( x + 1' y' z ) == Block.Air ||                              map.GetBlock( x' y - 1' z ) == Block.Air || map.GetBlock( x' y + 1' z ) == Block.Air ||                              map.GetBlock( x' y' z - 1 ) == Block.Air )
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: ( map.Blocks[index] == 10 || map.Blocks[index] == 11 || map.Blocks[index] == 8 || map.Blocks[index] == 9 ) &&                              ( map.GetBlock( x - 1' y' z ) == Block.Air || map.GetBlock( x + 1' y' z ) == Block.Air ||                              map.GetBlock( x' y - 1' z ) == Block.Air || map.GetBlock( x' y + 1' z ) == Block.Air ||                              map.GetBlock( x' y' z - 1 ) == Block.Air )
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: ReportProgress( 5' "Processing: Adding caves" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Air' 30' 0.05 * args.CaveSize );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Air' 30' 0.05 * args.CaveSize );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: i1 < 36 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Air' 500' 0.015 * args.CaveSize' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Air' 500' 0.015 * args.CaveSize' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: j1 < 9 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Air' 300' 0.03 * args.CaveSize' 1' 20 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Air' 300' 0.03 * args.CaveSize' 1' 20 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Air' 300' 0.03 * args.CaveSize' 1' 20 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: k1 < 30 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Lava' 30' 0.05 * args.CaveSize );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Lava' 30' 0.05 * args.CaveSize );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: i < 8 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Lava' 1000' 0.015 * args.CaveSize' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Lava' 1000' 0.015 * args.CaveSize' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: j < 3 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Water' 30' 0.05 * args.CaveSize );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Water' 30' 0.05 * args.CaveSize );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: k < 8 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Water' 1000' 0.015 * args.CaveSize' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Water' 1000' 0.015 * args.CaveSize' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: l < 3 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: ReportProgress( 3' "Processing: Adding ore" );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Coal' 500' 0.03 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.Coal' 500' 0.03 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: l1 < 12 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Coal' 200' 0.015' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.Coal' 200' 0.015' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.IronOre' 500' 0.02 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.IronOre' 500' 0.02 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: i2 < 32 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.IronOre' 200' 0.015' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.IronOre' 200' 0.015' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.GoldOre' 200' 0.0145' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein( rand' map' ( byte )bBedrock' ( byte )Block.GoldOre' 200' 0.0145' 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: k2 < 8 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.GoldOre' 400' 0.0175 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave( rand' map' ( byte )bBedrock' ( byte )Block.GoldOre' 400' 0.0175 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: l2 < 20 * args.CaveDensity
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: const int topLayers = 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: const double odds = 0.618;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: int nx = x + rn.Next( -( minTrunkPadding / 2 )' ( maxTrunkPadding / 2 ) + 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: int nx = x + rn.Next( -( minTrunkPadding / 2 )' ( maxTrunkPadding / 2 ) + 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: int ny = y + rn.Next( -( minTrunkPadding / 2 )' ( maxTrunkPadding / 2 ) + 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: int ny = y + rn.Next( -( minTrunkPadding / 2 )' ( maxTrunkPadding / 2 ) + 1 );
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: ( nh = rn.Next( minHeight' maxHeight + 1 ) ) + nz + nh / 2 > map.Height
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: int radius = ( i >= ( nh / 2 ) - topLayers ) ? 1 : 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: int radius = ( i >= ( nh / 2 ) - topLayers ) ? 1 : 2;
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: i < nh / 2
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: ( map.GetBlock( nx' ny' nz ) == bGroundSurface ) && slopemap[nx' ny] < .5
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch ( template ) {                  case MapGenTemplate.Archipelago:                      return new MapGeneratorArgs {                          MaxHeight = 8'                          MaxDepth = 20'                          FeatureScale = 3'                          Roughness = .46f'                          MatchWaterCoverage = true'                          WaterCoverage = .85f                      };                    case MapGenTemplate.Atoll:                      return new MapGeneratorArgs {                          Theme = MapGenTheme.Desert'                          MaxHeight = 2'                          MaxDepth = 39'                          UseBias = true'                          Bias = .9f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 2'                          DetailScale = 5'                          MarbledHeightmap = true'                          InvertHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .95f                      };                    case MapGenTemplate.Bay:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = 1'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          MarbledHeightmap = true'                          DelayBias = true                      };                    case MapGenTemplate.Dunes:                      return new MapGeneratorArgs {                          AddTrees = false'                          AddWater = false'                          Theme = MapGenTheme.Desert'                          MaxHeight = 12'                          MaxDepth = 7'                          FeatureScale = 2'                          DetailScale = 3'                          Roughness = .44f'                          MarbledHeightmap = true'                          InvertHeightmap = true                      };                    case MapGenTemplate.Hills:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 8'                          MaxDepth = 8'                          FeatureScale = 2'                          TreeSpacingMin = 7'                          TreeSpacingMax = 13                      };                    case MapGenTemplate.Ice:                      return new MapGeneratorArgs {                          AddTrees = false'                          Theme = MapGenTheme.Arctic'                          MaxHeight = 2'                          MaxDepth = 2032'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .64f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .3f'                          MaxHeightVariation = 0'                          AddIgloos = true                      };                    case MapGenTemplate.Island:                      return new MapGeneratorArgs {                          MaxHeight = 16'                          MaxDepth = 39'                          UseBias = true'                          Bias = .7f'                          MidPoint = 1'                          LoweredCorners = 4'                          FeatureScale = 3'                          DetailScale = 7'                          MarbledHeightmap = true'                          DelayBias = true'                          AddBeaches = true'                          Roughness = 0.45f                      };                    case MapGenTemplate.Lake:                      return new MapGeneratorArgs {                          MaxHeight = 14'                          MaxDepth = 20'                          UseBias = true'                          Bias = .65f'                          MidPoint = -1'                          RaisedCorners = 4'                          FeatureScale = 2'                          Roughness = .56f'                          MatchWaterCoverage = true'                          WaterCoverage = .3f                      };                    case MapGenTemplate.Mountains:                      return new MapGeneratorArgs {                          AddWater = false'                          MaxHeight = 40'                          MaxDepth = 10'                          FeatureScale = 1'                          DetailScale = 7'                          MarbledHeightmap = true'                          AddSnow = true'                          MatchWaterCoverage = true'                          WaterCoverage = .5f'                          Roughness = .55f'                          CliffThreshold = .9f                      };                    case MapGenTemplate.Random:                      return new MapGeneratorArgs();                    case MapGenTemplate.River:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 8'                          FeatureScale = 0'                          DetailScale = 6'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .31f                      };                    case MapGenTemplate.Streams:                      return new MapGeneratorArgs {                          MaxHeight = 5'                          MaxDepth = 4'                          FeatureScale = 2'                          DetailScale = 7'                          Roughness = .55f'                          MarbledHeightmap = true'                          MatchWaterCoverage = true'                          WaterCoverage = .25f'                          TreeSpacingMin = 8'                          TreeSpacingMax = 14                      };                    case MapGenTemplate.Peninsula:                      return new MapGeneratorArgs {                          MaxHeight = 22'                          MaxDepth = 12'                          UseBias = true'                          Bias = .5f'                          MidPoint = -1'                          RaisedCorners = 3'                          LoweredCorners = 1'                          TreeSpacingMax = 12'                          TreeSpacingMin = 6'                          InvertHeightmap = true'                          WaterCoverage = .5f                      };                    case MapGenTemplate.Flat:                      return new MapGeneratorArgs {                          MaxHeight = 0'                          MaxDepth = 0'                          MaxHeightVariation = 0'                          AddWater = false'                          DetailScale = 0'                          FeatureScale = 0'                          AddCliffs = false                      };                    default:                      throw new ArgumentOutOfRangeException( "template" );              }
Magic Number,fCraft,MapGeneratorArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The following statement contains a magic number: RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4
Magic Number,fCraft,MapGeneratorArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The following statement contains a magic number: RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4
Magic Number,fCraft,MapGeneratorArgs,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The following statement contains a magic number: RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: Map = MapGeneratorOld.GenerateFlatgrass( 128' 128' 64 );
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: Map = MapGeneratorOld.GenerateFlatgrass( 128' 128' 64 );
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: Map = MapGeneratorOld.GenerateFlatgrass( 128' 128' 64 );
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: size / 1024 / 1024 > maxFileSize
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: size / 1024 / 1024 > maxFileSize
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,IsValidName,The following statement contains a magic number: name.Length < 2 || name.Length > 16
Magic Number,fCraft,World,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\World.cs,IsValidName,The following statement contains a magic number: name.Length < 2 || name.Length > 16
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox( Int32.Parse( header[1] )' Int32.Parse( header[2] )' Int32.Parse( header[3] )'                                        Int32.Parse( header[4] )' Int32.Parse( header[5] )' Int32.Parse( header[6] ) );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox( Int32.Parse( header[1] )' Int32.Parse( header[2] )' Int32.Parse( header[3] )'                                        Int32.Parse( header[4] )' Int32.Parse( header[5] )' Int32.Parse( header[6] ) );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox( Int32.Parse( header[1] )' Int32.Parse( header[2] )' Int32.Parse( header[3] )'                                        Int32.Parse( header[4] )' Int32.Parse( header[5] )' Int32.Parse( header[6] ) );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox( Int32.Parse( header[1] )' Int32.Parse( header[2] )' Int32.Parse( header[3] )'                                        Int32.Parse( header[4] )' Int32.Parse( header[5] )' Int32.Parse( header[6] ) );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox( Int32.Parse( header[1] )' Int32.Parse( header[2] )' Int32.Parse( header[3] )'                                        Int32.Parse( header[4] )' Int32.Parse( header[5] )' Int32.Parse( header[6] ) );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Rank buildRank = Rank.Parse( header[7] );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Logger.Log( LogType.Error'                              "Zone: Error parsing zone definition: unknown rank \"{0}\". Permission reset to default ({1})."'                              header[7]' Controller.MinRank.Name );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: parts[2].Split( ' ' )
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: parts[2].Length > 0
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: string[] xheader = parts[3].Split( ' ' );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: xheader[2] == "-"
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: parts.Length > 3
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Message = parts[4].Replace( '\\'' ''' );
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: parts.Length > 4 && !string.IsNullOrWhiteSpace( parts[4] )
Magic Number,fCraft,Zone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: parts.Length > 4 && !string.IsNullOrWhiteSpace( parts[4] )
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields.Length != 8
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields[2].ToDateTime( ref info.BanDate );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: info.BanReason = PlayerInfo.Unescape( fields[3] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields[3].Length > 0
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: info.PlayerName = PlayerInfo.Unescape( fields[4] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields[4].Length > 0
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse( fields[5]' out info.Attempts );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: info.LastAttemptName = PlayerInfo.Unescape( fields[6] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields[7].ToDateTime( ref info.LastAttemptDate );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields.Length != 8
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields[2].ToDateTimeLegacy( ref info.BanDate );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: info.BanReason = PlayerInfo.Unescape( fields[3] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields[3].Length > 0
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: info.PlayerName = PlayerInfo.Unescape( fields[4] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields[4].Length > 0
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse( fields[5]' out info.Attempts );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: info.LastAttemptName = PlayerInfo.Unescape( fields[6] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields[7].ToDateTimeLegacy( ref info.LastAttemptDate );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: fields.Length != 8
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[2]' out info.BanDate );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.BanReason = PlayerInfo.UnescapeOldFormat( fields[3] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.PlayerName = PlayerInfo.UnescapeOldFormat( fields[4] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: fields[4].Length > 1
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.Attempts = Int32.Parse( fields[5] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.LastAttemptName = PlayerInfo.UnescapeOldFormat( fields[6] );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate( fields[7]' out info.LastAttemptDate );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields[2] = BanDate.ToUnixTimeString();
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields[3] = PlayerInfo.Escape( BanReason );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields[4] = PlayerInfo.Escape( PlayerName );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields[5] = Attempts.ToString();
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields[6] = PlayerInfo.Escape( LastAttemptName );
Magic Number,fCraft,IPBanInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields[7] = LastAttemptDate.ToUnixTimeString();
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,MoveNext,The following statement contains a magic number: outputStart = 2;
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: switch ( ch ) {                  case ( byte )' ':                      canWrap = true;                      expectingColor = false;                      if ( spaceCount == 0 ) {                          // first space after a word' set wrapping point                          wrapInputIndex = inputIndex;                          wrapOutputIndex = outputIndex;                          wrapColor = color;                          wrapEndsWithSymbol = endsWithSymbol;                      }                      spaceCount++;                      break;                    case ( byte )'&':                      // skip double ampersands                      expectingColor = !expectingColor;                      break;                    case ( byte )'-':                      if ( spaceCount > 0 ) {                          // set wrapping point' if at beginning of a word                          wrapInputIndex = inputIndex;                          wrapColor = color;                          wrapEndsWithSymbol = endsWithSymbol;                      }                      expectingColor = false;                      if ( !Append( ch ) ) {                          if ( canWrap ) {                              // word doesn't fit in line' backtrack to wrapping point                              inputIndex = wrapInputIndex;                              outputIndex = wrapOutputIndex;                              color = wrapColor;                              endsWithSymbol = wrapEndsWithSymbol;                          } // else force wrap (word is too long)' don't backtrack                          return true;                      }                      spaceCount = 0;                      if ( wordLength > 2 ) {                          // allow wrapping after hyphen' if at least 2 word characters precede this hyphen                          wrapInputIndex = inputIndex + 1;                          wrapOutputIndex = outputIndex;                          wrapColor = color;                          wrapEndsWithSymbol = endsWithSymbol;                          wordLength = 0;                          canWrap = true;                      }                      break;                    case ( byte )'\n':                      // break the line early                      inputIndex++;                      return true;                    default:                      if ( expectingColor ) {                          expectingColor = false;                          if ( ch == 'N' || ch == 'n' ) {                              // newline                              inputIndex++;                              return true;                          } else if ( ProcessColor( ref ch ) ) {                              // valid colorcode                              color = ch;                              hadColor = true;                          } // else colorcode is invalid' skip                      } else {                          if ( spaceCount > 0 ) {                              // set wrapping point' if at beginning of a word                              wrapInputIndex = inputIndex;                              wrapColor = color;                              wrapEndsWithSymbol = endsWithSymbol;                          }                          if ( ch == 0 || ch > 127 ) {                              // replace unprintable chars with '?'                              ch = ( byte )'?';                          }                          if ( !Append( ch ) ) {                              if ( canWrap ) {                                  inputIndex = wrapInputIndex;                                  outputIndex = wrapOutputIndex;                                  color = wrapColor;                                  endsWithSymbol = wrapEndsWithSymbol;                              } // else word is too long' dont backtrack to wrap                              return true;                          }                      }                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: switch ( ch ) {                  case ( byte )' ':                      canWrap = true;                      expectingColor = false;                      if ( spaceCount == 0 ) {                          // first space after a word' set wrapping point                          wrapInputIndex = inputIndex;                          wrapOutputIndex = outputIndex;                          wrapColor = color;                          wrapEndsWithSymbol = endsWithSymbol;                      }                      spaceCount++;                      break;                    case ( byte )'&':                      // skip double ampersands                      expectingColor = !expectingColor;                      break;                    case ( byte )'-':                      if ( spaceCount > 0 ) {                          // set wrapping point' if at beginning of a word                          wrapInputIndex = inputIndex;                          wrapColor = color;                          wrapEndsWithSymbol = endsWithSymbol;                      }                      expectingColor = false;                      if ( !Append( ch ) ) {                          if ( canWrap ) {                              // word doesn't fit in line' backtrack to wrapping point                              inputIndex = wrapInputIndex;                              outputIndex = wrapOutputIndex;                              color = wrapColor;                              endsWithSymbol = wrapEndsWithSymbol;                          } // else force wrap (word is too long)' don't backtrack                          return true;                      }                      spaceCount = 0;                      if ( wordLength > 2 ) {                          // allow wrapping after hyphen' if at least 2 word characters precede this hyphen                          wrapInputIndex = inputIndex + 1;                          wrapOutputIndex = outputIndex;                          wrapColor = color;                          wrapEndsWithSymbol = endsWithSymbol;                          wordLength = 0;                          canWrap = true;                      }                      break;                    case ( byte )'\n':                      // break the line early                      inputIndex++;                      return true;                    default:                      if ( expectingColor ) {                          expectingColor = false;                          if ( ch == 'N' || ch == 'n' ) {                              // newline                              inputIndex++;                              return true;                          } else if ( ProcessColor( ref ch ) ) {                              // valid colorcode                              color = ch;                              hadColor = true;                          } // else colorcode is invalid' skip                      } else {                          if ( spaceCount > 0 ) {                              // set wrapping point' if at beginning of a word                              wrapInputIndex = inputIndex;                              wrapColor = color;                              wrapEndsWithSymbol = endsWithSymbol;                          }                          if ( ch == 0 || ch > 127 ) {                              // replace unprintable chars with '?'                              ch = ( byte )'?';                          }                          if ( !Append( ch ) ) {                              if ( canWrap ) {                                  inputIndex = wrapInputIndex;                                  outputIndex = wrapOutputIndex;                                  color = wrapColor;                                  endsWithSymbol = wrapEndsWithSymbol;                              } // else word is too long' dont backtrack to wrap                              return true;                          }                      }                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,PrepareOutput,The following statement contains a magic number: output[65] = ( byte )'.';
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: bytesToInsert += 2;
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                      case 7:                      case 25:                          bytesToInsert += 3; // 2 spaces pad AND 1-char terminator                          break;                        case 9:                      case 22:                      case 24:                          bytesToInsert += 2; // 2 spaces pad OR 1-char terminator                          break;                        case 12:                      case 18:                      case 19:                          bytesToInsert += 2; // 2 spaces pad OR 2-char terminator                          break;                        default:                          bytesToInsert += 1; // 1-char terminator                          break;                  }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch ( ch ) {                  case 9:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 12:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'`';                      endsWithSymbol = false;                      break;                    case 18:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'.';                      endsWithSymbol = false;                      break;                    case 19:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )'!';                      endsWithSymbol = false;                      break;                    case 22:                      output[outputIndex++] = ( byte )'.';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 24:                      output[outputIndex++] = ( byte )'^';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = false;                      break;                    case 7:                  case 25:                      output[outputIndex++] = ( byte )' ';                      output[outputIndex++] = ( byte )' ';                      endsWithSymbol = true;                      break;                    default:                      endsWithSymbol = ( ch < ' ' );                      break;              }
Magic Number,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The following statement contains a magic number: ch += 32;
Magic Number,fCraft,IntKeyAttribute,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,Validate,The following statement contains a magic number: i < 31
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,GetHashCode,The following statement contains a magic number: return X + Z * 1625 + Y * 2642245;
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,GetHashCode,The following statement contains a magic number: return X + Z * 1625 + Y * 2642245;
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( X * 32 + 16' Y * 32 + 16' Z * 32 + 16 );
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( X * 32 + 16' Y * 32 + 16' Z * 32 + 16 );
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( X * 32 + 16' Y * 32 + 16' Z * 32 + 16 );
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( X * 32 + 16' Y * 32 + 16' Z * 32 + 16 );
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( X * 32 + 16' Y * 32 + 16' Z * 32 + 16 );
Magic Number,fCraft,Vector3I,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position( X * 32 + 16' Y * 32 + 16' Z * 32 + 16 );
Magic Number,fCraft,BlockDB,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\BlockDB.cs,EnsureCapacity,The following statement contains a magic number: num *= 2;
Magic Number,fCraft,IPAddressUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,IsLAN,The following statement contains a magic number: return ( bytes[0] == 192 && bytes[1] == 168 ) ||                     ( bytes[0] == 10 );
Magic Number,fCraft,IPAddressUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,IsLAN,The following statement contains a magic number: return ( bytes[0] == 192 && bytes[1] == 168 ) ||                     ( bytes[0] == 10 );
Magic Number,fCraft,IPAddressUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,IsLAN,The following statement contains a magic number: return ( bytes[0] == 192 && bytes[1] == 168 ) ||                     ( bytes[0] == 10 );
Magic Number,fCraft,IPAddressUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,RangeMin,The following statement contains a magic number: range > 32
Magic Number,fCraft,IPAddressUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,RangeMax,The following statement contains a magic number: range > 32
Magic Number,fCraft,IPAddressUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,NetMask,The following statement contains a magic number: range > 32
Magic Number,fCraft,DateTimeUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: span.TotalSeconds < 60
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 100000000 || number < 0
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 100000000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 10000000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 10000000
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 10000000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 1000000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 1000000
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 1000000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 100000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 100000
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 100000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 10000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 10000
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 10000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 1000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 1000
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 1000;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 100;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 100
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 100;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 10;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( digit + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: number >= 10
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 10;
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append( ( char )( copy + 48 ) );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: value = 10 * value + ( characters[i] - 48 );
Magic Number,fCraft,FormatUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: value = 10 * value + ( characters[i] - 48 );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: length -= 8;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: length >= 8
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: length -= 8;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: length >= 8
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 4 ) ) = *( ( int* )( src + 4 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 4 ) ) = *( ( int* )( src + 4 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 8 ) ) = *( ( int* )( src + 8 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 8 ) ) = *( ( int* )( src + 8 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 12 ) ) = *( ( int* )( src + 12 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 12 ) ) = *( ( int* )( src + 12 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 4 ) ) = *( ( int* )( src + 4 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *( ( int* )( dest + 4 ) ) = *( ( int* )( src + 4 ) );
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: dest += 8;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: src += 8;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: ( len & 8 ) != 0
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: dest += 4;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: src += 4;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: ( len & 4 ) != 0
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: dest += 2;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: src += 2;
Magic Number,fCraft,BufferUtil,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: ( len & 2 ) != 0
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: permutation = new int[256];
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: p = new int[permutation.Length * 2];
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: Frequency = 0.023f;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: Amplitude = 2.2f;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: Persistence = 0.9f;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: Octaves = 2;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Compute,The following statement contains a magic number: freq *= 2;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Noise,The following statement contains a magic number: int iX = ( int )Math.Floor( x ) & 255;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Noise,The following statement contains a magic number: int iY = ( int )Math.Floor( y ) & 255;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Noise,The following statement contains a magic number: int iZ = ( int )Math.Floor( z ) & 255;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Fade,The following statement contains a magic number: return ( t * t * t * ( t * ( t * 6 - 15 ) + 10 ) );
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Fade,The following statement contains a magic number: return ( t * t * t * ( t * ( t * 6 - 15 ) + 10 ) );
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Fade,The following statement contains a magic number: return ( t * t * t * ( t * ( t * 6 - 15 ) + 10 ) );
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: int h = hashCode & 15;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: float u = h < 8 ? x : y;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: float v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: float v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: float v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,fCraft,PerlinNoise3D,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: return ( ( ( h & 1 ) == 0 ? u : -u ) + ( ( h & 2 ) == 0 ? v : -v ) );
Magic Number,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld( null' "main"' MapGeneratorOld.GenerateFlatgrass( 128' 128' 64 )' true );
Magic Number,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld( null' "main"' MapGeneratorOld.GenerateFlatgrass( 128' 128' 64 )' true );
Magic Number,fCraft,WorldManager,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld( null' "main"' MapGeneratorOld.GenerateFlatgrass( 128' 128' 64 )' true );
Magic Number,fCraft,MonoCompat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: int minor = Int32.Parse( versionMatch.Groups[2].Value );
Magic Number,fCraft,MonoCompat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: int revision = Int32.Parse( versionMatch.Groups[3].Value );
Magic Number,fCraft,MonoCompat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: IsSGenCapable = ( major == 2 && minor >= 8 );
Magic Number,fCraft,MonoCompat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: IsSGenCapable = ( major == 2 && minor >= 8 );
Magic Number,fCraft,MonoCompat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: MonoVersion.Major < 2 && MonoVersion.Major < 6
Magic Number,fCraft,MonoCompat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: MonoVersion.Major < 2 && MonoVersion.Major < 6
Magic Number,fCraft.Utils,BroMode,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: attempts > 2000
Magic Number,fCraft.Utils,FlyHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: !( x >= -1 && x <= 1 ) || !( y >= -1 && y <= 1 ) || !( z >= -3 && z <= 4 )
Magic Number,fCraft.Utils,FlyHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: !( x >= -1 && x <= 1 ) || !( y >= -1 && y <= 1 ) || !( z >= -3 && z <= 4 )
Magic Number,fCraft.Utils,FlyHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: !( x >= -1 && x <= 1 ) || !( y >= -1 && y <= 1 ) || !( z >= -3 && z <= 4 )
Magic Number,fCraft.Utils,FlyHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: !( x >= -1 && x <= 1 ) || !( y >= -1 && y <= 1 ) || !( z >= -3 && z <= 4 )
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: ( ( player.Position.Z / 32 ) - 1 ) <= Range.Zmax && ( ( player.Position.Z / 32 ) - 1 ) >= Range.Zmin
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: ( ( player.Position.Z / 32 ) - 1 ) <= Range.Zmax && ( ( player.Position.Z / 32 ) - 1 ) >= Range.Zmin
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: ( player.Position.Y / 32 ) <= Range.Ymax && ( player.Position.Y / 32 ) >= Range.Ymin
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: ( player.Position.Y / 32 ) <= Range.Ymax && ( player.Position.Y / 32 ) >= Range.Ymin
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: ( player.Position.X / 32 ) <= Range.Xmax && ( player.Position.X / 32 ) >= Range.Xmin
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: ( player.Position.X / 32 ) <= Range.Xmax && ( player.Position.X / 32 ) >= Range.Xmin
Magic Number,fCraft.Doors,Door,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Doors\Door.cs,Remove,The following statement contains a magic number: this.AffectedBlocks = new Vector3I[2];
Magic Number,fCraft.Drawing,DiagonalBrushFactory,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\DiagonalBrush.cs,MakeBrush,The following statement contains a magic number: player.LastUsedBlockType != ( Block )255
Magic Number,fCraft.Drawing,BlockDBDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\BlockDBDrawOperation.cs,Prepare,The following statement contains a magic number: marks.Length != 2
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,FindBestMatch,The following statement contains a magic number: color.A < TransparencyThreshold*255
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,ColorDifference,The following statement contains a magic number: return                  Math.Sqrt( (color2.L - color1.L)*(color2.L - color1.L)*1.2 +                             (color2.a - color1.a)*(color2.a - color1.a) +                             (color2.b - color1.b)*(color2.b - color1.b) );
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double R = color.R/255d;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double G = color.G/255d;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double B = color.B/255d;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double x = 0.4124564 * R + 0.3575761 * G + 0.1804375 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double x = 0.4124564 * R + 0.3575761 * G + 0.1804375 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double x = 0.4124564 * R + 0.3575761 * G + 0.1804375 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double y = 0.2126729 * R + 0.7151522 * G + 0.0721750 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double y = 0.2126729 * R + 0.7151522 * G + 0.0721750 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double y = 0.2126729 * R + 0.7151522 * G + 0.0721750 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double z = 0.0193339 * R + 0.1191920 * G + 0.9503041 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double z = 0.0193339 * R + 0.1191920 * G + 0.9503041 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: double z = 0.0193339 * R + 0.1191920 * G + 0.9503041 * B;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: LabColor result = new LabColor {                  // L is normalized to [0...100]                  L = 116*XyzToLab( yRatio ) - 16'                  a = 500*(XyzToLab( xRatio ) - XyzToLab( yRatio ))'                  b = 200*(XyzToLab( yRatio ) - XyzToLab( zRatio ))              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: LabColor result = new LabColor {                  // L is normalized to [0...100]                  L = 116*XyzToLab( yRatio ) - 16'                  a = 500*(XyzToLab( xRatio ) - XyzToLab( yRatio ))'                  b = 200*(XyzToLab( yRatio ) - XyzToLab( zRatio ))              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: LabColor result = new LabColor {                  // L is normalized to [0...100]                  L = 116*XyzToLab( yRatio ) - 16'                  a = 500*(XyzToLab( xRatio ) - XyzToLab( yRatio ))'                  b = 200*(XyzToLab( yRatio ) - XyzToLab( zRatio ))              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: LabColor result = new LabColor {                  // L is normalized to [0...100]                  L = 116*XyzToLab( yRatio ) - 16'                  a = 500*(XyzToLab( xRatio ) - XyzToLab( yRatio ))'                  b = 200*(XyzToLab( yRatio ) - XyzToLab( zRatio ))              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: result.L *= .75;
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,XyzToLab,The following statement contains a magic number: return Math.Pow( ratio' 1/3d );
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette( "Light"' 1 ) {                  {RgbColor.FromArgb( 109' 80' 57 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 176' 170' 130 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 111' 104' 104 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 179' 44' 44 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 179' 111' 44 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 179' 179' 44 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 109' 179' 44 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 44' 179' 44 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 44' 179' 111 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 44' 179' 179 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 86' 132' 179 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 99' 99' 180 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 111' 44' 180 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 141' 62' 179 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 180' 44' 180 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 179' 44' 111 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette( "Dark"' 1 ) {                  {RgbColor.FromArgb( 67' 50' 37 )' new[] {Block.Dirt}}'                  {RgbColor.FromArgb( 108' 104' 80 )' new[] {Block.Sand}}'                  {RgbColor.FromArgb( 68' 64' 64 )' new[] {Block.Gravel}}'                  {RgbColor.FromArgb( 109' 28' 28 )' new[] {Block.Red}}'                  {RgbColor.FromArgb( 110' 70' 31 )' new[] {Block.Orange}}'                  {RgbColor.FromArgb( 109' 109' 29 )' new[] {Block.Yellow}}'                  {RgbColor.FromArgb( 68' 109' 29 )' new[] {Block.Lime}}'                  {RgbColor.FromArgb( 28' 109' 31 )' new[] {Block.Green}}'                  {RgbColor.FromArgb( 28' 109' 69 )' new[] {Block.Teal}}'                  {RgbColor.FromArgb( 28' 109' 108 )' new[] {Block.Aqua}}'                  {RgbColor.FromArgb( 53' 81' 109 )' new[] {Block.Cyan}}'                  {RgbColor.FromArgb( 61' 61' 109 )' new[] {Block.Blue}}'                  {RgbColor.FromArgb( 68' 28' 109 )' new[] {Block.Indigo}}'                  {RgbColor.FromArgb( 87' 40' 110 )' new[] {Block.Violet}}'                  {RgbColor.FromArgb( 109' 28' 110 )' new[] {Block.Magenta}}'                  {RgbColor.FromArgb( 109' 29' 69 )' new[] {Block.Pink}}'                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: BlockPalette palette = new BlockPalette( "Layered"' 2 );
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(61' 74' 167)' new[] { Block.White' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(61' 74' 167)' new[] { Block.White' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(61' 74' 167)' new[] { Block.White' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(47' 59' 152)' new[] { Block.Gray' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(47' 59' 152)' new[] { Block.Gray' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(47' 59' 152)' new[] { Block.Gray' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(34' 47' 140)' new[] { Block.Black' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(34' 47' 140)' new[] { Block.Black' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add(RgbColor.FromArgb(34' 47' 140)' new[] { Block.Black' Block.StillWater });
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette( "Gray"' 1 ) {                  {RgbColor.FromArgb( 64' 64' 64 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 118' 118' 118 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette( "DarkGray"' 1 ) {                  {RgbColor.FromArgb( 41' 41' 41 )' new[] {Block.Black}}'                  {RgbColor.FromArgb( 72' 72' 72 )' new[] {Block.Gray}}'                  {RgbColor.FromArgb( 109' 109' 109 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 15' 14' 20 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayeredGray,The following statement contains a magic number: BlockPalette palette = new BlockPalette( "LayeredGray"' 2 );
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette( "BW"' 1 ) {                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette( "BW"' 1 ) {                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette( "BW"' 1 ) {                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette( "BW"' 1 ) {                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette( "BW"' 1 ) {                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,BlockPalette,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette( "BW"' 1 ) {                  {RgbColor.FromArgb( 179' 179' 179 )' new[] {Block.White}}'                  {RgbColor.FromArgb( 21' 19' 29 )' new[] {Block.Obsidian}}              };
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( Math.Min( marks[0].X' marks[1].X )' Math.Min( marks[2].X' marks[3].X ) )'                                                 Math.Min( Math.Min( marks[0].Y' marks[1].Y )' Math.Min( marks[2].Y' marks[3].Y ) )'                                                 Math.Min( Math.Min( marks[0].Z' marks[1].Z )' Math.Min( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( Math.Min( marks[0].X' marks[1].X )' Math.Min( marks[2].X' marks[3].X ) )'                                                 Math.Min( Math.Min( marks[0].Y' marks[1].Y )' Math.Min( marks[2].Y' marks[3].Y ) )'                                                 Math.Min( Math.Min( marks[0].Z' marks[1].Z )' Math.Min( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( Math.Min( marks[0].X' marks[1].X )' Math.Min( marks[2].X' marks[3].X ) )'                                                 Math.Min( Math.Min( marks[0].Y' marks[1].Y )' Math.Min( marks[2].Y' marks[3].Y ) )'                                                 Math.Min( Math.Min( marks[0].Z' marks[1].Z )' Math.Min( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( Math.Min( marks[0].X' marks[1].X )' Math.Min( marks[2].X' marks[3].X ) )'                                                 Math.Min( Math.Min( marks[0].Y' marks[1].Y )' Math.Min( marks[2].Y' marks[3].Y ) )'                                                 Math.Min( Math.Min( marks[0].Z' marks[1].Z )' Math.Min( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( Math.Min( marks[0].X' marks[1].X )' Math.Min( marks[2].X' marks[3].X ) )'                                                 Math.Min( Math.Min( marks[0].Y' marks[1].Y )' Math.Min( marks[2].Y' marks[3].Y ) )'                                                 Math.Min( Math.Min( marks[0].Z' marks[1].Z )' Math.Min( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( Math.Min( marks[0].X' marks[1].X )' Math.Min( marks[2].X' marks[3].X ) )'                                                 Math.Min( Math.Min( marks[0].Y' marks[1].Y )' Math.Min( marks[2].Y' marks[3].Y ) )'                                                 Math.Min( Math.Min( marks[0].Z' marks[1].Z )' Math.Min( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( Math.Max( marks[0].X' marks[1].X )' Math.Max( marks[2].X' marks[3].X ) )'                                                 Math.Max( Math.Max( marks[0].Y' marks[1].Y )' Math.Max( marks[2].Y' marks[3].Y ) )'                                                 Math.Max( Math.Max( marks[0].Z' marks[1].Z )' Math.Max( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( Math.Max( marks[0].X' marks[1].X )' Math.Max( marks[2].X' marks[3].X ) )'                                                 Math.Max( Math.Max( marks[0].Y' marks[1].Y )' Math.Max( marks[2].Y' marks[3].Y ) )'                                                 Math.Max( Math.Max( marks[0].Z' marks[1].Z )' Math.Max( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( Math.Max( marks[0].X' marks[1].X )' Math.Max( marks[2].X' marks[3].X ) )'                                                 Math.Max( Math.Max( marks[0].Y' marks[1].Y )' Math.Max( marks[2].Y' marks[3].Y ) )'                                                 Math.Max( Math.Max( marks[0].Z' marks[1].Z )' Math.Max( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( Math.Max( marks[0].X' marks[1].X )' Math.Max( marks[2].X' marks[3].X ) )'                                                 Math.Max( Math.Max( marks[0].Y' marks[1].Y )' Math.Max( marks[2].Y' marks[3].Y ) )'                                                 Math.Max( Math.Max( marks[0].Z' marks[1].Z )' Math.Max( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( Math.Max( marks[0].X' marks[1].X )' Math.Max( marks[2].X' marks[3].X ) )'                                                 Math.Max( Math.Max( marks[0].Y' marks[1].Y )' Math.Max( marks[2].Y' marks[3].Y ) )'                                                 Math.Max( Math.Max( marks[0].Z' marks[1].Z )' Math.Max( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( Math.Max( marks[0].X' marks[1].X )' Math.Max( marks[2].X' marks[3].X ) )'                                                 Math.Max( Math.Max( marks[0].Y' marks[1].Y )' Math.Max( marks[2].Y' marks[3].Y ) )'                                                 Math.Max( Math.Max( marks[0].Z' marks[1].Z )' Math.Max( marks[2].Z' marks[3].Z ) ) );
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator2 = LineEnumerator( Marks[1]' Marks[2] ).GetEnumerator();
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator3 = LineEnumerator( Marks[2]' Marks[3] ).GetEnumerator();
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator3 = LineEnumerator( Marks[2]' Marks[3] ).GetEnumerator();
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator4 = LineEnumerator( Marks[3]' Marks[0] ).GetEnumerator();
Magic Number,fCraft.Drawing,DrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,Prepare,The following statement contains a magic number: marks.Length == 2
Magic Number,fCraft.Drawing,DrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: Vector3I d2 = d * 2;
Magic Number,fCraft.Drawing,DrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: z = 2;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: double rx = Bounds.Width / 2d;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: double rz = Bounds.Height / 2d;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: center.X = ( Bounds.XMin + Bounds.XMax ) / 2f;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: center.Y = ( Bounds.YMin + Bounds.YMax ) / 2f;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: center.Z = ( Bounds.ZMin + Bounds.ZMax ) / 2f;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock &&                          Bounds.Width > 2 &&                          Bounds.Length > 2 &&                          Bounds.Height > 2;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock &&                          Bounds.Width > 2 &&                          Bounds.Length > 2 &&                          Bounds.Height > 2;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock &&                          Bounds.Width > 2 &&                          Bounds.Length > 2 &&                          Bounds.Height > 2;
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )( 4 / 3d * Math.PI * rx * ry * rz );
Magic Number,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )( 4 / 3d * Math.PI * rx * ry * rz );
Magic Number,fCraft.Drawing,PlaneDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,Prepare,The following statement contains a magic number: b = marks[2];
Magic Number,fCraft.Drawing,PlaneDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,GetBlockTotalEstimate,The following statement contains a magic number: return Math.Max( Math.Max( nabs.X' nabs.Y )' nabs.Z ) / 2;
Magic Number,fCraft.Drawing,PlaneDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;
Magic Number,fCraft.Drawing,PlaneDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;
Magic Number,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,ReadParams,The following statement contains a magic number: urlString = "http://i.imgur.com/" + urlString.Substring( 2 );
Magic Number,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,The following statement contains a magic number: marks.Length != 2
Magic Number,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,resizeImage,The following statement contains a magic number: destX = Convert.ToInt16( ( Width - ( sourceWidth * nPercent ) ) / 2 );
Magic Number,fCraft.Drawing,ImageDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,The following statement contains a magic number: bool faceTowardsOrigin = delta.Y < 0 || delta.Y == 0 && Marks[0].Y < Map.Length/2;
Magic Number,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;
Magic Number,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;
Magic Number,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;
Magic Number,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,WallsDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,TriangleDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,Prepare,The following statement contains a magic number: c = marks[2];
Magic Number,fCraft.Drawing,TriangleDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,GetBlockTotalEstimate,The following statement contains a magic number: return Math.Max( Math.Max( nabs.X' nabs.Y )' nabs.Z ) / 2;
Magic Number,fCraft.Drawing,TriangleDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;
Magic Number,fCraft.Drawing,TriangleDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( marks[0].X' Math.Min( marks[1].X' marks[2].X ) )'                                                 Math.Min( marks[0].Y' Math.Min( marks[1].Y' marks[2].Y ) )'                                                 Math.Min( marks[0].Z' Math.Min( marks[1].Z' marks[2].Z ) ) );
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( marks[0].X' Math.Min( marks[1].X' marks[2].X ) )'                                                 Math.Min( marks[0].Y' Math.Min( marks[1].Y' marks[2].Y ) )'                                                 Math.Min( marks[0].Z' Math.Min( marks[1].Z' marks[2].Z ) ) );
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I minVector = new Vector3I( Math.Min( marks[0].X' Math.Min( marks[1].X' marks[2].X ) )'                                                 Math.Min( marks[0].Y' Math.Min( marks[1].Y' marks[2].Y ) )'                                                 Math.Min( marks[0].Z' Math.Min( marks[1].Z' marks[2].Z ) ) );
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( marks[0].X' Math.Max( marks[1].X' marks[2].X ) )'                                                 Math.Max( marks[0].Y' Math.Max( marks[1].Y' marks[2].Y ) )'                                                 Math.Max( marks[0].Z' Math.Max( marks[1].Z' marks[2].Z ) ) );
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( marks[0].X' Math.Max( marks[1].X' marks[2].X ) )'                                                 Math.Max( marks[0].Y' Math.Max( marks[1].Y' marks[2].Y ) )'                                                 Math.Max( marks[0].Z' Math.Max( marks[1].Z' marks[2].Z ) ) );
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: Vector3I maxVector = new Vector3I( Math.Max( marks[0].X' Math.Max( marks[1].X' marks[2].X ) )'                                                 Math.Max( marks[0].Y' Math.Max( marks[1].Y' marks[2].Y ) )'                                                 Math.Max( marks[0].Z' Math.Max( marks[1].Z' marks[2].Z ) ) );
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator2 = LineEnumerator( Marks[1]' Marks[2] ).GetEnumerator();
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator3 = LineEnumerator( Marks[2]' Marks[0] ).GetEnumerator();
Magic Number,fCraft.Drawing,Fill2DDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,The following statement contains a magic number: maxFillExtent = 2048;
Magic Number,fCraft.Drawing,Fill2DDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,The following statement contains a magic number: maxFillExtent < 1 || maxFillExtent > 2048
Magic Number,fCraft.Drawing,PasteDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\PasteDrawOperation.cs,Prepare,The following statement contains a magic number: marks.Length < 2
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,AbstractPerlinNoiseBrush,The following statement contains a magic number: Coverage = 0.5f;
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,AbstractPerlinNoiseBrush,The following statement contains a magic number: Persistence = 0.75f;
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,AbstractPerlinNoiseBrush,The following statement contains a magic number: Frequency = 0.08f;
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,AbstractPerlinNoiseBrush,The following statement contains a magic number: Octaves = 3;
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,The following statement contains a magic number: op.Bounds.Volume > 32 * 32 * 32
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,The following statement contains a magic number: op.Bounds.Volume > 32 * 32 * 32
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,The following statement contains a magic number: op.Bounds.Volume > 32 * 32 * 32
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: double rx = Bounds.Width / 2d;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: double ry = Bounds.Length / 2d;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: double rz = Bounds.Height / 2d;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: center.X = ( Bounds.XMin + Bounds.XMax ) / 2f;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: center.Y = ( Bounds.YMin + Bounds.YMax ) / 2f;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: center.Z = ( Bounds.ZMin + Bounds.ZMax ) / 2f;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock &&                          Bounds.Width > 2 &&                          Bounds.Length > 2 &&                          Bounds.Height > 2;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock &&                          Bounds.Width > 2 &&                          Bounds.Length > 2 &&                          Bounds.Height > 2;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock &&                          Bounds.Width > 2 &&                          Bounds.Length > 2 &&                          Bounds.Height > 2;
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )( 4 / 3d * Math.PI * rx * ry * rz );
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )( 4 / 3d * Math.PI * rx * ry * rz );
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: double rx = Bounds.Width / 2d;
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: double ry = Bounds.Length / 2d;
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: double rz = Bounds.Height / 2d;
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: center.X = ( float )( ( Bounds.XMin + Bounds.XMax ) / 2d );
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: center.Y = ( float )( ( Bounds.YMin + Bounds.YMax ) / 2d );
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: center.Z = ( float )( ( Bounds.ZMin + Bounds.ZMax ) / 2d );
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )Math.Ceiling( 4 / 3d * Math.PI * rx * ry * rz );
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )Math.Ceiling( 4 / 3d * Math.PI * rx * ry * rz );
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: Bounds.Height > 2
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int hollowVolume = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int hollowVolume = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int hollowVolume = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeX = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * ( Bounds.ZMax != Bounds.ZMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeX = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * ( Bounds.ZMax != Bounds.ZMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeX = Math.Max( 0' Bounds.Width - 2 ) * Math.Max( 0' Bounds.Length - 2 ) * ( Bounds.ZMax != Bounds.ZMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeY = Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ) * ( Bounds.XMax != Bounds.XMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeY = Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ) * ( Bounds.XMax != Bounds.XMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeY = Math.Max( 0' Bounds.Length - 2 ) * Math.Max( 0' Bounds.Height - 2 ) * ( Bounds.XMax != Bounds.XMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeZ = Math.Max( 0' Bounds.Height - 2 ) * Math.Max( 0' Bounds.Width - 2 ) * ( Bounds.YMax != Bounds.YMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeZ = Math.Max( 0' Bounds.Height - 2 ) * Math.Max( 0' Bounds.Width - 2 ) * ( Bounds.YMax != Bounds.YMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: int sideVolumeZ = Math.Max( 0' Bounds.Height - 2 ) * Math.Max( 0' Bounds.Width - 2 ) * ( Bounds.YMax != Bounds.YMin ? 2 : 1 );
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: Bounds.Width > 2
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: Bounds.Length > 2
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: Bounds.Height > 2
Magic Number,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MarbledBrush,The following statement contains a magic number: Frequency = 0.1f;
Magic Number,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MarbledBrush,The following statement contains a magic number: Frequency = 0.1f;
Magic Number,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MarbledBrush,The following statement contains a magic number: Frequency = 0.1f;
Magic Number,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MarbledBrush,The following statement contains a magic number: Frequency = 0.1f;
Magic Number,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MapValue,The following statement contains a magic number: return Math.Abs( rawValue * 2 - 1 );
Magic Number,fCraft.Drawing,MarbledBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MapAllValues,The following statement contains a magic number: ptr[i] = Math.Abs( ptr[i] * 2 - 1 );
Magic Number,fCraft.Drawing,RainbowBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RainbowBrush.cs,NextBlock,The following statement contains a magic number: return Rainbow[( state.Coords.X + state.Coords.Y + state.Coords.Z ) % 7];
Magic Number,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: int n = seed ^ ( op.Coords.X + 1290 * op.Coords.Y + 1664510 * op.Coords.Z );
Magic Number,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: int n = seed ^ ( op.Coords.X + 1290 * op.Coords.Y + 1664510 * op.Coords.Z );
Magic Number,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = ( n << 13 ) ^ n;
Magic Number,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF;
Magic Number,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF;
Magic Number,fCraft.Drawing,RandomBrush,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = ( n * ( n * n * 15731 + 789221 ) + 1376312589 ) & 0x7FFFFFFF;
Magic Number,fCraft.Drawing,TorusDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TorusDrawOperation.cs,Prepare,The following statement contains a magic number: bigR = Math.Sqrt( radiusVector.X * radiusVector.X +                                radiusVector.Y * radiusVector.Y + .5 );
Magic Number,fCraft.Drawing,TorusDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\TorusDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = ( int )( 2 * Math.PI * Math.PI * bigR * ( tubeR * tubeR + Bias ) );
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction() { _d = ( _d + 2 ) % 4 } : new Direction() { _d = 9 - _d };
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction() { _d = ( _d + 2 ) % 4 } : new Direction() { _d = 9 - _d };
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction() { _d = ( _d + 2 ) % 4 } : new Direction() { _d = 9 - _d };
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction() { _d = ( _d + 2 ) % 4 } : new Direction() { _d = 9 - _d };
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,GetRndPermutation,The following statement contains a magic number: Direction[] a = new Direction[6];
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                      x = xFrom + cellSize;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 1:                      y = yFrom + cellSize;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 2:                      x = xFrom - 1;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 3:                      y = yFrom - 1;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 4:                      z = zFrom - 1;                      fun( ref x' ref y' xFrom' yFrom );                      break;                    case 5:                      z = zFrom + cellSize;                      fun( ref x' ref y' xFrom' yFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                      x = xFrom + cellSize;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 1:                      y = yFrom + cellSize;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 2:                      x = xFrom - 1;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 3:                      y = yFrom - 1;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 4:                      z = zFrom - 1;                      fun( ref x' ref y' xFrom' yFrom );                      break;                    case 5:                      z = zFrom + cellSize;                      fun( ref x' ref y' xFrom' yFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                      x = xFrom + cellSize;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 1:                      y = yFrom + cellSize;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 2:                      x = xFrom - 1;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 3:                      y = yFrom - 1;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 4:                      z = zFrom - 1;                      fun( ref x' ref y' xFrom' yFrom );                      break;                    case 5:                      z = zFrom + cellSize;                      fun( ref x' ref y' xFrom' yFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                      x = xFrom + cellSize;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 1:                      y = yFrom + cellSize;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 2:                      x = xFrom - 1;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 3:                      y = yFrom - 1;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 4:                      z = zFrom - 1;                      fun( ref x' ref y' xFrom' yFrom );                      break;                    case 5:                      z = zFrom + cellSize;                      fun( ref x' ref y' xFrom' yFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                  case 2:                      y = yFrom - 1;                      z = zFrom - 1;                      fun( ref x' xFrom );                      break;                    case 1:                  case 3:                      x = xFrom - 1;                      z = zFrom - 1;                      fun( ref y' yFrom );                      break;                    case 4:                  case 5:                      x = xFrom - 1;                      y = yFrom - 1;                      fun( ref z' zFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                  case 2:                      y = yFrom - 1;                      z = zFrom - 1;                      fun( ref x' xFrom );                      break;                    case 1:                  case 3:                      x = xFrom - 1;                      z = zFrom - 1;                      fun( ref y' yFrom );                      break;                    case 4:                  case 5:                      x = xFrom - 1;                      y = yFrom - 1;                      fun( ref z' zFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                  case 2:                      y = yFrom - 1;                      z = zFrom - 1;                      fun( ref x' xFrom );                      break;                    case 1:                  case 3:                      x = xFrom - 1;                      z = zFrom - 1;                      fun( ref y' yFrom );                      break;                    case 4:                  case 5:                      x = xFrom - 1;                      y = yFrom - 1;                      fun( ref z' zFrom );                      break;              }
Magic Number,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch ( _d ) {                  case 0:                  case 2:                      y = yFrom - 1;                      z = zFrom - 1;                      fun( ref x' xFrom );                      break;                    case 1:                  case 3:                      x = xFrom - 1;                      z = zFrom - 1;                      fun( ref y' yFrom );                      break;                    case 4:                  case 5:                      x = xFrom - 1;                      y = yFrom - 1;                      fun( ref z' zFrom );                      break;              }
Magic Number,RandomMaze,Path,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: _wallAtEndRemoved || _cells.Count < 5
Magic Number,RandomMaze,Path,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: ReferenceEquals( next.Path' this ) && Math.Abs( last.IndexInPath - next.IndexInPath ) < 10
Magic Number,RandomMaze,Path,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: next.IndexInPath + ( null == next.Path._parent ? 0 : next.Path._forkedAtParents ) < 5
Magic Number,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Maze,The following statement contains a magic number: _cells[0][0][0].RemoveWall( Direction.All[3] );
Magic Number,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Mazefy,The following statement contains a magic number: XSize * YSize * ZSize > 90
Magic Number,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,AddCycles,The following statement contains a magic number: tries < 5
Magic Number,RandomMaze,Maze,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,AddCycles,The following statement contains a magic number: i < Math.Sqrt( XSize * YSize * ZSize ) / 10.0 + 1
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: Bounds.Width < 3 || Bounds.Length < 3
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: Bounds.Width < 3 || Bounds.Length < 3
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: Bounds.Width % 2 != 1 || Bounds.Length % 2 != 1
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: Bounds.Width % 2 != 1 || Bounds.Length % 2 != 1
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: _maze = new Maze( ( Bounds.Width - 1 ) / 2' ( Bounds.Length - 1 ) / 2' 1 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: _maze = new Maze( ( Bounds.Width - 1 ) / 2' ( Bounds.Length - 1 ) / 2' 1 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2' j * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2' j * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2 + 1' j * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2 + 1' j * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: _maze.GetCell( i' j' 0 ).Wall( Direction.All[3] )
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2' j * 2 + 1 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2' j * 2 + 1 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: _maze.GetCell( i' j' 0 ).Wall( Direction.All[2] )
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( _maze.XSize * 2' j * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( _maze.XSize * 2' j * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( _maze.XSize * 2' j * 2 + 1 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( _maze.XSize * 2' j * 2 + 1 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2' _maze.YSize * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2' _maze.YSize * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2 + 1' _maze.YSize * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( i * 2 + 1' _maze.YSize * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( _maze.XSize * 2' _maze.YSize * 2 );
Magic Number,RandomMaze,MazeCuboidDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY( _maze.XSize * 2' _maze.YSize * 2 );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawColumn( _maze.XSize' yCell' zCell' Direction.All[4] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawColumn( xCell' _maze.YSize' zCell' Direction.All[4] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawColumn( _maze.XSize' _maze.YSize' zCell' Direction.All[4] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawWall( xCell' yCell' _maze.ZSize - 1' Direction.All[5] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawWall( xCell' yCell' zCell' Direction.All[2] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawWall( xCell' yCell' zCell' Direction.All[3] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawWall( xCell' yCell' zCell' Direction.All[4] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawColumn( xCell' yCell' zCell' Direction.All[4] );
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: _drawElevators && !_maze.GetCell( xCell' yCell' zCell ).Wall( Direction.All[5] )
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.X = xCell * ( _cellSize + 1 ) + 1 + _cellSize / 2 + Marks[0].X;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.Y = yCell * ( _cellSize + 1 ) + 1 + _cellSize / 2 + Marks[0].Y;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.Y = yCell * ( _cellSize + 1 ) + 1 + _cellSize / 2 + Marks[0].Y;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: _wallPatternCoordY = _cellSize / 2;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.X = xCell * ( _cellSize + 1 ) + 1 + _cellSize / 2 + Marks[0].X;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: _wallPatternCoordX = _cellSize / 2;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawPartOfPartialWall,The following statement contains a magic number: patternCoord == _cellSize / 2
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,ChoosePattern,The following statement contains a magic number: _patternIdx = _r.NextDouble() < 0.24 ? _r.Next( _patterns.Length ) : -1;
Magic Number,RandomMaze,RandomMazeDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,NextBlock,The following statement contains a magic number: return _r.NextDouble() < 0.2                          ? Block.Wood /*_playersBrush.NextBlock(this)*/                          : _randomBlocks[_r.Next( _randomBlocks.Length )];
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math1,The following statement contains a magic number: Thread.Sleep( 5000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math1,The following statement contains a magic number: int a = new Random().Next( 1' 15 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math1,The following statement contains a magic number: int b = new Random().Next( 1' 15 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math1,The following statement contains a magic number: Thread.Sleep( 15000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math2,The following statement contains a magic number: Thread.Sleep( 5000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math2,The following statement contains a magic number: int a = new Random().Next( 1' 100 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math2,The following statement contains a magic number: int b = new Random().Next( 1' 200 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math2,The following statement contains a magic number: Thread.Sleep( 15000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: wait( 6000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: world.Map.GetBlock( p.Position.X / 32' p.Position.Y / 32' ( short )( p.Position.Z / 32 - 1.59375 ) ) != Block.Grass
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: world.Map.GetBlock( p.Position.X / 32' p.Position.Y / 32' ( short )( p.Position.Z / 32 - 1.59375 ) ) != Block.Grass
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: world.Map.GetBlock( p.Position.X / 32' p.Position.Y / 32' ( short )( p.Position.Z / 32 - 1.59375 ) ) != Block.Grass
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: world.Map.GetBlock( p.Position.X / 32' p.Position.Y / 32' ( short )( p.Position.Z / 32 - 1.59375 ) ) != Block.Grass
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startX = ( ( map.Bounds.XMin + map.Bounds.XMax ) / 2 ) + new Random().Next( 10' 50 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startX = ( ( map.Bounds.XMin + map.Bounds.XMax ) / 2 ) + new Random().Next( 10' 50 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startX = ( ( map.Bounds.XMin + map.Bounds.XMax ) / 2 ) + new Random().Next( 10' 50 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startY = ( ( map.Bounds.YMin + map.Bounds.YMax ) / 2 ) + new Random().Next( 10' 50 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startY = ( ( map.Bounds.YMin + map.Bounds.YMax ) / 2 ) + new Random().Next( 10' 50 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startY = ( ( map.Bounds.YMin + map.Bounds.YMax ) / 2 ) + new Random().Next( 10' 50 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startZ = ( ( map.Bounds.ZMin + map.Bounds.ZMax ) / 2 ) + new Random().Next( 10' 30 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startZ = ( ( map.Bounds.ZMin + map.Bounds.ZMax ) / 2 ) + new Random().Next( 10' 30 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: int startZ = ( ( map.Bounds.ZMin + map.Bounds.ZMax ) / 2 ) + new Random().Next( 10' 30 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: y <= startY + 5
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: x <= startX + 5
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: wait( 20000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: wait( 10000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: Vector3I block = new Vector3I( p.Position.X / 32' p.Position.Y / 32' ( p.Position.Z / 32 ) + 8 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: Vector3I block = new Vector3I( p.Position.X / 32' p.Position.Y / 32' ( p.Position.Z / 32 ) + 8 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: Vector3I block = new Vector3I( p.Position.X / 32' p.Position.Y / 32' ( p.Position.Z / 32 ) + 8 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: Vector3I block = new Vector3I( p.Position.X / 32' p.Position.Y / 32' ( p.Position.Z / 32 ) + 8 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: wait( 10000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: wait( 10000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: ( player.Position.Z / 32 - 2 ) == platBlock.Z || ( player.Position.Z / 32 - 1 ) == platBlock.Z
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: ( player.Position.Z / 32 - 2 ) == platBlock.Z || ( player.Position.Z / 32 - 1 ) == platBlock.Z
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: ( player.Position.Z / 32 - 2 ) == platBlock.Z || ( player.Position.Z / 32 - 1 ) == platBlock.Z
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: ( player.Position.Y / 32 ) == platBlock.Y
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: ( player.Position.X / 32 ) == platBlock.X
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,interval,The following statement contains a magic number: wait( 5000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,interval,The following statement contains a magic number: wait( 5000 );
Magic Number,fCraft.Games,MineChallenge,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Games\MineChallenge.cs,Start,The following statement contains a magic number: GameThread = new Thread( new ThreadStart( delegate {                  Init( world );                  world.GameOn = true;                  Server.Players.Message( "{0}&S Started a game of MineChallenge on world {1}"'                      player.ClassyName' world.ClassyName );                  foreach ( Player p in world.Players ) {                      TeamChooser( p' world );                  }                  Server.Players.Message( "&SThe game will start in 60 Seconds." );                  GameAdder( world );                  // wait(60000);                  world.Players.Message( "&SThe game has started!." );                  wait( 2000 );                  gamePicker();                  Scheduler.NewTask( t => PositionCheck() ).RunForever( TimeSpan.FromSeconds( 1 ) );              } ) );
Magic Number,fCraft.MapConversion,MapFCMv3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeader,The following statement contains a magic number: mapStream.Seek( 25 * layerCount' SeekOrigin.Current );
Magic Number,fCraft.MapConversion,MapFCMv3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Load,The following statement contains a magic number: mapStream.Seek( 25 * layerCount' SeekOrigin.Current );
Magic Number,fCraft.MapConversion,MapFCMv3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeaderInternal,The following statement contains a magic number: map.Guid = new Guid( reader.ReadBytes( 16 ) );
Magic Number,fCraft.MapConversion,MapFCMv3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Save,The following statement contains a magic number: writer.Seek( 29' SeekOrigin.Current );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[50] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[51] = ( byte )Block.StillLava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[52] = ( byte )Block.Blue;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[53] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[54] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[55] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[56] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[57] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[58] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[59] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[60] = ( byte )Block.Obsidian;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[61] = ( byte )Block.Cobblestone;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[62] = ( byte )Block.StillLava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[200] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[201] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[203] = ( byte )Block.Stair;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[206] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[207] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[209] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[210] = ( byte )Block.Sand;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[211] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[212] = ( byte )Block.RedFlower;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[213] = ( byte )Block.Gravel;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[215] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[216] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[217] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[219] = ( byte )Block.Sponge;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[220] = ( byte )Block.Sponge;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[221] = ( byte )Block.Gold;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[222] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[223] = ( byte )Block.Gold;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[224] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[225] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[226] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[227] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[228] = ( byte )Block.Iron;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[229] = ( byte )Block.Iron;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[230] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[231] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[232] = ( byte )Block.Black;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[235] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[236] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[244] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[245] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[247] = ( byte )Block.Iron;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping[248] = ( byte )Block.Obsidian;
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return ( formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 ||                                  formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050 );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return ( formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 ||                                  formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050 );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return ( formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 ||                                  formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050 );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return ( formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 ||                                  formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050 );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return ( formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 ||                                  formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050 );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return ( formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 ||                                  formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050 );
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: switch ( formatVersion ) {                      case 1000:                      case 1010:                          break;                        case 1020:                          spawn.X = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Y = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Z = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          map.Spawn = spawn;                          break;                      //case 1030:                      //case 1040:                      //case 1050:                      default:                          spawn.X = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Y = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Z = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.R = ( byte )IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.L = ( byte )IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          map.Spawn = spawn;                          break;                  }
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: switch ( formatVersion ) {                      case 1000:                      case 1010:                          break;                        case 1020:                          spawn.X = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Y = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Z = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          map.Spawn = spawn;                          break;                      //case 1030:                      //case 1040:                      //case 1050:                      default:                          spawn.X = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Y = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Z = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.R = ( byte )IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.L = ( byte )IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          map.Spawn = spawn;                          break;                  }
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: switch ( formatVersion ) {                      case 1000:                      case 1010:                          break;                        case 1020:                          spawn.X = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Y = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Z = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          map.Spawn = spawn;                          break;                      //case 1030:                      //case 1040:                      //case 1050:                      default:                          spawn.X = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Y = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.Z = IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.R = ( byte )IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          spawn.L = ( byte )IPAddress.NetworkToHostOrder( bs.ReadInt16() );                          map.Spawn = spawn;                          break;                  }
Magic Number,fCraft.MapConversion,MapD3,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Save,The following statement contains a magic number: bs.Write( IPAddress.HostToNetworkOrder( 1050 ) );
Magic Number,fCraft.MapConversion,MapMyne,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {                      X = ( short )( Int16.Parse( metaFile["spawn"' "x"] ) * 32 + 16 )'                      Y = ( short )( Int16.Parse( metaFile["spawn"' "z"] ) * 32 + 16 )'                      Z = ( short )( Int16.Parse( metaFile["spawn"' "y"] ) * 32 + 16 )'                      R = Byte.Parse( metaFile["spawn"' "h"] )'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapMyne,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {                      X = ( short )( Int16.Parse( metaFile["spawn"' "x"] ) * 32 + 16 )'                      Y = ( short )( Int16.Parse( metaFile["spawn"' "z"] ) * 32 + 16 )'                      Z = ( short )( Int16.Parse( metaFile["spawn"' "y"] ) * 32 + 16 )'                      R = Byte.Parse( metaFile["spawn"' "h"] )'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapMyne,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {                      X = ( short )( Int16.Parse( metaFile["spawn"' "x"] ) * 32 + 16 )'                      Y = ( short )( Int16.Parse( metaFile["spawn"' "z"] ) * 32 + 16 )'                      Z = ( short )( Int16.Parse( metaFile["spawn"' "y"] ) * 32 + 16 )'                      R = Byte.Parse( metaFile["spawn"' "h"] )'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapMyne,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {                      X = ( short )( Int16.Parse( metaFile["spawn"' "x"] ) * 32 + 16 )'                      Y = ( short )( Int16.Parse( metaFile["spawn"' "z"] ) * 32 + 16 )'                      Z = ( short )( Int16.Parse( metaFile["spawn"' "y"] ) * 32 + 16 )'                      R = Byte.Parse( metaFile["spawn"' "h"] )'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapMyne,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {                      X = ( short )( Int16.Parse( metaFile["spawn"' "x"] ) * 32 + 16 )'                      Y = ( short )( Int16.Parse( metaFile["spawn"' "z"] ) * 32 + 16 )'                      Z = ( short )( Int16.Parse( metaFile["spawn"' "y"] ) * 32 + 16 )'                      R = Byte.Parse( metaFile["spawn"' "h"] )'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapMyne,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {                      X = ( short )( Int16.Parse( metaFile["spawn"' "x"] ) * 32 + 16 )'                      Y = ( short )( Int16.Parse( metaFile["spawn"' "z"] ) * 32 + 16 )'                      Z = ( short )( Int16.Parse( metaFile["spawn"' "y"] ) * 32 + 16 )'                      R = Byte.Parse( metaFile["spawn"' "h"] )'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[255] = ( byte )Block.Sponge;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[254] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[253] = ( byte )Block.Sponge;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[252] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[251] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[250] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[249] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[248] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[247] = ( byte )Block.Black;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[246] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[245] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[244] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[243] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[242] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[241] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[240] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[239] = ( byte )Block.Admincrete;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[238] = ( byte )Block.Admincrete;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[237] = ( byte )Block.Green;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[236] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping[235] = ( byte )Block.Sponge;
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Claims,The following statement contains a magic number: return ( version == 1 || version == 2 );
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,LoadHeaderInternal,The following statement contains a magic number: version != 1 && version != 2
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,LoadHeaderInternal,The following statement contains a magic number: Position spawn = new Position {                  X = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  Z = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  Y = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  R = bs.ReadByte()'                  L = bs.ReadByte()              };
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,LoadHeaderInternal,The following statement contains a magic number: Position spawn = new Position {                  X = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  Z = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  Y = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  R = bs.ReadByte()'                  L = bs.ReadByte()              };
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,LoadHeaderInternal,The following statement contains a magic number: Position spawn = new Position {                  X = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  Z = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  Y = ( short )( IPAddress.NetworkToHostOrder( bs.ReadInt16() ) * 32 )'                  R = bs.ReadByte()'                  L = bs.ReadByte()              };
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: bs.Write( IPAddress.NetworkToHostOrder( ( short )( mapToSave.Spawn.X / 32 ) ) );
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: bs.Write( IPAddress.NetworkToHostOrder( ( short )( mapToSave.Spawn.Z / 32 ) ) );
Magic Number,fCraft.MapConversion,MapJTE,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: bs.Write( IPAddress.NetworkToHostOrder( ( short )( mapToSave.Spawn.Y / 32 ) ) );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[50] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[51] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[52] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[53] = ( byte )Block.Stair;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[54] = ( byte )Block.Wood;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[55] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[56] = ( byte )Block.IronOre;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[57] = ( byte )Block.Aqua;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[58] = ( byte )Block.Log;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[59] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[60] = ( byte )Block.Dirt;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[61] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[62] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[63] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[64] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[65] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[66] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[67] = ( byte )Block.Stair;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[68] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[69] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[70] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[71] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[72] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[73] = ( byte )Block.IronOre;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[74] = ( byte )Block.IronOre;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[75] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[76] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[77] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[78] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[79] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[80] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[81] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[82] = ( byte )Block.Gray;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[83] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[84] = ( byte )Block.Log;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[85] = ( byte )Block.Wood;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[86] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[87] = ( byte )Block.Dirt;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[88] = ( byte )Block.Gravel;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[89] = ( byte )Block.Sand;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[90] = ( byte )Block.Violet;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping[91] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: byte[] temp = new byte[8];
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: mapStream.Seek( -4' SeekOrigin.End );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: mapStream.Read( temp' 0' 4 );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: byte[] temp = new byte[8];
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: mapStream.Seek( -4' SeekOrigin.End );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: mapStream.Read( temp' 0' 4 );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: int pointer = i + 6;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy( data' pointer' temp' 0' 2 );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: pointer += 13;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: headerEnd += 2;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: switch ( ( char )data[pointer] ) {                              case 'Z':                                  offset++;                                  break;                                case 'F':                              case 'I':                                  offset += 4;                                  break;                                case 'J':                                  offset += 8;                                  break;                          }
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: switch ( ( char )data[pointer] ) {                              case 'Z':                                  offset++;                                  break;                                case 'F':                              case 'I':                                  offset += 4;                                  break;                                case 'J':                                  offset += 8;                                  break;                          }
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy( data' pointer' temp' 0' 2 );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: pointer += 2;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy( data' headerEnd + offset - 4' temp' 0' 4 );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy( data' headerEnd + offset - 4' temp' 0' 4 );
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: pointer = offset + 7;
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: data[offset] == 0x00 && data[offset + 1] == 0x78 && data[offset + 2] == 0x70
Magic Number,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: offset != -1 && offset < data.Length - 2
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[100] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[101] = ( byte )Block.Obsidian;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[102] = ( byte )Block.Brick;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[103] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[104] = ( byte )Block.Cobblestone;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[106] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[110] = ( byte )Block.Wood;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[111] = ( byte )Block.Log;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[112] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[113] = ( byte )Block.Obsidian;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[114] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[115] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[116] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[117] = ( byte )Block.Sand;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[118] = ( byte )Block.Wood;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[119] = ( byte )Block.Green;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[120] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[121] = ( byte )Block.Stair;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[122] = ( byte )Block.Log;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[123] = ( byte )Block.Obsidian;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[124] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[125] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[126] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[127] = ( byte )Block.Sand;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[128] = ( byte )Block.Wood;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[129] = ( byte )Block.Green;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[130] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[131] = ( byte )Block.Black;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[132] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[133] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[134] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[135] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[136] = ( byte )Block.Stair;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[137] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[138] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[139] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[140] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[141] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[143] = ( byte )Block.Aqua;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[144] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[145] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[146] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[147] = ( byte )Block.Cyan;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[148] = ( byte )Block.Log;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[149] = ( byte )Block.Obsidian;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[150] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[151] = ( byte )Block.Stone;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[152] = ( byte )Block.Leaves;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[153] = ( byte )Block.Sand;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[154] = ( byte )Block.Wood;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[155] = ( byte )Block.Green;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[156] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[157] = ( byte )Block.Stair;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[158] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[159] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[160] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[161] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[162] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[164] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[165] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[166] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[167] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[175] = ( byte )Block.Cyan;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[176] = ( byte )Block.Orange;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[182] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[183] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[184] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[185] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[187] = ( byte )Block.Glass;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[188] = ( byte )Block.Gold;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[189] = ( byte )Block.Iron;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[190] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[191] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[192] = ( byte )Block.Air;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[193] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[194] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[195] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[196] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[211] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[212] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[230] = ( byte )Block.Aqua;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[231] = ( byte )Block.TNT;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[232] = ( byte )Block.MossyRocks;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[233] = ( byte )Block.Lime;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[235] = ( byte )Block.White;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[236] = ( byte )Block.Black;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[237] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[238] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[239] = ( byte )Block.Water;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[240] = ( byte )Block.Blue;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[242] = ( byte )Block.Lava;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[245] = ( byte )Block.Gold;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[246] = ( byte )Block.Sponge;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[247] = ( byte )Block.Gray;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[248] = ( byte )Block.Red;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping[249] = ( byte )Block.Blue;
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,LoadHeaderInternal,The following statement contains a magic number: map.Spawn = new Position {                  X = ( short )( bs.ReadInt16() * 32 )'                  Z = ( short )( bs.ReadInt16() * 32 )'                  Y = ( short )( bs.ReadInt16() * 32 )'                  R = bs.ReadByte()'                  L = bs.ReadByte()'              };
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,LoadHeaderInternal,The following statement contains a magic number: map.Spawn = new Position {                  X = ( short )( bs.ReadInt16() * 32 )'                  Z = ( short )( bs.ReadInt16() * 32 )'                  Y = ( short )( bs.ReadInt16() * 32 )'                  R = bs.ReadByte()'                  L = bs.ReadByte()'              };
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,LoadHeaderInternal,The following statement contains a magic number: map.Spawn = new Position {                  X = ( short )( bs.ReadInt16() * 32 )'                  Z = ( short )( bs.ReadInt16() * 32 )'                  Y = ( short )( bs.ReadInt16() * 32 )'                  R = bs.ReadByte()'                  L = bs.ReadByte()'              };
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: bs.Write( mapToSave.Spawn.X / 32 );
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: bs.Write( mapToSave.Spawn.Z / 32 );
Magic Number,fCraft.MapConversion,MapMCSharp,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: bs.Write( mapToSave.Spawn.Y / 32 );
Magic Number,fCraft.MapConversion,MapNBT,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Claims,The following statement contains a magic number: return ( bs.ReadByte() == 10 && NBTag.ReadString( bs ) == "MinecraftLevel" );
Magic Number,fCraft.MapConversion,MapNBT,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Load,The following statement contains a magic number: map.Spawn = new Position {                      X = mapTag["Spawn"][0].GetShort()'                      Z = mapTag["Spawn"][1].GetShort()'                      Y = mapTag["Spawn"][2].GetShort()'                      R = 0'                      L = 0                  };
Magic Number,fCraft.MapConversion,MapFCMv4,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The following statement contains a magic number: switch ( layerName ) {                          case BlockLayerName:                              //long blockStart = stream.Position;                              map.Blocks = new byte[map.Volume];                              using ( GZipStream gs = new GZipStream( stream' CompressionMode.Decompress ) ) {                                  gs.Read( map.Blocks' 0' 4 ); // skip the 4-byte header                                  gs.Read( map.Blocks' 0' layerSize );                              }                              // TODO: get a cached compressed copy                              //int blockSize = (int)(stream.Position - blockStart);                              //stream.Seek( blockStart' SeekOrigin.Begin );                              //map.CachedCompressedMap = new byte[blockSize];                              //stream.Read( map.CachedCompressedMap' 0' blockSize );                              break;                            default:                              if ( layerSize > 0 ) {                                  byte[] layerData = new byte[layerSize];                                  using ( GZipStream gs = new GZipStream( stream' CompressionMode.Decompress ) ) {                                      gs.Read( layerData' 0' layerSize );                                  }                              }                              Logger.Log( LogType.Warning'                                          "MapFCMv4: Unsupported layer \"{0}\" discarded."' layerName );                              break;                      }
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: ( ( player.Position.Z / 32 ) - 1 ) <= Range.Zmax && ( ( player.Position.Z / 32 ) - 1 ) >= Range.Zmin
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: ( ( player.Position.Z / 32 ) - 1 ) <= Range.Zmax && ( ( player.Position.Z / 32 ) - 1 ) >= Range.Zmin
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: ( player.Position.Y / 32 ) <= Range.Ymax && ( player.Position.Y / 32 ) >= Range.Ymin
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: ( player.Position.Y / 32 ) <= Range.Ymax && ( player.Position.Y / 32 ) >= Range.Ymin
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: ( player.Position.X / 32 ) <= Range.Xmax && ( player.Position.X / 32 ) >= Range.Xmin
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: ( player.Position.X / 32 ) <= Range.Xmax && ( player.Position.X / 32 ) >= Range.Xmin
Magic Number,fCraft.Portals,Portal,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\Portal.cs,Remove,The following statement contains a magic number: this.AffectedBlocks = new Vector3I[2];
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: e.Player.PortalCache.DesiredOutputZ = ( e.Coords.Z + 2 ) * 32;
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: e.Player.PortalCache.DesiredOutputZ = ( e.Coords.Z + 2 ) * 32;
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: e.Player.Message( "You cannot use portals for another {0} seconds."' 4 - ( DateTime.UtcNow - e.Player.LastUsedPortal ).Seconds );
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: e.Player.LastWarnedPortal == null || ( DateTime.UtcNow - e.Player.LastWarnedPortal ).TotalSeconds > 2
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: e.Player.LastUsedPortal != null && ( DateTime.UtcNow - e.Player.LastUsedPortal ).TotalSeconds < 4
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: int Xdistance = ( world.Map.Spawn.X / 32 ) - block.X;
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: int Ydistance = ( world.Map.Spawn.Y / 32 ) - block.Y;
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: int Zdistance = ( world.Map.Spawn.Z / 32 ) - block.Z;
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Zdistance <= 10 && Zdistance >= -10
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Zdistance <= 10 && Zdistance >= -10
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Ydistance <= 10 && Ydistance >= -10
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Ydistance <= 10 && Ydistance >= -10
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Xdistance <= 10 && Xdistance >= -10
Magic Number,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: Xdistance <= 10 && Xdistance >= -10
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: CrcTable = new UInt32[256];
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: c = 3988292384 ^ ( c >> 1 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: j < 8
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: bool encodeUTF8 = ( BitConverter.ToUInt16( centralDirImage' pointer + 8 ) & 0x0800 ) != 0;
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: ushort method = BitConverter.ToUInt16( centralDirImage' pointer + 10 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: uint modifyTime = BitConverter.ToUInt32( centralDirImage' pointer + 12 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: uint crc32 = BitConverter.ToUInt32( centralDirImage' pointer + 16 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: uint comprSize = BitConverter.ToUInt32( centralDirImage' pointer + 20 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: uint fileSize = BitConverter.ToUInt32( centralDirImage' pointer + 24 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: ushort filenameSize = BitConverter.ToUInt16( centralDirImage' pointer + 28 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: ushort extraSize = BitConverter.ToUInt16( centralDirImage' pointer + 30 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: ushort commentSize = BitConverter.ToUInt16( centralDirImage' pointer + 32 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: uint headerOffset = BitConverter.ToUInt32( centralDirImage' pointer + 42 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: uint headerSize = ( uint )( 46 + filenameSize + extraSize + commentSize );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: ZipFileEntry zfe = new ZipFileEntry {                      Method = ( Compression )method'                      FilenameInZip =                          encoder.GetString( centralDirImage' pointer + 46'                                             filenameSize )'                      FileOffset = GetFileOffset( headerOffset )'                      FileSize = fileSize'                      CompressedSize = comprSize'                      HeaderOffset = headerOffset'                      HeaderSize = headerSize'                      Crc32 = crc32'                      ModifyTime = DosTimeToDateTime( modifyTime )                  };
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: zfe.Comment = encoder.GetString( centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: pointer += ( 46 + filenameSize + extraSize + commentSize );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ExtractFile,The following statement contains a magic number: byte[] signature = new byte[4];
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ExtractFile,The following statement contains a magic number: zipFileStream.Read( signature' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ExtractFile,The following statement contains a magic number: byte[] buffer = new byte[16384];
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: byte[] buffer = new byte[2];
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Seek( headerOffset + 26' SeekOrigin.Begin );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Read( buffer' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Read( buffer' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: return ( uint )( 30 + filenameSize + extraSize + headerOffset );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 3' 4' 20' 0 }' 0' 6 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 3' 4' 20' 0 }' 0' 6 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 3' 4' 20' 0 }' 0' 6 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 3' 4' 20' 0 }' 0' 6 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 3' 4' 20' 0 }' 0' 6 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 3' 4' 20' 0 }' 0' 6 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )( zfe.EncodeUTF8 ? 0x0800 : 0 ) )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )zfe.Method )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( DateTimeToDosTime( zfe.ModifyTime ) )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( new byte[] { 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0 }' 0' 12 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )encodedFilename.Length )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )0 )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 1' 2' 23' 0xB' 20' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 1' 2' 23' 0xB' 20' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 1' 2' 23' 0xB' 20' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 1' 2' 23' 0xB' 20' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 1' 2' 23' 0xB' 20' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 1' 2' 23' 0xB' 20' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )( zfe.EncodeUTF8 ? 0x0800 : 0 ) )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )zfe.Method )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( DateTimeToDosTime( zfe.ModifyTime ) )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.Crc32 )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.CompressedSize )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.FileSize )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )encodedFilename.Length )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )0 )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )encodedComment.Length )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )0 )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )0 )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )0 )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )0x8100 )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.HeaderOffset )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 5' 6' 0' 0' 0' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 5' 6' 0' 0' 0' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 5' 6' 0' 0' 0' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 5' 6' 0' 0' 0' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( new byte[] { 80' 75' 5' 6' 0' 0' 0' 0 }' 0' 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )files.Count + existingFiles )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )files.Count + existingFiles )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( size )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( offset )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )encodedComment.Length )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The following statement contains a magic number: byte[] buffer = new byte[16384];
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The following statement contains a magic number: zfe.Crc32 = CrcTable[( zfe.Crc32 ^ buffer[i] ) & 0xFF] ^ ( zfe.Crc32 >> 8 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return ( uint )(                  ( dt.Second / 2 ) | ( dt.Minute << 5 ) | ( dt.Hour << 11 ) |                  ( dt.Day << 16 ) | ( dt.Month << 21 ) | ( ( dt.Year - 1980 ) << 25 ) );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime(                  ( int )( dt >> 25 ) + 1980'                  ( int )( dt >> 21 ) & 15'                  ( int )( dt >> 16 ) & 31'                  ( int )( dt >> 11 ) & 31'                  ( int )( dt >> 5 ) & 63'                  ( int )( dt & 31 ) * 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Position = zfe.HeaderOffset + 8;
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( ( ushort )zfe.Method )' 0' 2 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Position = zfe.HeaderOffset + 14;
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.Crc32 )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.CompressedSize )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write( BitConverter.GetBytes( zfe.FileSize )' 0' 4 );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Length < 22
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek( -17' SeekOrigin.End );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek( -5' SeekOrigin.Current );
Magic Number,System.IO.Compression,ZipStorer,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek( 6' SeekOrigin.Current );
Missing Default,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following switch statement is missing a default case: switch ( buildCheck ) {                      case SecurityCheckResult.BlackListed:                          player.Message( "Cannot add a door to world {0}&S: You are barred from building here."'                                          player.World.ClassyName );                          return;                        case SecurityCheckResult.RankTooLow:                          player.Message( "Cannot add a door to world {0}&S: You are not allowed to build here."'                                          player.World.ClassyName );                          return;                      //case SecurityCheckResult.RankTooHigh:                  }
Missing Default,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BindHandler,The following switch statement is missing a default case: switch ( replacementBlock ) {                      case Block.Grass:                          permission = Permission.PlaceGrass;                          break;                        case Block.Admincrete:                          permission = Permission.PlaceAdmincrete;                          break;                        case Block.Water:                          permission = Permission.PlaceWater;                          break;                        case Block.Lava:                          permission = Permission.PlaceLava;                          break;                  }
Missing Default,fCraft,BuildingCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following switch statement is missing a default case: switch ( degrees ) {                  case 90:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = -1;                      matrix[b' a] = 1;                      break;                    case 180:                      matrix[a' a] = -1;                      matrix[b' b] = -1;                      break;                    case -90:                  case 270:                      matrix[a' a] = 0;                      matrix[b' b] = 0;                      matrix[a' b] = 1;                      matrix[b' a] = -1;                      break;              }
Missing Default,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following switch statement is missing a default case: switch ( direction ) {                          case Direction.one:                          case Direction.two:                              EndPos.X = FinishPos.X;                              break;                            case Direction.three:                          case Direction.four:                              EndPos.Y = FinishPos.Y;                              break;                      }
Missing Default,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following switch statement is missing a default case: switch ( direction ) {                      case Direction.one:                          EndPos.X -= 7;                          break;                        case Direction.two:                          EndPos.X += 7;                          break;                        case Direction.three:                          EndPos.Y -= 7;                          break;                        case Direction.four:                          EndPos.Y += 7;                          break;                  }
Missing Default,fCraft,FeedData,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following switch statement is missing a default case: switch ( direction ) {                      case Direction.one:                          x = ( int )( index / 8 ) + EndPos.X;                          y = StartPos.Y;                          z = StartPos.Z + ( index % 8 );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x >= StartPos.X && x <= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.two:                          x = ( short )( EndPos.X - ( index / 8 ) );                          y = ( short )StartPos.Y;                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( x <= StartPos.X && x >= FinishPos.X ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.three:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y + ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y >= StartPos.Y && y <= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                        case Direction.four:                          x = ( short )StartPos.X;                          y = ( short )( EndPos.Y - ( index / 8 ) );                          z = ( short )( StartPos.Z + ( index % 8 ) );                          if ( world.map.InBounds( x' y' z ) ) {                              if ( y <= StartPos.Y && y >= FinishPos.Y ) {                                  if ( ( Block )type != Block.Air ) {                                      var Pos = new Vector3I( x' y' z );                                      world.map.QueueUpdate( new BlockUpdate( null' Pos' ( Block )type ) );                                      Blocks.TryAdd( Pos.ToString()' Pos );                                  }                              }                          }                          break;                  }
Missing Default,fCraft,LifeHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CheckWorldPermissions,The following switch statement is missing a default case: switch ( buildCheck ) {                      case SecurityCheckResult.BlackListed:                          p.Message( "Cannot add life to world {0}&S: You are barred from building here."'                                          p.ClassyName );                          return false;                      case SecurityCheckResult.RankTooLow:                          p.Message( "Cannot add life to world {0}&S: You are not allowed to build here."'                                          p.ClassyName );                          return false;                  }
Missing Default,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,GetVarArray,The following switch statement is missing a default case: switch ( axis ) {                  case ValueAxis.Z:                      return new string[] { "x"' "y" };                  case ValueAxis.Y:                      return new string[] { "x"' "z" };                  case ValueAxis.X:                      return new string[] { "y"' "z" };              }
Missing Default,fCraft,FuncDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,GetAxis,The following switch statement is missing a default case: switch ( varName[0] ) {                      case 'x':                          return ValueAxis.X;                      case 'y':                          return ValueAxis.Y;                      case 'z':                          return ValueAxis.Z;                  }
Missing Default,fCraft,SimpleParser,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,Parse,The following switch statement is missing a default case: switch ( fd.SpecialKind ) {                              case SpecialOperandKind.LeftParenthesis:                                  tmpStack.Push( fd );                                  noBOperatorExpected = true;                                  break;                                case SpecialOperandKind.RightParenthesis:                                  noBOperatorExpected = false;                                  ProcessRightParenth( e' tmpStack' pos );                                  break;                                case SpecialOperandKind.Comma:                                  noBOperatorExpected = true;                                  ProcessComma( e' tmpStack' pos );                                  break;                          }
Missing Default,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following switch statement is missing a default case: switch ( realm.AccessSecurity.Include( info ) ) {                          case PermissionOverride.Deny:                              if ( realm.AccessSecurity.Check( info ) ) {                                  player.Message( "{0}&S is unbanned from Realm {1}"'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "You are now unbanned from Realm {0}&S (removed from blacklist by {1}&S)."'                                                      realm.ClassyName' player.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S was unbanned from Realm {1}&S. " +                                                  "Player is still NOT allowed to join (by rank)."'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were Unbanned from Realm {0}&S by {1}&S. " +                                                      "You are still NOT allowed to join (by rank)."'                                                      player.ClassyName' realm.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity' "{0} removed {1} from the access blacklist of {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now allowed to access {1}"'                                              info.ClassyName' realm.ClassyName );                              if ( target != null ) {                                  target.Message( "You can now access realm {0}&S (whitelisted by {1}&S)."'                                                  realm.ClassyName' player.ClassyName );                              }                              Logger.Log( LogType.UserActivity' "{0} added {1} to the access whitelist on realm {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              player.Message( "{0}&S is already on the access whitelist of {1}"'                                              info.ClassyName' realm.ClassyName );                              break;                      }
Missing Default,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following switch statement is missing a default case: switch ( realm.AccessSecurity.Exclude( info ) ) {                          case PermissionOverride.Deny:                              player.Message( "{0}&S is already banned from Realm {1}"'                                              info.ClassyName' realm.ClassyName );                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now banned from accessing {1}"'                                              info.ClassyName' realm.ClassyName );                              if ( target != null ) {                                  target.Message( "&WYou were banned by {0}&W from accessing realm {1}"'                                                  player.ClassyName' realm.ClassyName );                              }                              Logger.Log( LogType.UserActivity' "{0} added {1} to the access blacklist on realm {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              if ( realm.AccessSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer on the access whitelist of {1}&S. " +                                                  "Player is still allowed to join (by rank)."'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were banned from Realm {0}&S by {1}&S. " +                                                      "You are still allowed to join (by rank)."'                                                      player.ClassyName' realm.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S is no longer allowed to access {1}"'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "&WYou were banned from Realm {0}&W (Banned by {1}&W)."'                                                      realm.ClassyName' player.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity' "{0} removed {1} from the access whitelist on realm {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                      }
Missing Default,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following switch statement is missing a default case: switch ( realm.BuildSecurity.Include( info ) ) {                          case PermissionOverride.Deny:                              if ( realm.BuildSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer barred from building in {1}"'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "You can now build in realm {0}&S (removed from blacklist by {1}&S)."'                                                      realm.ClassyName' player.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S was removed from the build blacklist of {1}&S. " +                                                  "Player is still NOT allowed to build (by rank)."'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were removed from the build blacklist of realm {0}&S by {1}&S. " +                                                      "You are still NOT allowed to build (by rank)."'                                                      player.ClassyName' realm.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity' "{0} removed {1} from the build blacklist of {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now allowed to build in {1}"'                                              info.ClassyName' realm.ClassyName );                              if ( target != null ) {                                  target.Message( "You can now build in realm {0}&S (whitelisted by {1}&S)."'                                                  realm.ClassyName' player.ClassyName );                              }                              Logger.Log( LogType.UserActivity' "{0} added {1} to the build whitelist on realm {2}"'                                          player.Name' info.Name' realm.Name );                              break;                            case PermissionOverride.Allow:                              player.Message( "{0}&S is already on the build whitelist of {1}"'                                              info.ClassyName' realm.ClassyName );                              break;                      }
Missing Default,fCraft,RealmHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following switch statement is missing a default case: switch ( realm.BuildSecurity.Exclude( info ) ) {                          case PermissionOverride.Deny:                              player.Message( "{0}&S is already on build blacklist of {1}"'                                              info.ClassyName' realm.ClassyName );                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now barred from building in {1}"'                                              info.ClassyName' realm.ClassyName );                              if ( target != null ) {                                  target.Message( "&WYou were barred by {0}&W from building in realm {1}"'                                                  player.ClassyName' realm.ClassyName );                              }                              Logger.Log( LogType.UserActivity' "{0} added {1} to the build blacklist on realm {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              if ( realm.BuildSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer on the build whitelist of {1}&S. " +                                                  "Player is still allowed to build (by rank)."'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were removed from the build whitelist of realm {0}&S by {1}&S. " +                                                      "You are still allowed to build (by rank)."'                                                      player.ClassyName' realm.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S is no longer allowed to build in {1}"'                                                  info.ClassyName' realm.ClassyName );                                  if ( target != null ) {                                      target.Message( "&WYou can no longer build in realm {0}&W (removed from whitelist by {1}&W)."'                                                      realm.ClassyName' player.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity' "{0} removed {1} from the build whitelist on realm {2}"'                                          player.Name' info.Name' realm.Name );                              changesWereMade = true;                              break;                      }
Missing Default,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following switch statement is missing a default case: switch ( info.BanStatus ) {                  case BanStatus.Banned:                      if ( ipBan != null ) {                          player.Message( "  Account and IP are &CBANNED&S. See &H/BanInfo" );                      } else {                          player.Message( "  Account is &CBANNED&S. See &H/BanInfo" );                      }                      break;                    case BanStatus.IPBanExempt:                      if ( ipBan != null ) {                          player.Message( "  IP is &CBANNED&S' but account is exempt. See &H/BanInfo" );                      } else {                          player.Message( "  IP is not banned' and account is exempt. See &H/BanInfo" );                      }                      break;                    case BanStatus.NotBanned:                      if ( ipBan != null ) {                          player.Message( "  IP is &CBANNED&S. See &H/BanInfo" );                      }                      break;              }
Missing Default,fCraft,InfoCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following switch statement is missing a default case: switch ( info.BanStatus ) {                      case BanStatus.Banned:                          if ( ipBan != null ) {                              player.Message( "Player {0}&S and their IP are &CBANNED"' info.ClassyName );                          } else {                              player.Message( "Player {0}&S is &CBANNED&S (but their IP is not)."' info.ClassyName );                          }                          break;                        case BanStatus.IPBanExempt:                          if ( ipBan != null ) {                              player.Message( "Player {0}&S is exempt from an existing IP ban."' info.ClassyName );                          } else {                              player.Message( "Player {0}&S is exempt from IP bans."' info.ClassyName );                          }                          break;                        case BanStatus.NotBanned:                          if ( ipBan != null ) {                              player.Message( "Player {0}&s is not banned' but their IP is."' info.ClassyName );                          } else {                              player.Message( "Player {0}&s is not banned."' info.ClassyName );                          }                          break;                  }
Missing Default,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,The following switch statement is missing a default case: switch ( target.BanStatus ) {                  case BanStatus.Banned:                      if ( addExemption ) {                          player.Message( "Player {0}&S is currently banned. Unban before adding an exemption."'                                          target.ClassyName );                      } else {                          player.Message( "Player {0}&S is already banned. There is no exemption to remove."'                                          target.ClassyName );                      }                      break;                    case BanStatus.IPBanExempt:                      if ( addExemption ) {                          player.Message( "IP-Ban exemption already exists for player {0}"' target.ClassyName );                      } else {                          player.Message( "IP-Ban exemption removed for player {0}"'                                          target.ClassyName );                          target.BanStatus = BanStatus.NotBanned;                      }                      break;                    case BanStatus.NotBanned:                      if ( addExemption ) {                          player.Message( "IP-Ban exemption added for player {0}"'                                          target.ClassyName );                          target.BanStatus = BanStatus.IPBanExempt;                      } else {                          player.Message( "No IP-Ban exemption exists for player {0}"'                                          target.ClassyName );                      }                      break;              }
Missing Default,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following switch statement is missing a default case: switch ( targetWorld.AccessSecurity.CheckDetailed( player.Info ) ) {                              case SecurityCheckResult.Allowed:                              case SecurityCheckResult.WhiteListed:                                  if ( targetWorld.IsFull ) {                                      player.Message( "Cannot teleport to {0}&S because world {1}&S is full."'                                                      target.ClassyName'                                                      targetWorld.ClassyName );                                      return;                                  }                                  player.StopSpectating();                                  player.JoinWorld( targetWorld' WorldChangeReason.Tp' target.Position );                                  break;                                case SecurityCheckResult.BlackListed:                                  player.Message( "Cannot teleport to {0}&S because you are blacklisted on world {1}"'                                                  target.ClassyName'                                                  targetWorld.ClassyName );                                  break;                                case SecurityCheckResult.RankTooLow:                                  player.Message( "Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."'                                                  target.ClassyName'                                                  targetWorld.ClassyName'                                                  targetWorld.AccessSecurity.MinRank.ClassyName );                                  break;                              // TODO: case PermissionType.RankTooHigh:                          }
Missing Default,fCraft,ModerationCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,The following switch statement is missing a default case: switch ( world.AccessSecurity.CheckDetailed( target.Info ) ) {                  case SecurityCheckResult.Allowed:                  case SecurityCheckResult.WhiteListed:                      if ( world.IsFull ) {                          player.Message( "Cannot bring {0}&S because world {1}&S is full."'                                          target.ClassyName'                                          world.ClassyName );                          return;                      }                      target.StopSpectating();                      if ( usePlayerPosition ) {                          target.JoinWorld( world' WorldChangeReason.Bring' player.Position );                      } else {                          target.JoinWorld( world' WorldChangeReason.Bring );                      }                      break;                    case SecurityCheckResult.BlackListed:                      player.Message( "Cannot bring {0}&S because he/she is blacklisted on world {1}"'                                      target.ClassyName'                                      world.ClassyName );                      break;                    case SecurityCheckResult.RankTooLow:                      if ( overridePermissions ) {                          target.StopSpectating();                          if ( usePlayerPosition ) {                              target.JoinWorld( world' WorldChangeReason.Bring' player.Position );                          } else {                              target.JoinWorld( world' WorldChangeReason.Bring );                          }                      } else {                          player.Message( "Cannot bring {0}&S because world {1}&S requires {2}+&S to join."'                                          target.ClassyName'                                          world.ClassyName'                                          world.AccessSecurity.MinRank.ClassyName );                      }                      break;                  // TODO: case PermissionType.RankTooHigh:              }
Missing Default,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following switch statement is missing a default case: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      new RectangleF(                          ( float )x' ( float )y' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveTop:                      new RectangleF(                          ( float )( x - wid )' ( float )y' ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;                    case RectOrientations.RemoveRight:                      new RectangleF(                          ( float )( x + wid - 2 * hgt )'                          ( float )( y - hgt )' ( float )( 2 * hgt )' ( float )( 2 * hgt ) );                      break;                    case RectOrientations.RemoveBottom:                      new RectangleF( ( float )x' ( float )( y + hgt - 2 * wid )'                          ( float )( 2 * wid )' ( float )( 2 * wid ) );                      break;              }
Missing Default,fCraft,ShapesLib,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following switch statement is missing a default case: switch ( orientation ) {                  case RectOrientations.RemoveLeft:                      points.Add( new PointF( ( float )x' ( float )( y + hgt ) ) );                      x += hgt;                      wid -= hgt;                      orientation = RectOrientations.RemoveTop;                      break;                    case RectOrientations.RemoveTop:                      points.Add( new PointF( ( float )x' ( float )y ) );                      y += wid;                      hgt -= wid;                      orientation = RectOrientations.RemoveRight;                      break;                    case RectOrientations.RemoveRight:                      points.Add( new PointF( ( float )( x + wid )' ( float )y ) );                      wid -= hgt;                      orientation = RectOrientations.RemoveBottom;                      break;                    case RectOrientations.RemoveBottom:                      points.Add( new PointF( ( float )( x + wid )' ( float )( y + hgt ) ) );                      hgt -= wid;                      orientation = RectOrientations.RemoveLeft;                      break;              }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following switch statement is missing a default case: switch ( direction ) {                  case Direction.one:                      for ( int x = data.StartPos.X; x < data.StartPos.X + 60; x++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                        break;                    case Direction.two:                      for ( int x = data.StartPos.X; x > data.StartPos.X - 60; x-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )x' ( short )data.StartPos.Y' ( short )z' Block.Black ) );                              x1 = x;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( x1' marks[0].Y' z1 );                      data.FinishPos = new Vector3I( x1' marks[0].Y' z1 );                      break;                    case Direction.three:                      for ( int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++ ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;                    case Direction.four:                      for ( int y = data.StartPos.Y; y > data.StartPos.Y - 60; y-- ) {                          for ( int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++ ) {                              player.World.Map.QueueUpdate( new BlockUpdate( null' ( short )data.StartPos.X' ( short )y' ( short )z' Block.Black ) );                              y1 = y;                              z1 = z;                          }                      }                      data.EndPos = new Vector3I( marks[0].X' y1' z1 );                      data.FinishPos = new Vector3I( marks[0].X' y1' z1 );                      break;              }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PhysicsHandler,The following switch statement is missing a default case: switch (NextOp.ToLower())                      {                          case "on":                              if ( !world.tntPhysics ) {                                  world.EnableTNTPhysics( player' false );                              }                              if ( !world.sandPhysics ) {                                  world.EnableSandPhysics( player' false );                              }                              if ( !world.fireworkPhysics ) {                                  world.EnableFireworkPhysics( player' false );                              }                              if ( !world.waterPhysics ) {                                  world.EnableWaterPhysics( player' false );                              }                              if ( !world.plantPhysics ) {                                  world.EnablePlantPhysics( player' false );                              }                              if ( !world.gunPhysics ) {                                  world.EnableGunPhysics( player' false );                              }                              Server.Players.Message( "{0}&S turned ALL Physics on for {1}"' player.ClassyName' world.ClassyName );                              Logger.Log( LogType.SystemActivity' "{0} turned ALL Physics on for {1}"' player.Name' world.Name );                              break;                          case "off":                              if ( world.tntPhysics ) {                                  world.DisableTNTPhysics( player' false );                              }                              if ( world.sandPhysics ) {                                  world.DisableSandPhysics( player' false );                              }                              if ( world.fireworkPhysics ) {                                  world.DisableFireworkPhysics( player' false );                              }                              if ( world.waterPhysics ) {                                  world.DisableWaterPhysics( player' false );                              }                              if ( world.plantPhysics ) {                                  world.DisablePlantPhysics( player' false );                              }                              if ( world.gunPhysics ) {                                  world.DisableGunPhysics( player' false );                              }                              Server.Players.Message( "{0}&S turned ALL Physics off for {1}"' player.ClassyName' world.ClassyName );                              Logger.Log( LogType.SystemActivity' "{0} turned ALL Physics off for {1}"' player.Name' world.Name );                              break;                      }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The following switch statement is missing a default case: switch ( buildCheck ) {                      case SecurityCheckResult.BlackListed:                          player.Message( "Cannot add a MessageBlock to world {0}&S: You are barred from building here."'                                          player.World.ClassyName );                          return;                        case SecurityCheckResult.RankTooLow:                          player.Message( "Cannot add a MessageBlock to world {0}&S: You are not allowed to build here."'                                          player.World.ClassyName );                          return;                      //case SecurityCheckResult.RankTooHigh:                  }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The following switch statement is missing a default case: switch (valueText.ToLower())                      {                          case "on":                              if ( world.SideBlock != Block.Admincrete ) {                                  world.SideBlock = Block.Admincrete;                                  player.Message( "The sides of the world have been restored" );                              }                              break;                          case "off":                              world.SideBlock = Block.Air;                              player.Message( "The sides of the world have been removed" );                              break;                      }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,JoinHandler,The following switch statement is missing a default case: switch ( world.AccessSecurity.CheckDetailed( player.Info ) ) {                      case SecurityCheckResult.Allowed:                      case SecurityCheckResult.WhiteListed:                          if ( world.IsFull ) {                              player.Message( "Cannot join {0}&S: world is full."' world.ClassyName );                              return;                          }                          player.StopSpectating();                          if ( !player.JoinWorldNow( world' true' WorldChangeReason.ManualJoin ) ) {                              player.Message( "ERROR: Failed to join world. See log for details." );                          }                          break;                        case SecurityCheckResult.BlackListed:                          player.Message( "Cannot join world {0}&S: you are blacklisted."'                                          world.ClassyName );                          break;                        case SecurityCheckResult.RankTooLow:                          player.Message( "Cannot join world {0}&S: must be {1}+"'                                          world.ClassyName' world.AccessSecurity.MinRank.ClassyName );                          break;                  }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The following switch statement is missing a default case: switch ( world.AccessSecurity.CheckDetailed( player.Info ) ) {                              case SecurityCheckResult.RankTooLow:                                  player.Message( "&WYou must be {0}&W+ to add yourself to the access whitelist of {1}"'                                                  world.AccessSecurity.MinRank.ClassyName'                                                  world.ClassyName );                                  continue;                              // TODO: RankTooHigh                              case SecurityCheckResult.BlackListed:                                  player.Message( "&WYou cannot remove yourself from the access blacklist of {0}"'                                                  world.ClassyName );                                  continue;                          }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The following switch statement is missing a default case: switch ( world.AccessSecurity.Include( info ) ) {                          case PermissionOverride.Deny:                              if ( world.AccessSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer barred from accessing {1}"'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "You can now access world {0}&S (removed from blacklist by {1}&S)."'                                                      world.ClassyName' player.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S was removed from the access blacklist of {1}&S. " +                                                  "Player is still NOT allowed to join (by rank)."'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were removed from the access blacklist of world {0}&S by {1}&S. " +                                                      "You are still NOT allowed to join (by rank)."'                                                      world.ClassyName' player.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity'                                          "{0} removed {1} from the access blacklist of {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now allowed to access {1}"'                                              info.ClassyName' world.ClassyName );                              if ( target != null ) {                                  target.Message( "You can now access world {0}&S (whitelisted by {1}&S)."'                                                  world.ClassyName' player.ClassyName );                              }                              Logger.Log( LogType.UserActivity'                                          "{0} added {1} to the access whitelist on world {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              player.Message( "{0}&S is already on the access whitelist of {1}"'                                              info.ClassyName' world.ClassyName );                              break;                      }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The following switch statement is missing a default case: switch ( world.AccessSecurity.Exclude( info ) ) {                          case PermissionOverride.Deny:                              player.Message( "{0}&S is already on access blacklist of {1}"'                                              info.ClassyName' world.ClassyName );                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now barred from accessing {1}"'                                              info.ClassyName' world.ClassyName );                              if ( target != null ) {                                  target.Message( "&WYou were barred by {0}&W from accessing world {1}"'                                                  player.ClassyName' world.ClassyName );                              }                              Logger.Log( LogType.UserActivity'                                          "{0} added {1} to the access blacklist on world {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              if ( world.AccessSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer on the access whitelist of {1}&S. " +                                                  "Player is still allowed to join (by rank)."'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were removed from the access whitelist of world {0}&S by {1}&S. " +                                                      "You are still allowed to join (by rank)."'                                                      world.ClassyName' player.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S is no longer allowed to access {1}"'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "&WYou can no longer access world {0}&W (removed from whitelist by {1}&W)."'                                                      world.ClassyName' player.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity'                                          "{0} removed {1} from the access whitelist on world {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                      }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The following switch statement is missing a default case: switch ( world.BuildSecurity.CheckDetailed( player.Info ) ) {                              case SecurityCheckResult.RankTooLow:                                  player.Message( "&WYou must be {0}&W+ to add yourself to the build whitelist of {1}"'                                                  world.BuildSecurity.MinRank.ClassyName'                                                  world.ClassyName );                                  continue;                              // TODO: RankTooHigh                              case SecurityCheckResult.BlackListed:                                  player.Message( "&WYou cannot remove yourself from the build blacklist of {0}"'                                                  world.ClassyName );                                  continue;                          }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The following switch statement is missing a default case: switch ( world.BuildSecurity.Include( info ) ) {                          case PermissionOverride.Deny:                              if ( world.BuildSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer barred from building in {1}"'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "You can now build in world {0}&S (removed from blacklist by {1}&S)."'                                                      world.ClassyName' player.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S was removed from the build blacklist of {1}&S. " +                                                  "Player is still NOT allowed to build (by rank)."'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were removed from the build blacklist of world {0}&S by {1}&S. " +                                                      "You are still NOT allowed to build (by rank)."'                                                      world.ClassyName' player.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity'                                          "{0} removed {1} from the build blacklist of {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now allowed to build in {1}"'                                              info.ClassyName' world.ClassyName );                              if ( target != null ) {                                  target.Message( "You can now build in world {0}&S (whitelisted by {1}&S)."'                                                  world.ClassyName' player.ClassyName );                              }                              Logger.Log( LogType.UserActivity'                                          "{0} added {1} to the build whitelist on world {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              player.Message( "{0}&S is already on the build whitelist of {1}"'                                              info.ClassyName' world.ClassyName );                              break;                      }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The following switch statement is missing a default case: switch ( world.BuildSecurity.Exclude( info ) ) {                          case PermissionOverride.Deny:                              player.Message( "{0}&S is already on build blacklist of {1}"'                                              info.ClassyName' world.ClassyName );                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now barred from building in {1}"'                                              info.ClassyName' world.ClassyName );                              if ( target != null ) {                                  target.Message( "&WYou were barred by {0}&W from building in world {1}"'                                                  player.ClassyName' world.ClassyName );                              }                              Logger.Log( LogType.UserActivity'                                          "{0} added {1} to the build blacklist on world {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              if ( world.BuildSecurity.Check( info ) ) {                                  player.Message( "{0}&S is no longer on the build whitelist of {1}&S. " +                                                  "Player is still allowed to build (by rank)."'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "You were removed from the build whitelist of world {0}&S by {1}&S. " +                                                      "You are still allowed to build (by rank)."'                                                      world.ClassyName' player.ClassyName );                                  }                              } else {                                  player.Message( "{0}&S is no longer allowed to build in {1}"'                                                  info.ClassyName' world.ClassyName );                                  if ( target != null ) {                                      target.Message( "&WYou can no longer build in world {0}&W (removed from whitelist by {1}&W)."'                                                      world.ClassyName' player.ClassyName );                                  }                              }                              Logger.Log( LogType.UserActivity'                                          "{0} removed {1} from the build whitelist on world {2}"'                                          player.Name' info.Name' world.Name );                              changesWereMade = true;                              break;                      }
Missing Default,fCraft,WorldCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetMainWorld,The following switch statement is missing a default case: switch ( world.AccessSecurity.CheckDetailed( player.Info ) ) {                      case SecurityCheckResult.RankTooHigh:                      case SecurityCheckResult.RankTooLow:                          player.Message( "You are not allowed to set {0}&S as the main world (by rank)."' world.ClassyName );                          return;                        case SecurityCheckResult.BlackListed:                          player.Message( "You are not allowed to set {0}&S as the main world (blacklisted)."' world.ClassyName );                          return;                  }
Missing Default,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following switch statement is missing a default case: switch ( buildCheck ) {                      case SecurityCheckResult.BlackListed:                          player.Message( "Cannot add zones to world {0}&S: You are barred from building here."'                                          playerWorld.ClassyName );                          return;                        case SecurityCheckResult.RankTooLow:                          player.Message( "Cannot add zones to world {0}&S: You are not allowed to build here."'                                          playerWorld.ClassyName );                          return;                      //case SecurityCheckResult.RankTooHigh:                  }
Missing Default,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddCallback,The following switch statement is missing a default case: switch ( buildCheck ) {                      case SecurityCheckResult.BlackListed:                          player.Message( "Cannot add zones to world {0}&S: You are barred from building here."'                                          playerWorld.ClassyName );                          return;                        case SecurityCheckResult.RankTooLow:                          player.Message( "Cannot add zones to world {0}&S: You are not allowed to build here."'                                          playerWorld.ClassyName );                          return;                      //case SecurityCheckResult.RankTooHigh:                  }
Missing Default,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following switch statement is missing a default case: switch ( zone.Controller.Include( info ) ) {                          case PermissionOverride.Deny:                              player.Message( "{0}&S is no longer excluded from zone {1}"'                                              info.ClassyName' zone.ClassyName );                              changesWereMade = true;                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now included in zone {1}"'                                              info.ClassyName' zone.ClassyName );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              player.Message( "{0}&S is already included in zone {1}"'                                              info.ClassyName' zone.ClassyName );                              break;                      }
Missing Default,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following switch statement is missing a default case: switch ( zone.Controller.Exclude( info ) ) {                          case PermissionOverride.Deny:                              player.Message( "{0}&S is already excluded from zone {1}"'                                              info.ClassyName' zone.ClassyName );                              break;                            case PermissionOverride.None:                              player.Message( "{0}&S is now excluded from zone {1}"'                                              info.ClassyName' zone.ClassyName );                              changesWereMade = true;                              break;                            case PermissionOverride.Allow:                              player.Message( "{0}&S is no longer included in zone {1}"'                                              info.ClassyName' zone.ClassyName );                              changesWereMade = true;                              break;                      }
Missing Default,fCraft,ZoneCommands,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneRemoveHandler,The following switch statement is missing a default case: switch ( zone.Controller.CheckDetailed( player.Info ) ) {                          case SecurityCheckResult.BlackListed:                              player.Message( "You are not allowed to remove zone {0}: you are blacklisted."' zone.ClassyName );                              return;                            case SecurityCheckResult.RankTooLow:                              player.Message( "You are not allowed to remove zone {0}."' zone.ClassyName );                              return;                      }
Missing Default,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following switch statement is missing a default case: switch ( Chat.GetRawMessageType( rawMessage ) ) {                  case RawMessageType.Chat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            // Escaped slash removed AFTER logging' to avoid confusion with real commands                          if ( rawMessage.StartsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 1 );                          }                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Chat.SendGlobal( this' rawMessage );                      }                      break;                    case RawMessageType.Command: {                          if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                          Command cmd = new Command( rawMessage );                          CommandDescriptor commandDescriptor = CommandManager.GetDescriptor( cmd.Name' true );                            if ( commandDescriptor == null ) {                              MessageNow( "Unknown command \"{0}\". See &H/Commands"' cmd.Name );                          } else if ( Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers ) {                              MessageNow( "&WYou cannot use this command while frozen." );                          } else {                              if ( !commandDescriptor.DisableLogging ) {                                  Logger.Log( LogType.UserCommand'                                              "{0}: {1}"' Name' rawMessage );                              }                              if ( commandDescriptor.RepeatableSelection ) {                                  selectionRepeatCommand = cmd;                              }                              SendToSpectators( cmd.RawMessage );                              CommandManager.ParseCommand( this' cmd' fromConsole );                              if ( !commandDescriptor.NotRepeatable ) {                                  LastCommand = cmd;                              }                          }                      }                      break;                    case RawMessageType.RepeatCommand: {                          if ( LastCommand == null ) {                              Message( "No command to repeat." );                          } else {                              if ( Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers ) {                                  MessageNow( "&WYou cannot use this command while frozen." );                                  return;                              }                              LastCommand.Rewind();                              Logger.Log( LogType.UserCommand'                                          "{0} repeated: {1}"'                                          Name' LastCommand.RawMessage );                              Message( "Repeat: {0}"' LastCommand.RawMessage );                              SendToSpectators( LastCommand.RawMessage );                              CommandManager.ParseCommand( this' LastCommand' fromConsole );                          }                      }                      break;                    case RawMessageType.PrivateChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            string otherPlayerName' messageText;                          if ( rawMessage[1] == ' ' ) {                              otherPlayerName = rawMessage.Substring( 2' rawMessage.IndexOf( ' '' 2 ) - 2 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' '' 2 ) + 1 );                          } else {                              otherPlayerName = rawMessage.Substring( 1' rawMessage.IndexOf( ' ' ) - 1 );                              messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                          }                            if ( otherPlayerName == "-" ) {                              if ( LastUsedPlayerName != null ) {                                  otherPlayerName = LastUsedPlayerName;                              } else {                                  Message( "Cannot repeat player name: you haven't used any names yet." );                                  return;                              }                          }                            // first' find ALL players (visible and hidden)                          Player[] allPlayers = Server.FindPlayers( otherPlayerName' true );                            // if there is more than 1 target player' exclude hidden players                          if ( allPlayers.Length > 1 ) {                              allPlayers = Server.FindPlayers( this' otherPlayerName' true );                          }                            if ( allPlayers.Length == 1 ) {                              Player target = allPlayers[0];                              if ( target == this ) {                                  MessageNow( "Trying to talk to yourself?" );                                  return;                              }                              if ( !target.IsIgnoring( Info ) && !target.IsDeaf ) {                                  Chat.SendPM( this' target' messageText );                                  SendToSpectators( "to {0}&F: {1}"' target.ClassyName' messageText );                              }                                if ( !CanSee( target ) ) {                                  // message was sent to a hidden player                                  MessageNoPlayer( otherPlayerName );                              } else {                                  // message was sent normally                                  LastUsedPlayerName = target.Name;                                  if ( target.IsIgnoring( Info ) ) {                                      if ( CanSee( target ) ) {                                          MessageNow( "&WCannot PM {0}&W: you are ignored."' target.ClassyName );                                      }                                  } else if ( target.IsDeaf ) {                                      MessageNow( "&SCannot PM {0}&S: they are currently deaf."' target.ClassyName );                                  } else {                                      MessageNow( "&Pto {0}: {1}"'                                                  target.Name' messageText );                                  }                              }                          } else if ( allPlayers.Length == 0 ) {                              MessageNoPlayer( otherPlayerName );                          } else {                              MessageManyMatches( "player"' allPlayers );                          }                      }                      break;                    case RawMessageType.RankChat: {                          if ( !Can( Permission.Chat ) )                              return;                            if ( Info.IsMuted ) {                              MessageMuted();                              return;                          }                            if ( DetectChatSpam() )                              return;                            if ( rawMessage.EndsWith( "//" ) ) {                              rawMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                          }                            Rank rank;                          if ( rawMessage[2] == ' ' ) {                              rank = Info.Rank;                          } else {                              string rankName = rawMessage.Substring( 2' rawMessage.IndexOf( ' ' ) - 2 );                              rank = RankManager.FindRank( rankName );                              if ( rank == null ) {                                  MessageNoRank( rankName );                                  break;                              }                          }                            string messageText = rawMessage.Substring( rawMessage.IndexOf( ' ' ) + 1 );                            Player[] spectators = Server.Players.NotRanked( Info.Rank )                                                              .Where( p => p.spectatedPlayer == this )                                                              .ToArray();                          if ( spectators.Length > 0 ) {                              spectators.Message( "[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText );                          }                            Chat.SendRank( this' rank' messageText );                      }                      break;                    case RawMessageType.Confirmation: {                          if ( Info.IsFrozen ) {                              MessageNow( "&WYou cannot use any commands while frozen." );                              return;                          }                          if ( ConfirmCallback != null ) {                              if ( DateTime.UtcNow.Subtract( ConfirmRequestTime ) < ConfirmationTimeout ) {                                  SendToSpectators( "/ok" );                                  ConfirmCallback( this' ConfirmArgument' fromConsole );                                  ConfirmCallback = null;                                  ConfirmArgument = null;                              } else {                                  MessageNow( "Confirmation timed out. Enter the command again." );                              }                          } else {                              MessageNow( "There is no command to confirm." );                          }                      }                      break;                    case RawMessageType.PartialMessage:                      partialMessage = rawMessage.Substring( 0' rawMessage.Length - 1 );                      MessageNow( "Partial: &F{0}"' partialMessage );                      break;                    case RawMessageType.Invalid:                      MessageNow( "Could not parse message." );                      break;              }
Missing Default,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following switch statement is missing a default case: switch ( canPlaceResult ) {                  case CanPlaceResult.Allowed:                      BlockUpdate blockUpdate;                      if ( type == Block.Stair && coord.Z > 0 && map.GetBlock( coordBelow ) == Block.Stair ) {                          // handle stair stacking                          blockUpdate = new BlockUpdate( this' coordBelow' Block.DoubleStair );                          Info.ProcessBlockPlaced( ( byte )Block.DoubleStair );                          map.QueueUpdate( blockUpdate );                          RaisePlayerPlacedBlockEvent( this' World.Map' coordBelow' Block.Stair' Block.DoubleStair' context );                          SendNow( PacketWriter.MakeSetBlock( coordBelow' Block.DoubleStair ) );                          RevertBlockNow( coord );                          break;                      } else {                          // handle normal blocks                          blockUpdate = new BlockUpdate( this' coord' type );                          Info.ProcessBlockPlaced( ( byte )type );                          Block old = map.GetBlock( coord );                          map.QueueUpdate( blockUpdate );                          RaisePlayerPlacedBlockEvent( this' World.Map' coord' old' type' context );                          if ( requiresUpdate || RelayAllUpdates ) {                              SendNow( PacketWriter.MakeSetBlock( coord' type ) );                          }                      }                      break;                    case CanPlaceResult.BlocktypeDenied:                      Message( "&WYou are not permitted to affect this block type." );                      RevertBlockNow( coord );                      break;                    case CanPlaceResult.RankDenied:                      Message( "&WYour rank is not allowed to build." );                      RevertBlockNow( coord );                      break;                    case CanPlaceResult.Revert:                      RevertBlockNow( coord );                      break;                    case CanPlaceResult.WorldDenied:                      switch ( World.BuildSecurity.CheckDetailed( Info ) ) {                          case SecurityCheckResult.RankTooLow:                          case SecurityCheckResult.RankTooHigh:                              Message( "&WYour rank is not allowed to build in this world." );                              break;                            case SecurityCheckResult.BlackListed:                              Message( "&WYou are not allowed to build in this world." );                              break;                      }                      RevertBlockNow( coord );                      break;                    case CanPlaceResult.ZoneDenied:                      Zone deniedZone = WorldMap.Zones.FindDenied( coord' this );                      if ( deniedZone != null ) {                          Message( deniedZone.Message ?? string.Format( "&WYou are not allowed to build in zone \"{0}\"."' deniedZone.Name ) );                      } else {                          Message( "&WYou are not allowed to build here." );                      }                      RevertBlockNow( coord );                      break;                    case CanPlaceResult.PluginDenied:                      RevertBlockNow( coord );                      break;                    //case CanPlaceResult.PluginDeniedNoUpdate:                  //    break;              }
Missing Default,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following switch statement is missing a default case: switch ( World.BuildSecurity.CheckDetailed( Info ) ) {                          case SecurityCheckResult.RankTooLow:                          case SecurityCheckResult.RankTooHigh:                              Message( "&WYour rank is not allowed to build in this world." );                              break;                            case SecurityCheckResult.BlackListed:                              Message( "&WYou are not allowed to build in this world." );                              break;                      }
Missing Default,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following switch statement is missing a default case: switch ( nameVerificationMode ) {                          case NameVerificationMode.Always:                              Info.ProcessFailedLogin( this );                              Logger.Log( LogType.SuspiciousActivity'                                          "{0} IP matched previous records for that name. " +                                          "Player was kicked anyway because VerifyNames is set to Always."'                                          standardMessage );                              KickNow( "Could not verify player name!"' LeaveReason.UnverifiedName );                              return false;                            case NameVerificationMode.Balanced:                          case NameVerificationMode.Never:                              Logger.Log( LogType.SuspiciousActivity'                                          "{0} IP matched previous records for that name. Player was allowed in."'                                          standardMessage );                              IsVerified = true;                              break;                      }
Missing Default,fCraft,Player,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following switch statement is missing a default case: switch ( nameVerificationMode ) {                          case NameVerificationMode.Always:                          case NameVerificationMode.Balanced:                              Info.ProcessFailedLogin( this );                              Logger.Log( LogType.SuspiciousActivity'                                          "{0} IP did not match. Player was kicked."'                                          standardMessage );                              KickNow( "Could not verify player name!"' LeaveReason.UnverifiedName );                              return false;                            case NameVerificationMode.Never:                              Logger.Log( LogType.SuspiciousActivity'                                          "{0} IP did not match. Player was allowed in anyway because VerifyNames is set to Never."'                                          standardMessage );                              Message( "&WYour name could not be verified." );                              break;                      }
Missing Default,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Draw,The following switch statement is missing a default case: switch ( _life2d.Get( i - minI' j - minJ ) ) {                          case Life2d.Nothing:                              SetBlock( _empty );                              break;                            case Life2d.Normal:                              SetBlock( _normal );                              break;                            case Life2d.Newborn:                              SetBlock( _newborn );                              break;                            case Life2d.Dead:                              SetBlock( _dead );                              break;                      }
Missing Default,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,ReadToArrayByOrientation,The following switch statement is missing a default case: switch ( _orientation ) {                  case Orientation.X:                      ReadToArray( ref _coords.Y' ref _coords.Z' _bounds.YMin' _bounds.YMax' _bounds.ZMin' _bounds.ZMax );                      return;                    case Orientation.Y:                      ReadToArray( ref _coords.X' ref _coords.Z' _bounds.XMin' _bounds.XMax' _bounds.ZMin' _bounds.ZMax );                      return;                    case Orientation.Z:                      ReadToArray( ref _coords.X' ref _coords.Y' _bounds.XMin' _bounds.XMax' _bounds.YMin' _bounds.YMax );                      return;              }
Missing Default,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,DrawByOrientation,The following switch statement is missing a default case: switch ( _orientation ) {                  case Orientation.X:                      Draw( ref _coords.Y' ref _coords.Z' _bounds.YMin' _bounds.YMax' _bounds.ZMin' _bounds.ZMax );                      return;                    case Orientation.Y:                      Draw( ref _coords.X' ref _coords.Z' _bounds.XMin' _bounds.XMax' _bounds.ZMin' _bounds.ZMax );                      return;                    case Orientation.Z:                      Draw( ref _coords.X' ref _coords.Y' _bounds.XMin' _bounds.XMax' _bounds.YMin' _bounds.YMax );                      return;              }
Missing Default,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,PerformInternal,The following switch statement is missing a default case: switch ( _state ) {                      case State.Stopped:                          return 0;                      case State.Starting:                            ReadToArrayByOrientation();                          _initialState = _life2d.GetArrayCopy();                          _stateHashes.Clear();                            _state = State.HalfStep;                          goto case State.HalfStep; //fall through c# stile                      case State.HalfStep:                          _life2d.HalfStep();                          _state = State.FinalizedStep;                          if ( _halfStepDelay > 0 ) {                              DrawByOrientation();                              return _halfStepDelay;                          }                          goto case State.FinalizedStep; //fall through c# stile                      case State.FinalizedStep:                          _state = _life2d.FinalizeStep() ? State.HalfStep : ( _autoReset != AutoResetMethod.None ? State.Resetting : State.Stopped );                          if ( _autoReset != AutoResetMethod.None && State.HalfStep == _state ) {//check short periodical repetition                              if ( _stateHashes.Contains( _life2d.Hash ) )                                  _state = State.Resetting;                              else                                  _stateHashes.Add( _life2d.Hash );                          }                          DrawByOrientation();                          return _delay;                        case State.Resetting:                          if ( _autoReset == AutoResetMethod.None ) //has been just changed?  					    {                              _state = State.Stopped;                              return 0;                          }                          _life2d.Clear();                          _stateHashes.Clear();                          DrawByOrientation();                          _state = State.Reinit;                          return LongDelay;                        case State.Reinit:                          if ( _autoReset == AutoResetMethod.None ) //has been just changed?  						{                              _state = State.Stopped;                              return 0;                          }                          Reinit();                          _state = State.HalfStep;                          DrawByOrientation();                          return _delay;                  }
Missing Default,fCraft,Life2DZone,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Reinit,The following switch statement is missing a default case: switch ( _autoReset ) {                  case AutoResetMethod.ToInitial:                      if ( null == _initialState )                          goto case AutoResetMethod.ToRandom;                      _life2d.SetState( _initialState );                      return;                    case AutoResetMethod.ToRandom:                      _life2d.SetStateToRandom();                      return;              }
Missing Default,fCraft,Physics,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\Physics.cs,CanSquash,The following switch statement is missing a default case: switch ( block ) {                  case Block.BrownMushroom:                  case Block.Plant:                  case Block.RedFlower:                  case Block.RedMushroom:                  case Block.YellowFlower:                      return true;              }
Missing Default,fCraft,PlantTask,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,TypeByBlock,The following switch statement is missing a default case: switch ( b ) {                  case Block.Grass:                  case Block.Dirt:                      return TreeType.Normal;                  case Block.Sand:                      return TreeType.Palm;              }
Missing Default,fCraft,Chat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following switch statement is missing a default case: switch ( message[0] ) {                  case '/':                      if ( message.Length < 2 ) {                          // message too short to be a command                          return RawMessageType.Invalid;                      }                      if ( message[1] == '/' ) {                          // escaped slash in the beginning: "//blah"                          return RawMessageType.Chat;                      }                      if ( message[1] != ' ' ) {                          // normal command: "/cmd"                          return RawMessageType.Command;                      }                      return RawMessageType.Invalid;                    case '@':                      if ( message.Length < 4 || message.IndexOf( ' ' ) == -1 ) {                          // message too short to be a PM or rank chat                          return RawMessageType.Invalid;                      }                      if ( message[1] == '@' ) {                          return RawMessageType.RankChat;                      }                      if ( message[1] == '-' && message[2] == ' ' ) {                          // name shortcut: "@- blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] == ' ' && message.IndexOf( ' '' 2 ) != -1 ) {                          // alternative PM notation: "@ name blah"                          return RawMessageType.PrivateChat;                      }                      if ( message[1] != ' ' ) {                          // primary PM notation: "@name blah"                          return RawMessageType.PrivateChat;                      }                      return RawMessageType.Invalid;              }
Missing Default,fCraft,PlayerInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The following switch statement is missing a default case: switch ( BanStatus ) {                  case BanStatus.Banned:                      sb.Append( 'b' );                      break;                    case BanStatus.IPBanExempt:                      sb.Append( 'x' );                      break;              }
Missing Default,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,ChatSentHandler,The following switch statement is missing a default case: switch ( args.MessageType ) {                  case ChatMessageType.Global:                      if ( enabled ) {                          string formattedMessage = String.Format( "{0}{1}: {2}"'                                                          args.Player.ClassyName'                                                          ResetCode'                                                          args.Message );                          SendChannelMessage( formattedMessage );                      } else if ( args.Message.StartsWith( "#" ) ) {                          string formattedMessage = String.Format( "{0}{1}: {2}"'                                                          args.Player.ClassyName'                                                          ResetCode'                                                          args.Message.Substring( 1 ) );                          SendChannelMessage( formattedMessage );                      }                      break;                    case ChatMessageType.Me:                  case ChatMessageType.Say:                      if ( enabled ) {                          SendAction( args.FormattedMessage );                      }                      break;              }
Missing Default,fCraft,IRC,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following switch statement is missing a default case: switch ( type ) {                  case IRCMessageType.Join:                  case IRCMessageType.Kick:                  case IRCMessageType.Part:                  case IRCMessageType.TopicChange:                  case IRCMessageType.ChannelModeChange:                  case IRCMessageType.ChannelMessage:                  case IRCMessageType.ChannelAction:                  case IRCMessageType.ChannelNotice:                      channel = linear[2];                      break;                    case IRCMessageType.Who:                  case IRCMessageType.Topic:                  case IRCMessageType.Invite:                  case IRCMessageType.BanList:                  case IRCMessageType.ChannelMode:                      channel = linear[3];                      break;                    case IRCMessageType.Name:                      channel = linear[4];                      break;              }
Missing Default,fCraft,ReleaseInfo,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Updater.cs,StringToReleaseFlags,The following switch statement is missing a default case: switch ( Char.ToUpper( str[i] ) ) {                      case 'A':                          flags |= ReleaseFlags.APIChange;                          break;                        case 'B':                          flags |= ReleaseFlags.Bugfix;                          break;                        case 'C':                          flags |= ReleaseFlags.ConfigFormatChange;                          break;                        case 'D':                          flags |= ReleaseFlags.Dev;                          break;                        case 'F':                          flags |= ReleaseFlags.Feature;                          break;                        case 'M':                          flags |= ReleaseFlags.MapFormatChange;                          break;                        case 'P':                          flags |= ReleaseFlags.PlayerDBFormatChange;                          break;                        case 'S':                          flags |= ReleaseFlags.Security;                          break;                        case 'U':                          flags |= ReleaseFlags.Unstable;                          break;                        case 'O':                          flags |= ReleaseFlags.Optimized;                          break;                  }
Missing Default,fCraft,Color,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,The following switch statement is missing a default case: switch ( color.Length ) {                  case 2:                      if ( color[0] == '&' && IsValidColorCode( color[1] ) ) {                          return color;                      }                      break;                    case 1:                      return Parse( color[0] );                    case 0:                      return "";              }
Missing Default,fCraft,Config,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The following switch statement is missing a default case: switch ( key ) {                  case ConfigKey.AnnouncementColor:                      Color.Announcement = Color.Parse( key.GetString() );                      break;                    case ConfigKey.AntispamInterval:                      Player.AntispamInterval = key.GetInt();                      break;                    case ConfigKey.AntispamMessageCount:                      Player.AntispamMessageCount = key.GetInt();                      break;                    case ConfigKey.DefaultBuildRank:                      RankManager.DefaultBuildRank = Rank.Parse( key.GetString() );                      break;                    case ConfigKey.DefaultRank:                      RankManager.DefaultRank = Rank.Parse( key.GetString() );                      break;                    case ConfigKey.BandwidthUseMode:                      Player[] playerListCache = Server.Players;                      if ( playerListCache != null ) {                          foreach ( Player p in playerListCache ) {                              if ( p.BandwidthUseMode == BandwidthUseMode.Default ) {                                  // resets the use tweaks                                  p.BandwidthUseMode = BandwidthUseMode.Default;                              }                          }                      }                      break;                    case ConfigKey.BlockDBAutoEnableRank:                      RankManager.BlockDBAutoEnableRank = Rank.Parse( key.GetString() );                      if ( BlockDB.IsEnabledGlobally ) {                          World[] worldListCache = WorldManager.Worlds;                          foreach ( World world in worldListCache ) {                              if ( world.BlockDB.AutoToggleIfNeeded() ) {                                  if ( world.BlockDB.IsEnabled ) {                                      Logger.Log( LogType.SystemActivity'                                                  "BlockDB is now auto-enabled on world {0}"' world.Name );                                  } else {                                      Logger.Log( LogType.SystemActivity'                                                  "BlockDB is now auto-disabled on world {0}"' world.Name );                                  }                              }                          }                      }                      break;                    case ConfigKey.BlockUpdateThrottling:                      Server.BlockUpdateThrottling = key.GetInt();                      break;                    case ConfigKey.ConsoleName:                      if ( Player.Console != null ) {                          Player.Console.Info.Name = key.GetString();                      }                      break;                    case ConfigKey.DefaultBackupInterval:                      // TODO: update SchedulerTasks                      WorldManager.DefaultBackupInterval = new TimeSpan( TimeSpan.TicksPerSecond * key.GetInt() );                      break;                    case ConfigKey.HelpColor:                      Color.Help = Color.Parse( key.GetString() );                      break;                    case ConfigKey.IRCDelay:                      IRC.SendDelay = key.GetInt();                      break;                    case ConfigKey.IRCMessageColor:                      Color.IRC = Color.Parse( key.GetString() );                      break;                    case ConfigKey.LogMode:                      Logger.SplittingType = key.GetEnum<LogSplittingType>();                      break;                    case ConfigKey.MapPath:                      if ( !Paths.IgnoreMapPathConfigKey && GetString( ConfigKey.MapPath ).Length > 0 ) {                          if ( Paths.TestDirectory( "MapPath"' GetString( ConfigKey.MapPath )' true ) ) {                              Paths.MapPath = Path.GetFullPath( GetString( ConfigKey.MapPath ) );                          }                      }                      break;                    case ConfigKey.MaxUndo:                      BuildingCommands.MaxUndoCount = key.GetInt();                      break;                    case ConfigKey.MeColor:                      Color.Me = Color.Parse( key.GetString() );                      break;                    case ConfigKey.NoPartialPositionUpdates:                      if ( key.Enabled() ) {                          Player.FullPositionUpdateInterval = 0;                      } else {                          Player.FullPositionUpdateInterval = Player.FullPositionUpdateIntervalDefault;                      }                      break;                    case ConfigKey.PatrolledRank:                      RankManager.PatrolledRank = Rank.Parse( key.GetString() );                      break;                    case ConfigKey.PrivateMessageColor:                      Color.PM = Color.Parse( key.GetString() );                      break;                    case ConfigKey.RelayAllBlockUpdates:                      Player.RelayAllUpdates = key.Enabled();                      break;                    case ConfigKey.SayColor:                      Color.Say = Color.Parse( key.GetString() );                      break;                    case ConfigKey.SystemMessageColor:                      Color.Sys = Color.Parse( key.GetString() );                      break;                    case ConfigKey.CustomChatColor:                      Color.Custom = Color.Parse( key.GetString() );                      break;                    case ConfigKey.TickInterval:                      Server.TicksPerSecond = 1000 / ( float )key.GetInt();                      break;                    case ConfigKey.UploadBandwidth:                      Server.MaxUploadSpeed = key.GetInt();                      break;                    case ConfigKey.WarningColor:                      Color.Warning = Color.Parse( key.GetString() );                      break;              }
Missing Default,fCraft,MapGeneratorOld,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyTheme,The following switch statement is missing a default case: switch ( theme ) {                  case MapGenTheme.Arctic:                      bWaterSurface = Block.Glass;                      bDeepWaterSurface = Block.Water;                      bGroundSurface = Block.White;                      bWater = Block.Water;                      bGround = Block.White;                      bSeaFloor = Block.White;                      bBedrock = Block.Stone;                      bCliff = Block.Stone;                      groundThickness = 1;                      break;                    case MapGenTheme.Desert:                      bWaterSurface = Block.Water;                      bDeepWaterSurface = Block.Water;                      bGroundSurface = Block.Sand;                      bWater = Block.Water;                      bGround = Block.Sand;                      bSeaFloor = Block.Sand;                      bBedrock = Block.Stone;                      bCliff = Block.Gravel;                      break;                    case MapGenTheme.Hell:                      bWaterSurface = Block.Lava;                      bDeepWaterSurface = Block.Lava;                      bGroundSurface = Block.Obsidian;                      bWater = Block.Lava;                      bGround = Block.Stone;                      bSeaFloor = Block.Obsidian;                      bBedrock = Block.Stone;                      bCliff = Block.Stone;                      break;                    case MapGenTheme.Forest:                      bWaterSurface = Block.Water;                      bDeepWaterSurface = Block.Water;                      bGroundSurface = Block.Grass;                      bWater = Block.Water;                      bGround = Block.Dirt;                      bSeaFloor = Block.Sand;                      bBedrock = Block.Stone;                      bCliff = Block.Stone;                      break;                    case MapGenTheme.Swamp:                      bWaterSurface = Block.Water;                      bDeepWaterSurface = Block.Water;                      bGroundSurface = Block.Dirt;                      bWater = Block.Water;                      bGround = Block.Dirt;                      bSeaFloor = Block.Leaves;                      bBedrock = Block.Stone;                      bCliff = Block.Stone;                      break;              }
Missing Default,fCraft,LineWrapper,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The following switch statement is missing a default case: switch ( ch ) {                  case ( byte )'s':                      ch = ( byte )Color.Sys[1];                      return true;                    case ( byte )'y':                      ch = ( byte )Color.Say[1];                      return true;                    case ( byte )'p':                      ch = ( byte )Color.PM[1];                      return true;                    case ( byte )'r':                      ch = ( byte )Color.Announcement[1];                      return true;                    case ( byte )'h':                      ch = ( byte )Color.Help[1];                      return true;                    case ( byte )'w':                      ch = ( byte )Color.Warning[1];                      return true;                    case ( byte )'m':                      ch = ( byte )Color.Me[1];                      return true;                    case ( byte )'i':                      ch = ( byte )Color.IRC[1];                      return true;              }
Missing Default,fCraft,LogRecorder,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Utils\LogRecorder.cs,HandleLog,The following switch statement is missing a default case: switch ( e.MessageType ) {                      case LogType.SeriousError:                      case LogType.Error:                          HasErrors = true;                          break;                        case LogType.Warning:                          HasWarnings = true;                          break;                  }
Missing Default,fCraft.Drawing,CylinderDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,The following switch statement is missing a default case: switch ( state ) {                              case State.BeforeBlock:                                  state = State.BeforeBlock;                                  delta.X = ( Coords.X - center.X );                                  delta.Y = ( Coords.Y - center.Y );                                  delta.Z = ( Coords.Z - center.Z );                                  if ( delta.X2 * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 )                                      continue;                                  goto case State.OuterBlock1;                                case State.OuterBlock1:                                  state = State.OuterBlock1;                                  firstZ = Coords.Z;                                  if ( DrawOneBlock() ) {                                      blocksDone++;                                  }                                  goto case State.OuterBlock2;                                case State.OuterBlock2:                                  state = State.OuterBlock2;                                  if ( blocksDone >= maxBlocksToDraw )                                      return blocksDone;                                  int secondZ = ( int )( center.Z - delta.Z );                                  if ( secondZ != firstZ ) {                                      int oldZ = Coords.Z;                                      Coords.Z = secondZ;                                      if ( DrawOneBlock() ) {                                          blocksDone++;                                      }                                      Coords.Z = oldZ;                                  }                                  goto case State.AfterOuterBlock;                                case State.AfterOuterBlock:                                  state = State.AfterOuterBlock;                                  if ( blocksDone >= maxBlocksToDraw || TimeToEndBatch )                                      return blocksDone;                                  delta.Z = ( ++Coords.Z - center.Z );                                  if ( Coords.Z <= ( int )center.Z &&                                      ( ( delta.X + 1 ) * ( delta.X + 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      ( delta.X - 1 ) * ( delta.X - 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y + 1 ) * ( delta.Y + 1 ) * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y - 1 ) * ( delta.Y - 1 ) * radius.Y + delta.Z2 * radius.Z > 1 ) ) {                                      goto case State.OuterBlock1;                                  }                                    if ( !fillInner ) {                                      state = State.BeforeBlock;                                      break;                                  }                                    UseAlternateBlock = true;                                  goto case State.InnerBlock;                                case State.InnerBlock:                                  state = State.InnerBlock;                                  if ( Coords.Z > ( int )( center.Z - delta.Z ) ) {                                      UseAlternateBlock = false;                                      state = State.BeforeBlock;                                      break;                                  }                                  if ( DrawOneBlock() ) {                                      blocksDone++;                                      Coords.Z++;                                      if ( blocksDone >= maxBlocksToDraw || TimeToEndBatch ) {                                          return blocksDone;                                      }                                  } else {                                      Coords.Z++;                                  }                                  goto case State.InnerBlock;                          }
Missing Default,fCraft.Drawing,EllipsoidHollowDrawOperation,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,The following switch statement is missing a default case: switch ( state ) {                              case State.BeforeBlock:                                  state = State.BeforeBlock;                                  delta.X = ( Coords.X - center.X );                                  delta.Y = ( Coords.Y - center.Y );                                  delta.Z = ( Coords.Z - center.Z );                                  if ( delta.X2 * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 )                                      continue;                                  goto case State.OuterBlock1;                                case State.OuterBlock1:                                  state = State.OuterBlock1;                                  firstZ = Coords.Z;                                  if ( DrawOneBlock() ) {                                      blocksDone++;                                  }                                  goto case State.OuterBlock2;                                case State.OuterBlock2:                                  state = State.OuterBlock2;                                  if ( blocksDone >= maxBlocksToDraw )                                      return blocksDone;                                  int secondZ = ( int )( center.Z - delta.Z );                                  if ( secondZ != firstZ ) {                                      int oldZ = Coords.Z;                                      Coords.Z = secondZ;                                      if ( DrawOneBlock() ) {                                          blocksDone++;                                      }                                      Coords.Z = oldZ;                                  }                                  goto case State.AfterOuterBlock;                                case State.AfterOuterBlock:                                  state = State.AfterOuterBlock;                                  if ( blocksDone >= maxBlocksToDraw || TimeToEndBatch )                                      return blocksDone;                                  delta.Z = ( ++Coords.Z - center.Z );                                  if ( Coords.Z <= ( int )center.Z &&                                      ( ( delta.X + 1 ) * ( delta.X + 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      ( delta.X - 1 ) * ( delta.X - 1 ) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y + 1 ) * ( delta.Y + 1 ) * radius.Y + delta.Z2 * radius.Z > 1 ||                                      delta.X2 * radius.X + ( delta.Y - 1 ) * ( delta.Y - 1 ) * radius.Y + delta.Z2 * radius.Z > 1 ) ) {                                      goto case State.OuterBlock1;                                  }                                    if ( !fillInner ) {                                      state = State.BeforeBlock;                                      break;                                  }                                    UseAlternateBlock = true;                                  goto case State.InnerBlock;                                case State.InnerBlock:                                  state = State.InnerBlock;                                  if ( Coords.Z > ( int )( center.Z - delta.Z ) ) {                                      UseAlternateBlock = false;                                      state = State.BeforeBlock;                                      break;                                  }                                  if ( DrawOneBlock() ) {                                      blocksDone++;                                      Coords.Z++;                                      if ( blocksDone >= maxBlocksToDraw || TimeToEndBatch ) {                                          return blocksDone;                                      }                                  } else {                                      Coords.Z++;                                  }                                  goto case State.InnerBlock;                          }
Missing Default,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following switch statement is missing a default case: switch ( _d ) {                  case 0:                      x = xFrom + cellSize;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 1:                      y = yFrom + cellSize;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 2:                      x = xFrom - 1;                      fun( ref y' ref z' yFrom' zFrom );                      break;                    case 3:                      y = yFrom - 1;                      fun( ref x' ref z' xFrom' zFrom );                      break;                    case 4:                      z = zFrom - 1;                      fun( ref x' ref y' xFrom' yFrom );                      break;                    case 5:                      z = zFrom + cellSize;                      fun( ref x' ref y' xFrom' yFrom );                      break;              }
Missing Default,RandomMaze,Direction,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following switch statement is missing a default case: switch ( _d ) {                  case 0:                  case 2:                      y = yFrom - 1;                      z = zFrom - 1;                      fun( ref x' xFrom );                      break;                    case 1:                  case 3:                      x = xFrom - 1;                      z = zFrom - 1;                      fun( ref y' yFrom );                      break;                    case 4:                  case 5:                      x = xFrom - 1;                      y = yFrom - 1;                      fun( ref z' zFrom );                      break;              }
Missing Default,fCraft.MapConversion,MapDat,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following switch statement is missing a default case: switch ( ( char )data[pointer] ) {                              case 'Z':                                  offset++;                                  break;                                case 'F':                              case 'I':                                  offset += 4;                                  break;                                case 'J':                                  offset += 8;                                  break;                          }
Missing Default,fCraft.Portals,PortalHandler,D:\research\architectureSmells\repos\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following switch statement is missing a default case: switch ( world.AccessSecurity.CheckDetailed( e.Player.Info ) ) {                                              case SecurityCheckResult.Allowed:                                              case SecurityCheckResult.WhiteListed:                                                  if ( world.IsFull ) {                                                      e.Player.Message( "Cannot join {0}&S: world is full."' world.ClassyName );                                                      return;                                                  }                                                  e.Player.StopSpectating();                                                  if ( portal.World == e.Player.World.Name ) {                                                      if ( !portal.HasDesiredOutput ) {                                                          e.Player.TeleportTo( e.Player.World.Map.Spawn );                                                      } else {                                                          e.Player.TeleportTo( new Position( ( short )portal.DesiredOutputX' ( short )portal.DesiredOutputY' ( short )portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL ) );                                                      }                                                      e.Player.LastWarnedPortal = DateTime.UtcNow;                                                      e.Player.StandingInPortal = false;                                                      e.Player.CanUsePortal = true;                                                      e.Player.LastUsedPortal = DateTime.UtcNow;                                                  } else {                                                      if ( !portal.HasDesiredOutput ) {                                                          e.Player.JoinWorld( WorldManager.FindWorldExact( portal.World )' WorldChangeReason.Portal );                                                      } else {                                                          e.Player.JoinWorld( WorldManager.FindWorldExact( portal.World )' WorldChangeReason.Portal' new Position( ( short )portal.DesiredOutputX' ( short )portal.DesiredOutputY' ( short )portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL ) );                                                      }                                                  }                                                  e.Player.Message( "You used portal: " + portal.Name );                                                  break;                                                case SecurityCheckResult.BlackListed:                                                  e.Player.Message( "Cannot join world {0}&S: you are blacklisted."'                                                      world.ClassyName );                                                  break;                                                case SecurityCheckResult.RankTooLow:                                                  e.Player.Message( "Cannot join world {0}&S: must be {1}+"'                                                               world.ClassyName' world.AccessSecurity.MinRank.ClassyName );                                                  break;                                          }
