Implementation smell,Namespace,Class,File,Method,Description
Long Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The method has 115 lines of code.
Long Method,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The method has 234 lines of code.
Long Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The method has 149 lines of code.
Long Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The method has 120 lines of code.
Long Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The method has 158 lines of code.
Long Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The method has 148 lines of code.
Long Method,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The method has 146 lines of code.
Long Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The method has 147 lines of code.
Long Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The method has 178 lines of code.
Long Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The method has 112 lines of code.
Long Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The method has 255 lines of code.
Long Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The method has 140 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PhysicsHandler,The method has 128 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,The method has 139 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,The method has 262 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The method has 241 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The method has 247 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The method has 107 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The method has 203 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The method has 103 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The method has 170 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The method has 168 lines of code.
Long Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,The method has 144 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The method has 215 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The method has 112 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The method has 133 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The method has 101 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The method has 317 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The method has 126 lines of code.
Long Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,UpdateVisibleEntities,The method has 102 lines of code.
Long Method,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Map,The method has 192 lines of code.
Long Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The method has 123 lines of code.
Long Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The method has 132 lines of code.
Long Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The method has 118 lines of code.
Long Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The method has 152 lines of code.
Long Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The method has 158 lines of code.
Long Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The method has 137 lines of code.
Long Method,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The method has 173 lines of code.
Long Method,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The method has 163 lines of code.
Long Method,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The method has 116 lines of code.
Long Method,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The method has 212 lines of code.
Long Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The method has 179 lines of code.
Long Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The method has 173 lines of code.
Long Method,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The method has 111 lines of code.
Long Method,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The method has 132 lines of code.
Long Method,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,GetInstance,The method has 124 lines of code.
Long Method,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The method has 124 lines of code.
Long Method,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The method has 124 lines of code.
Long Method,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,The method has 102 lines of code.
Long Method,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The method has 105 lines of code.
Long Method,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The method has 204 lines of code.
Complex Method,fCraft.AutoRank,Condition,F:\newReposMay17\GlennMR_800craft\fCraft\AutoRank\Conditions.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,fCraft.AutoRank,ConditionIntRange,F:\newReposMay17\GlennMR_800craft\fCraft\AutoRank\Conditions.cs,Eval,Cyclomatic complexity of the method is 49
Complex Method,fCraft.AutoRank,ConditionPreviousRank,F:\newReposMay17\GlennMR_800craft\fCraft\AutoRank\Conditions.cs,Eval,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,Cyclomatic complexity of the method is 14
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,Cyclomatic complexity of the method is 13
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,Cyclomatic complexity of the method is 16
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DCallback,Cyclomatic complexity of the method is 16
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BanXHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BindHandler,Cyclomatic complexity of the method is 19
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,MirrorHandler,Cyclomatic complexity of the method is 26
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,Cyclomatic complexity of the method is 46
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,Cyclomatic complexity of the method is 23
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BlockDBUndoConfirmCallback,Cyclomatic complexity of the method is 10
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaLookup,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerLookup,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,TimerHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,Cyclomatic complexity of the method is 11
Complex Method,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,Cyclomatic complexity of the method is 22
Complex Method,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,Cyclomatic complexity of the method is 10
Complex Method,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,Cyclomatic complexity of the method is 38
Complex Method,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,Cyclomatic complexity of the method is 8
Complex Method,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,Cyclomatic complexity of the method is 13
Complex Method,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ChangedWorld,Cyclomatic complexity of the method is 14
Complex Method,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,PlayerDisconnected,Cyclomatic complexity of the method is 11
Complex Method,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnList,Cyclomatic complexity of the method is 13
Complex Method,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,SetAutoReset,Cyclomatic complexity of the method is 15
Complex Method,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,InternalDraw,Cyclomatic complexity of the method is 8
Complex Method,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 11
Complex Method,fCraft,FuncDrawOperationSurface,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,Cyclomatic complexity of the method is 11
Complex Method,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,VarNameToIdx,Cyclomatic complexity of the method is 8
Complex Method,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,Parse,Cyclomatic complexity of the method is 26
Complex Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,Cyclomatic complexity of the method is 13
Complex Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,Cyclomatic complexity of the method is 23
Complex Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,Cyclomatic complexity of the method is 57
Complex Method,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,Cyclomatic complexity of the method is 55
Complex Method,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,Cyclomatic complexity of the method is 74
Complex Method,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,Cyclomatic complexity of the method is 16
Complex Method,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,ParseCommand,Cyclomatic complexity of the method is 9
Complex Method,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,GameHandler,Cyclomatic complexity of the method is 14
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,Cyclomatic complexity of the method is 78
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ReqsHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,Cyclomatic complexity of the method is 18
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,Cyclomatic complexity of the method is 53
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,Cyclomatic complexity of the method is 33
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RankInfoHandler,Cyclomatic complexity of the method is 14
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RulesHandler,Cyclomatic complexity of the method is 12
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PlayersHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,HelpHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,CommandsHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpStatsHandler,Cyclomatic complexity of the method is 16
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,Cyclomatic complexity of the method is 57
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DoAutoRankAll,Cyclomatic complexity of the method is 9
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,Cyclomatic complexity of the method is 66
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetPlayerInfoField,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,Cyclomatic complexity of the method is 24
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ShutdownHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,RestartHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ImportHandler,Cyclomatic complexity of the method is 14
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ImportBans,Cyclomatic complexity of the method is 16
Complex Method,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ImportRanks,Cyclomatic complexity of the method is 16
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TitleHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,ModerateHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,Cyclomatic complexity of the method is 9
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,Cyclomatic complexity of the method is 13
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,RankHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,Cyclomatic complexity of the method is 24
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,WorldBringHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringAllHandler,Cyclomatic complexity of the method is 22
Complex Method,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,Cyclomatic complexity of the method is 19
Complex Method,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,Cyclomatic complexity of the method is 30
Complex Method,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,Cyclomatic complexity of the method is 16
Complex Method,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,Cyclomatic complexity of the method is 33
Complex Method,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,Cyclomatic complexity of the method is 30
Complex Method,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,Cyclomatic complexity of the method is 16
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,Cyclomatic complexity of the method is 31
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PhysicsHandler,Cyclomatic complexity of the method is 45
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlock,Cyclomatic complexity of the method is 14
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,Cyclomatic complexity of the method is 28
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalCreateCallback,Cyclomatic complexity of the method is 11
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,Cyclomatic complexity of the method is 115
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,Cyclomatic complexity of the method is 70
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockInfoSchedulerCallback,Cyclomatic complexity of the method is 20
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,Cyclomatic complexity of the method is 118
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,Cyclomatic complexity of the method is 26
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,Cyclomatic complexity of the method is 10
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,Cyclomatic complexity of the method is 41
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,JoinHandler,Cyclomatic complexity of the method is 20
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLockHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldUnlockHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,Cyclomatic complexity of the method is 38
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldsHandler,Cyclomatic complexity of the method is 39
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,Cyclomatic complexity of the method is 62
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,Cyclomatic complexity of the method is 62
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldInfoHandler,Cyclomatic complexity of the method is 15
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,Cyclomatic complexity of the method is 13
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldMainHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetMainWorld,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSaveHandler,Cyclomatic complexity of the method is 16
Complex Method,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,Cyclomatic complexity of the method is 18
Complex Method,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,Cyclomatic complexity of the method is 35
Complex Method,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneMarkHandler,Cyclomatic complexity of the method is 11
Complex Method,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneRemoveHandler,Cyclomatic complexity of the method is 9
Complex Method,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,Cyclomatic complexity of the method is 10
Complex Method,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Interval,Cyclomatic complexity of the method is 11
Complex Method,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,Cyclomatic complexity of the method is 63
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MessageNowPrefixed,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,Cyclomatic complexity of the method is 38
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,CanPlace,Cyclomatic complexity of the method is 19
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Kick,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,Cyclomatic complexity of the method is 35
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,Cyclomatic complexity of the method is 20
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,Cyclomatic complexity of the method is 74
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,Cyclomatic complexity of the method is 23
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,UpdateVisibleEntities,Cyclomatic complexity of the method is 27
Complex Method,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MoveEntity,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessUpdates,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,CalculateShadows,Cyclomatic complexity of the method is 14
Complex Method,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Neighbors,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,CheckPermissionsToDraw,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Draw,Cyclomatic complexity of the method is 15
Complex Method,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,Cyclomatic complexity of the method is 15
Complex Method,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,Cyclomatic complexity of the method is 16
Complex Method,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,CanFloat,Cyclomatic complexity of the method is 20
Complex Method,fCraft,GrassTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CastsShadow,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,SendGlobal,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,Cyclomatic complexity of the method is 19
Complex Method,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,Cyclomatic complexity of the method is 18
Complex Method,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayerInfoOrPrintMatches,Cyclomatic complexity of the method is 9
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,Cyclomatic complexity of the method is 29
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,Cyclomatic complexity of the method is 41
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,Cyclomatic complexity of the method is 37
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,Cyclomatic complexity of the method is 54
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,Cyclomatic complexity of the method is 10
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,Cyclomatic complexity of the method is 24
Complex Method,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,Cyclomatic complexity of the method is 39
Complex Method,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Serialize,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,fCraft,SecurityController,F:\newReposMay17\GlennMR_800craft\fCraft\Plugins\SecurityController.cs,SecurityController,Cyclomatic complexity of the method is 10
Complex Method,fCraft,PluginManager,F:\newReposMay17\GlennMR_800craft\fCraft\Plugins\PluginManager.cs,Initialize,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestDirectory,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestFile,Cyclomatic complexity of the method is 14
Complex Method,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,MainLoop,Cyclomatic complexity of the method is 8
Complex Method,fCraft,PlayerProximityTracker,F:\newReposMay17\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,FindPlayersAtDistance,Cyclomatic complexity of the method is 11
Complex Method,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,ChatSentHandler,Cyclomatic complexity of the method is 10
Complex Method,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,Cyclomatic complexity of the method is 73
Complex Method,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,Cyclomatic complexity of the method is 30
Complex Method,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,Cyclomatic complexity of the method is 22
Complex Method,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanIP,Cyclomatic complexity of the method is 17
Complex Method,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanIP,Cyclomatic complexity of the method is 11
Complex Method,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,Cyclomatic complexity of the method is 23
Complex Method,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,Cyclomatic complexity of the method is 19
Complex Method,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,Cyclomatic complexity of the method is 28
Complex Method,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,Cyclomatic complexity of the method is 20
Complex Method,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,UpdateCheck,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,CheckForUpdates,Cyclomatic complexity of the method is 8
Complex Method,fCraft,ReleaseInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,StringToReleaseFlags,Cyclomatic complexity of the method is 32
Complex Method,fCraft,ReleaseInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,ReleaseFlagsToString,Cyclomatic complexity of the method is 11
Complex Method,fCraft,ReleaseInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,ReleaseFlagsToStringArray,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,Cyclomatic complexity of the method is 31
Complex Method,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,Cyclomatic complexity of the method is 31
Complex Method,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,ResponseCallback,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitServer,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,StartServer,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,BackupData,Cyclomatic complexity of the method is 9
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,FindPlayers,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,FindPlayers,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,FindPlayerOrPrintMatches,Cyclomatic complexity of the method is 8
Complex Method,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Load,Cyclomatic complexity of the method is 25
Complex Method,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,Cyclomatic complexity of the method is 94
Complex Method,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,LoadRankList,Cyclomatic complexity of the method is 10
Complex Method,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,GetNode,Cyclomatic complexity of the method is 9
Complex Method,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,GetOneMatch,Cyclomatic complexity of the method is 12
Complex Method,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,Add,Cyclomatic complexity of the method is 22
Complex Method,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,Remove,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,Generate,Cyclomatic complexity of the method is 18
Complex Method,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,Plant,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,SexyPlant,Cyclomatic complexity of the method is 13
Complex Method,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,Cyclomatic complexity of the method is 36
Complex Method,fCraft,ForesterArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,Cyclomatic complexity of the method is 13
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,Cyclomatic complexity of the method is 12
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,Cyclomatic complexity of the method is 38
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,Cyclomatic complexity of the method is 11
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,Cyclomatic complexity of the method is 10
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,Cyclomatic complexity of the method is 19
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddBeaches,Cyclomatic complexity of the method is 14
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,Cyclomatic complexity of the method is 14
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyTheme,Cyclomatic complexity of the method is 51
Complex Method,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,Cyclomatic complexity of the method is 16
Complex Method,fCraft,MapGeneratorArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,MapGeneratorArgs,Cyclomatic complexity of the method is 21
Complex Method,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,Cyclomatic complexity of the method is 9
Complex Method,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,GenerateWoMConfig,Cyclomatic complexity of the method is 11
Complex Method,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,Cyclomatic complexity of the method is 17
Complex Method,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,Cyclomatic complexity of the method is 33
Complex Method,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,Cyclomatic complexity of the method is 61
Complex Method,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,Cyclomatic complexity of the method is 18
Complex Method,fCraft,IntKeyAttribute,F:\newReposMay17\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,Validate,Cyclomatic complexity of the method is 14
Complex Method,fCraft,IPKeyAttribute,F:\newReposMay17\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,IPKeyAttribute,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,TrimFile,Cyclomatic complexity of the method is 9
Complex Method,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,CountNewerEntries,Cyclomatic complexity of the method is 8
Complex Method,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Flush,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,Cyclomatic complexity of the method is 14
Complex Method,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Traverse,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LoadSettings,Cyclomatic complexity of the method is 9
Complex Method,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,Cyclomatic complexity of the method is 22
Complex Method,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,Cyclomatic complexity of the method is 11
Complex Method,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,Cyclomatic complexity of the method is 10
Complex Method,fCraft,LogRecorder,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\LogRecorder.cs,HandleLog,Cyclomatic complexity of the method is 9
Complex Method,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,Cyclomatic complexity of the method is 12
Complex Method,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,Cyclomatic complexity of the method is 36
Complex Method,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,FindMapFile,Cyclomatic complexity of the method is 12
Complex Method,fCraft,WorldOpException,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldOpException.cs,GetMessage,Cyclomatic complexity of the method is 28
Complex Method,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,Cyclomatic complexity of the method is 12
Complex Method,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,Cyclomatic complexity of the method is 11
Complex Method,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,CalculateRange,Cyclomatic complexity of the method is 14
Complex Method,fCraft.Drawing,BlockDBDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\BlockDBDrawOperation.cs,FindBounds,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,GetPalette,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 43
Complex Method,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,ReadParams,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,Cyclomatic complexity of the method is 14
Complex Method,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,BlockEnumerator,Cyclomatic complexity of the method is 11
Complex Method,fCraft.Drawing,ReplaceBrushBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceBrushBrush.cs,MakeInstance,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,TriangleDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,Cyclomatic complexity of the method is 18
Complex Method,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,BlockEnumeratorX,Cyclomatic complexity of the method is 11
Complex Method,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,BlockEnumeratorY,Cyclomatic complexity of the method is 11
Complex Method,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,BlockEnumeratorZ,Cyclomatic complexity of the method is 11
Complex Method,fCraft.Drawing,AbstractPerlinNoiseBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,ReplaceNotBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceNotBrush.cs,MakeInstance,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,ReplaceBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\ReplaceBrush.cs,MakeInstance,Cyclomatic complexity of the method is 8
Complex Method,fCraft.Drawing,CloudyBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\CloudyBrush.cs,MakeInstance,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 43
Complex Method,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,BlockEnumerator,Cyclomatic complexity of the method is 15
Complex Method,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,Cyclomatic complexity of the method is 23
Complex Method,fCraft.Drawing,MarbledBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MakeInstance,Cyclomatic complexity of the method is 9
Complex Method,fCraft.Drawing,RandomBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,MakeInstance,Cyclomatic complexity of the method is 9
Complex Method,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,Cyclomatic complexity of the method is 24
Complex Method,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,Cyclomatic complexity of the method is 18
Complex Method,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Mazefy,Cyclomatic complexity of the method is 12
Complex Method,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 8
Complex Method,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,ReadFlags,Cyclomatic complexity of the method is 13
Complex Method,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,Cyclomatic complexity of the method is 8
Complex Method,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeader,Cyclomatic complexity of the method is 9
Complex Method,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,Cyclomatic complexity of the method is 20
Complex Method,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,Cyclomatic complexity of the method is 9
Complex Method,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,Cyclomatic complexity of the method is 30
Complex Method,fCraft.MapConversion,MapFCMv2,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv2.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Identify,Cyclomatic complexity of the method is 12
Complex Method,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,Cyclomatic complexity of the method is 10
Complex Method,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,fCraft.MapConversion,NBTag,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\NBTag.cs,ReadTag,Cyclomatic complexity of the method is 24
Complex Method,fCraft.MapConversion,NBTag,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\NBTag.cs,WriteTag,Cyclomatic complexity of the method is 31
Complex Method,fCraft.MapConversion,MapOpticraft,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapOpticraft.cs,LoadZones,Cyclomatic complexity of the method is 13
Complex Method,fCraft.MapConversion,MapOpticraft,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapOpticraft.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,Cyclomatic complexity of the method is 26
Complex Method,TrollPlugin,Init,F:\newReposMay17\GlennMR_800craft\fCraft\Plugins\Plugins\TrollPlugin.cs,TrollHandler,Cyclomatic complexity of the method is 30
Complex Method,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,CalculateRange,Cyclomatic complexity of the method is 14
Complex Method,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,GenerateName,Cyclomatic complexity of the method is 12
Complex Method,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,Cyclomatic complexity of the method is 8
Complex Method,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,RemoveEntries,Cyclomatic complexity of the method is 8
Complex Method,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,Cyclomatic complexity of the method is 8
Long Parameter List,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawOneBlock,The method has 8 parameters.
Long Parameter List,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,FeedData,The method has 6 parameters.
Long Parameter List,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,InternalDraw,The method has 19 parameters.
Long Parameter List,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,InternalDraw,The method has 10 parameters.
Long Parameter List,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawFase1,The method has 11 parameters.
Long Parameter List,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawFase2,The method has 10 parameters.
Long Parameter List,fCraft,FuncDrawOperationPoints,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase1,The method has 11 parameters.
Long Parameter List,fCraft,FuncDrawOperationPoints,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,The method has 10 parameters.
Long Parameter List,fCraft,FuncDrawOperationFill,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase1,The method has 11 parameters.
Long Parameter List,fCraft,FuncDrawOperationFill,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,The method has 10 parameters.
Long Parameter List,fCraft,FuncDrawOperationSurface,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase1,The method has 11 parameters.
Long Parameter List,fCraft,FuncDrawOperationSurface,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperationPSF.cs,DrawFase2,The method has 10 parameters.
Long Parameter List,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The method has 6 parameters.
Long Parameter List,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The method has 5 parameters.
Long Parameter List,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetPlayerInfoField,The method has 5 parameters.
Long Parameter List,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,The method has 5 parameters.
Long Parameter List,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,DrawOneBlock,The method has 8 parameters.
Long Parameter List,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,ShapesLib,The method has 5 parameters.
Long Parameter List,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The method has 6 parameters.
Long Parameter List,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,FindIntersection,The method has 9 parameters.
Long Parameter List,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawOneBlock,The method has 8 parameters.
Long Parameter List,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,MessageBlock,The method has 5 parameters.
Long Parameter List,fCraft,MessageBlockRange,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockRange.cs,MessageBlockRange,The method has 6 parameters.
Long Parameter List,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,The method has 6 parameters.
Long Parameter List,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Kick,The method has 6 parameters.
Long Parameter List,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,RaisePlayerPlacedBlockEvent,The method has 6 parameters.
Long Parameter List,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,RaisePlayerJoiningWorldEvent,The method has 5 parameters.
Long Parameter List,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The method has 12 parameters.
Long Parameter List,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Map,The method has 5 parameters.
Long Parameter List,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TNTTask,The method has 5 parameters.
Long Parameter List,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Life2DZone,The method has 5 parameters.
Long Parameter List,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,ReadToArray,The method has 6 parameters.
Long Parameter List,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Draw,The method has 6 parameters.
Long Parameter List,fCraft,IParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters.
Long Parameter List,fCraft,IParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters.
Long Parameter List,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The method has 6 parameters.
Long Parameter List,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters.
Long Parameter List,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters.
Long Parameter List,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters.
Long Parameter List,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters.
Long Parameter List,fCraft,SpellStartBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters.
Long Parameter List,fCraft,SpellStartBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters.
Long Parameter List,fCraft,TntBulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters.
Long Parameter List,fCraft,TntBulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters.
Long Parameter List,fCraft,FootballBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The method has 7 parameters.
Long Parameter List,fCraft,FootballBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The method has 6 parameters.
Long Parameter List,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanPlayerInfoInternal,The method has 5 parameters.
Long Parameter List,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The method has 6 parameters.
Long Parameter List,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseRankChangingEvent,The method has 6 parameters.
Long Parameter List,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseRankChangedEvent,The method has 6 parameters.
Long Parameter List,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseMuteChangingEvent,The method has 5 parameters.
Long Parameter List,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,RaiseMuteChangedEvent,The method has 5 parameters.
Long Parameter List,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,PlayerOpException,The method has 5 parameters.
Long Parameter List,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,Position,The method has 5 parameters.
Long Parameter List,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanIP,The method has 5 parameters.
Long Parameter List,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanIP,The method has 5 parameters.
Long Parameter List,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,The method has 5 parameters.
Long Parameter List,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,The method has 5 parameters.
Long Parameter List,fCraft,IRCMessage,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRCMessage.cs,IRCMessage,The method has 9 parameters.
Long Parameter List,fCraft,BoundingBox,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,BoundingBox,The method has 6 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateLinear,The method has 6 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateCosine,The method has 6 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateCubic,The method has 5 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolateSpline,The method has 5 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 5 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 6 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 6 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The method has 7 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateNormalizationParams,The method has 5 parameters.
Long Parameter List,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The method has 6 parameters.
Long Parameter List,fCraft,ReleaseInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,ReleaseInfo,The method has 6 parameters.
Long Parameter List,fCraft,ShutdownParams,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,ShutdownParams,The method has 6 parameters.
Long Parameter List,fCraft,BlockUpdate,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockUpdate.cs,BlockUpdate,The method has 5 parameters.
Long Parameter List,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,DistanceToBlock,The method has 5 parameters.
Long Parameter List,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The method has 6 parameters.
Long Parameter List,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The method has 7 parameters.
Long Parameter List,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The method has 8 parameters.
Long Parameter List,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The method has 5 parameters.
Long Parameter List,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The method has 5 parameters.
Long Parameter List,fCraft,BlockDBEntry,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDBEntry.cs,BlockDBEntry,The method has 8 parameters.
Long Parameter List,fCraft,BlockDBEntry,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDBEntry.cs,BlockDBEntry,The method has 6 parameters.
Long Parameter List,fCraft.Events,ChatSendingEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ChatSendingEventArgs,The method has 5 parameters.
Long Parameter List,fCraft.Events,ChatSentEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ChatSentEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerPlacingBlockEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerPlacingBlockEventArgs,The method has 7 parameters.
Long Parameter List,fCraft.Events,PlayerPlacedBlockEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerPlacedBlockEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerBeingKickedEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerBeingKickedEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerKickedEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerKickedEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerJoiningWorldEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Player.Events.cs,PlayerJoiningWorldEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerInfoRankChangedEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoRankChangedEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerInfoRankChangingEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoRankChangingEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Events,PlayerInfoBanChangedEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoBanChangedEventArgs,The method has 5 parameters.
Long Parameter List,fCraft.Events,PlayerInfoBanChangingEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoBanChangingEventArgs,The method has 5 parameters.
Long Parameter List,fCraft.Events,PlayerInfoMuteChangingEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoMuteChangingEventArgs,The method has 5 parameters.
Long Parameter List,fCraft.Events,PlayerInfoMuteChangedEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Events.cs,PlayerInfoMuteChangedEventArgs,The method has 5 parameters.
Long Parameter List,fCraft.Events,LogEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,LogEventArgs,The method has 5 parameters.
Long Parameter List,fCraft.Events,CrashedEventArgs,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CrashedEventArgs,The method has 6 parameters.
Long Parameter List,fCraft.Doors,DoorRange,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\DoorRange.cs,DoorRange,The method has 6 parameters.
Long Parameter List,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The method has 8 parameters.
Long Parameter List,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The method has 8 parameters.
Long Parameter List,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,Portal,The method has 6 parameters.
Long Parameter List,fCraft.Portals,PortalRange,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalRange.cs,PortalRange,The method has 6 parameters.
Long Parameter List,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,AddStream,The method has 5 parameters.
Long Statement,fCraft.AutoRank,Criterion,F:\newReposMay17\GlennMR_800craft\fCraft\AutoRank\Criterion.cs,ToString,The length of the statement  "	return String.Format ("Criteria( {0} from {1} to {2} )"' (FromRank < ToRank ? "promote" : "demote")' FromRank.Name' ToRank.Name); " is 129.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The length of the statement  "			player.Message ("You cannot place any more doors' a player can have a maximum of {0} doors per world"' maxNumberOfDoorsPerPlayer); " is 130.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The length of the statement  "			System.Text.StringBuilder output = new System.Text.StringBuilder ("There are " + player.World.Map.Doors.Count + " doors in " + player.World.ClassyName + "&S: "); " is 161.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The length of the statement  "				if (player.CanPlace (player.World.Map' new Vector3I (x' y' z)' Block.Wood' BlockChangeContext.Manual) != CanPlaceResult.Allowed) { " is 130.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The length of the statement  "					player.Message ("Cannot add a door to world {0}&S: Build permissions in this area replied with 'denied'."' player.World.ClassyName); " is 132.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The length of the statement  "		var door = new Door (player.World.Name' blocks.ToArray ()' fCraft.Doors.Door.GenerateName (player.World)' player.ClassyName); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The length of the statement  "		if (DoorHandler.GetInstance ().GetAffectedBlocks (door).Any (v => DoorHandler.GetInstance ().GetDoor (player.World' v) != null)) { " is 130.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawImageCallback,The length of the statement  "			player.Message ("DrawImage: You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' op.BlocksTotalEstimate); " is 183.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The length of the statement  "		player.Message ("SetFont: Font reverted back to default ({0} size {1})"' player.font.FontFamily.Name' player.font.Size); " is 120.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The length of the statement  "			player.Message ("There are no fonts available for this server. Font is set to default: {0}"' player.font.FontFamily.Name); " is 122.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The length of the statement  "					var matches = sectionFiles.Select (f => Path.GetFileNameWithoutExtension (f)).Where (sn => sn != null && sn.StartsWith (sectionName' StringComparison.OrdinalIgnoreCase)); " is 170.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DCallback,The length of the statement  "			player.Message ("/Draw2D: Drawing {0} with a size of '{1}' using {2} blocks of {3}"' Shape' radius' lib.blockCount' block.ToString ()); " is 135.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,WriteCallback,The length of the statement  "			player.Message ("/Write (Size {0}' {1}: Writing '{2}' using {3} blocks of {4}"' player.font.Size' player.font.FontFamily.Name' sentence' render.blockCount' block.ToString ()); " is 175.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,GetFontSectionList,The length of the statement  "		string[] sections = Directory.GetFiles (Paths.FontsPath' "*.ttf"' SearchOption.TopDirectoryOnly).Select (name => Path.GetFileNameWithoutExtension (name)).Where (name => !String.IsNullOrEmpty (name)).ToArray (); " is 210.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The length of the statement  "	if (shapeName == null || !cmd.NextInt (out height) || !EnumUtil.TryParse (shapeName' out shape' true) || shape == Forester.TreeShape.Stickly || shape == Forester.TreeShape.Procedural) { " is 185.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The length of the statement  "		player.Message (String.Format ("You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' volume)); " is 172.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeCallback,The length of the statement  "	args.BlockPlacing += (sender' e) => DrawOneBlock (player' player.World.Map' e.Block' new Vector3I (e.Coordinate.X' e.Coordinate.Y' e.Coordinate.Z)' BlockChangeContext.Drawn' ref blocksPlaced' ref blocksDenied' undoState); " is 221.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The length of the statement  "		if (player.CanPlace (player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual) != CanPlaceResult.Allowed) { " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The length of the statement  "		Player.RaisePlayerPlacedBlockEvent (player' player.WorldMap' Pos' player.WorldMap.GetBlock (Pos)' player.LastUsedBlockType' BlockChangeContext.Manual); " is 151.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The length of the statement  "		int sx = Math.Min (marks [0].X' marks [1].X)' ex = Math.Max (marks [0].X' marks [1].X)' sy = Math.Min (marks [0].Y' marks [1].Y)' ey = Math.Max (marks [0].Y' marks [1].Y)' sz = Math.Min (marks [0].Z' marks [1].Z)' ez = Math.Max (marks [0].Z' marks [1].Z); " is 255.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The length of the statement  "		Vector3I cPos = new Vector3I ((bounds.XMin + bounds.XMax) / 2' (bounds.YMin + bounds.YMax) / 2' (bounds.ZMin + bounds.ZMax) / 2); " is 129.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The length of the statement  "		DrawOneBlock (player' player.World.Map' player.LastUsedBlockType' cPos' BlockChangeContext.Drawn' ref blocksDrawn' ref blocksSkipped' undoState); " is 145.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BanXHandler,The length of the statement  "			Server.Players.Message ("{0}&S was BanX'd by {1}&S (with auto-demote):&W {2}"' target.ClassyName' player.ClassyName' reason); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0}: Asked {1} to confirm undo on world {2}"' cmdName' args.Player.Name' args.World.Name); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,The length of the statement  "			args.Player.Confirm (BlockDBUndoConfirmCallback' args' "Undo last {0} changes made by {1}&S?"' changes.Length' targetList); " is 123.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0}: Asked {1} to confirm undo on world {2}"' cmdName' args.Player.Name' args.World.Name); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerHandler2,The length of the statement  "			args.Player.Confirm (BlockDBUndoConfirmCallback' args' "Undo changes ({0}) made by {1}&S in the last {2}?"' changes.Length' targetList' args.AgeLimit.ToMiniString ()); " is 167.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawOperationCallback,The length of the statement  "		player.MessageNow ("You are only allowed to run draw commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' op.Bounds.Volume); " is 174.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,WaterHandler,The length of the statement  "	if (player.GetBind (Block.Aqua) == Block.Water || player.GetBind (Block.Cyan) == Block.Water || player.GetBind (Block.Blue) == Block.Water) { " is 141.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawingFinished,The length of the statement  "			player.MessageNow ("{0} {1} blocks ({2} blocks skipped due to permission issues)... " + "The map is now being updated."' verb' blocks' blocksDenied); " is 149.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoHandler,The length of the statement  "	Logger.Log (LogType.UserActivity' "Player {0} initiated /Undo affecting {1} blocks (on world {2})"' player.Name' undoState.Buffer.Count' playerWorld.Name); " is 155.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RedoHandler,The length of the statement  "	Logger.Log (LogType.UserActivity' "Player {0} initiated /Redo affecting {1} blocks (on world {2})"' player.Name' redoState.Buffer.Count' playerWorld.Name); " is 155.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopySlotHandler,The length of the statement  "				player.Message ("Selected copy slot {0}: {1} blocks from {2}' {3} old."' slotNumber' info.Buffer.Length' info.OriginWorld' DateTime.UtcNow.Subtract (info.CopyTime).ToMiniString ()); " is 181.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopySlotHandler,The length of the statement  "		player.Message ("Using {0} of {1} slots. Selected slot: {2}"' slots.Count (info => info != null)' player.Info.Rank.CopySlots' player.CopySlot + 1); " is 147.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopySlotHandler,The length of the statement  "				player.Message ("  {0}: {1} blocks from {2}' {3} old"' i + 1' slots [i].Buffer.Length' slots [i].OriginWorld' DateTime.UtcNow.Subtract (slots [i].CopyTime).ToMiniString ()); " is 173.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopyCallback,The length of the statement  "		player.MessageNow (String.Format ("You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' volume)); " is 175.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopyCallback,The length of the statement  "	player.MessageNow ("Origin at {0} {1}{2} corner."' (copyInfo.Orientation.X == 1 ? "bottom" : "top")' (copyInfo.Orientation.Y == 1 ? "south" : "north")' (copyInfo.Orientation.Z == 1 ? "east" : "west")); " is 201.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopyCallback,The length of the statement  "	Logger.Log (LogType.UserActivity' "{0} copied {1} blocks from {2} (between {3} and {4})."' player.Name' volume' playerWorld.Name' bounds.MinVertex' bounds.MaxVertex); " is 166.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The length of the statement  "				int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0)); " is 265.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The length of the statement  "				int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0)); " is 265.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The length of the statement  "				int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0)); " is 265.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RestoreHandler,The length of the statement  "		player.Message ("Mapfile dimensions must match your current world's dimensions ({0}x{1}x{2})"' playerMap.Width' playerMap.Length' playerMap.Height); " is 148.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RestoreCallback,The length of the statement  "		player.MessageNow ("You are only allowed to restore up to {0} blocks at a time. This would affect {1} blocks."' player.Info.Rank.DrawLimit' selection.Volume); " is 158.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RestoreCallback,The length of the statement  "				DrawOneBlock (player' playerMap' map.GetBlock (x' y' z)' new Vector3I (x' y' z)' RestoreContext' ref blocksDrawn' ref blocksSkipped' undoState); " is 144.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RestoreCallback,The length of the statement  "	Logger.Log (LogType.UserActivity' "{0} restored {1} blocks on world {2} (@{3}'{4}'{5} - {6}'{7}'{8}) from file {9}."' player.Name' blocksDrawn' playerWorld.Name' selection.XMin' selection.YMin' selection.ZMin' selection.XMax' selection.YMax' selection.ZMax' map.Metadata ["fCraft.Temp"' "FileName"]); " is 300.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,The length of the statement  "			if (!not && player.Info != target && !player.Can (Permission.UndoAll) && !player.Can (Permission.UndoOthersActions' target.Rank)) { " is 131.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,The length of the statement  "				player.Message ("&W{0}: You may only undo actions of players ranked {1}&S or lower."' cmdName' player.Info.Rank.GetLimit (Permission.UndoOthersActions).ClassyName); " is 164.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BlockDBUndoConfirmCallback,The length of the statement  "			description = String.Format ("{0} by everyone except {1}"' args.AgeLimit.ToMiniString ()' args.Targets.JoinToString (p => p.Name)); " is 131.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BlockDBUndoConfirmCallback,The length of the statement  "	Logger.Log (LogType.UserActivity' "{0}: Player {1} will undo {2} changes (limit of {3}) by {4} on world {5}"' cmdName' player.Name' args.Entries.Length' args.CountLimit == 0 ? args.AgeLimit.ToMiniString () : args.CountLimit.ToStringInvariant ()' targetList' args.World.Name); " is 275.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaLookup,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0}: Asked {1} to confirm undo on world {2}"' cmdName' args.Player.Name' args.World.Name); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaLookup,The length of the statement  "			args.Player.Confirm (BlockDBUndoConfirmCallback' args' "Undo last {0} changes made here by {1}&S?"' changes.Length' targetList); " is 128.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaLookup,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0}: Asked {1} to confirm undo on world {2}"' cmdName' args.Player.Name' args.World.Name); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaLookup,The length of the statement  "			args.Player.Confirm (BlockDBUndoConfirmCallback' args' "Undo changes ({0}) made here by {1}&S in the last {2}?"' changes.Length' targetList' args.AgeLimit.ToMiniString ()); " is 172.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerLookup,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0}: Asked {1} to confirm undo on world {2}"' cmdName' args.Player.Name' args.World.Name); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerLookup,The length of the statement  "			args.Player.Confirm (BlockDBUndoConfirmCallback' args' "Undo last {0} changes made by {1}&S?"' changes.Length' targetList); " is 123.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerLookup,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0}: Asked {1} to confirm undo on world {2}"' cmdName' args.Player.Name' args.World.Name); " is 125.
Long Statement,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoPlayerLookup,The length of the statement  "			args.Player.Confirm (BlockDBUndoConfirmCallback' args' "Undo changes ({0}) made by {1}&S in the last {2}?"' changes.Length' targetList' args.AgeLimit.ToMiniString ()); " is 167.
Long Statement,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,High5Handler,The length of the statement  "	Server.Players.CanSee (target).Except (target).Message ("{0}&S was just &chigh fived &Sby {1}&S"' target.ClassyName' player.ClassyName); " is 136.
Long Statement,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Review,The length of the statement  "		player.Message ("&WOnline players who can review you: {0}"' ReviewerNames.JoinToString (r => String.Format ("{0}&S"' r.ClassyName))); " is 133.
Long Statement,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,AdminChat,The length of the statement  "		player.Message ("You are muted for another {0:0} seconds."' player.Info.MutedUntil.Subtract (DateTime.UtcNow).TotalSeconds); " is 124.
Long Statement,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,TimerHandler,The length of the statement  "				player.Message ("  #{0} \"{1}&S\" (started by {2}' {3} left)"' timer.Id' timer.Message' timer.StartedBy' timer.TimeLeft.ToMiniString ()); " is 137.
Long Statement,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,TimerHandler,The length of the statement  "				string abortMsg = String.Format ("&Y(Timer) {0}&Y aborted a timer with {1} left: {2}"' player.ClassyName' timer.TimeLeft.ToMiniString ()' timer.Message); " is 153.
Long Statement,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,TimerHandler,The length of the statement  "		sayMessage = String.Format ("&Y(Timer) {0}&Y started a {1} timer: {2}"' player.ClassyName' duration.ToMiniString ()' message); " is 126.
Long Statement,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,AddMessages,The length of the statement  "		"Staff online: " + Server.Players.Where (p => !p.Info.IsHidden && p.Can (per)).JoinToString (r => String.Format ("{0}"' r.Name))' " is 129.
Long Statement,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The length of the statement  "							var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z))); " is 208.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateParams,The length of the statement  "		Help = "&hIf >0 the intermediate state of the life is drawn and shown for this anount of timein msec. If 0 the intermediate state is not shown."' " is 145.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateParams,The length of the statement  "		Help = "&hBoolean parameter telling if the life area must be understood as a torus (i.e. the top side is connected to the bottom and the left side with the right one."' " is 168.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateParams,The length of the statement  "		Help = "&hThis parameter tells if the life must be auto reset after the detection of a short-periodical state. Possible values are None (no)' ToInitial (i)' ToRandom (r)."' " is 172.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "		Help = "&hPrints help on commands. Usage: /life help <command|param>. For the list of parameters type '/life help set'. Commands are: "' " is 136.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "		Help = "&hCreates a new life. Usage: /life create <name>. Then mark two blocks to define a *flat* rectangle. The life is created stopped and with default settings. After that you can set params by 'set' command and start it by 'start' command."' " is 245.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "		Help = "&hDeletes a life. Usage: /life delete <name>. If this life exists it will be stopped and removed from the map book keeping."' " is 133.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "		Help = "&hStarts a stopped life. Usage: /life start <name>. If this life exists and is stopped it will be started. Otherwise nothing happens."' " is 143.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "		Help = "&hStops a life. Usage: /life stop <name>. If this life exists and is started it will be stopped. Otherwise nothing happens."' " is 133.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CreateCommands,The length of the statement  "		Help = "&hSets a life parameter. Usage: /life set <name> <param>=<value>[| <param>=<value>]. Sets parameter 'param' value for the life 'name'. Parameters are: " + AllParams.ToString ()' " is 185.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnHelp,The length of the statement  "		p.Message ("&hLife commands are: " + AllCommands.ToString () + ".\nType '/life help <command|param> for detailed command or param info. Type '/life help set' for the list of parameters."); " is 188.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,LifeCreateCallback,The length of the statement  "			Life2DZone life = new Life2DZone (_name' _world.Map' marks' player' (player.Info.Rank.NextRankUp ?? player.Info.Rank).Name); " is 124.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnPrint,The length of the statement  "	p.Message ("&y" + l.Name + ": " + (l.Stopped ? "stopped" : "started") + "' delay " + l.Delay + "' intermediate delay " + l.HalfStepDelay + "' is" + (l.Torus ? "" : " not") + " on torus' " + "auto reset strategy is " + Enum.GetName (typeof(AutoResetMethod)' l.AutoReset) + "' owner is " + l.CreatorName + "' changable by " + l.MinRankToChange + "' block types: " + l.Normal + " is normal' " + l.Empty + " is empty' " + l.Dead + " is dead' " + l.Newborn + " is newborn"); " is 469.
Long Statement,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,SetAutoReset,The length of the statement  "		p.Message ("&WUnrecognized auto reset method " + val + ".\n&h Type '/life help AutoReset' to see all the possible values."); " is 124.
Long Statement,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,DrawBatch,The length of the statement  "	InternalDraw (ref Coords.X' ref Coords.Y' ref Coords.Z' Bounds.XMin' Bounds.XMax' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' ref Coords.X' ref Coords.Y' ref Coords.Z' Bounds.XMin' Bounds.XMax' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' maxBlocksToDraw); " is 271.
Long Statement,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,DrawBatch,The length of the statement  "	InternalDraw (ref Coords.X' ref Coords.Z' ref Coords.Y' Bounds.XMin' Bounds.XMax' Bounds.ZMin' Bounds.ZMax' Bounds.YMin' Bounds.YMax' ref Coords.X' ref Coords.Y' ref Coords.Z' Bounds.XMin' Bounds.XMax' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' maxBlocksToDraw); " is 271.
Long Statement,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,DrawBatch,The length of the statement  "	InternalDraw (ref Coords.Y' ref Coords.Z' ref Coords.X' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' Bounds.XMin' Bounds.XMax' ref Coords.X' ref Coords.Y' ref Coords.Z' Bounds.XMin' Bounds.XMax' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' maxBlocksToDraw); " is 271.
Long Statement,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,InternalDraw,The length of the statement  "					Tuple<double' double> res = _expression.EvaluateAsEquality (_scaler.ToFuncParam (argX' minX' maxX)' _scaler.ToFuncParam (argY' minY' maxY)' _scaler.ToFuncParam (argZ' minZ' maxZ)); " is 180.
Long Statement,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,InternalDraw,The length of the statement  "						Player.Message ("Surface drawing is interrupted: too many (>" + MathCommands.MaxCalculationExceptions + ") calculation exceptions."); " is 133.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,GetVarArray,The length of the statement  "	throw new ArgumentException ("Unknown value axis direction " + axis + ". This software is not released for use in spaces with dimension higher than three."); " is 157.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawBatch,The length of the statement  "		InternalDraw (ref Coords.X' ref Coords.Y' ref Coords.Z' Bounds.XMin' Bounds.XMax' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' maxBlocksToDraw); " is 151.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawBatch,The length of the statement  "		InternalDraw (ref Coords.X' ref Coords.Z' ref Coords.Y' Bounds.XMin' Bounds.XMax' Bounds.ZMin' Bounds.ZMax' Bounds.YMin' Bounds.YMax' maxBlocksToDraw); " is 151.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawBatch,The length of the statement  "		InternalDraw (ref Coords.Y' ref Coords.Z' ref Coords.X' Bounds.YMin' Bounds.YMax' Bounds.ZMin' Bounds.ZMax' Bounds.XMin' Bounds.XMax' maxBlocksToDraw); " is 151.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,DrawBatch,The length of the statement  "		throw new ArgumentException ("Unknown value axis direction " + _vaxis + ". This software is not released for use in spaces with dimension higher than three."); " is 159.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,InternalDraw,The length of the statement  "				int fval = _scaler.FromFuncResult (_expression.Evaluate (_scaler.ToFuncParam (arg1' min1' max1)' _scaler.ToFuncParam (arg2' min2' max2))' minV' maxV); " is 150.
Long Statement,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,InternalDraw,The length of the statement  "					Player.Message ("Function drawing is interrupted: too many (>" + MathCommands.MaxCalculationExceptions + ") calculation exceptions."); " is 134.
Long Statement,fCraft,InequalityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\InequalityDrawOperation.cs,DrawBatch,The length of the statement  "					if (_expression.Evaluate (_scaler.ToFuncParam (Coords.X' Bounds.XMin' Bounds.XMax)' _scaler.ToFuncParam (Coords.Y' Bounds.YMin' Bounds.YMax)' _scaler.ToFuncParam (Coords.Z' Bounds.ZMin' Bounds.ZMax)) > 0)//1.0 means true " is 220.
Long Statement,fCraft,InequalityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\InequalityDrawOperation.cs,DrawBatch,The length of the statement  "						Player.Message ("Drawing is interrupted: too many (>" + MathCommands.MaxCalculationExceptions + ") calculation exceptions."); " is 125.
Long Statement,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,SetParamIteration,The length of the statement  "		p.Message ("Iteration for " + strParam + " from " + from + " to " + to + " with step " + step + ". " + ((to - from) / step + 1) + " steps."); " is 141.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} loaded new map for realm \"{1}\" from {2}"' player.Name' realm.Name' fullFileName); " is 122.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The length of the statement  "					player.Confirm (cmd' "A map named \"{0}\" already exists' and will be overwritten with \"{1}\"."' Path.GetFileName (targetFullFileName)' Path.GetFileName (fullFileName)); " is 170.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} created a new realm named \"{1}\" (loaded from \"{2}\")"' player.Name' worldName' fileName); " is 131.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmLoad,The length of the statement  "				player.MessageNow ("Access permission is {0}+&S' and build permission is {1}+"' newWorld.AccessSecurity.MinRank.ClassyName' newWorld.BuildSecurity.MinRank.ClassyName); " is 167.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The length of the statement  "			player.MessageNow ("Unrecognized theme \"{0}\". Available themes are: Grass' {1}"' themeName' String.Join ("' "' Enum.GetNames (typeof(MapGenTheme)))); " is 151.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The length of the statement  "		player.Message ("Unrecognized template \"{0}\". Available templates are: {1}"' templateName' String.Join ("' "' Enum.GetNames (typeof(MapGenTemplate)))); " is 153.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "						target.Message ("You are now unbanned from Realm {0}&S (removed from blacklist by {1}&S)."' realm.ClassyName' player.ClassyName); " is 129.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "					player.Message ("{0}&S was unbanned from Realm {1}&S. " + "Player is still NOT allowed to join (by rank)."' info.ClassyName' realm.ClassyName); " is 143.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "						target.Message ("You were Unbanned from Realm {0}&S by {1}&S. " + "You are still NOT allowed to join (by rank)."' player.ClassyName' realm.ClassyName); " is 151.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the access blacklist of {2}"' player.Name' info.Name' realm.Name); " is 122.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the access whitelist on realm {2}"' player.Name' info.Name' realm.Name); " is 124.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "			if (realm.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooHigh || realm.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooLow) { " is 162.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the access blacklist on realm {2}"' player.Name' info.Name' realm.Name); " is 124.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "					player.Message ("{0}&S is no longer on the access whitelist of {1}&S. " + "Player is still allowed to join (by rank)."' info.ClassyName' realm.ClassyName); " is 155.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "						target.Message ("You were banned from Realm {0}&S by {1}&S. " + "You are still allowed to join (by rank)."' player.ClassyName' realm.ClassyName); " is 145.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the access whitelist on realm {2}"' player.Name' info.Name' realm.Name); " is 128.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "					player.Message ("Following players no longer need to be blacklisted to be barred from {0}&S: {1}"' realm.ClassyName' noLongerExcluded.JoinToClassyString ()); " is 157.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "				PlayerInfo[] noLongerIncluded = exceptionList.Included.Where (includedPlayer => includedPlayer.Rank >= rank).ToArray (); " is 120.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "					player.Message ("Following players no longer need to be whitelisted to access {0}&S: {1}"' realm.ClassyName' noLongerIncluded.JoinToClassyString ()); " is 149.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "					Server.Message ("{0}&S made the realm {1}&S accessible only by {2}+"' player.ClassyName' realm.ClassyName' realm.AccessSecurity.MinRank.ClassyName); " is 148.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} set access rank for realm {1} to {2}+"' player.Name' realm.Name' realm.AccessSecurity.MinRank.Name); " is 139.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "						target.Message ("You can now build in realm {0}&S (removed from blacklist by {1}&S)."' realm.ClassyName' player.ClassyName); " is 124.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "					player.Message ("{0}&S was removed from the build blacklist of {1}&S. " + "Player is still NOT allowed to build (by rank)."' info.ClassyName' realm.ClassyName); " is 160.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "						target.Message ("You were removed from the build blacklist of realm {0}&S by {1}&S. " + "You are still NOT allowed to build (by rank)."' player.ClassyName' realm.ClassyName); " is 174.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the build blacklist of {2}"' player.Name' info.Name' realm.Name); " is 121.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the build whitelist on realm {2}"' player.Name' info.Name' realm.Name); " is 123.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "			if (realm.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooHigh || realm.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooLow) { " is 160.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the build blacklist on realm {2}"' player.Name' info.Name' realm.Name); " is 123.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "					player.Message ("{0}&S is no longer on the build whitelist of {1}&S. " + "Player is still allowed to build (by rank)."' info.ClassyName' realm.ClassyName); " is 155.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "						target.Message ("You were removed from the build whitelist of realm {0}&S by {1}&S. " + "You are still allowed to build (by rank)."' player.ClassyName' realm.ClassyName); " is 170.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "						target.Message ("&WYou can no longer build in realm {0}&W (removed from whitelist by {1}&W)."' realm.ClassyName' player.ClassyName); " is 132.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the build whitelist on realm {2}"' player.Name' info.Name' realm.Name); " is 127.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "			} else if (!player.Info.Rank.AllowSecurityCircumvention && realm.BuildSecurity.MinRank > rank && realm.BuildSecurity.MinRank > player.Info.Rank) { " is 146.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				player.Message ("&WYou must be ranked {0}&W+ to lower build restrictions for realm {1}"' realm.BuildSecurity.MinRank.ClassyName' realm.ClassyName); " is 147.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "					player.Message ("Following players no longer need to be blacklisted on realm {0}&S: {1}"' realm.ClassyName' noLongerExcluded.JoinToClassyString ()); " is 148.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				PlayerInfo[] noLongerIncluded = exceptionList.Included.Where (includedPlayer => includedPlayer.Rank >= rank).ToArray (); " is 120.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "					player.Message ("Following players no longer need to be whitelisted on realm {0}&S: {1}"' realm.ClassyName' noLongerIncluded.JoinToClassyString ()); " is 148.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "					Server.Message ("{0}&S allowed only {1}+&S to build in realm {2}"' player.ClassyName' realm.BuildSecurity.MinRank.ClassyName' realm.ClassyName); " is 144.
Long Statement,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} set build rank for realm {1} to {2}+"' player.Name' realm.Name' realm.BuildSecurity.MinRank.Name); " is 137.
Long Statement,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The length of the statement  "			Logger.Log (LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason); " is 130.
Long Statement,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteCheck,The length of the statement  "		Server.Players.Message ("{0}&S Asked: {1} \n&SResults are in! Yes: &A{2} &SNo: &C{3}"' VoteStarter' Question' VotedYes' VotedNo); " is 129.
Long Statement,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The length of the statement  "		Server.Players.Message ("{0}&S wanted to get {1} kicked. Reason: {2} \n&SResults are in! Yes: &A{3} &SNo: &C{4}"' VoteStarter' TargetName' VoteKickReason' VotedYes' VotedNo); " is 174.
Long Statement,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The length of the statement  "			Scheduler.NewTask (t => target.Kick (Player.Console' "VoteKick by: " + VoteStarter + " - " + VoteKickReason' LeaveReason.Kick' false' true' false)).RunOnce (TimeSpan.FromSeconds (3)); " is 183.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,Init,The length of the statement  "	Logger.Log (LogType.Debug' "CommandManager: {0} commands registered ({1} hidden' {2} aliases)"' Commands.Count' GetCommands (true).Length' Aliases.Count); " is 154.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,GetCommands,The length of the statement  "	return Commands.Values.Where (cmd => (includeHidden || !cmd.IsHidden) && (cmd.Category & category) == category).ToArray (); " is 123.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,The length of the statement  "			throw new CommandRegistrationException ("One of the aliases for \"{0}\" is using the name of an already-defined command."); " is 123.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,The length of the statement  "		Logger.Log (LogType.Warning' "CommandManager.RegisterCommand: \"{0}\" was defined as an alias for \"{1}\"' " + "but has now been replaced by a different command of the same name."' descriptor.Name' Aliases [descriptor.Name]); " is 225.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,The length of the statement  "				Logger.Log (LogType.Warning' "CommandManager.RegisterCommand: Alias \"{0}\" for \"{1}\" ignored (reserved name)."' alias' descriptor.Name); " is 139.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,RegisterCommand,The length of the statement  "				Logger.Log (LogType.Warning' "CommandManager.RegisterCommand: \"{0}\" was defined as an alias for \"{1}\"' " + "but has been overridden to resolve to \"{2}\" instead."' alias' Aliases [normalizedAlias]' descriptor.Name); " is 220.
Long Statement,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,IsValidCommandName,The length of the statement  "		if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') { " is 120.
Long Statement,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The length of the statement  "		Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize (); " is 157.
Long Statement,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The length of the statement  "		world.AddPhysicsTask (new Particle (world' (pos1 + 2 * direction).Round ()' direction' player' Block.Obsidian' particleBehavior)' 0); " is 133.
Long Statement,fCraft,FunCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\FunCommands.cs,PossessHandler,The length of the statement  "		player.Message ("You may only possess players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Possess).ClassyName); " is 130.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The length of the statement  "	PlayerInfo[] Names = PlayerDB.PlayerInfoList.Where (p => p.DisplayedName != null && Color.StripColors (p.DisplayedName.ToLower ()).Contains (Name)).ToArray (); " is 159.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The length of the statement  "			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Whois {3} {4}"' offset + 1' offset + Part.Length' Names.Length' Name' offset + Part.Length); " is 148.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "		const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3."; " is 192.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "			string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" "); " is 148.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "		List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ()); " is 143.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "			player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ()))); " is 176.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "			StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: "); " is 141.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "		var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray (); " is 191.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "				player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length); " is 165.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "				player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length); " is 180.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The length of the statement  "				player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length); " is 172.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ReqsHandler,The length of the statement  "			player.Message ("Requirement sections: {0}. Type &H/reqs SectionName&S to read information on how to gain that rank."' sections.JoinToString ()); " is 145.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ReqsHandler,The length of the statement  "				var matches = sectionFiles.Select (f => Path.GetFileNameWithoutExtension (f)).Where (sn => sn != null && sn.StartsWith (sectionName)); " is 134.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ReqsHandler,The length of the statement  "			player.Message ("No requirement section defined for \"{0}\". Available sections: {1}"' sectionName' sectionList.JoinToString ()); " is 129.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetReqSectionList,The length of the statement  "		string[] sections = Directory.GetFiles (Paths.ReqPath' "*.txt"' SearchOption.TopDirectoryOnly).Select (name => Path.GetFileNameWithoutExtension (name)).Where (name => !String.IsNullOrEmpty (name)).ToArray (); " is 208.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintReqFile,The length of the statement  "		Logger.Log (LogType.Error' "InfoCommands.PrintReqFile: An error occured while trying to read {0}: {1}"' reqFile.FullName' ex); " is 126.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The length of the statement  "		if (Server.IsIP (ipString) && IPAddress.TryParse (ipString' out ip) && Byte.TryParse (rangeString' out range) && range <= 32) { " is 127.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The length of the statement  "				player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Info {3} {4}"' offset + 1' offset + infosPart.Length' infos.Length' name' offset + infosPart.Length); " is 157.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.Message ("About {0}&S: Last seen {1} ago from {2} ({3})."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LastIP' info.LeaveReason); " is 154.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.Message ("About {0}&S: Last seen {1} ago from {2}."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LastIP); " is 130.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.Message ("About {0}&S: Last seen {1} ago ({2})."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LeaveReason); " is 132.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ()); " is 173.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ()); " is 143.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ()); " is 151.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "					player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ()); " is 122.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000000' info.MessagesWritten); " is 181.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten); " is 178.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten); " is 170.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten); " is 135.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Kicked {0}' Promoted {1} and banned {2} players."' info.TimesKickedOthers' info.PromoCount' info.TimesBannedOthers); " is 135.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "			player.Message ("  Got kicked {0} times. Last kick {1} ago by {2}"' info.TimesKicked' info.TimeSinceLastKick.ToMiniString ()' info.LastKickByClassy); " is 149.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "			player.Message ("  Promoted to {0}&S by {1}&S {2} ago."' info.Rank.ClassyName' info.RankChangedByClassy' info.TimeSinceRankChange.ToMiniString ()); " is 147.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Promoted from {0}&S to {1}&S by {2}&S {3} ago."' info.PreviousRank.ClassyName' info.Rank.ClassyName' info.RankChangedByClassy' info.TimeSinceRankChange.ToMiniString ()); " is 188.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Demoted from {0}&S to {1}&S by {2}&S {3} ago."' info.PreviousRank.ClassyName' info.Rank.ClassyName' info.RankChangedByClassy' info.TimeSinceRankChange.ToMiniString ()); " is 187.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The length of the statement  "		player.Message ("  Spent a total of {0:F1} hours ({1:F1} minutes) here."' totalTime.TotalHours' totalTime.TotalMinutes); " is 120.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "			player.Message ("{0} was banned by {1}&S on {2:dd MMM yyyy} ({3} ago)"' banInfo.Address' banInfo.BannedByClassy' banInfo.BanDate' banInfo.TimeSinceLastAttempt); " is 160.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "				player.Message ("  There have been {0} attempts to log in' most recently {1} ago by {2}"' banInfo.Attempts' banInfo.TimeSinceLastAttempt.ToMiniString ()' banInfo.LastAttemptNameClassy); " is 185.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "			player.Message ("  Last ban by {0}&S on {1:dd MMM yyyy} ({2} ago)."' info.BannedByClassy' info.BanDate' info.TimeSinceBan.ToMiniString ()); " is 139.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "			player.Message ("  Unbanned by {0}&S on {1:dd MMM yyyy} ({2} ago)."' info.UnbannedByClassy' info.UnbanDate' info.TimeSinceUnban.ToMiniString ()); " is 145.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "				player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ()); " is 172.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "				player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ()); " is 143.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "				player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ()); " is 151.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The length of the statement  "				player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ()); " is 122.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RankInfoHandler,The length of the statement  "	Permission[] sortedPermissionNames = permissions.OrderBy (s => s.ToString ()' StringComparer.OrdinalIgnoreCase).ToArray (); " is 123.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "	player.Message ("Servers status: Up for {0:0.0} hours' using {1:0} MB"' DateTime.UtcNow.Subtract (Server.StartTime).TotalHours' (Process.GetCurrentProcess ().PrivateMemorySize64 / (1024 * 1024))); " is 196.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "		player.Message ("  Averaging {0:0.0}% CPU now' {1:0.0}% overall"' Server.CPUUsageLastMinute * 100' Server.CPUUsageTotal * 100); " is 127.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "		player.Message ("  Running &9800&CCraft&S {0}' under Mono {1}"' Updater.CurrentRelease.VersionString' MonoCompat.MonoVersionString); " is 132.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "		player.Message ("  Running &9800&CCraft&S {0}' under .NET {1}"' Updater.CurrentRelease.VersionString' Environment.Version); " is 123.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "	player.Message ("  Tracking {0} players ({1} online' {2} banned ({3:0.0}%)' {4} IP-banned)."' PlayerDB.PlayerInfoList.Length' Server.CountVisiblePlayers (player)' PlayerDB.BannedCount' PlayerDB.BannedPercentage' IPBanList.Count); " is 229.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "	player.Message ("  Players built {0}' deleted {1}' drew {2} blocks' wrote {3} messages' issued {4} kicks' spent {5:0} hours total."' PlayerDB.PlayerInfoList.Sum (p => p.BlocksBuilt)' PlayerDB.PlayerInfoList.Sum (p => p.BlocksDeleted)' PlayerDB.PlayerInfoList.Sum (p => p.BlocksDrawn)' PlayerDB.PlayerInfoList.Sum (p => p.MessagesWritten)' PlayerDB.PlayerInfoList.Sum (p => p.TimesKickedOthers)' PlayerDB.PlayerInfoList.Sum (p => p.TotalTime.TotalHours)); " is 454.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The length of the statement  "	player.Message ("  There are {0} worlds available ({1} loaded' {2} hidden)."' WorldManager.Worlds.Length' WorldManager.CountLoadedWorlds (player)' WorldManager.Worlds.Count (w => w.IsHidden)); " is 192.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RulesHandler,The length of the statement  "				var matches = sectionFiles.Select (f => Path.GetFileNameWithoutExtension (f)).Where (sn => sn != null && sn.StartsWith (sectionName' StringComparison.OrdinalIgnoreCase)); " is 170.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,RulesHandler,The length of the statement  "			player.Message ("No rule section defined for \"{0}\". Available sections: {1}"' sectionName' sectionList.JoinToString ()); " is 122.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetRuleSectionList,The length of the statement  "		string[] sections = Directory.GetFiles (Paths.RulesPath' "*.txt"' SearchOption.TopDirectoryOnly).Select (name => Path.GetFileNameWithoutExtension (name)).Where (name => !String.IsNullOrEmpty (name)).ToArray (); " is 210.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintRuleFile,The length of the statement  "		Logger.Log (LogType.Error' "InfoCommands.PrintRuleFile: An error occured while trying to read {0}: {1}"' ruleFile.FullName' ex); " is 128.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,MeasureCallback,The length of the statement  "	var topBlocks = blockCounts.Where (p => p.Value > 0).OrderByDescending (p => p.Value).Take (TopBlocksToList).ToArray (); " is 120.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,MeasureCallback,The length of the statement  "	var blockString = topBlocks.JoinToString (p => String.Format ("{0}: {1} ({2}%)"' p.Key' p.Value' (p.Value * 100) / box.Volume)); " is 128.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PlayersHandler,The length of the statement  "			player.MessagePrefixed ("&S  "' "&SThere are {0} players {1}: {2}"' visiblePlayers.Length' qualifier' visiblePlayers.JoinToClassyString ()); " is 140.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PlayersHandler,The length of the statement  "				player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Players {3}{1}"' offset + 1' offset + playersPart.Length' visiblePlayers.Length' (worldName == null ? "" : worldName + " ")); " is 181.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PlayersHandler,The length of the statement  "				player.Message ("Showing players {0}-{1} (out of {2})."' offset + 1' offset + playersPart.Length' visiblePlayers.Length); " is 121.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The length of the statement  "	return String.Format ("&F[{0}&C{1}&F{2}]"' Compass.Substring (offset - 12' 11)' Compass.Substring (offset - 1' 3)' Compass.Substring (offset + 2' 11)); " is 151.
Long Statement,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,CommandsHandler,The length of the statement  "		player.Message ("&SFor &aBuilding &Scommands' type &a/Commands building" + "\n&SFor &fChat &Scommands' type &a/Commands chat" + "\n&SFor &fInfo &Scommands' type &a/Commands info" + "\n&SFor &3Moderation &scommands' type &a/Commands moderation" + "\n&SFor &9World &Scommands' type &a/Commands world" + "\n&SFor &bZone &Scommands' type &a/Commands zone" + (CommandManager.GetCommands (CommandCategory.Math' false).Length > 0 ? "\n&SFor &cFunction drawing &Scommands' type &a/Commands math" : "") + (CommandManager.GetCommands (CommandCategory.Fun' false).Length > 0 ? "\n&SFor &dFun &Scommands' type &a/Commands fun" : "")); " is 622.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,Init,The length of the statement  "				player.Message ("{0}: S: {1}  R: {2}  S/s: {3:0.0}  R/s: {4:0.0}"' player.BandwidthUseMode' player.BytesSent' player.BytesReceived' player.BytesSentRate' player.BytesReceivedRate); " is 180.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,NickHandler,The length of the statement  "		player.Message ("Nick: DisplayedName for {0} changed from \"{1}&S\" to \"{2}&S\""' info.Name' oldDisplayedName' valName); " is 121.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.TimeSinceFirstLoginMedian = DateTime.UtcNow.Subtract (infos.OrderByDescending (info => info.FirstLoginDate).ElementAt (infos.Count / 2).FirstLoginDate); " is 157.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.TimeSinceLastLoginMedian = DateTime.UtcNow.Subtract (infos.OrderByDescending (info => info.LastLoginDate).ElementAt (infos.Count / 2).LastLoginDate); " is 154.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.BlocksDeletedMedian = infos.OrderByDescending (info => info.BlocksDeleted).ElementAt (infos.Count / 2).BlocksDeleted; " is 122.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	PlayerInfo medianBlocksChangedPlayerInfo = infos.OrderByDescending (info => (info.BlocksDeleted + info.BlocksBuilt)).ElementAt (infos.Count / 2); " is 145.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	PlayerInfo medianBlockRatioPlayerInfo = infos.OrderByDescending (info => (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))).ElementAt (infos.Count / 2); " is 164.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.BlockRatioMedian = medianBlockRatioPlayerInfo.BlocksBuilt / (double)Math.Max (medianBlockRatioPlayerInfo.BlocksDeleted' 1); " is 128.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.MessagesWrittenMedian = infos.OrderByDescending (info => info.MessagesWritten).ElementAt (infos.Count / 2).MessagesWritten; " is 128.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.TimesKickedOthersMedian = infos.OrderByDescending (info => info.TimesKickedOthers).ElementAt (infos.Count / 2).TimesKickedOthers; " is 134.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.TimesBannedOthersMedian = infos.OrderByDescending (info => info.TimesBannedOthers).ElementAt (infos.Count / 2).TimesBannedOthers; " is 134.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	stat.TopBlockRatio = infos.OrderByDescending (info => (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))).ToArray (); " is 128.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TimeSinceFirstLogin: {0} mean'  {1} median'  {2} total"' TimeSpan.FromTicks (stat.TimeSinceFirstLogin.Ticks / infos.Count).ToCompactString ()' stat.TimeSinceFirstLoginMedian.ToCompactString ()' stat.TimeSinceFirstLogin.ToCompactString ()); " is 262.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TimeSinceLastLogin: {0} mean'  {1} median'  {2} total"' TimeSpan.FromTicks (stat.TimeSinceLastLogin.Ticks / infos.Count).ToCompactString ()' stat.TimeSinceLastLoginMedian.ToCompactString ()' stat.TimeSinceLastLogin.ToCompactString ()); " is 258.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TotalTime: {0} mean'  {1} median'  {2} total"' TimeSpan.FromTicks (stat.TotalTime.Ticks / infos.Count).ToCompactString ()' stat.TotalTimeMedian.ToCompactString ()' stat.TotalTime.ToCompactString ()); " is 222.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    BlocksBuilt: {0} mean'  {1} median'  {2} total"' stat.BlocksBuilt / infos.Count' stat.BlocksBuiltMedian' stat.BlocksBuilt); " is 146.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    BlocksDeleted: {0} mean'  {1} median'  {2} total"' stat.BlocksDeleted / infos.Count' stat.BlocksDeletedMedian' stat.BlocksDeleted); " is 154.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    BlocksChanged: {0} mean'  {1} median'  {2} total"' stat.BlocksChanged / infos.Count' stat.BlocksChangedMedian' stat.BlocksChanged); " is 154.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    BlocksDrawn: {0} mean'  {1} median'  {2} total"' stat.BlocksDrawn / infos.Count' stat.BlocksDrawnMedian' stat.BlocksDrawn); " is 146.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "			writer.WriteLine ("        {0'20:0.000}  {1}"' (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))' info.Name); " is 121.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "			writer.WriteLine ("        {0'20:0.000}  {1}"' (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))' info.Name); " is 121.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "			writer.WriteLine ("        {0'20:0.000}  {1}"' (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))' info.Name); " is 121.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TimesVisited: {0} mean'  {1} median'  {2} total"' stat.TimesVisited / infos.Count' stat.TimesVisitedMedian' stat.TimesVisited); " is 150.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    MessagesWritten: {0} mean'  {1} median'  {2} total"' stat.MessagesWritten / infos.Count' stat.MessagesWrittenMedian' stat.MessagesWritten); " is 162.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TimesKicked: {0:0.0} mean'  {1} median'  {2} total"' stat.TimesKicked / (double)infos.Count' stat.TimesKickedMedian' stat.TimesKicked); " is 158.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TimesKickedOthers: {0:0.0} mean'  {1} median'  {2} total"' stat.TimesKickedOthers / (double)infos.Count' stat.TimesKickedOthersMedian' stat.TimesKickedOthers); " is 182.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The length of the statement  "	writer.WriteLine ("    TimesBannedOthers: {0:0.0} mean'  {1} median'  {2} total"' stat.TimesBannedOthers / (double)infos.Count' stat.TimesBannedOthersMedian' stat.TimesBannedOthers); " is 182.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DoAutoRankAll,The length of the statement  "	player.Message ("AutoRankAll: Worked for {0}ms' {1} players promoted' {2} demoted."' sw.ElapsedMilliseconds' promoted' demoted); " is 128.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "			player.Message ("SetInfo: TimesKicked for {0}&S changed from {1} to {2}"' info.ClassyName' oldTimesKicked' info.TimesKicked); " is 125.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "			player.Message ("SetInfo: PreviousRank for {0}&S changed from {1}&S to {2}"' info.ClassyName' oldPreviousRank.ClassyName' newPreviousRank.ClassyName); " is 150.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "			player.Message ("SetInfo: TotalTime for {0}&S changed from {1} ({2}) to {3} ({4})"' info.ClassyName' oldTotalTime.ToMiniString ()' oldTotalTime.ToCompactString ()' info.TotalTime.ToMiniString ()' info.TotalTime.ToCompactString ()); " is 231.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "			player.Message ("SetInfo: Could not parse RankChangeType. Allowed values: {0}"' String.Join ("' "' Enum.GetNames (typeof(RankChangeType)))); " is 140.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "		player.Message ("SetInfo: RankChangeType for {0}&S changed from {1} to {2}"' info.ClassyName' oldType' info.RankChangeType); " is 124.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "			player.Message ("SetInfo: DisplayedName for {0} changed from \"{1}&S\" to \"{2}&S\""' info.Name' oldDisplayedName' valName); " is 124.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The length of the statement  "		player.Message ("Only the following properties are editable: " + "TimesKicked' PreviousRank' TotalTime' RankChangeType' " + "BanReason' UnbanReason' RankReason' KickReason' DisplayedName"); " is 189.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetPlayerInfoField,The length of the statement  "		player.Message ("SetInfo: {0} for {1}&S changed from \"{2}&S\" to \"{3}&S\""' fieldName' info.ClassyName' oldValue' newValue); " is 126.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,The length of the statement  "			player.Message ("&WNote: Until server synchronizes with Minecraft.net' " + "connecting players may have trouble verifying names."); " is 131.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ShutdownHandler,The length of the statement  "		player.Message ("WShutdown: Delay is too long' maximum is {0}"' TimeSpan.FromMilliseconds (Int32.MaxValue - 1).ToMiniString ()); " is 128.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ShutdownHandler,The length of the statement  "		Logger.Log (LogType.UserActivity' "{0} scheduled a shutdown ({1} delay). Reason: {2}"' player.Name' delayTime.ToCompactString ()' reason); " is 138.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,RestartHandler,The length of the statement  "		player.Message ("Restart: Delay is too long' maximum is {0}"' TimeSpan.FromMilliseconds (Int32.MaxValue - 1).ToMiniString ()); " is 126.
Long Statement,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,RestartHandler,The length of the statement  "		Logger.Log (LogType.UserActivity' "{0} scheduled a restart ({1} delay). Reason: {2}"' player.Name' delayTime.ToCompactString ()' reason); " is 137.
Long Statement,fCraft,MathCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MathCommands.cs,DrawOperationCallback,The length of the statement  "			player.Message ("You are only allowed to run draw commands that affect up to {0} blocks. This one would affect {1} blocks."' new object[] { " is 139.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The length of the statement  "				Server.Players.CanSee (target).Union (target).Message ("{0}&C was &4Killed&C by {1}&W: {2}"' target.ClassyName' player.ClassyName' OReason); " is 140.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The length of the statement  "				Server.Players.CanSee (target).Union (target).Message ("{0}&C was &4Killed&C by {1}"' target.ClassyName' player.ClassyName); " is 124.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The length of the statement  "			player.Message ("You can only Kill players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Kill).ClassyName); " is 123.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The length of the statement  "			Server.Players.CanSee (target).Union (target).Message ("{0} &Swas slapped sky high by {1}"' target.ClassyName' player.ClassyName); " is 130.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The length of the statement  "				Server.Players.CanSee (target).Union (target).Message ("{0} &Swas slapped sky high by {1}"' target.ClassyName' player.ClassyName); " is 130.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The length of the statement  "		player.Message ("&sYou can only Slap players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Slap).ClassyName); " is 125.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The length of the statement  "		Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32); " is 190.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The length of the statement  "		if (String.IsNullOrEmpty (targetName) || String.IsNullOrEmpty (timeString) || !timeString.TryParseMiniTimespan (out duration) || duration <= TimeSpan.Zero) { " is 157.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The length of the statement  "		player.Message ("You can only Temp-Ban players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.TempBan).ClassyName); " is 131.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The length of the statement  "			Server.Message ("&SPlayer {0}&S was Banned by {1}&S for {2}"' target.ClassyName' player.ClassyName' duration.ToMiniString ()); " is 126.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The length of the statement  "			Logger.Log (LogType.UserActivity' "Player {0} was Banned by {1} for {2}"' target.Name' player.Name' duration.ToMiniString ()); " is 126.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The length of the statement  "		player.Message ("Player {0}&S is already Banned by {1}&S for {2:0} more."' target.ClassyName' target.BannedBy' target.BannedUntil.Subtract (DateTime.UtcNow).ToMiniString ()); " is 174.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Basscannon,The length of the statement  "		player.Message ("You can only use /Basscannon on players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Kick).ClassyName); " is 137.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Warn,The length of the statement  "		player.Message ("You can only warn players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Warn).ClassyName); " is 123.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,UnWarn,The length of the statement  "		player.Message ("You can only unwarn players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Warn).ClassyName); " is 125.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,dc,The length of the statement  "		player.Message ("You can only Disconnect players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Gtfo).ClassyName); " is 129.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KickHandler,The length of the statement  "			player.Message ("Most recent kick was {0} ago' by {1}"' DateTime.UtcNow.Subtract (previousKickDate).ToMiniString ()' previousKickedBy); " is 135.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The length of the statement  "				player.Message ("You may only set spawn of players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName); " is 133.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The length of the statement  "					player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName); " is 128.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The length of the statement  "					player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName); " is 179.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringHandler,The length of the statement  "		player.Message ("You may only bring players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName); " is 126.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringHandler,The length of the statement  "					player.Confirm (cmd' "Player {0}&S is ranked too low to join {1}&S. Override world permissions?"' target.ClassyName' world.ClassyName); " is 135.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,WorldBringHandler,The length of the statement  "		player.Message ("You may only bring players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName); " is 126.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,WorldBringHandler,The length of the statement  "		player.Message ("Player {0}&S is already in world {1}&S. They were brought to spawn."' target.ClassyName' world.ClassyName); " is 124.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,WorldBringHandler,The length of the statement  "				player.Confirm (cmd' "Player {0}&S is ranked too low to join {1}&S. Override world permissions?"' target.ClassyName' world.ClassyName); " is 135.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,The length of the statement  "			player.Message ("Cannot bring {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' world.ClassyName' world.AccessSecurity.MinRank.ClassyName); " is 161.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,MuteHandler,The length of the statement  "	if (String.IsNullOrEmpty (targetName) || String.IsNullOrEmpty (timeString) || !timeString.TryParseMiniTimespan (out duration) || duration <= TimeSpan.Zero) { " is 157.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SpectateHandler,The length of the statement  "		player.Message ("You may only spectate players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Spectate).ClassyName); " is 132.
Long Statement,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,WarnIfOtherPlayersOnIP,The length of the statement  "		player.Message ("&WWarning: Other player(s) share IP with {0}&W: {1}"' targetInfo.ClassyName' otherPlayers.JoinToClassyString ()); " is 130.
Long Statement,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,The length of the statement  "		player.MessageNow (String.Format ("You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' Count)); " is 174.
Long Statement,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I ((PixelData.X + x)' PixelData.Y' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 195.
Long Statement,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I ((PixelData.X - x)' PixelData.Y' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 195.
Long Statement,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I (PixelData.X' (PixelData.Y + y)' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 195.
Long Statement,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I (PixelData.X' ((PixelData.Y) - y)' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 197.
Long Statement,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The length of the statement  "			g.DrawImage (bmp' new RectangleF (0' 0' croppedWidth' croppedHeight)' new RectangleF (leftmost' topmost' croppedWidth' croppedHeight)' GraphicsUnit.Pixel); " is 155.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The length of the statement  "				PointF new_point = new PointF ((float)(origin.X + radius * Math.Cos (theta))' (float)(origin.Y + radius * Math.Sin (theta))); " is 125.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The length of the statement  "		result [2 * i + 1] = new PointF ((float)(cx + cx * Math.Cos (theta) * concave_radius)' (float)(cy + cy * Math.Sin (theta) * concave_radius)); " is 141.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateConcaveRadius,The length of the statement  "	FindIntersection (pt00' pt01' pt10' pt11' out lines_intersect' out segments_intersect' out intersection' out close_p1' out close_p2); " is 133.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,The length of the statement  "		player.Message (String.Format ("You are only allowed to run commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' Count)); " is 171.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I ((PixelData.X + x)' PixelData.Y' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 195.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I ((PixelData.X - x)' PixelData.Y' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 195.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I (PixelData.X' (PixelData.Y + y)' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 195.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Draw,The length of the statement  "					DrawOneBlock (player' player.World.Map' PixelData.BlockColor' new Vector3I (PixelData.X' ((PixelData.Y) - y)' (PixelData.Z + z))' BlockChangeContext.Drawn' ref blocks' ref blocksDenied' undoState); " is 197.
Long Statement,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The length of the statement  "			g.DrawImage (bmp' new RectangleF (0' 0' croppedWidth' croppedHeight)' new RectangleF (leftmost' topmost' croppedWidth' croppedHeight)' GraphicsUnit.Pixel); " is 155.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Init,The length of the statement  "	CdGenerate.Help = "Generates a new map. If no dimensions are given' uses current world's dimensions. " + "If no filename is given' loads generated world into current world.\n" + "Available themes: Grass' " + Enum.GetNames (typeof(MapGenTheme)).JoinToString () + '\n' + "Available terrain types: Empty' Ocean' " + Enum.GetNames (typeof(MapGenTemplate)).JoinToString () + '\n' + "Note: You do not need to specify a theme with \"Empty\" and \"Ocean\" templates."; " is 460.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedHandler,The length of the statement  "				player.Message ("  #{0} ({1}'{2}'{3}) World: {4}"' data.Id' data.StartPos.X' data.StartPos.Y' data.StartPos.Z' data.world.ClassyName); " is 134.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlock,The length of the statement  "							player.Message ("MessageBlock '{0}&S' was created by {1}&S at {2}"' MessageBlock.Name' MessageBlock.Creator' MessageBlock.Created); " is 131.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlock,The length of the statement  "			System.Text.StringBuilder output = new System.Text.StringBuilder ("There are " + player.World.Map.MessageBlocks.Count + " MessageBlocks in " + player.World.ClassyName + "&S: "); " is 177.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "			player.Message ("Cannot add a MessageBlock to world {0}&S: You are barred from building here."' player.World.ClassyName); " is 121.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "			player.Message ("Cannot add a MessageBlock to world {0}&S: You are not allowed to build here."' player.World.ClassyName); " is 121.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "		if (player.CanPlace (player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual) != CanPlaceResult.Allowed) { " is 125.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "		Player.RaisePlayerPlacedBlockEvent (player' player.WorldMap' Pos' player.WorldMap.GetBlock (Pos)' player.LastUsedBlockType' BlockChangeContext.Manual); " is 151.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "	MessageBlock = new MessageBlock (player.World.Name' mark' MessageBlock.GenerateName (player.World)' player.ClassyName' Message) { " is 129.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The length of the statement  "	Logger.Log (LogType.UserActivity' "{0} created MessageBlock {1} (on world {2})"' player.Name' MessageBlock.Name' player.World.Name); " is 132.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,The length of the statement  "								player.Message ("Portal {0}&S was created by {1}&S at {2} and teleports to world {3}&S."' portal.Name' PlayerDB.FindPlayerInfoExact (portal.Creator).ClassyName' portal.Created' portalWorld.ClassyName); " is 201.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalH,The length of the statement  "				StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: "); " is 141.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PortalCreateCallback,The length of the statement  "				player.MessageNow ("You are only allowed to run draw commands that affect up to {0} blocks. This one would affect {1} blocks."' player.Info.Rank.DrawLimit' op.Bounds.Volume); " is 174.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The length of the statement  "				player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length); " is 171.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,The length of the statement  "			player.Message ("&HUse /Realm create [ThemeType] [TerrainType]\n" + "&9Available themes: Grass' " + Enum.GetNames (typeof(MapGenTheme)).JoinToString () + '\n' + "&EAvailable terrain types: Empty' Ocean' " + Enum.GetNames (typeof(MapGenTemplate)).JoinToString () + '\n'); " is 270.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,The length of the statement  "		player.Message ("To build a realm' use /realm create. To activate it so you can build' use /realm activate. " + "If you find yourself unable to build in your Realm' use /realm activate again."); " is 194.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,Realm,The length of the statement  "		RealmHandler.RealmLoad (player' cmd' playerName + ".fcm"' playerName' RankManager.HighestRank.Name' RankManager.DefaultBuildRank.Name); " is 135.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "		World[] autoEnabledWorlds = WorldManager.Worlds.Where (w => (w.BlockDB.EnabledState == YesNoAuto.Auto) && w.BlockDB.IsEnabled).ToArray (); " is 138.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "				player.Message ("    Change limit: {0}    Time limit: {1}"' db.Limit == 0 ? "none" : db.Limit.ToStringInvariant ()' db.TimeLimit == TimeSpan.Zero ? "none" : db.TimeLimit.ToMiniString ()); " is 187.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "BlockDB: Player {0} enabled BlockDB on world {1} (was {2})"' player.Name' world.Name' db.EnabledState); " is 138.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "					player.Message ("BlockDB is now manually disabled on world {0}&S. Use &H/BlockDB {1} clear&S to delete all the data."' world.ClassyName' world.Name); " is 149.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "					Logger.Log (LogType.UserActivity' "BlockDB: Asked {0} to confirm disabling BlockDB on world {1}"' player.Name' world.Name); " is 123.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "BlockDB: Player {0} disabled BlockDB on world {1} (was {2})"' player.Name' world.Name' db.EnabledState); " is 139.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "BlockDB: Player {0} set BlockDB state on world {1} to Auto (was {2})"' player.Name' world.Name' db.EnabledState); " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "					player.Message ("BlockDB: Limit for world {0}&S is {1}"' world.ClassyName' (db.Limit == 0 ? "none" : db.Limit.ToStringInvariant ())); " is 133.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "					Logger.Log (LogType.UserActivity' "BlockDB: Asked {0} to confirm changing BlockDB limit on world {1}"' player.Name' world.Name); " is 128.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "						player.Message ("BlockDB: Time limit for world {0}&S is already set to {1}"' world.ClassyName' db.TimeLimit.ToMiniString ()); " is 125.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "					Logger.Log (LogType.UserActivity' "BlockDB: Asked {0} to confirm changing BlockDB time limit on world {1}"' player.Name' world.Name); " is 133.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockDBHandler,The length of the statement  "					Logger.Log (LogType.UserActivity' "BlockDB: Asked {0} to confirm clearing BlockDB data world {1}"' player.Name' world.Name); " is 124.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockInfoSchedulerCallback,The length of the statement  "				if ((entry.Context & BlockChangeContext.Drawn) == BlockChangeContext.Drawn && entry.Context != BlockChangeContext.Drawn) { " is 122.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,BlockInfoSchedulerCallback,The length of the statement  "				args.Player.Message ("&S  {0} ago: {1}&S replaced {2} with {3}{4}"' date' playerName' entry.OldBlock' entry.NewBlock' contextString); " is 133.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The length of the statement  "		player.Message ("  Cloud: {0}   Fog: {1}   Sky: {2}"' world.CloudColor == -1 ? "normal" : '#' + world.CloudColor.ToString ("X6")' world.FogColor == -1 ? "normal" : '#' + world.FogColor.ToString ("X6")' world.SkyColor == -1 ? "normal" : '#' + world.SkyColor.ToString ("X6")); " is 274.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The length of the statement  "		player.Message ("  Edge level: {0}  Edge texture: {1}"' world.EdgeLevel == -1 ? "normal" : world.EdgeLevel + " blocks"' world.EdgeBlock); " is 137.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The length of the statement  "			player.Message ("&A/Env [WorldName] terrain [Normal' arbot' cool' deadly' shroom' prometheus' woodpunk' fall' snow' tron' " + "mario' highres' 8bit' simple' indev' messa' portal' dokucraft' doomcraft' hexeretic' zelda "); " is 221.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The length of the statement  "			player.Message ("&A/Env [WorldName] terrain [Normal' arbot' cool' deadly' shroom' prometheus' woodpunk' fall' snow' tron' " + "mario' highres' 8bit' simple' indev' messa' portal' dokucraft' doomcraft' hexeretic' zelda "); " is 221.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "			player.Message ("Gen: Unrecognized theme \"{0}\". Available themes are: Grass' {1}"' themeName' Enum.GetNames (typeof(MapGenTheme)).JoinToString ()); " is 149.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "				player.Message ("Unrecognized template \"{0}\". Available terrain types: Empty' Ocean' {1}"' themeName' Enum.GetNames (typeof(MapGenTemplate)).JoinToString ()); " is 160.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "				player.Message ("Unrecognized template \"{0}\". Available terrain types: Empty' Ocean' {1}"' templateName' Enum.GetNames (typeof(MapGenTemplate)).JoinToString ()); " is 163.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "	const string dimensionRecommendation = "Dimensions must be between 16 and 2047. " + "Recommended values: 16' 32' 64' 128' 256' 512' and 1024."; " is 143.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "	if (!cmd.IsConfirmed && (!Map.IsRecommendedDimension (mapWidth) || !Map.IsRecommendedDimension (mapLength) || !Map.IsRecommendedDimension (mapHeight))) { " is 153.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The length of the statement  "		player.Message ("&WThe map will have non-standard dimensions. " + "You may see glitched blocks or visual artifacts. " + "The only recommended map dimensions are: 16' 32' 64' 128' 256' 512' and 1024."); " is 201.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The length of the statement  "		} else if (value.Equals ("on"' StringComparison.OrdinalIgnoreCase) || value.Equals ("true"' StringComparison.OrdinalIgnoreCase) || value == "1") { " is 146.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The length of the statement  "		} else if (value.Equals ("off"' StringComparison.OrdinalIgnoreCase) || value.Equals ("false"' StringComparison.OrdinalIgnoreCase) || value == "0") { " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The length of the statement  "		} else if (value.Equals ("off"' StringComparison.OrdinalIgnoreCase) || value.StartsWith ("disable"' StringComparison.OrdinalIgnoreCase)) { " is 138.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The length of the statement  "		} else if (value.Equals ("default"' StringComparison.OrdinalIgnoreCase) || value.Equals ("auto"' StringComparison.OrdinalIgnoreCase)) { " is 135.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSetHandler,The length of the statement  "		player.Message ("Backup setting for world {0}&S changed from \"{1}\" to \"{2}\""' world.ClassyName' oldDescription' world.BackupSettingDescription); " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GetBackupSettingsString,The length of the statement  "			return String.Format ("World {0}&S is backed up every {1} (default)"' world.ClassyName' WorldManager.DefaultBackupInterval.ToMiniString ()); " is 140.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldsHandler,The length of the statement  "			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Worlds {3}{1}"' offset + 1' offset + worldsPart.Length' worlds.Length' extraParam); " is 139.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "					player.Message ("&WYou must be {0}&W+ to add yourself to the access whitelist of {1}"' world.AccessSecurity.MinRank.ClassyName' world.ClassyName); " is 146.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "						target.Message ("You can now access world {0}&S (removed from blacklist by {1}&S)."' world.ClassyName' player.ClassyName); " is 122.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "					player.Message ("{0}&S was removed from the access blacklist of {1}&S. " + "Player is still NOT allowed to join (by rank)."' info.ClassyName' world.ClassyName); " is 160.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "						target.Message ("You were removed from the access blacklist of world {0}&S by {1}&S. " + "You are still NOT allowed to join (by rank)."' world.ClassyName' player.ClassyName); " is 174.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the access blacklist of {2}"' player.Name' info.Name' world.Name); " is 122.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the access whitelist on world {2}"' player.Name' info.Name' world.Name); " is 124.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "			if (world.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooHigh || world.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooLow) { " is 162.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the access blacklist on world {2}"' player.Name' info.Name' world.Name); " is 124.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "					player.Message ("{0}&S is no longer on the access whitelist of {1}&S. " + "Player is still allowed to join (by rank)."' info.ClassyName' world.ClassyName); " is 155.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "						target.Message ("You were removed from the access whitelist of world {0}&S by {1}&S. " + "You are still allowed to join (by rank)."' world.ClassyName' player.ClassyName); " is 170.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "						target.Message ("&WYou can no longer access world {0}&W (removed from whitelist by {1}&W)."' world.ClassyName' player.ClassyName); " is 130.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the access whitelist on world {2}"' player.Name' info.Name' world.Name); " is 128.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "			} else if (!player.Info.Rank.AllowSecurityCircumvention && world.AccessSecurity.MinRank > rank && world.AccessSecurity.MinRank > player.Info.Rank) { " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				player.Message ("&WYou must be ranked {0}&W+ to lower the access rank for world {1}"' world.AccessSecurity.MinRank.ClassyName' world.ClassyName); " is 145.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "					player.Message ("Following players no longer need to be blacklisted to be barred from {0}&S: {1}"' world.ClassyName' noLongerExcluded.JoinToClassyString ()); " is 157.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				PlayerInfo[] noLongerIncluded = exceptionList.Included.Where (includedPlayer => includedPlayer.Rank >= rank).ToArray (); " is 120.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "					player.Message ("Following players no longer need to be whitelisted to access {0}&S: {1}"' world.ClassyName' noLongerIncluded.JoinToClassyString ()); " is 149.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "					Server.Message ("{0}&S made the world {1}&S accessible only by {2}+"' player.ClassyName' world.ClassyName' world.AccessSecurity.MinRank.ClassyName); " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} set access rank for world {1} to {2}+"' player.Name' world.Name' world.AccessSecurity.MinRank.Name); " is 139.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "					player.Message ("&WYou must be {0}&W+ to add yourself to the build whitelist of {1}"' world.BuildSecurity.MinRank.ClassyName' world.ClassyName); " is 144.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "						target.Message ("You can now build in world {0}&S (removed from blacklist by {1}&S)."' world.ClassyName' player.ClassyName); " is 124.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "					player.Message ("{0}&S was removed from the build blacklist of {1}&S. " + "Player is still NOT allowed to build (by rank)."' info.ClassyName' world.ClassyName); " is 160.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "						target.Message ("You were removed from the build blacklist of world {0}&S by {1}&S. " + "You are still NOT allowed to build (by rank)."' world.ClassyName' player.ClassyName); " is 174.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the build blacklist of {2}"' player.Name' info.Name' world.Name); " is 121.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the build whitelist on world {2}"' player.Name' info.Name' world.Name); " is 123.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "			if (world.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooHigh || world.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooLow) { " is 160.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} added {1} to the build blacklist on world {2}"' player.Name' info.Name' world.Name); " is 123.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "					player.Message ("{0}&S is no longer on the build whitelist of {1}&S. " + "Player is still allowed to build (by rank)."' info.ClassyName' world.ClassyName); " is 155.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "						target.Message ("You were removed from the build whitelist of world {0}&S by {1}&S. " + "You are still allowed to build (by rank)."' world.ClassyName' player.ClassyName); " is 170.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "						target.Message ("&WYou can no longer build in world {0}&W (removed from whitelist by {1}&W)."' world.ClassyName' player.ClassyName); " is 132.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} removed {1} from the build whitelist on world {2}"' player.Name' info.Name' world.Name); " is 127.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "			} else if (!player.Info.Rank.AllowSecurityCircumvention && world.BuildSecurity.MinRank > rank && world.BuildSecurity.MinRank > player.Info.Rank) { " is 146.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				player.Message ("&WYou must be ranked {0}&W+ to lower build restrictions for world {1}"' world.BuildSecurity.MinRank.ClassyName' world.ClassyName); " is 147.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "					player.Message ("Following players no longer need to be blacklisted on world {0}&S: {1}"' world.ClassyName' noLongerExcluded.JoinToClassyString ()); " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				PlayerInfo[] noLongerIncluded = exceptionList.Included.Where (includedPlayer => includedPlayer.Rank >= rank).ToArray (); " is 120.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "					player.Message ("Following players no longer need to be whitelisted on world {0}&S: {1}"' world.ClassyName' noLongerIncluded.JoinToClassyString ()); " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "					Server.Message ("{0}&S allowed only {1}+&S to build in world {2}"' player.ClassyName' world.BuildSecurity.MinRank.ClassyName' world.ClassyName); " is 144.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} set build rank for world {1} to {2}+"' player.Name' world.Name' world.BuildSecurity.MinRank.Name); " is 137.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldFlushHandler,The length of the statement  "		player.MessageNow ("WFlush: Flushing {0}&S ({1} blocks)..."' world.ClassyName' map.UpdateQueueLength + map.DrawQueueBlockCount); " is 128.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldInfoHandler,The length of the statement  "		player.Message ("  {0}&S was locked {1} ago by {2}"' world.ClassyName' DateTime.UtcNow.Subtract (world.LockedDate).ToMiniString ()' world.LockedBy); " is 148.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldInfoHandler,The length of the statement  "		player.Message ("  {0}&S was unlocked {1} ago by {2}"' world.ClassyName' DateTime.UtcNow.Subtract (world.UnlockedDate).ToMiniString ()' world.UnlockedBy); " is 154.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldInfoHandler,The length of the statement  "		player.Message ("  {0}&S was created/loaded {1} ago by {2}"' world.ClassyName' DateTime.UtcNow.Subtract (world.LoadedOn).ToMiniString ()' world.LoadedByClassy); " is 160.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldInfoHandler,The length of the statement  "		player.Message ("  Map was last changed {0} ago by {1}"' DateTime.UtcNow.Subtract (world.MapChangedOn).ToMiniString ()' world.MapChangedByClassy); " is 146.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} loaded new map for world \"{1}\" from {2}"' player.Name' world.Name' fullFileName); " is 122.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,The length of the statement  "					player.Confirm (cmd' "A map named \"{0}\" already exists' and will be overwritten with \"{1}\"."' Path.GetFileName (targetFullFileName)' Path.GetFileName (fullFileName)); " is 170.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} created a new world named \"{1}\" (loaded from \"{2}\")"' player.Name' worldName' fileName); " is 131.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldLoadHandler,The length of the statement  "				player.MessageNow ("Access permission is {0}+&S' and build permission is {1}+"' newWorld.AccessSecurity.MinRank.ClassyName' newWorld.BuildSecurity.MinRank.ClassyName); " is 167.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldMainHandler,The length of the statement  "			player.Message ("Rank mains: {0}"' mainedRanks.JoinToString (r => String.Format ("{0}&S for {1}&S"' // ReSharper disable PossibleNullReferenceException " is 151.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetRankMainWorld,The length of the statement  "		player.Message ("World {0}&S requires {1}+&S to join' so it cannot be used as the main world for rank {2}&S."' world.ClassyName' world.AccessSecurity.MinRank' rank.ClassyName); " is 176.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetRankMainWorld,The length of the statement  "	Server.Message ("&SPlayer {0}&S designated {1}&S to be the main world for rank {2}"' player.ClassyName' world.ClassyName' rank.ClassyName); " is 139.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetRankMainWorld,The length of the statement  "	Logger.Log (LogType.UserActivity' "{0} set {1} to be the main world for rank {2}."' player.Name' world.Name' rank.Name); " is 120.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetMainWorld,The length of the statement  "			player.Message ("The main world cannot have access restrictions. " + "All access restrictions were removed from world {0}"' world.ClassyName); " is 142.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldRenameHandler,The length of the statement  "			player.MessageNow ("WRename: World \"{0}\" was renamed to \"{1}\"' but the map file could not be moved due to an error: {2}"' oldName' newName' ex.InnerException); " is 163.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldRenameHandler,The length of the statement  "			Logger.Log (LogType.Error' "WorldCommands.Rename: Unexpected error while renaming world {0} to {1}: {2}"' oldWorld.Name' newName' ex); " is 134.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSaveHandler,The length of the statement  "			Logger.Log (LogType.Error' "WorldCommands.WorldSave: Map for world \"{0}\" is unloaded' and file does not exist."' world.Name); " is 127.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldUnloadHandler,The length of the statement  "			player.MessageNow ("&WWorld {0}&W is set as the main world. " + "Assign a new main world before deleting this one."' world.ClassyName); " is 135.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldUnloadHandler,The length of the statement  "			player.MessageNow ("&WUnexpected error occured while unloading world {0}&W: {1}"' world.ClassyName' ex.GetType ().Name); " is 120.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldUnloadHandler,The length of the statement  "			Logger.Log (LogType.Error' "WorldCommands.WorldUnload: Unexpected error while unloading world {0}: {1}"' world.Name' ex); " is 121.
Long Statement,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldUnloadHandler,The length of the statement  "	player.Message ("Removed {0}&S from the world list. You can now delete the map file ({1}.fcm) manually."' world.ClassyName' world.Name); " is 136.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The length of the statement  "		player.Message ("Zone: Creating a {0}+&S zone for player {1}&S."' newZone.Controller.MinRank.ClassyName' info.ClassyName); " is 122.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddCallback,The length of the statement  "		Logger.Log (LogType.UserActivity' "Player {0} created a new zone \"{1}\" containing {2} blocks."' player.Name' zone.Name' zone.Bounds.Volume); " is 142.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The length of the statement  "				if (!player.Info.Rank.AllowSecurityCircumvention && zone.Controller.MinRank > player.Info.Rank && minRank <= player.Info.Rank) { " is 128.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The length of the statement  "	player.Message ("About zone \"{0}\": size {1} x {2} x {3}' contains {4} blocks' editable by {5}+."' zone.Name' zone.Bounds.Width' zone.Bounds.Length' zone.Bounds.Height' zone.Bounds.Volume' zone.Controller.MinRank.ClassyName); " is 226.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The length of the statement  "	player.Message ("  Zone center is at ({0}'{1}'{2})."' (zone.Bounds.XMin + zone.Bounds.XMax) / 2' (zone.Bounds.YMin + zone.Bounds.YMax) / 2' (zone.Bounds.ZMin + zone.Bounds.ZMax) / 2); " is 183.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The length of the statement  "		player.Message ("  Zone created by {0}&S on {1:MMM d} at {1:h:mm} ({2} ago)."' zone.CreatedByClassy' zone.CreatedDate' DateTime.UtcNow.Subtract (zone.CreatedDate).ToMiniString ()); " is 180.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The length of the statement  "		player.Message ("  Zone last edited by {0}&S on {1:MMM d} at {1:h:mm} ({2}d {3}h ago)."' zone.EditedByClassy' zone.EditedDate' DateTime.UtcNow.Subtract (zone.EditedDate).Days' DateTime.UtcNow.Subtract (zone.EditedDate).Hours); " is 226.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneListHandler,The length of the statement  "			player.Message ("   {0} ({1}&S) - {2} x {3} x {4}"' zone.Name' zone.Controller.MinRank.ClassyName' zone.Bounds.Width' zone.Bounds.Length' zone.Bounds.Height); " is 158.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneRenameHandler,The length of the statement  "	playerWorld.Players.Message ("&SZone \"{0}\" was renamed to \"{1}&S\" by {2}"' fullOldName' oldZone.ClassyName' player.ClassyName); " is 131.
Long Statement,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneRenameHandler,The length of the statement  "	Logger.Log (LogType.UserActivity' "Player {0} renamed zone \"{1}\" to \"{2}\" on world {3}"' player.Name' fullOldName' newName' playerWorld.Name); " is 146.
Long Statement,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The length of the statement  "			if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) { " is 145.
Long Statement,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The length of the statement  "						if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) { " is 155.
Long Statement,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Start,The length of the statement  "	Scheduler.NewTask (t => _world.Players.Message ("&WThe game will be starting soon...")).RunRepeating (TimeSpan.FromSeconds (0)' TimeSpan.FromSeconds (20)' 2); " is 158.
Long Statement,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The length of the statement  "		if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) { " is 125.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,The length of the statement  "		Logger.Log (LogType.SystemActivity' "Player {0} is using \"{1}\"' supporting: {2}"' Name' ClientName' clientExts.JoinToString ("' ")); " is 134.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,The length of the statement  "		Logger.Log (LogType.SystemActivity' "Expected: {0} / Received: {1}"' OpCode.CustomBlocks' customBlockSupportLevelReply); " is 120.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,The length of the statement  "			Logger.Log (LogType.Warning' "Player {0} from {1}: Unexpected CustomBlockSupportLevel reply ({2})"' Name' IP' customBlockSupportLevelReply); " is 140.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,SendBlockPermissions,The length of the statement  "	Send (Packet.MakeSetBlockPermission (Block.Admincrete' Can (Permission.PlaceAdmincrete)' Can (Permission.DeleteAdmincrete))); " is 125.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,The length of the statement  "		kickReason = String.Format ("Got blasted out of the server with the BASSCANNON executed by {0}: {1}"' player.Name' reason); " is 123.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,The length of the statement  "			Server.Message ("{0}&W Got blasted out of the server with the BASSCANNON executed by {1}&W: {2}"' ClassyName' player.ClassyName' reason); " is 137.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,BassKick,The length of the statement  "			Server.Message ("{0}&W Got blasted out of the server with the BASSCANNON executed by {1}"' ClassyName' player.ClassyName); " is 122.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The length of the statement  "	if (Info.IsFrozen || Math.Abs (coord.X * 32 - Position.X) > MaxBlockPlacementRange || Math.Abs (coord.Y * 32 - Position.Y) > MaxBlockPlacementRange || Math.Abs (coord.Z * 32 - Position.Z) > MaxBlockPlacementRange) { " is 215.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,CheckBlockSpam,The length of the statement  "			Logger.Log (LogType.SuspiciousActivity' "{0} was kicked for block spam ({1} blocks in {2} seconds)"' Name' Info.Rank.AntiGriefBlocks' spamTimer); " is 145.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,CanSeeMoving,The length of the statement  "	return other == this || IsSuper || other.spectatedPlayer == null && !other.Info.IsHidden || (other.spectatedPlayer != this && Info.Rank.CanSee (other.Info.Rank)); " is 162.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ContainsValidCharacters,The length of the statement  "		if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') { " is 120.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMessagePacket,The length of the statement  "		Logger.Log (LogType.SuspiciousActivity' "Player.ParseMessage: {0} attempted to write illegal characters in chat and was kicked."' Name); " is 136.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The length of the statement  "		} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) { " is 146.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "					if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') { " is 120.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "						Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP); " is 125.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "			Logger.Log (LogType.SuspiciousActivity' "{0} Player was identified as connecting from localhost and allowed in."' standardMessage); " is 131.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "			Logger.Log (LogType.SuspiciousActivity' "{0} Player was identified as connecting from LAN and allowed in."' standardMessage); " is 125.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "				Logger.Log (LogType.SuspiciousActivity' "{0} IP matched previous records for that name. " + "Player was kicked anyway because VerifyNames is set to Always."' standardMessage); " is 175.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "				Logger.Log (LogType.SuspiciousActivity' "{0} IP matched previous records for that name. Player was allowed in."' standardMessage); " is 130.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "				Logger.Log (LogType.SuspiciousActivity' "{0} IP did not match. Player was allowed in anyway because VerifyNames is set to Never."' standardMessage); " is 148.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "				bannedMessage = String.Format ("Banned {0} ago by {1}: {2}"' Info.TimeSinceBan.ToMiniString ()' Info.BannedBy' Info.BanReason); " is 127.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		string bannedMessage = String.Format ("IP-banned {0} ago by {1}: {2}"' DateTime.UtcNow.Subtract (ipBanInfo.BanDate).ToMiniString ()' ipBanInfo.BannedBy' ipBanInfo.BanReason); " is 174.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Denied player {0}: maximum number of connections was reached for {1}"' givenName' IP); " is 149.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		string kickMessage = String.Format ("Sorry' server is full ({0}/{1})"' Server.Players.Length' ConfigKey.MaxPlayers.GetInt ()); " is 126.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		Logger.Log (LogType.Warning' "Could not load main world ({0}) for connecting player {1} (from {2}): " + "Either main world is full' or an error occured."' startingWorld.Name' Name' IP); " is 185.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255))); " is 302.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "	PlayerInfo[] bannedPlayerNames = PlayerDB.FindPlayers (IP' 25).Where (playerFromSameIP => playerFromSameIP.IsBanned).ToArray (); " is 128.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		canSee.Message ("&WPlayer {0}&W logged in from an IP shared by banned players: {1}"' ClassyName' bannedPlayerNames.JoinToClassyString ()); " is 138.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		Logger.Log (LogType.SuspiciousActivity' "Player {0} logged in from an IP shared by banned players: {1}"' ClassyName' bannedPlayerNames.JoinToString (info => info.Name)); " is 169.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "		canSee.Message ("&WPlayer {0}&W was previously muted by {1}&W' {2} left."' ClassyName' Info.MutedByClassy' Info.TimeMutedLeft.ToMiniString ()); " is 143.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The length of the statement  "			canSee.Message ("&WPlayer {0}&W was previously frozen {1} ago by {2}"' ClassyName' Info.TimeSinceFrozen.ToMiniString ()' Info.FrozenByClassy); " is 142.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The length of the statement  "		Logger.Log (LogType.Warning' "Player.LoginSequence: Player \"{0}\" tried connecting with Minecraft Beta client from {1}. " + "800Craft does not support Minecraft Beta."' smpPlayerName' IP); " is 189.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The length of the statement  "		throw new InvalidOperationException ("Player.JoinWorldNow may only be called from player's own thread. " + "Use Player.JoinWorld instead."); " is 140.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The length of the statement  "		Logger.Log (LogType.Warning' "Player.JoinWorldNow: Player {0} was prevented from joining world {1} by an event callback."' Name' newWorld.Name); " is 144.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The length of the statement  "			Logger.Log (LogType.Error' "Player.JoinWorldNow: Player asked to be released from its world' " + "but the world did not contain the player."); " is 142.
Long Statement,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MoveEntity,The length of the statement  "		if (distSquared < SkipMovementThresholdSquared && (delta.R * delta.R + delta.L * delta.L) < SkipRotationThresholdSquared && !entity.SkippedLastMove) { " is 150.
Long Statement,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The length of the statement  "	Logger.Log (LogType.SystemActivity' "Send: MakeAddSelectionBox({0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}'{9}'{10}'{11})"' ID' Label' StartX' StartY' StartZ' EndX' EndY' EndZ' R' G' B' A); " is 181.
Long Statement,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The length of the statement  "	if (coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0 && (byte)type < 50) { " is 135.
Long Statement,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The length of the statement  "	if (Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0) { " is 122.
Long Statement,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The length of the statement  "		Logger.Log (LogType.Warning' "Map.ValidateHeader: Spawn coordinates are outside the valid range! Using center of the map instead."); " is 132.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The length of the statement  "		Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize (); " is 157.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The length of the statement  "		if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) { " is 131.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The length of the statement  "				_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0); " is 136.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "								if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) { " is 162.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "			if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) { " is 127.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "			if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) { " is 127.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The length of the statement  "				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' pt.PrevBlock == Block.Water ? Block.Water : Block.Air)); " is 129.
Long Statement,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,HitPlayer,The length of the statement  "	hitted.Kill (world' String.Format ("{0}&S was torn to pieces by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName)); " is 156.
Long Statement,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,CheckPermissionsToDraw,The length of the statement  "				if (creator.CanPlace (_map' new Vector3I (i' j' k)' DefaultBlocks [EmptyIdx]' BlockChangeContext.Physics) != CanPlaceResult.Allowed) " is 132.
Long Statement,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,PerformInternal,The length of the statement  "			_state = _life2d.FinalizeStep () ? State.HalfStep : (_autoReset != AutoResetMethod.None ? State.Resetting : State.Stopped); " is 123.
Long Statement,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_startingPos.X' (short)_startingPos.Y' (short)_nextZ' Block.Air)); " is 120.
Long Statement,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "	//delete at the previous position' restore water unconditionally' lava only when bullet is still there to prevent restoration of explosion lava " is 143.
Long Statement,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The length of the statement  "		if (_behavior.VisitBlock (_world' _pos' _prevBlock' _owner' ref _restDistance' updates' _block) && _behavior.CanKillPlayer) " is 123.
Long Statement,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The length of the statement  "	hitted.Kill (world' String.Format ("{0}&S was blown up by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName)); " is 150.
Long Statement,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The length of the statement  "	hitted.Kill (world' String.Format ("{0}&S was shot by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName)); " is 146.
Long Statement,fCraft,TntBulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,HitPlayer,The length of the statement  "	hitted.Kill (world' String.Format ("{0}&S was torn to pieces by {1}"' hitted.ClassyName' hitted.ClassyName == by.ClassyName ? "theirself" : by.ClassyName)); " is 156.
Long Statement,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The length of the statement  "	if (!Physics.CanFloat (e.NewBlock) && e.NewBlock != Block.Air && e.NewBlock != Block.Water && e.NewBlock != Block.Lava && e.NewBlock != Block.BrownMushroom && e.NewBlock != Block.RedFlower && e.NewBlock != Block.RedMushroom && e.NewBlock != Block.YellowFlower && e.NewBlock != Block.Plant) { " is 291.
Long Statement,fCraft,PlantPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,blockSquash,The length of the statement  "					world.AddPhysicsTask (new PlantTask (world' (short)e.Coords.X' (short)e.Coords.Y' (short)e.Coords.Z)' PlantTask.GetRandomDelay ()); " is 131.
Long Statement,fCraft,PlantPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,blockSquash,The length of the statement  "					Player.RaisePlayerPlacedBlockEvent (player' world.Map' z' world.Map.GetBlock (z)' e.NewBlock' BlockChangeContext.Physics); " is 122.
Long Statement,fCraft,GrassTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The length of the statement  "		if (!shadowed && Block.Dirt == b)//we have found dirt and there were nothing casting shadows above' so change it to grass and return " is 132.
Long Statement,fCraft,GrassTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,PerformInternal,The length of the statement  "		//check if the rest of the column is under a block which casts shadow and thus prevents plants from growing and makes grass to die " is 130.
Long Statement,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,SendGlobal,The length of the statement  "	rawMessage = rawMessage.Replace ("$awesome"' "It is my professional opinion' that " + ConfigKey.ServerName.GetString () + " is the best server on Minecraft"); " is 158.
Long Statement,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,SendGlobal,The length of the statement  "			Swears.AddRange (File.ReadAllLines ("SwearWords.txt").Where (line => line.StartsWith ("#") == false || line.Trim ().Equals (String.Empty))); " is 140.
Long Statement,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,SendCustom,The length of the statement  "	string formattedMessage = String.Format (Color.Custom + "({2}){0}&b: {1}"' player.ClassyName' rawMessage' ConfigKey.CustomChatName.GetString ()); " is 145.
Long Statement,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,RaiseSentEvent,The length of the statement  "		h (null' new ChatSentEventArgs (args.Player' args.Message' args.FormattedMessage' args.MessageType' args.RecepientList' count)); " is 128.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,Load,The length of the statement  "			Logger.Log (LogType.Debug' "PlayerDB.Load: Done loading player DB ({0} records) in {1}ms. MaxID={2}"' Trie.Count' sw.ElapsedMilliseconds' maxID); " is 145.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,The length of the statement  "		Logger.Log (LogType.Warning' "PlayerDB.Load: Attempting to load unsupported PlayerDB format ({0}). Errors may occur."' version); " is 128.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,The length of the statement  "		Logger.Log (LogType.Warning' "PlayerDB.Load: Converting PlayerDB to a newer format (version {0} to {1})."' version' FormatVersion); " is 131.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,The length of the statement  "			if ((info.LastIP.Equals (IPAddress.None) || info.LastIP.Equals (IPAddress.Any) || info.TimesVisited == 0) && !info.IsBanned && info.Rank == RankManager.DefaultRank) { " is 166.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,The length of the statement  "			Logger.Log (LogType.Error' "PlayerDB.Load: Unexpected field count ({0})' expecting at least {1} fields for a PlayerDB entry."' fields.Length' PlayerInfo.MinFieldCount); " is 168.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,RunCompatibilityChecks,The length of the statement  "		Logger.Log (LogType.SystemActivity' "PlayerDB: Unhid {0}' unfroze {1}' and unmuted {2} banned accounts."' unhid' unfroze' unmuted); " is 131.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,Save,The length of the statement  "		Logger.Log (LogType.Debug' "PlayerDB.Save: Saved player database ({0} records) in {1}ms"' Trie.Count' sw.ElapsedMilliseconds); " is 126.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,OpenRead,The length of the statement  "	return new FileStream (fileName' FileMode.Open' FileAccess.Read' FileShare.Read' BufferSize' FileOptions.SequentialScan); " is 121.
Long Statement,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The length of the statement  "	if (player.BanStatus != BanStatus.NotBanned || player.UnbanDate != DateTime.MinValue || player.IsFrozen || player.IsMuted || player.TimesKicked != 0 || player.Rank != RankManager.DefaultRank || player.PreviousRank != null) { " is 224.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanIP,The length of the statement  "		PlayerInfo unbannable = PlayerDB.FindPlayers (address).FirstOrDefault (info => !player.Can (Permission.Ban' info.Rank)); " is 120.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanIP,The length of the statement  "				colorMsg = String.Format ("&SGiven player ({0}&S) and their IP address ({1}) are both already banned."' ClassyName' address); " is 125.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanIP,The length of the statement  "			string colorMsg = String.Format ("&SGiven player ({0}&S) is exempt from IP bans. Remove the exemption and retry."' ClassyName); " is 127.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanIP,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} unbanned {1} (UnbanIP {2}). Reason: {3}"' player.Name' address' Name' reason ?? ""); " is 123.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanAll,The length of the statement  "			PlayerOpException.ThrowPermissionMissing (player' this' "ban-all"' Permission.Ban' Permission.BanIP' Permission.BanAll); " is 120.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanAll,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} banned {1} (BanAll {2}). Reason: {3}"' player.Name' address' Name' reason ?? ""); " is 120.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanAll,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} banned {1} (BanAll {2}). Reason: {3}"' player.Name' targetAlt.Name' Name' reason ?? ""); " is 127.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,BanAll,The length of the statement  "						Server.Message ("&WPlayer {0}&W was banned by {1}&W by association with {2}"' targetAlt.ClassyName' player.ClassyName' ClassyName); " is 131.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanAll,The length of the statement  "			PlayerOpException.ThrowPermissionMissing (player' this' "unban-all"' Permission.Ban' Permission.BanIP' Permission.BanAll); " is 122.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanAll,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} unbanned {1} (UnbanAll {2}). Reason: {3}"' player.Name' address' Name' reason ?? ""); " is 124.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanAll,The length of the statement  "				Logger.Log (LogType.UserActivity' "{0} unbanned {1} (UnbanAll {2}). Reason: {3}"' player.Name' targetAlt.Name' Name' reason ?? ""); " is 131.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,UnbanAll,The length of the statement  "						Server.Message ("&WPlayer {0}&W was unbanned by {1}&W by association with {2}"' targetAlt.ClassyName' player.ClassyName' ClassyName); " is 133.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "		string msg = String.Format ("Cannot promote {0} to {1}: you may only promote players up to rank {2}."' Name' newRank.Name' player.Info.Rank.GetLimit (Permission.Promote).Name); " is 176.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "		string colorMsg = String.Format ("&SCannot promote {0}&S to {1}&S: you may only promote players up to rank {2}&S."' ClassyName' newRank.ClassyName' player.Info.Rank.GetLimit (Permission.Promote).ClassyName); " is 207.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "		string msg = String.Format ("Cannot demote {0} (ranked {1}): you may only demote players ranked {2} or below."' Name' Rank.Name' player.Info.Rank.GetLimit (Permission.Demote).Name); " is 181.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "		string colorMsg = String.Format ("&SCannot demote {0}&S (ranked {1}&S): you may only demote players ranked {2}&S or below."' ClassyName' Rank.ClassyName' player.Info.Rank.GetLimit (Permission.Demote).ClassyName); " is 212.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "	Logger.Log (LogType.UserActivity' "{0} {1} {2} from {3} to {4}. Reason: {5}"' player.Name' verbed' Name' Rank.Name' newRank.Name' reason ?? ""); " is 144.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,ChangeRank,The length of the statement  "			Server.Message (target' "{0}&S {1} {2}&S from {3}&S to {4}"' player.ClassyName' verbed' ClassyName' oldRank.ClassyName' newRank.ClassyName); " is 140.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Mute,The length of the statement  "				Server.Message (target' "&SPlayer {0}&S was muted by {1}&S for {2}"' ClassyName' player.ClassyName' duration.ToMiniString ()); " is 126.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Mute,The length of the statement  "			string msg = String.Format ("Player {0} was already muted by {1} ({2} left)"' ClassyName' MutedBy' TimeMutedLeft.ToMiniString ()); " is 130.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Mute,The length of the statement  "			string colorMsg = String.Format ("&SPlayer {0}&S was already muted by {1}&S ({2} left)"' ClassyName' MutedByClassy' TimeMutedLeft.ToMiniString ()); " is 147.
Long Statement,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Unmute,The length of the statement  "		Logger.Log (LogType.UserActivity' "Player {0} was unmuted by {1} ({2} was left on the mute)"' Name' player.Name' timeLeft); " is 123.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "		msg = String.Format ("IP {0} is used by player {1}' ranked {2}. You may only ban players ranked {3} and below."' targetAddress' infoWhomPlayerCantBan.Name' infoWhomPlayerCantBan.Rank.Name' player.Info.Rank.GetLimit (Permission.Ban).Name); " is 238.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "		colorMsg = String.Format ("&SIP {0} is used by player {1}&S' ranked {2}&S. You may only ban players ranked {3}&S and below."' targetAddress' infoWhomPlayerCantBan.ClassyName' infoWhomPlayerCantBan.Rank.ClassyName' player.Info.Rank.GetLimit (Permission.Ban).ClassyName); " is 269.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "		msg = String.Format ("Given IP is used by player {0}' ranked {1}. You may only ban players ranked {2} and below."' infoWhomPlayerCantBan.Name' infoWhomPlayerCantBan.Rank.Name' player.Info.Rank.GetLimit (Permission.Ban).Name); " is 225.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "		colorMsg = String.Format ("&SGiven IP is used by player {0}&S' ranked {1}&S. You may only ban players ranked {2}&S and below."' infoWhomPlayerCantBan.ClassyName' infoWhomPlayerCantBan.Rank.ClassyName' player.Info.Rank.GetLimit (Permission.Ban).ClassyName); " is 256.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimitIP,The length of the statement  "	throw new PlayerOpException (player' infoWhomPlayerCantBan' PlayerOpExceptionCode.PermissionLimitTooLow' msg' colorMsg); " is 120.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimit,The length of the statement  "	string msg = String.Format ("Cannot {0} {1} (ranked {2}): you may only {0} players ranked {3} and below."' action' targetInfo.Name' targetInfo.Rank.Name' player.Info.Rank.GetLimit (permission).Name); " is 199.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPermissionLimit,The length of the statement  "	string colorMsg = String.Format ("&SCannot {0} {1}&S (ranked {2}&S): you may only {0} players ranked {3}&S and below."' action' targetInfo.ClassyName' targetInfo.Rank.ClassyName' player.Info.Rank.GetLimit (permission).ClassyName); " is 230.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowPlayerAndIPNotBanned,The length of the statement  "		colorMsg = String.Format ("&SPlayer {0}&S and their IP ({1}) are not currently banned."' targetInfo.ClassyName' address); " is 121.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowNoOneToBan,The length of the statement  "			msg = String.Format ("Player {0}' their IP ({1})' and all players who use this IP are already banned."' targetInfo.Name' address); " is 130.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowNoOneToBan,The length of the statement  "			colorMsg = String.Format ("&SPlayer {0}&S' their IP ({1})' and all players who use this IP are already banned."' targetInfo.ClassyName' address); " is 145.
Long Statement,fCraft,PlayerOpException,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerOpException.cs,ThrowNoOneToBan,The length of the statement  "			colorMsg = String.Format ("&SPlayer {0}&S' their IP' and all players who use this IP are already banned."' targetInfo.ClassyName); " is 130.
Long Statement,fCraft,RankManager,F:\newReposMay17\GlennMR_800craft\fCraft\Player\RankManager.cs,AddRank,The length of the statement  "		throw new RankDefinitionException (rank.Name' "Duplicate definition for rank \"{0}\" (by Name) was ignored."' rank.Name); " is 121.
Long Statement,fCraft,RankManager,F:\newReposMay17\GlennMR_800craft\fCraft\Player\RankManager.cs,ParsePermissionLimits,The length of the statement  "			Logger.Log (LogType.Warning' "Could not parse one of the rank-limits for kick' ban' promote' and/or demote permissions for {0}. " + "Any unrecognized limits were reset to defaults (own rank)."' rank.Name); " is 205.
Long Statement,fCraft,PluginManager,F:\newReposMay17\GlennMR_800craft\fCraft\Plugins\PluginManager.cs,Initialize,The length of the statement  "				String args = plugin.Substring (plugin.LastIndexOf ("\\"' System.StringComparison.Ordinal) + 1' plugin.IndexOf (".dll"' System.StringComparison.Ordinal) - plugin.LastIndexOf ("\\"' System.StringComparison.Ordinal) - 1); " is 219.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestDirectory,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestDirectory: Specified path for {0} is invalid or incorrectly formatted ({1}: {2})."' pathLabel' ex.GetType ().Name' ex.Message); " is 165.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestDirectory,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestDirectory: Cannot create or write to file/path for {0}' please check permissions ({1}: {2})."' pathLabel' ex.GetType ().Name' ex.Message); " is 176.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestDirectory,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestDirectory: Drive/volume for {0} does not exist or is not mounted ({1}: {2})."' pathLabel' ex.GetType ().Name' ex.Message); " is 160.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestDirectory,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestDirectory: Specified directory for {0} is not readable/writable ({1}: {2})."' pathLabel' ex.GetType ().Name' ex.Message); " is 159.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestFile,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestFile: Specified path for {0} is invalid or incorrectly formatted ({1}: {2})."' fileLabel' ex.GetType ().Name' ex.Message); " is 160.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestFile,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestFile: Cannot create or write to {0}' please check permissions ({1}: {2})."' fileLabel' ex.GetType ().Name' ex.Message); " is 157.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestFile,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestFile: Drive/volume for {0} does not exist or is not mounted ({1}: {2})."' fileLabel' ex.GetType ().Name' ex.Message); " is 155.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,TestFile,The length of the statement  "			Logger.Log (LogType.Error' "Paths.TestFile: Specified file for {0} is not readable/writable ({1}: {2})."' fileLabel' ex.GetType ().Name' ex.Message); " is 149.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,Compare,The length of the statement  "	return String.Equals (Path.GetFullPath (p1).TrimEnd (Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar)' Path.GetFullPath (p2).TrimEnd (Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar)' sc); " is 212.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,Contains,The length of the statement  "	string fullParentPath = Path.GetFullPath (parentPath).TrimEnd (Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar); " is 124.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,Contains,The length of the statement  "	string fullChildPath = Path.GetFullPath (childPath).TrimEnd (Path.DirectorySeparatorChar' Path.AltDirectorySeparatorChar); " is 122.
Long Statement,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,FindFiles,The length of the statement  "	return parentDir.GetFiles ("*"' SearchOption.TopDirectoryOnly).Where (file => file.Name.Equals (fi.Name' StringComparison.OrdinalIgnoreCase)).ToArray (); " is 153.
Long Statement,fCraft,PlayerProximityTracker,F:\newReposMay17\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,MovePlayer,The length of the statement  "	//the new pos is given as an argument (assumed from PlayerMoved event args) so that the new position would match the previous in the next moved event " is 149.
Long Statement,fCraft,PlayerProximityTracker,F:\newReposMay17\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,MovePlayer,The length of the statement  "		//this is not a fatal error' the player' even when existing at some wrong position will not be returned by the find call looking around this wrong position " is 155.
Long Statement,fCraft,PlayerProximityTracker,F:\newReposMay17\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,MovePlayer,The length of the statement  "		Logger.Log (LogType.Error' "PlayerProximityTracker.MovePlayer: Player " + p.Name + " is not found at its previous position"); " is 125.
Long Statement,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,PlayerInfoRankChangedHandler,The length of the statement  "		string actionString = String.Format ("{0} from {1}&W to {2}&W"' e.RankChangeType' e.OldRank.ClassyName' e.NewRank.ClassyName); " is 126.
Long Statement,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,PlayerSomethingMessage,The length of the statement  "	string message = String.Format ("{0}&W* {1}&W was {2} by {3}&W"' BoldCode' target.ClassyName' action' player.ClassyName); " is 121.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The length of the statement  "				Logger.Log (LogType.Warning' "IPBanList.Load: Attempting to load unsupported IPBanList format ({0}). Errors may occur."' version); " is 130.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The length of the statement  "				Logger.Log (LogType.Warning' "IPBanList.Load: Converting IPBanList to a newer format (version {0} to {1})."' version' FormatVersion); " is 133.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The length of the statement  "					Logger.Log (LogType.Error' "IPBanList.Load: Corrupt record skipped ({0} fields instead of {1}): {2}"' fields.Length' IPBanInfo.FieldCount' String.Join ("'"' fields)); " is 166.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanIP,The length of the statement  "	PlayerInfo infoWhomPlayerCantBan = PlayerDB.FindPlayers (targetAddress).FirstOrDefault (info => !player.Can (Permission.Ban' info.Rank)); " is 137.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanIP,The length of the statement  "		Logger.Log (LogType.UserActivity' "{0} unbanned {1} (UnbanIP {1}). Reason: {2}"' player.Name' targetAddress' reason ?? ""); " is 123.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,The length of the statement  "		PlayerOpException.ThrowPermissionMissing (player' null' "ban-all"' Permission.Ban' Permission.BanIP' Permission.BanAll); " is 120.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0} banned {1} (BanAll {1}). Reason: {2}"' player.Name' targetAddress' reason ?? ""); " is 120.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,BanAll,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0} banned {1} (BanAll {2}). Reason: {3}"' player.Name' targetAlt.Name' targetAddress' reason ?? ""); " is 136.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,The length of the statement  "		PlayerOpException.ThrowPermissionMissing (player' null' "unban-all"' Permission.Ban' Permission.BanIP' Permission.BanAll); " is 122.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0} unbanned {1} (UnbanAll {1}). Reason: {2}"' player.Name' targetAddress' reason ?? ""); " is 124.
Long Statement,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,UnbanAll,The length of the statement  "			Logger.Log (LogType.UserActivity' "{0} unbanned {1} (UnbanAll {2}). Reason: {3}"' player.Name' targetAlt.Name' targetAddress' reason ?? ""); " is 140.
Long Statement,fCraft,BoundingBox,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,Insersects,The length of the statement  "	return !(XMax < other.XMin || XMin > other.XMax || YMax < other.YMin || YMin > other.YMax || ZMax < other.ZMin || ZMin > other.ZMax); " is 133.
Long Statement,fCraft,BoundingBox,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,Contains,The length of the statement  "	return XMin <= other.XMin && XMax >= other.XMax && YMin <= other.YMin && YMax >= other.YMax && ZMin <= other.ZMin && ZMax >= other.ZMax; " is 136.
Long Statement,fCraft,BoundingBox,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,GetIntersection,The length of the statement  "		return new BoundingBox (Math.Max (XMin' other.XMin)' Math.Max (YMin' other.YMin)' Math.Max (ZMin' other.ZMin)' Math.Min (XMax' other.XMax)' Math.Min (YMax' other.YMax)' Math.Min (ZMax' other.ZMax)); " is 198.
Long Statement,fCraft,BoundingBox,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\BoundingBox.cs,Equals,The length of the statement  "	return XMin == other.XMin && XMax == other.XMax && YMin == other.YMin && YMax == other.YMax && ZMin == other.ZMin && ZMax == other.ZMax; " is 136.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The length of the statement  "		return InterpolateLinear (InterpolateLinear (InterpolateLinear (p000' p100' xFloat)' InterpolateLinear (p010' p110' xFloat)' yFloat)' InterpolateLinear (InterpolateLinear (p001' p101' xFloat)' InterpolateLinear (p011' p111' xFloat)' yFloat)' zFloat); " is 250.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The length of the statement  "		return InterpolateCosine (InterpolateCosine (InterpolateCosine (p000' p100' xFloat)' InterpolateCosine (p010' p110' xFloat)' yFloat)' InterpolateCosine (InterpolateCosine (p001' p101' xFloat)' InterpolateCosine (p011' p111' xFloat)' yFloat)' zFloat); " is 250.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The length of the statement  "		total += InterpolatedNoise (x * frequency + frequency' y * frequency + frequency' z * frequency + frequency) * amplitude; " is 121.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The length of the statement  "				map [x' y' z] += PerlinNoise (x * maxDim + offsetX' y * maxDim + offsetY' z * maxDim + offsetZ' startOctave' endOctave' decay); " is 127.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The length of the statement  "			data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY); " is 123.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The length of the statement  "				output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor; " is 288.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The length of the statement  "				output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor; " is 766.
Long Statement,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The length of the statement  "				output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f; " is 494.
Long Statement,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,CheckForUpdates,The length of the statement  "						releases.Add (new ReleaseInfo (Int32.Parse (el.Attribute ("v").Value)' Int32.Parse (el.Attribute ("r").Value)' Int64.Parse (el.Attribute ("date").Value).ToDateTime ()' el.Element ("Summary").Value' el.Element ("ChangeLog").Value' ReleaseInfo.StringToReleaseFlags (el.Attribute ("flags").Value))); " is 296.
Long Statement,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The length of the statement  "		byte[] postBytes = Encoding.ASCII.GetBytes (string.Format ("ServerName={0}&Url={1}&Players={2}&MaxPlayers={3}&Uptime={4}"' Uri.EscapeDataString (ConfigKey.ServerName.GetString ())' Server.Uri' Server.Players.Length' ConfigKey.MaxPlayers.GetInt ()' DateTime.UtcNow.Subtract (Server.StartTime).TotalMinutes)); " is 307.
Long Statement,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,HbSave,The length of the statement  "		HbData = "port=" + Server.Port.ToString () + "&max=" + ConfigKey.MaxPlayers.GetString () + "&name=" + Uri.EscapeDataString (ConfigKey.ServerName.GetString ()) + "&public=True" + "&salt=" + Salt + "&users=" + Server.CountPlayers (false).ToString (); " is 248.
Long Statement,fCraft,HeartbeatData,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,CreateUri,The length of the statement  "	sb.AppendFormat ("public={0}&max={1}&users={2}&port={3}&version={4}&salt={5}&name={6}"' IsPublic' MaxPlayers' PlayerCount' Port' ProtocolVersion' Uri.EscapeDataString (Salt)' Uri.EscapeDataString (ServerName)); " is 210.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitServer,The length of the statement  "		Logger.Log (LogType.Warning' "You are using an unreleased developer version of 800Craft. " + "Do not use this version unless you are ready to deal with bugs and potential data loss. " + "Consider using the lastest stable version instead' available from http://github.com/glennmr/800craft"); " is 290.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitServer,The length of the statement  "		const string unstableMessage = "This build has been marked as UNSTABLE. " + "Do not use except for debugging purposes. " + "Latest non-broken build is " + Updater.LatestStable; " is 176.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitServer,The length of the statement  "		Logger.Log (LogType.Warning' "You are using a relatively old version of the Mono runtime ({0}). " + "It is recommended that you upgrade to at least 2.8+"' MonoCompat.MonoVersion); " is 179.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitServer,The length of the statement  "		Logger.Log (LogType.Warning' "Name verification is currently OFF. Your server is at risk of being hacked. " + "Enable name verification as soon as possible."); " is 159.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,StartServer,The length of the statement  "		throw new InvalidOperationException ("Server.InitLibrary and Server.InitServer must be called before Server.StartServer"); " is 122.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,StartServer,The length of the statement  "	Logger.Log (LogType.SystemActivity' "Main world: {0}; default rank: {1}"' WorldManager.MainWorld.Name' RankManager.DefaultRank.Name); " is 133.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,The length of the statement  "		Logger.Log (LogType.SystemActivity' "Shutdown: Saving databases... ({0} players and {1} IP bans)"' PlayerDB.PlayerInfoList.Length' IPBanList.Count); " is 148.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,Shutdown,The length of the statement  "			string timerMsg = String.Format ("Server {0} ({1})"' shutdownParams.Restart ? "restart" : "shutdown"' shutdownParams.ReasonString); " is 131.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,MonitorProcessorUsage,The length of the statement  "	CPUUsageLastMinute = (newCPUTime - oldCPUTime).TotalSeconds / (Environment.ProcessorCount * DateTime.UtcNow.Subtract (lastMonitorTime).TotalSeconds); " is 149.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,MonitorProcessorUsage,The length of the statement  "	CPUUsageTotal = newCPUTime.TotalSeconds / (Environment.ProcessorCount * DateTime.UtcNow.Subtract (StartTime).TotalSeconds); " is 123.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,BackupData,The length of the statement  "			string fileComment = String.Format ("Backup of 800Craft data for server \"{0}\"' saved on {1}"' ConfigKey.ServerName.GetString ()' DateTime.Now); " is 145.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The length of the statement  "		if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) { " is 130.
Long Statement,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,RegisterPlayer,The length of the statement  "				Logger.Log (LogType.SuspiciousActivity' "Server.RegisterPlayer: Player {0} logged in twice. Ghost from {1} was kicked."' s.Name' s.IP); " is 135.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Load,The length of the statement  "				Logger.Log (LogType.Warning' "Config.Load: Malformed or incompatible config file {0}. Loading defaults."' Paths.ConfigFileName); " is 128.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Load,The length of the statement  "				Logger.Log (LogType.Warning' "Config.Load: Your copy of config.xml is too old to be loaded properly. " + "Some settings will be lost or replaced with defaults. " + "Please run ConfigGUI to make sure that everything is in order."); " is 230.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Load,The length of the statement  "				Logger.Log (LogType.Warning' "Config.Load: Your config.xml was made for a different version of 800Craft / fCraft. " + "Some obsolete settings might be ignored' and some recently-added settings will be set to defaults. " + "It is recommended that you run ConfigGUI to make sure that everything is in order."); " is 308.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Load,The length of the statement  "			Logger.Log (LogType.Warning' "Config.Load: Unknown version of config.xml found. It might be corrupted. " + "Please run ConfigGUI to make sure that everything is in order."); " is 173.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Load,The length of the statement  "		Logger.Log (LogType.Warning' "Value of MaxPlayersPerWorld ({0}) was lowered to match MaxPlayers ({1})."' ConfigKey.MaxPlayersPerWorld.GetInt ()' ConfigKey.MaxPlayers.GetInt ()); " is 177.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ParseKeyElementPreSettings,The length of the statement  "		Logger.Log (LogType.Warning' "Config: LimitOneConnectionPerIP (bool) was replaced by MaxConnectionsPerIP (int). " + "Adjust your configuration accordingly."); " is 158.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ParseKeyElementPreSettings,The length of the statement  "	} else if (keyName != "consoleoptions" && keyName != "logfileoptions" && keyName != "ranks" && keyName != "legacyrankmapping") { " is 128.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,Save,The length of the statement  "		legacyRankMappingTag.Add (new XComment ("Legacy rank mapping is used for compatibility if cases when ranks are renamed or deleted.")); " is 134.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,SetValue,The length of the statement  "		throw new ArgumentNullException ("rawValue"' key + ": ConfigKey values cannot be null. Use an empty string to indicate unset value."); " is 134.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,LoadRankList,The length of the statement  "			if (fromRankID == null || String.IsNullOrEmpty (fromRankID.Value) || toRankID == null || String.IsNullOrEmpty (toRankID.Value)) { " is 129.
Long Statement,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,LoadRankList,The length of the statement  "			Logger.Log (LogType.Warning' "Config.Load: No ranks were defined' or none were defined correctly. " + "Using default ranks (guest' builder' op' and owner)."); " is 158.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,MarkLogStart,The length of the statement  "	Log (LogType.SystemActivity' "------ Log Starts {0} ({1}) ------"' DateTime.Now.ToLongDateString ()' DateTime.Now.ToShortDateString ()); " is 136.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,Log,The length of the statement  "				RaiseLoggedEvent (errorMessage' DateTime.Now.ToLongTimeString () + " > " + GetPrefix (LogType.Error) + errorMessage' // localized " is 129.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The length of the statement  "		var eventArgs = new CrashedEventArgs (message' assembly' exception' submitCrashReport && !isCommon' isCommon' shutdownImminent); " is 128.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "		if ((ex is FileNotFoundException && ex.Message.Contains ("Version=3.5")) || (ex is FileNotFoundException && ex.Message.Contains ("Version=3.5"))) { " is 147.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "			message = "Your crash was likely caused by using a wrong version of .NET or Mono runtime. " + "Please update to Microsoft .NET Framework 4 (Windows) OR Mono 2.8+ (Linux' Unix' Mac OS X)."; " is 188.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "		} else if (ex.Message.Contains ("libMonoPosixHelper") || ex is EntryPointNotFoundException && ex.Message.Contains ("CreateZStream")) { " is 134.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "			message = "800Craft could not locate Mono's compression functionality. " + "Please make sure that you have zlib (sometimes called \"libz\" or just \"z\") installed. " + "Some versions of Mono may also require \"libmono-posix-2.0-cil\" package to be installed."; " is 261.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "			message = "Something is incompatible with the current revision of 800Craft. " + "If you installed third-party modifications' " + "make sure to use the correct revision (as specified by mod developers). " + "If your own modifications stopped working' your may need to make some updates."; " is 287.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "			message = "800Craft was blocked from accessing a file or resource. " + "Make sure that correct permissions are set for the 800Craft files' folders' and processes."; " is 164.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "			message = "Some Windows settings are preventing 800Craft from doing player name verification. " + "See http://support.microsoft.com/kb/811833"; " is 143.
Long Statement,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The length of the statement  "			message = "A filesystem-related error has occured. Make sure that only one instance of 800Craft is running' " + "and that no other processes are using server's files or directories."; " is 183.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The length of the statement  "	map.Blocks.MemSet ((byte)Block.Dirt' width * length * (height / 2 - FlatgrassDirtLevel)' width * length * (FlatgrassDirtLevel - 1)); " is 132.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The length of the statement  "		new Noise (rand.Next ()' NoiseInterpolationMode.Bicubic).PerlinNoise (heightmap2' 0' args.DetailScale' args.Roughness' 0' 0); " is 125.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "					heightmap [x' y] = desiredWaterLevel + (float)Math.Pow (normalizedHeight' args.AboveFuncExponent) * (1 - desiredWaterLevel); " is 124.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "				level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth); " is 128.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "					level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height); " is 165.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The length of the statement  "				bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold))); " is 184.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The length of the statement  "	for (k1 = 0; map.Blocks [startX + map.Width * map.Length * (map.Height - 1 - startZ) + map.Width * startY] != bedrockType && k1 < 10000; k1++) { " is 144.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The length of the statement  "					if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) { " is 232.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The length of the statement  "						if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) { " is 237.
Long Statement,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The length of the statement  "				if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) { " is 332.
Long Statement,fCraft,MapGeneratorArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The length of the statement  "	if (RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4) { " is 126.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,CheckIfToStopPhysics,The length of the statement  "	if (null == _plantTask && !tntPhysics && !gunPhysics && !plantPhysics && !sandPhysics && !fireworkPhysics && !waterPhysics) " is 123.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,AcceptPlayer,The length of the statement  "				Player idlestPlayer = Players.Where (p => p.Info.Rank.IdleKickTimer != 0).OrderBy (p => p.LastActiveTime).FirstOrDefault (); " is 124.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,AcceptPlayer,The length of the statement  "					Server.Players.CanSee (player).Message ("&SPlayer {0}&S was auto-kicked to make room for {1}"' idlestPlayer.ClassyName' player.ClassyName); " is 139.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,AcceptPlayer,The length of the statement  "					Server.Players.CantSee (player).Message ("{0}&S was kicked for being idle for {1} min"' player.ClassyName' player.Info.Rank.IdleKickTimer); " is 139.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,AcceptPlayer,The length of the statement  "			Logger.Log (LogType.Error' "This world already contains the player by name ({0}). " + "Some sort of state corruption must have occured."' player.Name); " is 151.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,SaveBackup,The length of the statement  "			Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying to save backup to \"{0}\": {1}"' targetName' ex); " is 121.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The length of the statement  "				Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.FullName' ex); " is 124.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The length of the statement  "					Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex); " is 120.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,GetNextPatrolTarget,The length of the statement  "		Player candidate = Players.RankedAtMost (RankManager.PatrolledRank).CanBeSeen (observer).Where (p => p.LastActiveTime > p.LastPatrolTime && p.HasFullyConnected && DateTime.UtcNow.Subtract (p.LastPatrolTime) > MinPatrolInterval).OrderBy (p => p.LastPatrolTime.Ticks).FirstOrDefault (); " is 284.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,GetNextPatrolTarget,The length of the statement  "		Player candidate = Players.RankedAtMost (RankManager.PatrolledRank).CanBeSeen (observer).Where (p => p.LastActiveTime > p.LastPatrolTime && p.HasFullyConnected && DateTime.UtcNow.Subtract (p.LastPatrolTime) > MinPatrolInterval).Where (p => predicate (p)).OrderBy (p => p.LastPatrolTime.Ticks).FirstOrDefault (); " is 311.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,StartTasks,The length of the statement  "			saveTask.RunForever (this' TimeSpan.FromSeconds (ConfigKey.SaveInterval.GetInt ())' TimeSpan.FromSeconds (ConfigKey.SaveInterval.GetInt ())); " is 141.
Long Statement,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,SaveTask,The length of the statement  "			if (BackupsEnabled && DateTime.UtcNow.Subtract (lastBackup) > BackupInterval && (HasChangedSinceBackup || !ConfigKey.BackupOnlyWhenChanged.Enabled ())) { " is 153.
Long Statement,fCraft,ZoneConverterExtension,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,SerializeZone,The length of the statement  "	return String.Format ("{0}'{1}'{2}'{3}'{4}"' String.Format ("{0} {1} {2} {3} {4} {5} {6} {7}"' zone.Name' zone.Bounds.XMin' zone.Bounds.YMin' zone.Bounds.ZMin' zone.Bounds.XMax' zone.Bounds.YMax' zone.Bounds.ZMax' zone.Controller.MinRank.FullName)' whitelist' blacklist' xheader' null == zone.Message ? "" : zone.Message.Replace ('''' '\\')); " is 342.
Long Statement,fCraft,EnumKeyAttribute,F:\newReposMay17\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,Validate,The length of the statement  "		string message = String.Format ("Could not parse value as {0}. Valid values are: {1}"' ValueType.Name' Enum.GetNames (ValueType).JoinToString ()); " is 146.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,CheckAlignment,The length of the statement  "			Logger.Log (LogType.Error' "BlockDB: Misaligned data detected in \"{0}\". " + "This might have been caused by a power outage or ungraceful shutdown. Attempting recovery."' fi.Name); " is 181.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Flush,The length of the statement  "			bool limitingAllowed = DateTime.UtcNow.Subtract (lastLimit) > MinLimitDelay || (CacheSize - limit) > CacheLinearResizeThreshold; " is 128.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,OpenRead,The length of the statement  "	return new FileStream (FileName' FileMode.Open' FileAccess.Read' FileShare.Read' BufferSize' FileOptions.SequentialScan); " is 121.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "	return Lookup (max' BlockDBSearchType.ReturnAll' entry => (entry.X == coords.X && entry.Y == coords.Y && entry.Z == coords.Z)); " is 127.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "	return Lookup (max' BlockDBSearchType.ReturnOldest' entry => entry.Timestamp >= ticks && area.Contains (entry.X' entry.Y' entry.Z)); " is 132.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks' entry => entry.PlayerID == pid); " is 125.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => true' entry => infos.Any (t => entry.PlayerID == t.ID)); " is 123.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks' entry => infos.Any (t => entry.PlayerID == t.ID)); " is 143.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks && infos.Any (t => entry.PlayerID == t.ID)); " is 127.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => area.Contains (entry.X' entry.Y' entry.Z)' entry => entry.PlayerID == pid); " is 142.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ReturnOldestProcessor (map' max' entry => area.Contains (entry.X' entry.Y' entry.Z) && entry.PlayerID == pid); " is 126.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks && area.Contains (entry.X' entry.Y' entry.Z)' entry => entry.PlayerID == pid); " is 170.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks && entry.PlayerID == pid && area.Contains (entry.X' entry.Y' entry.Z)); " is 154.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => area.Contains (entry.X' entry.Y' entry.Z)' entry => infos.Any (t => entry.PlayerID == t.ID)); " is 160.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ReturnOldestProcessor (map' max' entry => area.Contains (entry.X' entry.Y' entry.Z) && infos.Any (t => entry.PlayerID == t.ID)); " is 144.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ExcludingReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks && area.Contains (entry.X' entry.Y' entry.Z)' entry => infos.Any (t => entry.PlayerID == t.ID)); " is 188.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,Lookup,The length of the statement  "		processor = new ReturnOldestProcessor (map' max' entry => entry.Timestamp >= ticks && area.Contains (entry.X' entry.Y' entry.Z) && infos.Any (t => entry.PlayerID == t.ID)); " is 172.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LoadSettings,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse BlockDB \"enabled\" attribute of world \"{0}\"' assuming \"Auto\""' World.Name); " is 140.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LoadSettings,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse BlockDB \"preload\" attribute of world \"{0}\"' assuming NOT preloaded."' World.Name); " is 146.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LoadSettings,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse BlockDB \"limit\" attribute of world \"{0}\"' assuming NO limit."' World.Name); " is 139.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LoadSettings,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse BlockDB \"timeLimit\" attribute of world \"{0}\"' assuming NO time limit."' World.Name); " is 148.
Long Statement,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,OnPlayerPlacedBlock,The length of the statement  "		BlockDBEntry newEntry = new BlockDBEntry ((int)DateTime.UtcNow.ToUnixTime ()' e.Player.Info.ID' e.Coords' e.OldBlock' e.NewBlock' e.Context); " is 141.
Long Statement,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Noise,The length of the statement  "	return Lerp (w' Lerp (v' Lerp (u' Grad (p [aa]' x' y' z)' Grad (p [ba]' x - 1' y' z))' Lerp (u' Grad (p [ab]' x' y - 1' z)' Grad (p [bb]' x - 1' y - 1' z)))' Lerp (v' Lerp (u' Grad (p [aa + 1]' x' y' z - 1)' Grad (p [ba + 1]' x - 1' y' z - 1))' Lerp (u' Grad (p [ab + 1]' x' y - 1' z - 1)' Grad (p [bb + 1]' x - 1' y - 1' z - 1)))); " is 332.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The length of the statement  "						Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name); " is 185.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The length of the statement  "			Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world."); " is 155.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The length of the statement  "		Logger.Log (LogType.Warning' "Server.LoadWorldList: Main world cannot have any access restrictions. " + "Access permission for \"{0}\" has been reset."' newMainWorld.Name); " is 172.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse \"hidden\" attribute of world \"{0}\"' assuming NOT hidden."' worldName); " is 133.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse \"VisitCount\" attribute of world \"{0}\"' assuming NO Visits."' worldName); " is 136.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager: Could not parse \"backup\" attribute of world \"{0}\"' assuming default ({1})."' worldName' world.BackupInterval.ToMiniString ()); " is 174.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager: Could not parse \"cloud\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' worldName); " is 163.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager: Could not parse \"fog\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' worldName); " is 161.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager: Could not parse \"sky\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' worldName); " is 161.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager: Could not parse \"level\" attribute of Environment settings for world \"{0}\"' assuming default (normal)."' worldName); " is 163.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager: Could not parse \"edge\" attribute of Environment settings for world \"{0}\"' assuming default (Water)."' worldName); " is 161.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "					Logger.Log (LogType.Warning' "WorldManager: Unacceptable blocktype given for \"edge\" attribute of Environment settings for world \"{0}\"' assuming default (Water)."' worldName); " is 178.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldListEntry,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager: Lowered access MinRank of world {0} to allow it to be the main world for that rank."' rank.Name); " is 141.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,CheckMapFile,The length of the statement  "					Logger.Log (LogType.Warning' "WorldManager.CheckMapFile: Map file for world \"{0}\" was renamed from \"{1}\" to \"{2}\""' world.Name' matches [0].Name' fileName); " is 162.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,CheckMapFile,The length of the statement  "					Logger.Log (LogType.Error' "WorldManager.CheckMapFile: Failed to rename map file of \"{0}\" from \"{1}\" to \"{2}\""' world.Name' matches [0].Name' fileName); " is 158.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,CheckMapFile,The length of the statement  "				Logger.Log (LogType.Warning' "WorldManager.CheckMapFile: More than one map file exists matching the world name \"{0}\". " + "Please check the map directory and use /WLoad to load the correct file."' world.Name); " is 211.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,CheckMapFile,The length of the statement  "			Logger.Log (LogType.Warning' "WorldManager.CheckMapFile: Could not load map file for world \"{0}\": {1}"' world.Name' ex); " is 122.
Long Statement,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,FindMapFile,The length of the statement  "					player.Message ("Filenames are case-sensitive! Did you mean to load one of these: {0}"' String.Join ("' "' candidates.Select (c => c.Name).ToArray ())); " is 152.
Long Statement,fCraft,WorldOpException,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldOpException.cs,GetMessage,The length of the statement  "			return "World name \"" + worldName + "\" is invalid. " + "Expected an alphanumeric name between 1 and 16 characters long."; " is 123.
Long Statement,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The length of the statement  "							player.Info.DisplayedName = Color.ReplacePercentCodes (player.Info.Rank.Color + player.Info.Rank.Prefix + broNames [index]); " is 124.
Long Statement,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,ColorDifference,The length of the statement  "	return Math.Sqrt ((color2.L - color1.L) * (color2.L - color1.L) * 1.2 + (color2.a - color1.a) * (color2.a - color1.a) + (color2.b - color1.b) * (color2.b - color1.b)); " is 167.
Long Statement,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The length of the statement  "	Vector3I minVector = new Vector3I (Math.Min (Math.Min (marks [0].X' marks [1].X)' Math.Min (marks [2].X' marks [3].X))' Math.Min (Math.Min (marks [0].Y' marks [1].Y)' Math.Min (marks [2].Y' marks [3].Y))' Math.Min (Math.Min (marks [0].Z' marks [1].Z)' Math.Min (marks [2].Z' marks [3].Z))); " is 290.
Long Statement,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The length of the statement  "	Vector3I maxVector = new Vector3I (Math.Max (Math.Max (marks [0].X' marks [1].X)' Math.Max (marks [2].X' marks [3].X))' Math.Max (Math.Max (marks [0].Y' marks [1].Y)' Math.Max (marks [2].Y' marks [3].Y))' Math.Max (Math.Max (marks [0].Z' marks [1].Z)' Math.Max (marks [2].Z' marks [3].Z))); " is 290.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCompletion,The length of the statement  "				Player.Message ("{0}: Finished in {1}' updated {2} blocks. &WSkipped {3} blocks due to permission issues."' Description' DateTime.UtcNow.Subtract (StartTime).ToMiniString ()' BlocksUpdated' BlocksDenied); " is 204.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCompletion,The length of the statement  "				Player.Message ("{0}: Finished in {1}' updated {2} blocks."' Description' DateTime.UtcNow.Subtract (StartTime).ToMiniString ()' BlocksUpdated); " is 143.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCompletion,The length of the statement  "				Player.Message ("{0}: Finished in {1}' no changes made. &WSkipped {2} blocks due to permission issues."' Description' DateTime.UtcNow.Subtract (StartTime).ToMiniString ()' BlocksDenied); " is 186.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCompletion,The length of the statement  "				Player.Message ("{0}: Finished in {1}' no changes needed."' Description' DateTime.UtcNow.Subtract (StartTime).ToMiniString ()); " is 127.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCompletion,The length of the statement  "		Logger.Log (LogType.UserActivity' "Player {0} executed {1} on world {2} (between {3} and {4}). Processed {5}' Updated {6}' Skipped {7}' Denied {8} blocks."' Player.Name' Description' Map.World.Name' Bounds.MinVertex' Bounds.MaxVertex' BlocksProcessed' BlocksUpdated' BlocksSkipped' BlocksDenied); " is 296.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCancellation,The length of the statement  "			Player.Message ("{0}: Cancelled after {1}. Processed {2}' updated {3}. Skipped {4} due to permission issues."' Description' DateTime.UtcNow.Subtract (StartTime).ToMiniString ()' BlocksProcessed' BlocksUpdated' BlocksDenied); " is 224.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCancellation,The length of the statement  "			Player.Message ("{0}: Cancelled after {1}. Processed {2} blocks' updated {3} blocks."' Description' DateTime.UtcNow.Subtract (StartTime).ToMiniString ()' BlocksProcessed' BlocksUpdated); " is 186.
Long Statement,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,OnCancellation,The length of the statement  "		Logger.Log (LogType.UserActivity' "Player {0} cancelled {1} on world {2}. Processed {3}' Updated {4}' Skipped {5}' Denied {6} blocks."' Player' Description' Map.World.Name' BlocksProcessed' BlocksUpdated' BlocksSkipped' BlocksDenied); " is 234.
Long Statement,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The length of the statement  "	double r = Math.Sqrt ((marks [0].X - marks [1].X) * (marks [0].X - marks [1].X) + (marks [0].Y - marks [1].Y) * (marks [0].Y - marks [1].Y) + (marks [0].Z - marks [1].Z) * (marks [0].Z - marks [1].Z)); " is 201.
Long Statement,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The length of the statement  "		BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85); " is 127.
Long Statement,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,The length of the statement  "					if (Coords.Z <= (int)center.Z && ((delta.X + 1) * (delta.X + 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || (delta.X - 1) * (delta.X - 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y + 1) * (delta.Y + 1) * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y - 1) * (delta.Y - 1) * radius.Y + delta.Z2 * radius.Z > 1)) { " is 402.
Long Statement,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,Prepare,The length of the statement  "	Bounds = new BoundingBox (Math.Min (Math.Min (a.X' b.X)' Math.Min (c.X' d.X))' Math.Min (Math.Min (a.Y' b.Y)' Math.Min (c.Y' d.Y))' Math.Min (Math.Min (a.Z' b.Z)' Math.Min (c.Z' d.Z))' Math.Max (Math.Max (a.X' b.X)' Math.Max (c.X' d.X))' Math.Max (Math.Max (a.Y' b.Y)' Math.Max (c.Y' d.Y))' Math.Max (Math.Max (a.Z' b.Z)' Math.Max (c.Z' d.Z))); " is 344.
Long Statement,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,IsPlaneBlock,The length of the statement  "	if ((Coords - a).Dot (s1) > Extra || (Coords - b).Dot (s2) > Extra || (Coords - c).Dot (s3) > Extra || (Coords - d).Dot (s4) > Extra) " is 133.
Long Statement,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,ReadParams,The length of the statement  "			Player.Message ("DrawImage: Unrecognized palette \"{0}\". Available palettes are: \"{1}\""' paletteName' Enum.GetNames (typeof(StandardBlockPalettes)).JoinToString ()); " is 168.
Long Statement,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,The length of the statement  "		throw new ArgumentException ("DrawImage: Second mark must specify a definite direction (north' east' south' or west) from first mark."' "marks"); " is 145.
Long Statement,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,The length of the statement  "		if ((response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved || response.StatusCode == HttpStatusCode.Redirect) && response.ContentType.StartsWith ("image"' StringComparison.OrdinalIgnoreCase)) { " is 227.
Long Statement,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,resizeImage,The length of the statement  "		grPhoto.DrawImage (imgPhoto' new Rectangle (destX' destY' destWidth' destHeight)' new Rectangle (sourceX' sourceY' sourceWidth' sourceHeight)' GraphicsUnit.Pixel); " is 163.
Long Statement,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The length of the statement  "		BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2); " is 122.
Long Statement,fCraft.Drawing,TriangleDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,Prepare,The length of the statement  "	Bounds = new BoundingBox (Math.Min (Math.Min (a.X' b.X)' c.X)' Math.Min (Math.Min (a.Y' b.Y)' c.Y)' Math.Min (Math.Min (a.Z' b.Z)' c.Z)' Math.Max (Math.Max (a.X' b.X)' c.X)' Math.Max (Math.Max (a.Y' b.Y)' c.Y)' Math.Max (Math.Max (a.Z' b.Z)' c.Z)); " is 248.
Long Statement,fCraft.Drawing,TriangleWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The length of the statement  "	Vector3I minVector = new Vector3I (Math.Min (marks [0].X' Math.Min (marks [1].X' marks [2].X))' Math.Min (marks [0].Y' Math.Min (marks [1].Y' marks [2].Y))' Math.Min (marks [0].Z' Math.Min (marks [1].Z' marks [2].Z))); " is 218.
Long Statement,fCraft.Drawing,TriangleWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The length of the statement  "	Vector3I maxVector = new Vector3I (Math.Max (marks [0].X' Math.Max (marks [1].X' marks [2].X))' Math.Max (marks [0].Y' Math.Max (marks [1].Y' marks [2].Y))' Math.Max (marks [0].Z' Math.Max (marks [1].Z' marks [2].Z))); " is 218.
Long Statement,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,CanPlace,The length of the statement  "	return (Map.GetBlock (coords) == SourceBlock) && Player.CanPlace (Map' coords' ReplacementBlock' Context) == CanPlaceResult.Allowed; " is 132.
Long Statement,fCraft.Drawing,PasteDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PasteDrawOperation.cs,Prepare,The length of the statement  "	marks [1] = marks [0] + new Vector3I (orientation.X * (CopyInfo.Dimensions.X - 1)' orientation.Y * (CopyInfo.Dimensions.Y - 1)' orientation.Z * (CopyInfo.Dimensions.Z - 1)); " is 173.
Long Statement,fCraft.Drawing,CutDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CutDrawOperation.cs,Prepare,The length of the statement  "	Player.Message ("Origin at {0} {1}{2} corner."' (copyInfo.Orientation.X == 1 ? "bottom" : "top")' (copyInfo.Orientation.Y == 1 ? "south" : "north")' (copyInfo.Orientation.Z == 1 ? "east" : "west")); " is 198.
Long Statement,fCraft.Drawing,SphereHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\SphereHollowDrawOperation.cs,Prepare,The length of the statement  "	double radius = Math.Sqrt ((marks [0].X - marks [1].X) * (marks [0].X - marks [1].X) + (marks [0].Y - marks [1].Y) * (marks [0].Y - marks [1].Y) + (marks [0].Z - marks [1].Z) * (marks [0].Z - marks [1].Z)); " is 206.
Long Statement,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The length of the statement  "		BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85); " is 127.
Long Statement,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,The length of the statement  "					if (Coords.Z <= (int)center.Z && ((delta.X + 1) * (delta.X + 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || (delta.X - 1) * (delta.X - 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y + 1) * (delta.Y + 1) * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y - 1) * (delta.Y - 1) * radius.Y + delta.Z2 * radius.Z > 1)) { " is 402.
Long Statement,fCraft.Drawing,SphereDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\SphereDrawOperation.cs,Prepare,The length of the statement  "	double radius = Math.Sqrt ((marks [0].X - marks [1].X) * (marks [0].X - marks [1].X) + (marks [0].Y - marks [1].Y) * (marks [0].Y - marks [1].Y) + (marks [0].Z - marks [1].Z) * (marks [0].Z - marks [1].Z)); " is 206.
Long Statement,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The length of the statement  "		BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2); " is 122.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "	int sideVolumeX = Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * (Bounds.ZMax != Bounds.ZMin ? 2 : 1); " is 122.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "	int sideVolumeY = Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2) * (Bounds.XMax != Bounds.XMin ? 2 : 1); " is 123.
Long Statement,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,Prepare,The length of the statement  "	int sideVolumeZ = Math.Max (0' Bounds.Height - 2) * Math.Max (0' Bounds.Width - 2) * (Bounds.YMax != Bounds.YMin ? 2 : 1); " is 122.
Long Statement,fCraft.Drawing,MarbledBrushFactory,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MakeBrush,The length of the statement  "			player.Message ("{0} brush: Invalid block ratio ({1}). Must be between 1 and {2}."' Name' ratio' MarbledBrush.MaxRatio); " is 120.
Long Statement,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Mazefy,The length of the statement  "		if (extendible.Count == 0 || r.NextDouble () < ForkProbability / (forkable.Count + 1) && forkable.Count > 0)//fork when either we are totally entangled or just randomly " is 168.
Long Statement,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,Prepare,The length of the statement  "	Vector3I mark2 = new Vector3I ((_cellSize + 1) * _maze.XSize + 1 + marks [0].X' (_cellSize + 1) * _maze.YSize + 1 + marks [0].Y' (_cellSize + 1) * _maze.ZSize + 1 + marks [0].Z); " is 178.
Long Statement,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawWall,The length of the statement  "		d.ArrangeCoords (ref Coords.X' ref Coords.Y' ref Coords.Z' xCell * (_cellSize + 1) + 1 + Marks [0].X' yCell * (_cellSize + 1) + 1 + Marks [0].Y' zCell * (_cellSize + 1) + 1 + Marks [0].Z' _cellSize' WallCallback); " is 213.
Long Statement,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawColumn,The length of the statement  "	d.ArrangeCoords (ref Coords.X' ref Coords.Y' ref Coords.Z' xCell * (_cellSize + 1) + 1 + Marks [0].X' yCell * (_cellSize + 1) + 1 + Marks [0].Y' zCell * (_cellSize + 1) + 1 + Marks [0].Z' _cellSize' StickCallback); " is 214.
Long Statement,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,NextBlock,The length of the statement  "		return _r.NextDouble () < 0.2 ? Block.Wood /*_playersBrush.NextBlock(this)*/: _randomBlocks [_r.Next (_randomBlocks.Length)]; " is 125.
Long Statement,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,playerClicking,The length of the statement  "						Player.RaisePlayerPlacedBlockEvent (e.Player' world.Map' block' world.Map.GetBlock (e.Coords)' world.Map.GetBlock (e.Coords)' BlockChangeContext.Manual); " is 153.
Long Statement,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,interval,The length of the statement  "	world.Players.Message ("&SScores so far: &9Blues {0} &S- &CReds {1}"' blueRoundsWon.ToString ()' redRoundsWon.ToString ()); " is 123.
Long Statement,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,Stop,The length of the statement  "	world.Players.Message ("&SThe game has ended! The scores are: \n&9Blue Team {0} &S- &CRed Team {1}"' blueRoundsWon' redRoundsWon); " is 130.
Long Statement,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeader,The length of the statement  "						Logger.Log (LogType.Warning' "MapFCMv3.LoadHeader: Duplicate metadata entry found for [{0}].[{1}]. " + "Old value (overwritten): \"{2}\". New value: \"{3}\""' group' key' oldValue' newValue); " is 191.
Long Statement,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Load,The length of the statement  "						Logger.Log (LogType.Warning' "MapFCMv3.LoadHeader: Duplicate metadata entry found for [{0}].[{1}]. " + "Old value (overwritten): \"{2}\". New value: \"{3}\""' group' key' oldValue' newValue); " is 191.
Long Statement,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The length of the statement  "				return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050); " is 156.
Long Statement,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,ClaimsName,The length of the statement  "	return Directory.Exists (path) && File.Exists (Path.Combine (path' BlockStoreFileName)) && File.Exists (Path.Combine (path' MetaDataFileName)); " is 143.
Long Statement,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,ClaimsName,The length of the statement  "	return fileName.EndsWith (".dat"' StringComparison.OrdinalIgnoreCase) || fileName.EndsWith (".mine"' StringComparison.OrdinalIgnoreCase); " is 137.
Long Statement,fCraft.MapConversion,MapNBT,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Load,The length of the statement  "		Map map = new Map (null' mapTag ["Width"].GetShort ()' mapTag ["Length"].GetShort ()' mapTag ["Height"].GetShort ()' false); " is 124.
Long Statement,fCraft.MapConversion,MapOpticraft,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapOpticraft.cs,LoadZones,The length of the statement  "	PlayerInfo conversionPlayer = new PlayerInfo ("OpticraftConversion"' RankManager.HighestRank' true' RankChangeType.AutoPromoted); " is 129.
Long Statement,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The length of the statement  "			Logger.Log (LogType.Warning' "MapFCMv4: Duplicate metadata entry \"{0}.{1}\". " + "Old value: \"{2}\"' new value \"{3}\""' groupName' keyName' oldValue' value); " is 160.
Long Statement,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The length of the statement  "		if (e.Player.World.Map.Portals != null && e.Player.World.Map.Portals.Count > 0 && e.Context != BlockChangeContext.Portal) { " is 123.
Long Statement,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The length of the statement  "						e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName); " is 120.
Long Statement,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "					if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) { " is 125.
Long Statement,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "										e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds); " is 126.
Long Statement,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "											e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL)); " is 172.
Long Statement,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The length of the statement  "											e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL)); " is 241.
Long Statement,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Open,The length of the statement  "	Stream stream = new FileStream (filename' FileMode.Open' fileAccess == FileAccess.Read ? FileAccess.Read : FileAccess.ReadWrite); " is 129.
Long Statement,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The length of the statement  "	return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25)); " is 131.
Long Statement,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The length of the statement  "	return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2); " is 152.
Complex Conditional,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The conditional expression  "shapeName == null || !cmd.NextInt (out height) || !EnumUtil.TryParse (shapeName' out shape' true) || shape == Forester.TreeShape.Stickly || shape == Forester.TreeShape.Procedural"  is complex.
Complex Conditional,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The conditional expression  "!cmd.NextInt (out degrees) || (degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270)"  is complex.
Complex Conditional,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ParseBlockDBUndoParams,The conditional expression  "!not && player.Info != target && !player.Can (Permission.UndoAll) && !player.Can (Permission.UndoOthersActions' target.Rank)"  is complex.
Complex Conditional,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,CheckCoordVar,The conditional expression  "string.IsNullOrWhiteSpace (s) || (s != "x" && s != "y" && s != "z")"  is complex.
Complex Conditional,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,CheckParamVar,The conditional expression  "string.IsNullOrWhiteSpace (s) || (s != "t" && s != "u" && s != "v")"  is complex.
Complex Conditional,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,ReadTerm,The conditional expression  "_operators.ContainsKey (ch) || _soperators.ContainsKey (ch) || _uoperators.ContainsKey (ch) || /*tmp*/ch == '='"  is complex.
Complex Conditional,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,IsValidCommandName,The conditional expression  "(ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z'"  is complex.
Complex Conditional,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The conditional expression  "Server.IsIP (ipString) && IPAddress.TryParse (ipString' out ip) && Byte.TryParse (rangeString' out range) && range <= 32"  is complex.
Complex Conditional,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Tempban,The conditional expression  "String.IsNullOrEmpty (targetName) || String.IsNullOrEmpty (timeString) || !timeString.TryParseMiniTimespan (out duration) || duration <= TimeSpan.Zero"  is complex.
Complex Conditional,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,The conditional expression  "playerName == null || playerName.Length < 2 || (playerName [0] != '-' && playerName [0] != '+')"  is complex.
Complex Conditional,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The conditional expression  "x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024"  is complex.
Complex Conditional,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,MuteHandler,The conditional expression  "String.IsNullOrEmpty (targetName) || String.IsNullOrEmpty (timeString) || !timeString.TryParseMiniTimespan (out duration) || duration <= TimeSpan.Zero"  is complex.
Complex Conditional,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,GenHandler,The conditional expression  "!cmd.IsConfirmed && (!Map.IsRecommendedDimension (mapWidth) || !Map.IsRecommendedDimension (mapLength) || !Map.IsRecommendedDimension (mapHeight))"  is complex.
Complex Conditional,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The conditional expression  "oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1"  is complex.
Complex Conditional,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The conditional expression  "Info.IsFrozen || Math.Abs (coord.X * 32 - Position.X) > MaxBlockPlacementRange || Math.Abs (coord.Y * 32 - Position.Y) > MaxBlockPlacementRange || Math.Abs (coord.Z * 32 - Position.Z) > MaxBlockPlacementRange"  is complex.
Complex Conditional,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,CanPlace,The conditional expression  "(Can (Permission.Build) || newBlock == Block.Air) && (Can (Permission.Delete) || oldBlock == Block.Air)"  is complex.
Complex Conditional,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ContainsValidCharacters,The conditional expression  "(ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z'"  is complex.
Complex Conditional,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The conditional expression  "(ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z'"  is complex.
Complex Conditional,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,UpdateVisibleEntities,The conditional expression  "otherPlayer == this || !CanSeeMoving (otherPlayer) || spectatedPlayer == otherPlayer || possessionPlayer != null"  is complex.
Complex Conditional,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The conditional expression  "x < Width && y < Length && z < Height && x >= 0 && y >= 0 && z >= 0"  is complex.
Complex Conditional,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The conditional expression  "coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0 && (byte)type < 50"  is complex.
Complex Conditional,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GetBlock,The conditional expression  "x < Width && y < Length && z < Height && x >= 0 && y >= 0 && z >= 0"  is complex.
Complex Conditional,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GetBlock,The conditional expression  "coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0"  is complex.
Complex Conditional,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The conditional expression  "Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0"  is complex.
Complex Conditional,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The conditional expression  "x < 0 || x >= _map.Width || y < 0 || y >= _map.Length || z < 0 || z >= _map.Height"  is complex.
Complex Conditional,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The conditional expression  "idx >= 0 && updates [idx].X == _pos.X && updates [idx].Y == _pos.Y && updates [idx].Z == _pos.Z"  is complex.
Complex Conditional,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The conditional expression  "!Physics.CanFloat (e.NewBlock) && e.NewBlock != Block.Air && e.NewBlock != Block.Water && e.NewBlock != Block.Lava && e.NewBlock != Block.BrownMushroom && e.NewBlock != Block.RedFlower && e.NewBlock != Block.RedMushroom && e.NewBlock != Block.YellowFlower && e.NewBlock != Block.Plant"  is complex.
Complex Conditional,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The conditional expression  "Color.IsValidColorCode (colorCode) || allowNewlines && (colorCode == 'n' || colorCode == 'N')"  is complex.
Complex Conditional,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,LoadInternal,The conditional expression  "(info.LastIP.Equals (IPAddress.None) || info.LastIP.Equals (IPAddress.Any) || info.TimesVisited == 0) && !info.IsBanned && info.Rank == RankManager.DefaultRank"  is complex.
Complex Conditional,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The conditional expression  "player.BanStatus != BanStatus.NotBanned || player.UnbanDate != DateTime.MinValue || player.IsFrozen || player.IsMuted || player.TimesKicked != 0 || player.Rank != RankManager.DefaultRank || player.PreviousRank != null"  is complex.
Complex Conditional,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidRankName,The conditional expression  "ch < '0' || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z'"  is complex.
Complex Conditional,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidID,The conditional expression  "ch < '0' || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < 'a') || ch > 'z'"  is complex.
Complex Conditional,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The conditional expression  "(x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)"  is complex.
Complex Conditional,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The conditional expression  "(x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)"  is complex.
Complex Conditional,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The conditional expression  "(x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)"  is complex.
Complex Conditional,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The conditional expression  "oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122"  is complex.
Complex Conditional,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ParseKeyElementPreSettings,The conditional expression  "keyName != "consoleoptions" && keyName != "logfileoptions" && keyName != "ranks" && keyName != "legacyrankmapping""  is complex.
Complex Conditional,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,LoadRankList,The conditional expression  "fromRankID == null || String.IsNullOrEmpty (fromRankID.Value) || toRankID == null || String.IsNullOrEmpty (toRankID.Value)"  is complex.
Complex Conditional,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,CheckForCommonErrors,The conditional expression  "(ex is FileNotFoundException && ex.Message.Contains ("Version=3.5")) || (ex is FileNotFoundException && ex.Message.Contains ("Version=3.5"))"  is complex.
Complex Conditional,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CanonicizeChar,The conditional expression  "ch >= 'a' && ch <= 'z' || ch >= '0' && ch <= '9' || ch == '_'"  is complex.
Complex Conditional,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,DistanceToBlock,The conditional expression  "(blockAtPos == blockType && !invert) || (blockAtPos != blockType && invert)"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The conditional expression  "y == height || (Math.Abs (x) == width && Math.Abs (z) == width && y >= 0)"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,setIgloo,The conditional expression  "y > 0 && y < height && Math.Abs (z) < width && Math.Abs (x) < width"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The conditional expression  "(j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The conditional expression  "(fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The conditional expression  "(k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The conditional expression  "(map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddBeaches,The conditional expression  "xx < 0 || xx >= map.Width || yy < 0 || yy >= map.Length || zz < 0 || zz >= map.Height"  is complex.
Complex Conditional,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The conditional expression  "nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length"  is complex.
Complex Conditional,fCraft,MapGeneratorArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The conditional expression  "RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4"  is complex.
Complex Conditional,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,CheckIfToStopPhysics,The conditional expression  "null == _plantTask && !tntPhysics && !gunPhysics && !plantPhysics && !sandPhysics && !fireworkPhysics && !waterPhysics"  is complex.
Complex Conditional,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,SaveTask,The conditional expression  "BackupsEnabled && DateTime.UtcNow.Subtract (lastBackup) > BackupInterval && (HasChangedSinceBackup || !ConfigKey.BackupOnlyWhenChanged.Enabled ())"  is complex.
Complex Conditional,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,IsValidName,The conditional expression  "ch < '0' || ch > '9' && ch < 'A' || ch > 'Z' && ch < '_' || ch > '_' && ch < 'a' || ch > 'z'"  is complex.
Complex Conditional,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The conditional expression  "ch >= (byte)'a' && ch <= (byte)'f' || ch >= (byte)'0' && ch <= (byte)'9'"  is complex.
Complex Conditional,fCraft.Utils,FlyHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The conditional expression  "!(x >= -1 && x <= 1) || !(y >= -1 && y <= 1) || !(z >= -3 && z <= 4)"  is complex.
Complex Conditional,fCraft.Utils,FlyHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The conditional expression  "!(x >= -1 && x <= 1) || !(y >= -1 && y <= 1) || !(z >= -3 && z <= 4)"  is complex.
Complex Conditional,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,The conditional expression  "Coords.Z <= (int)center.Z && ((delta.X + 1) * (delta.X + 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || (delta.X - 1) * (delta.X - 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y + 1) * (delta.Y + 1) * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y - 1) * (delta.Y - 1) * radius.Y + delta.Z2 * radius.Z > 1)"  is complex.
Complex Conditional,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,IsPlaneBlock,The conditional expression  "(Coords - a).Dot (s1) > Extra || (Coords - b).Dot (s2) > Extra || (Coords - c).Dot (s3) > Extra || (Coords - d).Dot (s4) > Extra"  is complex.
Complex Conditional,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,The conditional expression  "(response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved || response.StatusCode == HttpStatusCode.Redirect) && response.ContentType.StartsWith ("image"' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,The conditional expression  "Coords.Z <= (int)center.Z && ((delta.X + 1) * (delta.X + 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || (delta.X - 1) * (delta.X - 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y + 1) * (delta.Y + 1) * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y - 1) * (delta.Y - 1) * radius.Y + delta.Z2 * radius.Z > 1)"  is complex.
Complex Conditional,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,GetCell,The conditional expression  "x < 0 || x >= XSize || y < 0 || y >= YSize || z < 0 || z >= ZSize"  is complex.
Complex Conditional,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The conditional expression  "zfe.Method == Compression.Deflate && !ForceDeflating && source.CanSeek && zfe.CompressedSize > zfe.FileSize"  is complex.
Virtual Method Call from Constructor,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,FeedData,The constructor "FeedData" calls a virtual method "Prepare".
Virtual Method Call from Constructor,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,FeedData,The constructor "FeedData" calls a virtual method "Begin".
Empty Catch Block,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,FreezeIfAllowed,The method has an empty catch block.
Empty Catch Block,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,WaitForDisconnect,The method has an empty catch block.
Empty Catch Block,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,WaitForDisconnect,The method has an empty catch block.
Empty Catch Block,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,fCraft,Paths,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Paths.cs,IsValidPath,The method has an empty catch block.
Empty Catch Block,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,EndShutdown,The method has an empty catch block.
Empty Catch Block,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,EndShutdown,The method has an empty catch block.
Empty Catch Block,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The method has an empty catch block.
Empty Catch Block,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseMiniTimespan,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseMiniTimespan,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseMiniTimespan,The method has an empty catch block.
Empty Catch Block,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,TryParseLocalDate,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Identify,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Identify,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,LoadHeader,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Load,The method has an empty catch block.
Empty Catch Block,fCraft.MapConversion,MapUtility,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapUtility.cs,Load,The method has an empty catch block.
Empty Catch Block,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The method has an empty catch block.
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The following statement contains a magic number: if (string.IsNullOrEmpty (option)) {  	const int maxNumberOfDoorsPerPlayer = 4;  	if (DoorHandler.GetPlayerOwnedDoorsCount (player.World' player) >= maxNumberOfDoorsPerPlayer) {  		player.Message ("You cannot place any more doors' a player can have a maximum of {0} doors per world"' maxNumberOfDoorsPerPlayer);  		return;  	}  	Door door = new Door ();  	player.SelectionStart (2' DoorAdd' door' CdDoor.Permissions);  	player.Message ("Door: Place a block or type /Mark to use your location.");  	return;  } else if (option.ToLower ().Equals ("remove") || option.ToLower ().Equals ("rd")) {  	string doorName = cmd.Next ();  	if (doorName == null) {  		player.Message ("No door name specified.");  	} else {  		if (player.World.Map.Doors != null && player.World.Map.Doors.Count > 0) {  			bool found = false;  			Door doorFound = null;  			lock (player.World.Map.Doors.SyncRoot) {  				foreach (Door door in player.World.Map.Doors) {  					if (door.Name.Equals (doorName' StringComparison.OrdinalIgnoreCase)) {  						doorFound = door;  						found = true;  						break;  					}  				}  				if (!found) {  					player.Message ("Could not find door by name {0}."' doorName);  				} else {  					doorFound.Remove (player);  					player.Message ("door was removed.");  				}  			}  		} else {  			player.Message ("Could not find door as this world doesn't contain a door.");  		}  	}  } else if (option.ToLower ().Equals ("info")) {  	string doorName = cmd.Next ();  	if (doorName == null) {  		player.Message ("No door name specified.");  	} else {  		if (player.World.Map.Doors != null && player.World.Map.Doors.Count > 0) {  			bool found = false;  			lock (player.World.Map.Doors.SyncRoot) {  				foreach (Door door in player.World.Map.Doors) {  					if (door.Name.Equals (doorName' StringComparison.OrdinalIgnoreCase)) {  						player.Message ("Door '{0}&S' was created by {1}&S at {2}"' door.Name' door.Creator' door.Created);  						found = true;  					}  				}  			}  			if (!found) {  				player.Message ("Could not find door by name {0}."' doorName);  			}  		} else {  			player.Message ("Could not find door as this world doesn't contain a door.");  		}  	}  } else if (option.ToLower ().Equals ("list")) {  	if (player.World.Map.Doors == null || player.World.Map.Doors.Count == 0) {  		player.Message ("There are no doors in {0}&S."' player.World.ClassyName);  	} else {  		String[] doorNames = new String[player.World.Map.Doors.Count];  		System.Text.StringBuilder output = new System.Text.StringBuilder ("There are " + player.World.Map.Doors.Count + " doors in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Doors.Count; i++) {  			doorNames [i] = ((Door)player.World.Map.Doors [i]).Name;  		}  		output.Append (doorNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  } else if (option.ToLower () == "test") {  	player.SelectionStart (1' DoorTestCallback' null' CdDoor.Permissions);  	player.Message ("DoorTest: Click a block or type /mark to use your location.");  } else {  	CdDoor.PrintUsage (player);  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The following statement contains a magic number: if (string.IsNullOrEmpty (option)) {  	const int maxNumberOfDoorsPerPlayer = 4;  	if (DoorHandler.GetPlayerOwnedDoorsCount (player.World' player) >= maxNumberOfDoorsPerPlayer) {  		player.Message ("You cannot place any more doors' a player can have a maximum of {0} doors per world"' maxNumberOfDoorsPerPlayer);  		return;  	}  	Door door = new Door ();  	player.SelectionStart (2' DoorAdd' door' CdDoor.Permissions);  	player.Message ("Door: Place a block or type /Mark to use your location.");  	return;  } else if (option.ToLower ().Equals ("remove") || option.ToLower ().Equals ("rd")) {  	string doorName = cmd.Next ();  	if (doorName == null) {  		player.Message ("No door name specified.");  	} else {  		if (player.World.Map.Doors != null && player.World.Map.Doors.Count > 0) {  			bool found = false;  			Door doorFound = null;  			lock (player.World.Map.Doors.SyncRoot) {  				foreach (Door door in player.World.Map.Doors) {  					if (door.Name.Equals (doorName' StringComparison.OrdinalIgnoreCase)) {  						doorFound = door;  						found = true;  						break;  					}  				}  				if (!found) {  					player.Message ("Could not find door by name {0}."' doorName);  				} else {  					doorFound.Remove (player);  					player.Message ("door was removed.");  				}  			}  		} else {  			player.Message ("Could not find door as this world doesn't contain a door.");  		}  	}  } else if (option.ToLower ().Equals ("info")) {  	string doorName = cmd.Next ();  	if (doorName == null) {  		player.Message ("No door name specified.");  	} else {  		if (player.World.Map.Doors != null && player.World.Map.Doors.Count > 0) {  			bool found = false;  			lock (player.World.Map.Doors.SyncRoot) {  				foreach (Door door in player.World.Map.Doors) {  					if (door.Name.Equals (doorName' StringComparison.OrdinalIgnoreCase)) {  						player.Message ("Door '{0}&S' was created by {1}&S at {2}"' door.Name' door.Creator' door.Created);  						found = true;  					}  				}  			}  			if (!found) {  				player.Message ("Could not find door by name {0}."' doorName);  			}  		} else {  			player.Message ("Could not find door as this world doesn't contain a door.");  		}  	}  } else if (option.ToLower ().Equals ("list")) {  	if (player.World.Map.Doors == null || player.World.Map.Doors.Count == 0) {  		player.Message ("There are no doors in {0}&S."' player.World.ClassyName);  	} else {  		String[] doorNames = new String[player.World.Map.Doors.Count];  		System.Text.StringBuilder output = new System.Text.StringBuilder ("There are " + player.World.Map.Doors.Count + " doors in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Doors.Count; i++) {  			doorNames [i] = ((Door)player.World.Map.Doors [i]).Name;  		}  		output.Append (doorNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  } else if (option.ToLower () == "test") {  	player.SelectionStart (1' DoorTestCallback' null' CdDoor.Permissions);  	player.Message ("DoorTest: Click a block or type /mark to use your location.");  } else {  	CdDoor.PrintUsage (player);  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Door,The following statement contains a magic number: player.SelectionStart (2' DoorAdd' door' CdDoor.Permissions);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following statement contains a magic number: if (volume > 30) {  	player.Message ("Doors are only allowed to be {0} blocks"' 30);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following statement contains a magic number: if (volume > 30) {  	player.Message ("Doors are only allowed to be {0} blocks"' 30);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following statement contains a magic number: player.Message ("Doors are only allowed to be {0} blocks"' 30);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DrawImageHandler,The following statement contains a magic number: player.SelectionStart (2' DrawImageCallback' op' Permission.DrawAdvanced);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (Param.ToLower () == "reset") {  	player.font = new Font ("Times New Roman"' 20' FontStyle.Regular);  	player.Message ("SetFont: Font reverted back to default ({0} size {1})"' player.font.FontFamily.Name' player.font.Size);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: player.font = new Font ("Times New Roman"' 20' FontStyle.Regular);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (Param.ToLower () == "size") {  	int Size = -1;  	if (cmd.NextInt (out Size)) {  		if (Size > 48 || Size < 10) {  			player.Message ("&WIncorrect font size ({0}): Size needs to be between 10 and 48"' Size);  			return;  		}  		player.Message ("SetFont: Size changed from {0} to {1} ({2})"' player.font.Size' Size' player.font.FontFamily.Name);  		player.font = new System.Drawing.Font (player.font.FontFamily' Size);  	} else {  		player.Message ("&WInvalid size' use /SetFont Size FontSize. Example: /SetFont Size 14");  		return;  	}  	return;  } else {  	CdSetFont.PrintUsage (player);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (Param.ToLower () == "size") {  	int Size = -1;  	if (cmd.NextInt (out Size)) {  		if (Size > 48 || Size < 10) {  			player.Message ("&WIncorrect font size ({0}): Size needs to be between 10 and 48"' Size);  			return;  		}  		player.Message ("SetFont: Size changed from {0} to {1} ({2})"' player.font.Size' Size' player.font.FontFamily.Name);  		player.font = new System.Drawing.Font (player.font.FontFamily' Size);  	} else {  		player.Message ("&WInvalid size' use /SetFont Size FontSize. Example: /SetFont Size 14");  		return;  	}  	return;  } else {  	CdSetFont.PrintUsage (player);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (cmd.NextInt (out Size)) {  	if (Size > 48 || Size < 10) {  		player.Message ("&WIncorrect font size ({0}): Size needs to be between 10 and 48"' Size);  		return;  	}  	player.Message ("SetFont: Size changed from {0} to {1} ({2})"' player.font.Size' Size' player.font.FontFamily.Name);  	player.font = new System.Drawing.Font (player.font.FontFamily' Size);  } else {  	player.Message ("&WInvalid size' use /SetFont Size FontSize. Example: /SetFont Size 14");  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (cmd.NextInt (out Size)) {  	if (Size > 48 || Size < 10) {  		player.Message ("&WIncorrect font size ({0}): Size needs to be between 10 and 48"' Size);  		return;  	}  	player.Message ("SetFont: Size changed from {0} to {1} ({2})"' player.font.Size' Size' player.font.FontFamily.Name);  	player.font = new System.Drawing.Font (player.font.FontFamily' Size);  } else {  	player.Message ("&WInvalid size' use /SetFont Size FontSize. Example: /SetFont Size 14");  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (Size > 48 || Size < 10) {  	player.Message ("&WIncorrect font size ({0}): Size needs to be between 10 and 48"' Size);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,SetFontHandler,The following statement contains a magic number: if (Size > 48 || Size < 10) {  	player.Message ("&WIncorrect font size ({0}): Size needs to be between 10 and 48"' Size);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: if (!cmd.NextInt (out radius)) {  	radius = 20;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: radius = 20;  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: if (!cmd.NextInt (out Points)) {  	Points = 5;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: Points = 5;  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DHandler,The following statement contains a magic number: player.SelectionStart (2' Draw2DCallback' tag' Permission.DrawAdvanced);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DCallback,The following statement contains a magic number: try {  	ShapesLib lib = new ShapesLib (block' marks' player' radius' direction);  	switch (Shape.ToLower ()) {  	case "polygon":  		lib.DrawRegularPolygon (Points' 18' fill);  		break;  	case "star":  		lib.DrawStar (Points' radius' fill);  		break;  	case "spiral":  		lib.DrawSpiral ();  		break;  	default:  		player.Message ("&WUnknown shape");  		CdDraw2D.PrintUsage (player);  		lib = null;  		return;  	}  	if (lib.blockCount > 0) {  		player.Message ("/Draw2D: Drawing {0} with a size of '{1}' using {2} blocks of {3}"' Shape' radius' lib.blockCount' block.ToString ());  	} else {  		player.Message ("&WNo direction was set");  	}  	lib = null;  	//get lost  } catch (Exception e) {  	player.Message (e.Message);  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DCallback,The following statement contains a magic number: switch (Shape.ToLower ()) {  case "polygon":  	lib.DrawRegularPolygon (Points' 18' fill);  	break;  case "star":  	lib.DrawStar (Points' radius' fill);  	break;  case "spiral":  	lib.DrawSpiral ();  	break;  default:  	player.Message ("&WUnknown shape");  	CdDraw2D.PrintUsage (player);  	lib = null;  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Draw2DCallback,The following statement contains a magic number: lib.DrawRegularPolygon (Points' 18' fill);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,WriteHandler,The following statement contains a magic number: if (sentence.Length < 1) {  	CdWrite.PrintUsage (player);  	return;  } else {  	player.Message ("Write: Click 2 blocks or use &H/Mark&S to set direction.");  	player.SelectionStart (2' WriteCallback' sentence' Permission.DrawAdvanced);  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,WriteHandler,The following statement contains a magic number: player.SelectionStart (2' WriteCallback' sentence' Permission.DrawAdvanced);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The following statement contains a magic number: if (height < 6 || height > 1024) {  	player.Message ("Tree height must be 6 blocks or above");  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,TreeHandler,The following statement contains a magic number: if (height < 6 || height > 1024) {  	player.Message ("Tree height must be 6 blocks or above");  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	Vector3I Pos = new Vector3I (player.Position.X / 32' player.Position.Y / 32' (player.Position.Z / 32) - 2);  	if (player.CanPlace (player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual) != CanPlaceResult.Allowed) {  		player.Message ("&WYou are not allowed to build here");  		return;  	}  	Player.RaisePlayerPlacedBlockEvent (player' player.WorldMap' Pos' player.WorldMap.GetBlock (Pos)' player.LastUsedBlockType' BlockChangeContext.Manual);  	BlockUpdate blockUpdate = new BlockUpdate (null' Pos' player.LastUsedBlockType);  	player.World.Map.QueueUpdate (blockUpdate);  	player.Message ("Block placed below your feet");  } else  	player.Message ("&WError: No last used blocktype was found");  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	Vector3I Pos = new Vector3I (player.Position.X / 32' player.Position.Y / 32' (player.Position.Z / 32) - 2);  	if (player.CanPlace (player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual) != CanPlaceResult.Allowed) {  		player.Message ("&WYou are not allowed to build here");  		return;  	}  	Player.RaisePlayerPlacedBlockEvent (player' player.WorldMap' Pos' player.WorldMap.GetBlock (Pos)' player.LastUsedBlockType' BlockChangeContext.Manual);  	BlockUpdate blockUpdate = new BlockUpdate (null' Pos' player.LastUsedBlockType);  	player.World.Map.QueueUpdate (blockUpdate);  	player.Message ("Block placed below your feet");  } else  	player.Message ("&WError: No last used blocktype was found");  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	Vector3I Pos = new Vector3I (player.Position.X / 32' player.Position.Y / 32' (player.Position.Z / 32) - 2);  	if (player.CanPlace (player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual) != CanPlaceResult.Allowed) {  		player.Message ("&WYou are not allowed to build here");  		return;  	}  	Player.RaisePlayerPlacedBlockEvent (player' player.WorldMap' Pos' player.WorldMap.GetBlock (Pos)' player.LastUsedBlockType' BlockChangeContext.Manual);  	BlockUpdate blockUpdate = new BlockUpdate (null' Pos' player.LastUsedBlockType);  	player.World.Map.QueueUpdate (blockUpdate);  	player.Message ("Block placed below your feet");  } else  	player.Message ("&WError: No last used blocktype was found");  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,Place,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	Vector3I Pos = new Vector3I (player.Position.X / 32' player.Position.Y / 32' (player.Position.Z / 32) - 2);  	if (player.CanPlace (player.World.Map' Pos' player.LastUsedBlockType' BlockChangeContext.Manual) != CanPlaceResult.Allowed) {  		player.Message ("&WYou are not allowed to build here");  		return;  	}  	Player.RaisePlayerPlacedBlockEvent (player' player.WorldMap' Pos' player.WorldMap.GetBlock (Pos)' player.LastUsedBlockType' BlockChangeContext.Manual);  	BlockUpdate blockUpdate = new BlockUpdate (null' Pos' player.LastUsedBlockType);  	player.World.Map.QueueUpdate (blockUpdate);  	player.Message ("Block placed below your feet");  } else  	player.Message ("&WError: No last used blocktype was found");  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterHandler,The following statement contains a magic number: player.SelectionStart (2' CenterCallback' null' CdCenter.Permissions);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	int sx = Math.Min (marks [0].X' marks [1].X)' ex = Math.Max (marks [0].X' marks [1].X)' sy = Math.Min (marks [0].Y' marks [1].Y)' ey = Math.Max (marks [0].Y' marks [1].Y)' sz = Math.Min (marks [0].Z' marks [1].Z)' ez = Math.Max (marks [0].Z' marks [1].Z);  	BoundingBox bounds = new BoundingBox (sx' sy' sz' ex' ey' ez);  	Vector3I cPos = new Vector3I ((bounds.XMin + bounds.XMax) / 2' (bounds.YMin + bounds.YMax) / 2' (bounds.ZMin + bounds.ZMax) / 2);  	int blocksDrawn = 0' blocksSkipped = 0;  	UndoState undoState = player.DrawBegin (null);  	World playerWorld = player.World;  	if (playerWorld == null)  		PlayerOpException.ThrowNoWorld (player);  	DrawOneBlock (player' player.World.Map' player.LastUsedBlockType' cPos' BlockChangeContext.Drawn' ref blocksDrawn' ref blocksSkipped' undoState);  	DrawingFinished (player' "Placed"' blocksDrawn' blocksSkipped);  } else {  	player.Message ("&WCannot deduce desired block. Click a block or type out the block name.");  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	int sx = Math.Min (marks [0].X' marks [1].X)' ex = Math.Max (marks [0].X' marks [1].X)' sy = Math.Min (marks [0].Y' marks [1].Y)' ey = Math.Max (marks [0].Y' marks [1].Y)' sz = Math.Min (marks [0].Z' marks [1].Z)' ez = Math.Max (marks [0].Z' marks [1].Z);  	BoundingBox bounds = new BoundingBox (sx' sy' sz' ex' ey' ez);  	Vector3I cPos = new Vector3I ((bounds.XMin + bounds.XMax) / 2' (bounds.YMin + bounds.YMax) / 2' (bounds.ZMin + bounds.ZMax) / 2);  	int blocksDrawn = 0' blocksSkipped = 0;  	UndoState undoState = player.DrawBegin (null);  	World playerWorld = player.World;  	if (playerWorld == null)  		PlayerOpException.ThrowNoWorld (player);  	DrawOneBlock (player' player.World.Map' player.LastUsedBlockType' cPos' BlockChangeContext.Drawn' ref blocksDrawn' ref blocksSkipped' undoState);  	DrawingFinished (player' "Placed"' blocksDrawn' blocksSkipped);  } else {  	player.Message ("&WCannot deduce desired block. Click a block or type out the block name.");  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CenterCallback,The following statement contains a magic number: if (player.LastUsedBlockType != Block.Undefined) {  	int sx = Math.Min (marks [0].X' marks [1].X)' ex = Math.Max (marks [0].X' marks [1].X)' sy = Math.Min (marks [0].Y' marks [1].Y)' ey = Math.Max (marks [0].Y' marks [1].Y)' sz = Math.Min (marks [0].Z' marks [1].Z)' ez = Math.Max (marks [0].Z' marks [1].Z);  	BoundingBox bounds = new BoundingBox (sx' sy' sz' ex' ey' ez);  	Vector3I cPos = new Vector3I ((bounds.XMin + bounds.XMax) / 2' (bounds.YMin + bounds.YMax) / 2' (bounds.ZMin + bounds.ZMax) / 2);  	int blocksDrawn = 0' blocksSkipped = 0;  	UndoState undoState = player.DrawBegin (null);  	World playerWorld = player.World;  	if (playerWorld == null)  		PlayerOpException.ThrowNoWorld (player);  	DrawOneBlock (player' player.World.Map' player.LastUsedBlockType' cPos' BlockChangeContext.Drawn' ref blocksDrawn' ref blocksSkipped' undoState);  	DrawingFinished (player' "Placed"' blocksDrawn' blocksSkipped);  } else {  	player.Message ("&WCannot deduce desired block. Click a block or type out the block name.");  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,ReplaceHandlerInternal,The following statement contains a magic number: player.SelectionStart (2' DrawOperationCallback' op' Permission.Draw);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CopyHandler,The following statement contains a magic number: player.SelectionStart (2' CopyCallback' null' CdCopy.Permissions);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,CutHandler,The following statement contains a magic number: player.SelectionStart (2' DrawOperationCallback' op' Permission.Draw);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (!cmd.NextInt (out degrees) || (degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270)) {  	CdRotate.PrintUsage (player);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (!cmd.NextInt (out degrees) || (degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270)) {  	CdRotate.PrintUsage (player);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (!cmd.NextInt (out degrees) || (degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270)) {  	CdRotate.PrintUsage (player);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (!cmd.NextInt (out degrees) || (degrees != 90 && degrees != -90 && degrees != 180 && degrees != 270)) {  	CdRotate.PrintUsage (player);  	return;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (degrees == 180) {  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (1)' oldBuffer.GetLength (2)];  } else  	switch (axis) {  	case Axis.X:  		newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  		break;  	case Axis.Y:  		newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  		break;  	default:  		newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  		break;  	}  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (degrees == 180) {  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (1)' oldBuffer.GetLength (2)];  } else  	switch (axis) {  	case Axis.X:  		newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  		break;  	case Axis.Y:  		newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  		break;  	default:  		newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  		break;  	}  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (degrees == 180) {  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (1)' oldBuffer.GetLength (2)];  } else  	switch (axis) {  	case Axis.X:  		newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  		break;  	case Axis.Y:  		newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  		break;  	default:  		newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  		break;  	}  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (degrees == 180) {  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (1)' oldBuffer.GetLength (2)];  } else  	switch (axis) {  	case Axis.X:  		newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  		break;  	case Axis.Y:  		newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  		break;  	default:  		newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  		break;  	}  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: if (degrees == 180) {  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (1)' oldBuffer.GetLength (2)];  } else  	switch (axis) {  	case Axis.X:  		newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  		break;  	case Axis.Y:  		newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  		break;  	default:  		newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  		break;  	}  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (1)' oldBuffer.GetLength (2)];  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (axis) {  case Axis.X:  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  	break;  case Axis.Y:  	newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  	break;  default:  	newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (axis) {  case Axis.X:  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  	break;  case Axis.Y:  	newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  	break;  default:  	newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (axis) {  case Axis.X:  	newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  	break;  case Axis.Y:  	newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  	break;  default:  	newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: newBuffer = new Block[oldBuffer.GetLength (0)' oldBuffer.GetLength (2)' oldBuffer.GetLength (1)];  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: newBuffer = new Block[oldBuffer.GetLength (2)' oldBuffer.GetLength (1)' oldBuffer.GetLength (0)];  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: newBuffer = new Block[oldBuffer.GetLength (1)' oldBuffer.GetLength (0)' oldBuffer.GetLength (2)];  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (axis) {  case Axis.X:  	a = 1;  	b = 2;  	break;  case Axis.Y:  	a = 0;  	b = 2;  	break;  default:  	a = 0;  	b = 1;  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (axis) {  case Axis.X:  	a = 1;  	b = 2;  	break;  case Axis.Y:  	a = 0;  	b = 2;  	break;  default:  	a = 0;  	b = 1;  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: b = 2;  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: b = 2;  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (degrees) {  case 90:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = -1;  	matrix [b' a] = 1;  	break;  case 180:  	matrix [a' a] = -1;  	matrix [b' b] = -1;  	break;  case -90:  case 270:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = 1;  	matrix [b' a] = -1;  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (degrees) {  case 90:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = -1;  	matrix [b' a] = 1;  	break;  case 180:  	matrix [a' a] = -1;  	matrix [b' b] = -1;  	break;  case -90:  case 270:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = 1;  	matrix [b' a] = -1;  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (degrees) {  case 90:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = -1;  	matrix [b' a] = 1;  	break;  case 180:  	matrix [a' a] = -1;  	matrix [b' b] = -1;  	break;  case -90:  case 270:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = 1;  	matrix [b' a] = -1;  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: switch (degrees) {  case 90:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = -1;  	matrix [b' a] = 1;  	break;  case 180:  	matrix [a' a] = -1;  	matrix [b' b] = -1;  	break;  case -90:  case 270:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = 1;  	matrix [b' a] = -1;  	break;  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int x = oldBuffer.GetLength (0) - 1; x >= 0; x--) {  	for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  		for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  			int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  			int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  			int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  			newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  		}  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int y = oldBuffer.GetLength (1) - 1; y >= 0; y--) {  	for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  		int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  		int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  		int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  		newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  	}  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following statement contains a magic number: for (int z = oldBuffer.GetLength (2) - 1; z >= 0; z--) {  	int nx = (matrix [0' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [0' 0] > 0 ? x : 0)) + (matrix [0' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [0' 1] > 0 ? y : 0)) + (matrix [0' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [0' 2] > 0 ? z : 0));  	int ny = (matrix [1' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [1' 0] > 0 ? x : 0)) + (matrix [1' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [1' 1] > 0 ? y : 0)) + (matrix [1' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [1' 2] > 0 ? z : 0));  	int nz = (matrix [2' 0] < 0 ? oldBuffer.GetLength (0) - 1 - x : (matrix [2' 0] > 0 ? x : 0)) + (matrix [2' 1] < 0 ? oldBuffer.GetLength (1) - 1 - y : (matrix [2' 1] > 0 ? y : 0)) + (matrix [2' 2] < 0 ? oldBuffer.GetLength (2) - 1 - z : (matrix [2' 2] > 0 ? z : 0));  	newBuffer [nx' ny' nz] = oldBuffer [x' y' z];  }  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,PasteXHandler,The following statement contains a magic number: player.SelectionStart (2' DrawOperationCallback' op' Permission.Draw' Permission.CopyAndPaste);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,PasteNotXHandler,The following statement contains a magic number: player.SelectionStart (2' DrawOperationCallback' op' Permission.Draw' Permission.CopyAndPaste);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RestoreHandler,The following statement contains a magic number: player.SelectionStart (2' RestoreCallback' map' CdRestore.Permissions);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaHandler,The following statement contains a magic number: player.SelectionStart (2' UndoAreaSelectionCallback' args' permission);  
Magic Number,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,UndoAreaNotHandler,The following statement contains a magic number: player.SelectionStart (2' UndoAreaSelectionCallback' args' CdUndoAreaNot.Permissions);  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: if (e.Player.IsAway) {  	// We need to have block positions' so we divide by 32  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	// Check if the player actually moved and not just rotated  	if ((oldPos.X != newPos.X) || (oldPos.Y != newPos.Y) || (oldPos.Z != newPos.Z)) {  		Server.Players.Message ("{0} &Eis back"' e.Player.ClassyName);  		e.Player.IsAway = false;  	}  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: if (e.Player.IsAway) {  	// We need to have block positions' so we divide by 32  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	// Check if the player actually moved and not just rotated  	if ((oldPos.X != newPos.X) || (oldPos.Y != newPos.Y) || (oldPos.Z != newPos.Z)) {  		Server.Players.Message ("{0} &Eis back"' e.Player.ClassyName);  		e.Player.IsAway = false;  	}  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: if (e.Player.IsAway) {  	// We need to have block positions' so we divide by 32  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	// Check if the player actually moved and not just rotated  	if ((oldPos.X != newPos.X) || (oldPos.Y != newPos.Y) || (oldPos.Z != newPos.Z)) {  		Server.Players.Message ("{0} &Eis back"' e.Player.ClassyName);  		e.Player.IsAway = false;  	}  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: if (e.Player.IsAway) {  	// We need to have block positions' so we divide by 32  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	// Check if the player actually moved and not just rotated  	if ((oldPos.X != newPos.X) || (oldPos.Y != newPos.Y) || (oldPos.Z != newPos.Z)) {  		Server.Players.Message ("{0} &Eis back"' e.Player.ClassyName);  		e.Player.IsAway = false;  	}  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: if (e.Player.IsAway) {  	// We need to have block positions' so we divide by 32  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	// Check if the player actually moved and not just rotated  	if ((oldPos.X != newPos.X) || (oldPos.Y != newPos.Y) || (oldPos.Z != newPos.Z)) {  		Server.Players.Message ("{0} &Eis back"' e.Player.ClassyName);  		e.Player.IsAway = false;  	}  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,Player_IsBack,The following statement contains a magic number: if (e.Player.IsAway) {  	// We need to have block positions' so we divide by 32  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	// Check if the player actually moved and not just rotated  	if ((oldPos.X != newPos.X) || (oldPos.Y != newPos.Y) || (oldPos.Z != newPos.Z)) {  		Server.Players.Message ("{0} &Eis back"' e.Player.ClassyName);  		e.Player.IsAway = false;  	}  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,RollHandler,The following statement contains a magic number: if (cmd.NextInt (out n1)) {  	int n2;  	if (!cmd.NextInt (out n2)) {  		n2 = 1;  	}  	min = Math.Min (n1' n2);  	max = Math.Max (n1' n2);  } else {  	min = 1;  	max = 100;  }  
Magic Number,fCraft,ChatCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ChatCommands.cs,RollHandler,The following statement contains a magic number: max = 100;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Start,The following statement contains a magic number: task.RunForever (TimeSpan.FromMilliseconds (600));  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int x = 0; x < bmp.Width; x++) {  	pixels.Add (new List<bool> ());  	for (int y = 0; y < bmp.Height; y++) {  		pixels [x].Add (bmp.GetPixel (x' y).GetBrightness () > 0.5);  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int y = 0; y < bmp.Height; y++) {  	pixels [x].Add (bmp.GetPixel (x' y).GetBrightness () > 0.5);  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: pixels [x].Add (bmp.GetPixel (x' y).GetBrightness () > 0.5);  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int c = 33; c < 126; c++) {  	var charBlocks = new List<bool> ();  	bool space = true;  	int bmpOffsetX = ((c - 32) % 16) * 8;  	int bmpOffsetY = ((int)((c - 32) / 16)) * 8;  	for (int X = 7; X >= 0; X--) {  		for (int Y = 0; Y < 8; Y++) {  			bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  			if (space) {  				if (type) {  					Y = -1;  					space = false;  				}  			} else {  				charBlocks.Add (type);  			}  		}  	}  	charBlocks.Reverse ();  	chars [c - 32] = charBlocks;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int X = 7; X >= 0; X--) {  	for (int Y = 0; Y < 8; Y++) {  		bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  		if (space) {  			if (type) {  				Y = -1;  				space = false;  			}  		} else {  			charBlocks.Add (type);  		}  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int X = 7; X >= 0; X--) {  	for (int Y = 0; Y < 8; Y++) {  		bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  		if (space) {  			if (type) {  				Y = -1;  				space = false;  			}  		} else {  			charBlocks.Add (type);  		}  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int Y = 0; Y < 8; Y++) {  	bool type = pixels [X + bmpOffsetX] [Y + bmpOffsetY];  	if (space) {  		if (type) {  			Y = -1;  			space = false;  		}  	} else {  		charBlocks.Add (type);  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: chars [c - 32] = charBlocks;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int i = 0; i < (SPACE_UNIT - 2) * 8; i++) {  	chars [0].Add (false);  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Init,The following statement contains a magic number: for (int i = 0; i < (SPACE_UNIT - 2) * 8; i++) {  	chars [0].Add (false);  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: try {  	Done = false;  	RemoveText ();  	if (ChangeMessage) {  		switch (direction) {  		case Direction.one:  		case Direction.two:  			EndPos.X = FinishPos.X;  			break;  		case Direction.three:  		case Direction.four:  			EndPos.Y = FinishPos.Y;  			break;  		}  		PickNewMessage ();  		ChangeMessage = false;  	}  	switch (direction) {  	case Direction.one:  		EndPos.X -= 7;  		break;  	case Direction.two:  		EndPos.X += 7;  		break;  	case Direction.three:  		EndPos.Y -= 7;  		break;  	case Direction.four:  		EndPos.Y += 7;  		break;  	}  	Render (Sentence);  } catch (Exception e) {  	Logger.Log (LogType.Error' e.ToString ());  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: try {  	Done = false;  	RemoveText ();  	if (ChangeMessage) {  		switch (direction) {  		case Direction.one:  		case Direction.two:  			EndPos.X = FinishPos.X;  			break;  		case Direction.three:  		case Direction.four:  			EndPos.Y = FinishPos.Y;  			break;  		}  		PickNewMessage ();  		ChangeMessage = false;  	}  	switch (direction) {  	case Direction.one:  		EndPos.X -= 7;  		break;  	case Direction.two:  		EndPos.X += 7;  		break;  	case Direction.three:  		EndPos.Y -= 7;  		break;  	case Direction.four:  		EndPos.Y += 7;  		break;  	}  	Render (Sentence);  } catch (Exception e) {  	Logger.Log (LogType.Error' e.ToString ());  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: try {  	Done = false;  	RemoveText ();  	if (ChangeMessage) {  		switch (direction) {  		case Direction.one:  		case Direction.two:  			EndPos.X = FinishPos.X;  			break;  		case Direction.three:  		case Direction.four:  			EndPos.Y = FinishPos.Y;  			break;  		}  		PickNewMessage ();  		ChangeMessage = false;  	}  	switch (direction) {  	case Direction.one:  		EndPos.X -= 7;  		break;  	case Direction.two:  		EndPos.X += 7;  		break;  	case Direction.three:  		EndPos.Y -= 7;  		break;  	case Direction.four:  		EndPos.Y += 7;  		break;  	}  	Render (Sentence);  } catch (Exception e) {  	Logger.Log (LogType.Error' e.ToString ());  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: try {  	Done = false;  	RemoveText ();  	if (ChangeMessage) {  		switch (direction) {  		case Direction.one:  		case Direction.two:  			EndPos.X = FinishPos.X;  			break;  		case Direction.three:  		case Direction.four:  			EndPos.Y = FinishPos.Y;  			break;  		}  		PickNewMessage ();  		ChangeMessage = false;  	}  	switch (direction) {  	case Direction.one:  		EndPos.X -= 7;  		break;  	case Direction.two:  		EndPos.X += 7;  		break;  	case Direction.three:  		EndPos.Y -= 7;  		break;  	case Direction.four:  		EndPos.Y += 7;  		break;  	}  	Render (Sentence);  } catch (Exception e) {  	Logger.Log (LogType.Error' e.ToString ());  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch (direction) {  case Direction.one:  	EndPos.X -= 7;  	break;  case Direction.two:  	EndPos.X += 7;  	break;  case Direction.three:  	EndPos.Y -= 7;  	break;  case Direction.four:  	EndPos.Y += 7;  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch (direction) {  case Direction.one:  	EndPos.X -= 7;  	break;  case Direction.two:  	EndPos.X += 7;  	break;  case Direction.three:  	EndPos.Y -= 7;  	break;  case Direction.four:  	EndPos.Y += 7;  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch (direction) {  case Direction.one:  	EndPos.X -= 7;  	break;  case Direction.two:  	EndPos.X += 7;  	break;  case Direction.three:  	EndPos.Y -= 7;  	break;  case Direction.four:  	EndPos.Y += 7;  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: switch (direction) {  case Direction.one:  	EndPos.X -= 7;  	break;  case Direction.two:  	EndPos.X += 7;  	break;  case Direction.three:  	EndPos.Y -= 7;  	break;  case Direction.four:  	EndPos.Y += 7;  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: EndPos.X -= 7;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: EndPos.X += 7;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: EndPos.Y -= 7;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following statement contains a magic number: EndPos.Y += 7;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,The following statement contains a magic number: for (int p = 0; p < text.Length; p++) {  	char c = text [p];  	List<bool> charTemp = chars [c - 32];  	foreach (bool t in charTemp) {  		current.Add (t ? textType : bgType);  	}  	if (p == text.Length - 1)  		continue;  	for (int s = 0; s < 8; s++) {  		current.Add (bgType);  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,The following statement contains a magic number: for (int p = 0; p < text.Length; p++) {  	char c = text [p];  	List<bool> charTemp = chars [c - 32];  	foreach (bool t in charTemp) {  		current.Add (t ? textType : bgType);  	}  	if (p == text.Length - 1)  		continue;  	for (int s = 0; s < 8; s++) {  		current.Add (bgType);  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,Render,The following statement contains a magic number: for (int s = 0; s < 8; s++) {  	current.Add (bgType);  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: if (world.IsLoaded) {  	int x = 0' y = 0' z = 0;  	switch (direction) {  	case Direction.one:  		x = (int)(index / 8) + EndPos.X;  		y = StartPos.Y;  		z = StartPos.Z + (index % 8);  		if (world.map.InBounds (x' y' z)) {  			if (x >= StartPos.X && x <= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.two:  		x = (short)(EndPos.X - (index / 8));  		y = (short)StartPos.Y;  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (x <= StartPos.X && x >= FinishPos.X) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.three:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y + (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y >= StartPos.Y && y <= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	case Direction.four:  		x = (short)StartPos.X;  		y = (short)(EndPos.Y - (index / 8));  		z = (short)(StartPos.Z + (index % 8));  		if (world.map.InBounds (x' y' z)) {  			if (y <= StartPos.Y && y >= FinishPos.Y) {  				if ((Block)type != Block.Air) {  					var Pos = new Vector3I (x' y' z);  					world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  					Blocks.TryAdd (Pos.ToString ()' Pos);  				}  			}  		}  		break;  	}  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: x = (int)(index / 8) + EndPos.X;  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: z = StartPos.Z + (index % 8);  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: x = (short)(EndPos.X - (index / 8));  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: z = (short)(StartPos.Z + (index % 8));  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: y = (short)(EndPos.Y + (index / 8));  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: z = (short)(StartPos.Z + (index % 8));  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: y = (short)(EndPos.Y - (index / 8));  
Magic Number,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following statement contains a magic number: z = (short)(StartPos.Z + (index % 8));  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: try {  	lock (world.SyncRoot) {  		if (null == world.Map)  			return;  		if (player.IsOnline) {  			Position p = player.Position;  			double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  			double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  			double sphi = Math.Sin (phi);  			double cphi = Math.Cos (phi);  			double sksi = Math.Sin (ksi);  			double cksi = Math.Cos (ksi);  			if (player.IsOnline) {  				if (player.GunCache.Values.Count > 0) {  					foreach (Vector3I block in player.GunCache.Values) {  						if (player.IsOnline) {  							player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  							Vector3I removed;  							player.GunCache.TryRemove (block.ToString ()' out removed);  						}  					}  				}  			}  			for (int y = -1; y < 2; ++y) {  				for (int z = -1; z < 2; ++z) {  					if (player.IsOnline) {  						//4 is the distance betwen the player and the glass wall  						var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  						glassBlockPos += p.ToBlockCoords ();  						if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  							player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  							player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "GunGlass: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: lock (world.SyncRoot) {  	if (null == world.Map)  		return;  	if (player.IsOnline) {  		Position p = player.Position;  		double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  		double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  		double sphi = Math.Sin (phi);  		double cphi = Math.Cos (phi);  		double sksi = Math.Sin (ksi);  		double cksi = Math.Cos (ksi);  		if (player.IsOnline) {  			if (player.GunCache.Values.Count > 0) {  				foreach (Vector3I block in player.GunCache.Values) {  					if (player.IsOnline) {  						player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  						Vector3I removed;  						player.GunCache.TryRemove (block.ToString ()' out removed);  					}  				}  			}  		}  		for (int y = -1; y < 2; ++y) {  			for (int z = -1; z < 2; ++z) {  				if (player.IsOnline) {  					//4 is the distance betwen the player and the glass wall  					var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  					glassBlockPos += p.ToBlockCoords ();  					if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  						player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  						player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	Position p = player.Position;  	double ksi = 2.0 * Math.PI * (-player.Position.L) / 256.0;  	double phi = 2.0 * Math.PI * (player.Position.R - 64) / 256.0;  	double sphi = Math.Sin (phi);  	double cphi = Math.Cos (phi);  	double sksi = Math.Sin (ksi);  	double cksi = Math.Cos (ksi);  	if (player.IsOnline) {  		if (player.GunCache.Values.Count > 0) {  			foreach (Vector3I block in player.GunCache.Values) {  				if (player.IsOnline) {  					player.Send (PacketWriter.MakeSetBlock (block.X' block.Y' block.Z' world.Map.GetBlock (block)));  					Vector3I removed;  					player.GunCache.TryRemove (block.ToString ()' out removed);  				}  			}  		}  	}  	for (int y = -1; y < 2; ++y) {  		for (int z = -1; z < 2; ++z) {  			if (player.IsOnline) {  				//4 is the distance betwen the player and the glass wall  				var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  				glassBlockPos += p.ToBlockCoords ();  				if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  					player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  					player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  				}  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int y = -1; y < 2; ++y) {  	for (int z = -1; z < 2; ++z) {  		if (player.IsOnline) {  			//4 is the distance betwen the player and the glass wall  			var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  			glassBlockPos += p.ToBlockCoords ();  			if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  				player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  				player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: for (int z = -1; z < 2; ++z) {  	if (player.IsOnline) {  		//4 is the distance betwen the player and the glass wall  		var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  		glassBlockPos += p.ToBlockCoords ();  		if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  			player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  			player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,GunMove,The following statement contains a magic number: if (player.IsOnline) {  	//4 is the distance betwen the player and the glass wall  	var glassBlockPos = new Vector3I ((int)(cphi * cksi * 4 - sphi * (0.5 + y) - cphi * sksi * (0.5 + z))' (int)(sphi * cksi * 4 + cphi * (0.5 + y) - sphi * sksi * (0.5 + z))' (int)(sksi * 4 + cksi * (0.5 + z)));  	glassBlockPos += p.ToBlockCoords ();  	if (world.Map.GetBlock (glassBlockPos) == Block.Air) {  		player.Send (PacketWriter.MakeSetBlock (glassBlockPos' Block.Glass));  		player.GunCache.TryAdd (glassBlockPos.ToString ()' glassBlockPos);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunMode && !e.Player.Info.IsHidden && !e.Player.Info.IsFrozen) {  	World world = e.Player.World;  	if (e.Player.GunCache.Values.Contains (e.Coords)) {  		if (world != null && world.gunPhysics) {  			e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  			if (e.Block == Block.TNT && world.tntPhysics) {  				if (e.Player.CanFireTNT ()) {  					double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  					double r = Math.Cos (ksi);  					double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  					var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  					world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  				}  			} else {  				Block block = e.Block;  				if (block == Block.Blue)  					block = Block.Water;  				if (block == Block.Orange)  					block = Block.Lava;  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.GunCache.Values.Contains (e.Coords)) {  	if (world != null && world.gunPhysics) {  		e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  		if (e.Block == Block.TNT && world.tntPhysics) {  			if (e.Player.CanFireTNT ()) {  				double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  				double r = Math.Cos (ksi);  				double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  				var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  				world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  			}  		} else {  			Block block = e.Block;  			if (block == Block.Blue)  				block = Block.Water;  			if (block == Block.Orange)  				block = Block.Lava;  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (world != null && world.gunPhysics) {  	e.Player.Send (PacketWriter.MakeSetBlock (e.Coords.X' e.Coords.Y' e.Coords.Z' Block.Glass));  	if (e.Block == Block.TNT && world.tntPhysics) {  		if (e.Player.CanFireTNT ()) {  			double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  			double r = Math.Cos (ksi);  			double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  			var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  			world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  		}  	} else {  		Block block = e.Block;  		if (block == Block.Blue)  			block = Block.Water;  		if (block == Block.Orange)  			block = Block.Lava;  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Block == Block.TNT && world.tntPhysics) {  	if (e.Player.CanFireTNT ()) {  		double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  		double r = Math.Cos (ksi);  		double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  		var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  		world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  	}  } else {  	Block block = e.Block;  	if (block == Block.Blue)  		block = Block.Water;  	if (block == Block.Orange)  		block = Block.Lava;  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' block' _bulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.CanFireTNT ()) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.CanFireTNT ()) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.CanFireTNT ()) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.CanFireTNT ()) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,ClickedGlass,The following statement contains a magic number: if (e.Player.CanFireTNT ()) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	var dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	world.AddPhysicsTask (new Particle (world' e.Coords' dir' e.Player' Block.TNT' _tntBulletBehavior)' 0);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: try {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		return;  	}  	var newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' (e.NewPosition.Z / 32));  	if (e.Player.World != null)  		foreach (Player p in e.Player.World.Players) {  			foreach (Vector3I block in p.bluePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  						if (p.orangePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  								Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  								Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  								R = (byte)(p.blueOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  			foreach (Vector3I block in p.orangePortal) {  				if (newPos == block) {  					if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  						if (p.bluePortal.Count > 0) {  							e.Player.TeleportTo (new Position {  								X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  								Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  								Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  								//fixed point 1.59375 lol.  								R = (byte)(p.orangeOut - 128)'  								L = e.Player.Position.L  							});  						}  						e.Player.LastUsedPortal = DateTime.UtcNow;  					}  				}  			}  		}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "MovePortal: " + ex);  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  	return;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (e.Player.World != null)  	foreach (Player p in e.Player.World.Players) {  		foreach (Vector3I block in p.bluePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  					if (p.orangePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  							Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  							Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  							R = (byte)(p.blueOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  		foreach (Vector3I block in p.orangePortal) {  			if (newPos == block) {  				if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  					if (p.bluePortal.Count > 0) {  						e.Player.TeleportTo (new Position {  							X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  							Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  							Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  							//fixed point 1.59375 lol.  							R = (byte)(p.orangeOut - 128)'  							L = e.Player.Position.L  						});  					}  					e.Player.LastUsedPortal = DateTime.UtcNow;  				}  			}  		}  	}  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Player p in e.Player.World.Players) {  	foreach (Vector3I block in p.bluePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  				if (p.orangePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  						Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  						Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  						R = (byte)(p.blueOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  	foreach (Vector3I block in p.orangePortal) {  		if (newPos == block) {  			if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  				if (p.bluePortal.Count > 0) {  					e.Player.TeleportTo (new Position {  						X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  						Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  						Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  						//fixed point 1.59375 lol.  						R = (byte)(p.orangeOut - 128)'  						L = e.Player.Position.L  					});  				}  				e.Player.LastUsedPortal = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.bluePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  			if (p.orangePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  					Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  					Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  					R = (byte)(p.blueOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  		if (p.orangePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  				Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  				Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  				R = (byte)(p.blueOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Water) {  	if (p.orangePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  			Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  			Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  			R = (byte)(p.blueOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.orangePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  		Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  		Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  		R = (byte)(p.blueOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.orangePortal [0].X) + 0.5) * 32)'  	Y = (short)(((p.orangePortal [0].Y) + 0.5) * 32)'  	Z = (short)(((p.orangePortal [0].Z) + 1.59375) * 32)'  	R = (byte)(p.blueOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: foreach (Vector3I block in p.orangePortal) {  	if (newPos == block) {  		if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  			if (p.bluePortal.Count > 0) {  				e.Player.TeleportTo (new Position {  					X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  					Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  					Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  					//fixed point 1.59375 lol.  					R = (byte)(p.orangeOut - 128)'  					L = e.Player.Position.L  				});  			}  			e.Player.LastUsedPortal = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (newPos == block) {  	if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  		if (p.bluePortal.Count > 0) {  			e.Player.TeleportTo (new Position {  				X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  				Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  				Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  				//fixed point 1.59375 lol.  				R = (byte)(p.orangeOut - 128)'  				L = e.Player.Position.L  			});  		}  		e.Player.LastUsedPortal = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.World != null && p.World.Map.GetBlock (block) == Block.Lava) {  	if (p.bluePortal.Count > 0) {  		e.Player.TeleportTo (new Position {  			X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  			Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  			Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  			//fixed point 1.59375 lol.  			R = (byte)(p.orangeOut - 128)'  			L = e.Player.Position.L  		});  	}  	e.Player.LastUsedPortal = DateTime.UtcNow;  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: if (p.bluePortal.Count > 0) {  	e.Player.TeleportTo (new Position {  		X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  		Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  		Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  		//fixed point 1.59375 lol.  		R = (byte)(p.orangeOut - 128)'  		L = e.Player.Position.L  	});  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,MovePortal,The following statement contains a magic number: e.Player.TeleportTo (new Position {  	X = (short)(((p.bluePortal [0].X + 0.5)) * 32)'  	Y = (short)(((p.bluePortal [0].Y + 0.5)) * 32)'  	Z = (short)(((p.bluePortal [0].Z) + 1.59375) * 32)'  	//fixed point 1.59375 lol.  	R = (byte)(p.orangeOut - 128)'  	L = e.Player.Position.L  });  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,CanPlacePortal,The following statement contains a magic number: for (; Z < z + 2; Z++) {  	var check = map.GetBlock (x' y' Z);  	if (check != Block.Air && check != Block.Water && check != Block.Lava) {  		count++;  	}  }  
Magic Number,fCraft,GunClass,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\GunHandler.cs,CanPlacePortal,The following statement contains a magic number: return count == 2;  
Magic Number,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,AliasesStr,The following statement contains a magic number: if (cmd.Names.Length < 2)  	return "";  
Magic Number,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,OnCreate,The following statement contains a magic number: p.SelectionStart (2' handler.LifeCreateCallback' null' Permission.DrawAdvanced);  
Magic Number,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,SetDelay,The following statement contains a magic number: if (!int.TryParse (val' out delay) || delay <= 20) {  	p.Message ("&WExpected integer value >=20 as delay");  	return;  }  
Magic Number,fCraft,EqualityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\EqualityDrawOperation.cs,EqualityDrawOperation,The following statement contains a magic number: if (strFunc.Length < 3) {  	player.Message ("expression is too short (should be like f(x'y'z)=g(x'y'z))");  	return;  }  
Magic Number,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,FuncDrawOperation,The following statement contains a magic number: if (strFunc.Length < 3) {  	player.Message ("&WExpression is too short (should be like z=f(x'y))");  	return;  }  
Magic Number,fCraft,InequalityDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\InequalityDrawOperation.cs,InequalityDrawOperation,The following statement contains a magic number: if (strFunc.Length < 3)  	throw new ArgumentException ("expression is too short (should be like f(x'y'z)>g(x'y'z))");  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: if (null == _expressions [2])  	throw new InvalidExpressionException ("z is undefined");  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: if (null == _paramIterations [0] && null == _paramIterations [1] && null == _paramIterations [2])  	throw new InvalidExpressionException ("all parametrization variables are undefined");  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: if (GetNumOfSteps (0) * GetNumOfSteps (1) * GetNumOfSteps (2) > MaxIterationSteps)  	throw new InvalidExpressionException ("too many iteration steps (over " + MaxIterationSteps + ")");  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,ManifoldDrawOperation,The following statement contains a magic number: p.Message ("Going to draw the following parametrization:\nx=" + _expressions [0].Print () + "\ny=" + _expressions [1].Print () + "\nz=" + _expressions [2].Print ());  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: GetIterationBounds (2' out fromV' out toV' out stepV);  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (double t = fromT; t <= toT; t += stepT) {  	for (double u = fromU; u <= toU; u += stepU) {  		for (double v = fromV; v <= toV; v += stepV) {  			Coords.X = _scaler.FromFuncResult (_expressions [0].Evaluate (t' u' v)' Bounds.XMin' Bounds.XMax);  			Coords.Y = _scaler.FromFuncResult (_expressions [1].Evaluate (t' u' v)' Bounds.YMin' Bounds.YMax);  			Coords.Z = _scaler.FromFuncResult (_expressions [2].Evaluate (t' u' v)' Bounds.ZMin' Bounds.ZMax);  			if (DrawOneBlock ())  				++count;  			//if (TimeToEndBatch)  			//    return count;  		}  	}  }  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (double u = fromU; u <= toU; u += stepU) {  	for (double v = fromV; v <= toV; v += stepV) {  		Coords.X = _scaler.FromFuncResult (_expressions [0].Evaluate (t' u' v)' Bounds.XMin' Bounds.XMax);  		Coords.Y = _scaler.FromFuncResult (_expressions [1].Evaluate (t' u' v)' Bounds.YMin' Bounds.YMax);  		Coords.Z = _scaler.FromFuncResult (_expressions [2].Evaluate (t' u' v)' Bounds.ZMin' Bounds.ZMax);  		if (DrawOneBlock ())  			++count;  		//if (TimeToEndBatch)  		//    return count;  	}  }  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (double v = fromV; v <= toV; v += stepV) {  	Coords.X = _scaler.FromFuncResult (_expressions [0].Evaluate (t' u' v)' Bounds.XMin' Bounds.XMax);  	Coords.Y = _scaler.FromFuncResult (_expressions [1].Evaluate (t' u' v)' Bounds.YMin' Bounds.YMax);  	Coords.Z = _scaler.FromFuncResult (_expressions [2].Evaluate (t' u' v)' Bounds.ZMin' Bounds.ZMax);  	if (DrawOneBlock ())  		++count;  	//if (TimeToEndBatch)  	//    return count;  }  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,DrawBatch,The following statement contains a magic number: Coords.Z = _scaler.FromFuncResult (_expressions [2].Evaluate (t' u' v)' Bounds.ZMin' Bounds.ZMax);  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,GetNumOfSteps,The following statement contains a magic number: return (_paramIterations [idx] [1] - _paramIterations [idx] [0]) / _paramIterations [idx] [2] + 1;  
Magic Number,fCraft,ManifoldDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\ManifoldDrawOperation.cs,GetIterationBounds,The following statement contains a magic number: step = _paramIterations [idx] [2];  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,SetParametrization,The following statement contains a magic number: if (strFunc.Length < 3) {  	p.Message ("Error: expression is too short (should be like x=f(t'u'v))");  	return;  }  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,GetPlayerParametrizationCoordsStorage,The following statement contains a magic number: if (!p.PublicAuxStateObjects.TryGetValue (CoordsStorageName' out o)) {  	o = new Expression[3];  	p.PublicAuxStateObjects.Add (CoordsStorageName' o);  }  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,GetPlayerParametrizationCoordsStorage,The following statement contains a magic number: o = new Expression[3];  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,GetPlayerParametrizationParamsStorage,The following statement contains a magic number: if (!p.PublicAuxStateObjects.TryGetValue (ParamsStorageName' out o)) {  	o = new double[3][];  	p.PublicAuxStateObjects.Add (ParamsStorageName' o);  }  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,GetPlayerParametrizationParamsStorage,The following statement contains a magic number: o = new double[3][];  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,VarNameToIdx,The following statement contains a magic number: switch (varName) {  case 'x':  case 't':  	return 0;  case 'y':  case 'u':  	return 1;  case 'z':  case 'v':  	return 2;  default:  	throw new ArgumentException ("unknown variable " + varName);  }  
Magic Number,fCraft,PrepareParametrizedManifold,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\PrepareParametrizedManifold.cs,VarNameToIdx,The following statement contains a magic number: return 2;  
Magic Number,fCraft,Scaler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\Scaler.cs,ToFuncParam,The following statement contains a magic number: switch (_scaling) {  case Scaling.ZeroToMaxBound:  	return coord - min;  case Scaling.Normalized:  	return (coord - min) / Math.Max (1' max - min);  case Scaling.DoubleNormalized:  	return max == min ? 0 : 2.0 * (coord - min) / Math.Max (1' max - min) - 1;  default:  	throw new Exception ("unknown scaling");  }  
Magic Number,fCraft,Scaler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\Scaler.cs,ToFuncParam,The following statement contains a magic number: return max == min ? 0 : 2.0 * (coord - min) / Math.Max (1' max - min) - 1;  
Magic Number,fCraft,Scaler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\Scaler.cs,FromFuncResult,The following statement contains a magic number: switch (_scaling) {  case Scaling.ZeroToMaxBound:  	return (int)(result + min);  case Scaling.Normalized:  	return (int)(result * Math.Max (1' max - min) + min);  case Scaling.DoubleNormalized:  	return (int)((result + 1) * Math.Max (1' max - min) / 2.0 + min);  default:  	throw new Exception ("unknown scaling");  }  
Magic Number,fCraft,Scaler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\Scaler.cs,FromFuncResult,The following statement contains a magic number: return (int)((result + 1) * Math.Max (1' max - min) / 2.0 + min);  
Magic Number,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData> {  	{  		'+''  		new FuncData () {  			Func = new Sum ()'  			Precedence = 2  		}  	}'  	{  		'*''  		new FuncData () {  			Func = new Mul ()'  			Precedence = 3  		}  	}'  	{  		'-''  		new FuncData () {  			Func = new Sub ()'  			Precedence = 2  		}  	}'  	{  		'/''  		new FuncData () {  			Func = new Div ()'  			Precedence = 3  		}  	}'  	{  		'%''  		new FuncData () {  			Func = new Mod ()'  			Precedence = 3  		}  	}'  	{  		'^''  		new FuncData () {  			Func = new Pow ()'  			Precedence = 4  		}  	}'  	//comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  	{  		'>''  		new FuncData () {  			Func = new Greater ()'  			Precedence = 1  		}  	}'  	{  		'<''  		new FuncData () {  			Func = new Less ()'  			Precedence = 1  		}  	}'  	{  		'=''  		new FuncData () {  			Func = new Equal ()'  			Precedence = 1  		}  	}'  	{  		'&''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  	{  		'|''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  };  
Magic Number,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData> {  	{  		'+''  		new FuncData () {  			Func = new Sum ()'  			Precedence = 2  		}  	}'  	{  		'*''  		new FuncData () {  			Func = new Mul ()'  			Precedence = 3  		}  	}'  	{  		'-''  		new FuncData () {  			Func = new Sub ()'  			Precedence = 2  		}  	}'  	{  		'/''  		new FuncData () {  			Func = new Div ()'  			Precedence = 3  		}  	}'  	{  		'%''  		new FuncData () {  			Func = new Mod ()'  			Precedence = 3  		}  	}'  	{  		'^''  		new FuncData () {  			Func = new Pow ()'  			Precedence = 4  		}  	}'  	//comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  	{  		'>''  		new FuncData () {  			Func = new Greater ()'  			Precedence = 1  		}  	}'  	{  		'<''  		new FuncData () {  			Func = new Less ()'  			Precedence = 1  		}  	}'  	{  		'=''  		new FuncData () {  			Func = new Equal ()'  			Precedence = 1  		}  	}'  	{  		'&''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  	{  		'|''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  };  
Magic Number,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData> {  	{  		'+''  		new FuncData () {  			Func = new Sum ()'  			Precedence = 2  		}  	}'  	{  		'*''  		new FuncData () {  			Func = new Mul ()'  			Precedence = 3  		}  	}'  	{  		'-''  		new FuncData () {  			Func = new Sub ()'  			Precedence = 2  		}  	}'  	{  		'/''  		new FuncData () {  			Func = new Div ()'  			Precedence = 3  		}  	}'  	{  		'%''  		new FuncData () {  			Func = new Mod ()'  			Precedence = 3  		}  	}'  	{  		'^''  		new FuncData () {  			Func = new Pow ()'  			Precedence = 4  		}  	}'  	//comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  	{  		'>''  		new FuncData () {  			Func = new Greater ()'  			Precedence = 1  		}  	}'  	{  		'<''  		new FuncData () {  			Func = new Less ()'  			Precedence = 1  		}  	}'  	{  		'=''  		new FuncData () {  			Func = new Equal ()'  			Precedence = 1  		}  	}'  	{  		'&''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  	{  		'|''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  };  
Magic Number,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData> {  	{  		'+''  		new FuncData () {  			Func = new Sum ()'  			Precedence = 2  		}  	}'  	{  		'*''  		new FuncData () {  			Func = new Mul ()'  			Precedence = 3  		}  	}'  	{  		'-''  		new FuncData () {  			Func = new Sub ()'  			Precedence = 2  		}  	}'  	{  		'/''  		new FuncData () {  			Func = new Div ()'  			Precedence = 3  		}  	}'  	{  		'%''  		new FuncData () {  			Func = new Mod ()'  			Precedence = 3  		}  	}'  	{  		'^''  		new FuncData () {  			Func = new Pow ()'  			Precedence = 4  		}  	}'  	//comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  	{  		'>''  		new FuncData () {  			Func = new Greater ()'  			Precedence = 1  		}  	}'  	{  		'<''  		new FuncData () {  			Func = new Less ()'  			Precedence = 1  		}  	}'  	{  		'=''  		new FuncData () {  			Func = new Equal ()'  			Precedence = 1  		}  	}'  	{  		'&''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  	{  		'|''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  };  
Magic Number,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData> {  	{  		'+''  		new FuncData () {  			Func = new Sum ()'  			Precedence = 2  		}  	}'  	{  		'*''  		new FuncData () {  			Func = new Mul ()'  			Precedence = 3  		}  	}'  	{  		'-''  		new FuncData () {  			Func = new Sub ()'  			Precedence = 2  		}  	}'  	{  		'/''  		new FuncData () {  			Func = new Div ()'  			Precedence = 3  		}  	}'  	{  		'%''  		new FuncData () {  			Func = new Mod ()'  			Precedence = 3  		}  	}'  	{  		'^''  		new FuncData () {  			Func = new Pow ()'  			Precedence = 4  		}  	}'  	//comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  	{  		'>''  		new FuncData () {  			Func = new Greater ()'  			Precedence = 1  		}  	}'  	{  		'<''  		new FuncData () {  			Func = new Less ()'  			Precedence = 1  		}  	}'  	{  		'=''  		new FuncData () {  			Func = new Equal ()'  			Precedence = 1  		}  	}'  	{  		'&''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  	{  		'|''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  };  
Magic Number,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,SimpleParser,The following statement contains a magic number: _operators = new Dictionary<char' FuncData> {  	{  		'+''  		new FuncData () {  			Func = new Sum ()'  			Precedence = 2  		}  	}'  	{  		'*''  		new FuncData () {  			Func = new Mul ()'  			Precedence = 3  		}  	}'  	{  		'-''  		new FuncData () {  			Func = new Sub ()'  			Precedence = 2  		}  	}'  	{  		'/''  		new FuncData () {  			Func = new Div ()'  			Precedence = 3  		}  	}'  	{  		'%''  		new FuncData () {  			Func = new Mod ()'  			Precedence = 3  		}  	}'  	{  		'^''  		new FuncData () {  			Func = new Pow ()'  			Precedence = 4  		}  	}'  	//comparison ops can be used in both ways: as switches in expressions and as "main" ops of equalities and inequalities  	{  		'>''  		new FuncData () {  			Func = new Greater ()'  			Precedence = 1  		}  	}'  	{  		'<''  		new FuncData () {  			Func = new Less ()'  			Precedence = 1  		}  	}'  	{  		'=''  		new FuncData () {  			Func = new Equal ()'  			Precedence = 1  		}  	}'  	{  		'&''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  	{  		'|''  		new FuncData () {  			Func = new And ()'  			Precedence = 0  		}  	}'  };  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: if (!(cmd.NextInt (out wx) && cmd.NextInt (out wy) && cmd.NextInt (out height))) {  	if (player.World != null) {  		wx = 128;  		wy = 128;  		height = 128;  	} else {  		player.Message ("When used from console' /gen requires map dimensions.");  		return;  	}  	cmd.Rewind ();  	cmd.Next ();  	cmd.Next ();  }  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: if (!(cmd.NextInt (out wx) && cmd.NextInt (out wy) && cmd.NextInt (out height))) {  	if (player.World != null) {  		wx = 128;  		wy = 128;  		height = 128;  	} else {  		player.Message ("When used from console' /gen requires map dimensions.");  		return;  	}  	cmd.Rewind ();  	cmd.Next ();  	cmd.Next ();  }  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: if (!(cmd.NextInt (out wx) && cmd.NextInt (out wy) && cmd.NextInt (out height))) {  	if (player.World != null) {  		wx = 128;  		wy = 128;  		height = 128;  	} else {  		player.Message ("When used from console' /gen requires map dimensions.");  		return;  	}  	cmd.Rewind ();  	cmd.Next ();  	cmd.Next ();  }  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: if (player.World != null) {  	wx = 128;  	wy = 128;  	height = 128;  } else {  	player.Message ("When used from console' /gen requires map dimensions.");  	return;  }  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: if (player.World != null) {  	wx = 128;  	wy = 128;  	height = 128;  } else {  	player.Message ("When used from console' /gen requires map dimensions.");  	return;  }  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: if (player.World != null) {  	wx = 128;  	wy = 128;  	height = 128;  } else {  	player.Message ("When used from console' /gen requires map dimensions.");  	return;  }  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: wx = 128;  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: wy = 128;  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmCreate,The following statement contains a magic number: height = 128;  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following statement contains a magic number: do {  	if (name.Length < 2)  		continue;  	// Whitelisting individuals  	if (name.StartsWith ("+")) {  		PlayerInfo info;  		if (!PlayerDB.FindPlayerInfo (name.Substring (1)' out info)) {  			player.Message ("More than one player found matching \"{0}\""' name.Substring (1));  			continue;  		} else if (info == null) {  			player.MessageNoPlayer (name.Substring (1));  			continue;  		}  		// prevent players from whitelisting themselves to bypass protection  		if (realm.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.Allowed) {  			player.Message ("{0}&S is already allowed to access {1}&S (by rank)"' info.ClassyName' realm.ClassyName);  			continue;  		}  		Player target = info.PlayerObject;  		if (target == player)  			target = null;  		// to avoid duplicate messages  		switch (realm.AccessSecurity.Include (info)) {  		case PermissionOverride.Deny:  			if (realm.AccessSecurity.Check (info)) {  				player.Message ("{0}&S is unbanned from Realm {1}"' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("You are now unbanned from Realm {0}&S (removed from blacklist by {1}&S)."' realm.ClassyName' player.ClassyName);  				}  			} else {  				player.Message ("{0}&S was unbanned from Realm {1}&S. " + "Player is still NOT allowed to join (by rank)."' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("You were Unbanned from Realm {0}&S by {1}&S. " + "You are still NOT allowed to join (by rank)."' player.ClassyName' realm.ClassyName);  				}  			}  			Logger.Log (LogType.UserActivity' "{0} removed {1} from the access blacklist of {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		case PermissionOverride.None:  			player.Message ("{0}&S is now allowed to access {1}"' info.ClassyName' realm.ClassyName);  			if (target != null) {  				target.Message ("You can now access realm {0}&S (whitelisted by {1}&S)."' realm.ClassyName' player.ClassyName);  			}  			Logger.Log (LogType.UserActivity' "{0} added {1} to the access whitelist on realm {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		case PermissionOverride.Allow:  			player.Message ("{0}&S is already on the access whitelist of {1}"' info.ClassyName' realm.ClassyName);  			break;  		}  		// Blacklisting individuals  	} else if (name.StartsWith ("-")) {  		PlayerInfo info;  		if (!PlayerDB.FindPlayerInfo (name.Substring (1)' out info)) {  			player.Message ("More than one player found matching \"{0}\""' name.Substring (1));  			continue;  		} else if (info == null) {  			player.MessageNoPlayer (name.Substring (1));  			continue;  		}  		if (realm.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooHigh || realm.AccessSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooLow) {  			player.Message ("{0}&S is already barred from accessing {1}&S (by rank)"' info.ClassyName' realm.ClassyName);  			continue;  		}  		Player target = info.PlayerObject;  		if (target == player)  			target = null;  		// to avoid duplicate messages  		switch (realm.AccessSecurity.Exclude (info)) {  		case PermissionOverride.Deny:  			player.Message ("{0}&S is already banned from Realm {1}"' info.ClassyName' realm.ClassyName);  			break;  		case PermissionOverride.None:  			player.Message ("{0}&S is now banned from accessing {1}"' info.ClassyName' realm.ClassyName);  			if (target != null) {  				target.Message ("&WYou were banned by {0}&W from accessing realm {1}"' player.ClassyName' realm.ClassyName);  			}  			Logger.Log (LogType.UserActivity' "{0} added {1} to the access blacklist on realm {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		case PermissionOverride.Allow:  			if (realm.AccessSecurity.Check (info)) {  				player.Message ("{0}&S is no longer on the access whitelist of {1}&S. " + "Player is still allowed to join (by rank)."' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("You were banned from Realm {0}&S by {1}&S. " + "You are still allowed to join (by rank)."' player.ClassyName' realm.ClassyName);  				}  			} else {  				player.Message ("{0}&S is no longer allowed to access {1}"' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("&WYou were banned from Realm {0}&W (Banned by {1}&W)."' realm.ClassyName' player.ClassyName);  				}  			}  			Logger.Log (LogType.UserActivity' "{0} removed {1} from the access whitelist on realm {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		}  		// Setting minimum rank  	} else {  		Rank rank = RankManager.FindRank (name);  		if (rank == null) {  			player.MessageNoRank (name);  		} else {  			// list players who are redundantly blacklisted  			var exceptionList = realm.AccessSecurity.ExceptionList;  			PlayerInfo[] noLongerExcluded = exceptionList.Excluded.Where (excludedPlayer => excludedPlayer.Rank < rank).ToArray ();  			if (noLongerExcluded.Length > 0) {  				player.Message ("Following players no longer need to be blacklisted to be barred from {0}&S: {1}"' realm.ClassyName' noLongerExcluded.JoinToClassyString ());  			}  			// list players who are redundantly whitelisted  			PlayerInfo[] noLongerIncluded = exceptionList.Included.Where (includedPlayer => includedPlayer.Rank >= rank).ToArray ();  			if (noLongerIncluded.Length > 0) {  				player.Message ("Following players no longer need to be whitelisted to access {0}&S: {1}"' realm.ClassyName' noLongerIncluded.JoinToClassyString ());  			}  			// apply changes  			realm.AccessSecurity.MinRank = rank;  			changesWereMade = true;  			if (realm.AccessSecurity.MinRank == RankManager.LowestRank) {  				Server.Message ("{0}&S made the realm {1}&S accessible to everyone."' player.ClassyName' realm.ClassyName);  			} else {  				Server.Message ("{0}&S made the realm {1}&S accessible only by {2}+"' player.ClassyName' realm.ClassyName' realm.AccessSecurity.MinRank.ClassyName);  			}  			Logger.Log (LogType.UserActivity' "{0} set access rank for realm {1} to {2}+"' player.Name' realm.Name' realm.AccessSecurity.MinRank.Name);  		}  	}  } while ((name = cmd.Next ()) != null);  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following statement contains a magic number: if (name.Length < 2)  	continue;  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following statement contains a magic number: do {  	if (name.Length < 2)  		continue;  	// Whitelisting individuals  	if (name.StartsWith ("+")) {  		PlayerInfo info;  		if (!PlayerDB.FindPlayerInfo (name.Substring (1)' out info)) {  			player.Message ("More than one player found matching \"{0}\""' name.Substring (1));  			continue;  		} else if (info == null) {  			player.MessageNoPlayer (name.Substring (1));  			continue;  		}  		if (realm.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.Allowed) {  			player.Message ("{0}&S is already allowed to build in {1}&S (by rank)"' info.ClassyName' realm.ClassyName);  			continue;  		}  		Player target = info.PlayerObject;  		if (target == player)  			target = null;  		// to avoid duplicate messages  		switch (realm.BuildSecurity.Include (info)) {  		case PermissionOverride.Deny:  			if (realm.BuildSecurity.Check (info)) {  				player.Message ("{0}&S is no longer barred from building in {1}"' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("You can now build in realm {0}&S (removed from blacklist by {1}&S)."' realm.ClassyName' player.ClassyName);  				}  			} else {  				player.Message ("{0}&S was removed from the build blacklist of {1}&S. " + "Player is still NOT allowed to build (by rank)."' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("You were removed from the build blacklist of realm {0}&S by {1}&S. " + "You are still NOT allowed to build (by rank)."' player.ClassyName' realm.ClassyName);  				}  			}  			Logger.Log (LogType.UserActivity' "{0} removed {1} from the build blacklist of {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		case PermissionOverride.None:  			player.Message ("{0}&S is now allowed to build in {1}"' info.ClassyName' realm.ClassyName);  			if (target != null) {  				target.Message ("You can now build in realm {0}&S (whitelisted by {1}&S)."' realm.ClassyName' player.ClassyName);  			}  			Logger.Log (LogType.UserActivity' "{0} added {1} to the build whitelist on realm {2}"' player.Name' info.Name' realm.Name);  			break;  		case PermissionOverride.Allow:  			player.Message ("{0}&S is already on the build whitelist of {1}"' info.ClassyName' realm.ClassyName);  			break;  		}  		// Blacklisting individuals  	} else if (name.StartsWith ("-")) {  		PlayerInfo info;  		if (!PlayerDB.FindPlayerInfo (name.Substring (1)' out info)) {  			player.Message ("More than one player found matching \"{0}\""' name.Substring (1));  			continue;  		} else if (info == null) {  			player.MessageNoPlayer (name.Substring (1));  			continue;  		}  		if (realm.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooHigh || realm.BuildSecurity.CheckDetailed (info) == SecurityCheckResult.RankTooLow) {  			player.Message ("{0}&S is already barred from building in {1}&S (by rank)"' info.ClassyName' realm.ClassyName);  			continue;  		}  		Player target = info.PlayerObject;  		if (target == player)  			target = null;  		// to avoid duplicate messages  		switch (realm.BuildSecurity.Exclude (info)) {  		case PermissionOverride.Deny:  			player.Message ("{0}&S is already on build blacklist of {1}"' info.ClassyName' realm.ClassyName);  			break;  		case PermissionOverride.None:  			player.Message ("{0}&S is now barred from building in {1}"' info.ClassyName' realm.ClassyName);  			if (target != null) {  				target.Message ("&WYou were barred by {0}&W from building in realm {1}"' player.ClassyName' realm.ClassyName);  			}  			Logger.Log (LogType.UserActivity' "{0} added {1} to the build blacklist on realm {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		case PermissionOverride.Allow:  			if (realm.BuildSecurity.Check (info)) {  				player.Message ("{0}&S is no longer on the build whitelist of {1}&S. " + "Player is still allowed to build (by rank)."' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("You were removed from the build whitelist of realm {0}&S by {1}&S. " + "You are still allowed to build (by rank)."' player.ClassyName' realm.ClassyName);  				}  			} else {  				player.Message ("{0}&S is no longer allowed to build in {1}"' info.ClassyName' realm.ClassyName);  				if (target != null) {  					target.Message ("&WYou can no longer build in realm {0}&W (removed from whitelist by {1}&W)."' realm.ClassyName' player.ClassyName);  				}  			}  			Logger.Log (LogType.UserActivity' "{0} removed {1} from the build whitelist on realm {2}"' player.Name' info.Name' realm.Name);  			changesWereMade = true;  			break;  		}  		// Setting minimum rank  	} else {  		Rank rank = RankManager.FindRank (name);  		if (rank == null) {  			player.MessageNoRank (name);  		} else if (!player.Info.Rank.AllowSecurityCircumvention && realm.BuildSecurity.MinRank > rank && realm.BuildSecurity.MinRank > player.Info.Rank) {  			player.Message ("&WYou must be ranked {0}&W+ to lower build restrictions for realm {1}"' realm.BuildSecurity.MinRank.ClassyName' realm.ClassyName);  		} else {  			// list players who are redundantly blacklisted  			var exceptionList = realm.BuildSecurity.ExceptionList;  			PlayerInfo[] noLongerExcluded = exceptionList.Excluded.Where (excludedPlayer => excludedPlayer.Rank < rank).ToArray ();  			if (noLongerExcluded.Length > 0) {  				player.Message ("Following players no longer need to be blacklisted on realm {0}&S: {1}"' realm.ClassyName' noLongerExcluded.JoinToClassyString ());  			}  			// list players who are redundantly whitelisted  			PlayerInfo[] noLongerIncluded = exceptionList.Included.Where (includedPlayer => includedPlayer.Rank >= rank).ToArray ();  			if (noLongerIncluded.Length > 0) {  				player.Message ("Following players no longer need to be whitelisted on realm {0}&S: {1}"' realm.ClassyName' noLongerIncluded.JoinToClassyString ());  			}  			// apply changes  			realm.BuildSecurity.MinRank = rank;  			changesWereMade = true;  			if (realm.BuildSecurity.MinRank == RankManager.LowestRank) {  				Server.Message ("{0}&S allowed anyone to build on realm {1}"' player.ClassyName' realm.ClassyName);  			} else {  				Server.Message ("{0}&S allowed only {1}+&S to build in realm {2}"' player.ClassyName' realm.BuildSecurity.MinRank.ClassyName' realm.ClassyName);  			}  			Logger.Log (LogType.UserActivity' "{0} set build rank for realm {1} to {2}+"' player.Name' realm.Name' realm.BuildSecurity.MinRank.Name);  		}  	}  } while ((name = cmd.Next ()) != null);  
Magic Number,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following statement contains a magic number: if (name.Length < 2)  	continue;  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch (option) {  default:  	if (VoteIsOn) {  		if (VoteKickReason == null) {  			player.Message ("Last Question: {0}&C asked: {1}"' VoteStarter' Question);  			player.Message (Usage);  			return;  		} else  			player.Message ("Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason);  		player.Message (Usage);  		return;  	} else  		player.Message (option);  	break;  case "abort":  case "stop":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have Permission to abort votes");  		return;  	}  	VoteIsOn = false;  	foreach (Player V in Voted) {  		if (V.Info.HasVoted)  			V.Info.HasVoted = false;  		V.Message ("Your vote was cancelled");  	}  	Voted.Clear ();  	TargetName = null;  	Server.Players.Message ("{0} &Saborted the vote."' player.ClassyName);  	break;  case "yes":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	Voted.Add (player);  	VotedYes++;  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'Yes'");  	break;  case "kick":  	string toKick = cmd.Next ();  	string Reason = cmd.NextAll ();  	VoteKickReason = Reason;  	if (toKick == null) {  		player.Message ("Target cannot be empty. " + Usage);  		return;  	}  	Player target = Server.FindPlayerOrPrintMatches (player' toKick' false' true);  	if (target == null) {  		// FIX: Target is null when no such player is online' this caused crashes  		return;  	}  	if (!Player.IsValidName (target.Name)) {  		return;  	}  	if (!player.Can (Permission.MakeVoteKicks)) {  		player.Message ("You do not have permissions to start a VoteKick");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (VoteKickReason.Length < 3) {  		player.Message ("Invalid reason");  		return;  	}  	if (target == player) {  		player.Message ("You cannot VoteKick yourself' lol");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		TargetName = target.Name;  		if (!Player.IsValidName (TargetName)) {  			player.Message ("Invalid name");  			return;  		}  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName);  		Server.Players.Message ("&WReason: {0}"' VoteKickReason);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Logger.Log (LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason);  		Thread.Sleep (60000);  		VoteKickCheck ();  	}));  	VoteThread.Start ();  	break;  case "no":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	VotedNo++;  	Voted.Add (player);  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'No'");  	break;  case "ask":  	string AskQuestion = cmd.NextAll ();  	Question = AskQuestion;  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have permissions to ask a question");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (Question.Length < 5) {  		player.Message ("Invalid question");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S Asked: {1}"' player.ClassyName' Question);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Thread.Sleep (60000);  		VoteCheck ();  	}));  	VoteThread.Start ();  	break;  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch (option) {  default:  	if (VoteIsOn) {  		if (VoteKickReason == null) {  			player.Message ("Last Question: {0}&C asked: {1}"' VoteStarter' Question);  			player.Message (Usage);  			return;  		} else  			player.Message ("Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason);  		player.Message (Usage);  		return;  	} else  		player.Message (option);  	break;  case "abort":  case "stop":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have Permission to abort votes");  		return;  	}  	VoteIsOn = false;  	foreach (Player V in Voted) {  		if (V.Info.HasVoted)  			V.Info.HasVoted = false;  		V.Message ("Your vote was cancelled");  	}  	Voted.Clear ();  	TargetName = null;  	Server.Players.Message ("{0} &Saborted the vote."' player.ClassyName);  	break;  case "yes":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	Voted.Add (player);  	VotedYes++;  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'Yes'");  	break;  case "kick":  	string toKick = cmd.Next ();  	string Reason = cmd.NextAll ();  	VoteKickReason = Reason;  	if (toKick == null) {  		player.Message ("Target cannot be empty. " + Usage);  		return;  	}  	Player target = Server.FindPlayerOrPrintMatches (player' toKick' false' true);  	if (target == null) {  		// FIX: Target is null when no such player is online' this caused crashes  		return;  	}  	if (!Player.IsValidName (target.Name)) {  		return;  	}  	if (!player.Can (Permission.MakeVoteKicks)) {  		player.Message ("You do not have permissions to start a VoteKick");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (VoteKickReason.Length < 3) {  		player.Message ("Invalid reason");  		return;  	}  	if (target == player) {  		player.Message ("You cannot VoteKick yourself' lol");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		TargetName = target.Name;  		if (!Player.IsValidName (TargetName)) {  			player.Message ("Invalid name");  			return;  		}  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName);  		Server.Players.Message ("&WReason: {0}"' VoteKickReason);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Logger.Log (LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason);  		Thread.Sleep (60000);  		VoteKickCheck ();  	}));  	VoteThread.Start ();  	break;  case "no":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	VotedNo++;  	Voted.Add (player);  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'No'");  	break;  case "ask":  	string AskQuestion = cmd.NextAll ();  	Question = AskQuestion;  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have permissions to ask a question");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (Question.Length < 5) {  		player.Message ("Invalid question");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S Asked: {1}"' player.ClassyName' Question);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Thread.Sleep (60000);  		VoteCheck ();  	}));  	VoteThread.Start ();  	break;  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch (option) {  default:  	if (VoteIsOn) {  		if (VoteKickReason == null) {  			player.Message ("Last Question: {0}&C asked: {1}"' VoteStarter' Question);  			player.Message (Usage);  			return;  		} else  			player.Message ("Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason);  		player.Message (Usage);  		return;  	} else  		player.Message (option);  	break;  case "abort":  case "stop":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have Permission to abort votes");  		return;  	}  	VoteIsOn = false;  	foreach (Player V in Voted) {  		if (V.Info.HasVoted)  			V.Info.HasVoted = false;  		V.Message ("Your vote was cancelled");  	}  	Voted.Clear ();  	TargetName = null;  	Server.Players.Message ("{0} &Saborted the vote."' player.ClassyName);  	break;  case "yes":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	Voted.Add (player);  	VotedYes++;  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'Yes'");  	break;  case "kick":  	string toKick = cmd.Next ();  	string Reason = cmd.NextAll ();  	VoteKickReason = Reason;  	if (toKick == null) {  		player.Message ("Target cannot be empty. " + Usage);  		return;  	}  	Player target = Server.FindPlayerOrPrintMatches (player' toKick' false' true);  	if (target == null) {  		// FIX: Target is null when no such player is online' this caused crashes  		return;  	}  	if (!Player.IsValidName (target.Name)) {  		return;  	}  	if (!player.Can (Permission.MakeVoteKicks)) {  		player.Message ("You do not have permissions to start a VoteKick");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (VoteKickReason.Length < 3) {  		player.Message ("Invalid reason");  		return;  	}  	if (target == player) {  		player.Message ("You cannot VoteKick yourself' lol");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		TargetName = target.Name;  		if (!Player.IsValidName (TargetName)) {  			player.Message ("Invalid name");  			return;  		}  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName);  		Server.Players.Message ("&WReason: {0}"' VoteKickReason);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Logger.Log (LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason);  		Thread.Sleep (60000);  		VoteKickCheck ();  	}));  	VoteThread.Start ();  	break;  case "no":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	VotedNo++;  	Voted.Add (player);  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'No'");  	break;  case "ask":  	string AskQuestion = cmd.NextAll ();  	Question = AskQuestion;  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have permissions to ask a question");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (Question.Length < 5) {  		player.Message ("Invalid question");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S Asked: {1}"' player.ClassyName' Question);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Thread.Sleep (60000);  		VoteCheck ();  	}));  	VoteThread.Start ();  	break;  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: switch (option) {  default:  	if (VoteIsOn) {  		if (VoteKickReason == null) {  			player.Message ("Last Question: {0}&C asked: {1}"' VoteStarter' Question);  			player.Message (Usage);  			return;  		} else  			player.Message ("Last VoteKick: &CA VoteKick has started for {0}&C' reason: {1}"' TargetName' VoteKickReason);  		player.Message (Usage);  		return;  	} else  		player.Message (option);  	break;  case "abort":  case "stop":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have Permission to abort votes");  		return;  	}  	VoteIsOn = false;  	foreach (Player V in Voted) {  		if (V.Info.HasVoted)  			V.Info.HasVoted = false;  		V.Message ("Your vote was cancelled");  	}  	Voted.Clear ();  	TargetName = null;  	Server.Players.Message ("{0} &Saborted the vote."' player.ClassyName);  	break;  case "yes":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	Voted.Add (player);  	VotedYes++;  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'Yes'");  	break;  case "kick":  	string toKick = cmd.Next ();  	string Reason = cmd.NextAll ();  	VoteKickReason = Reason;  	if (toKick == null) {  		player.Message ("Target cannot be empty. " + Usage);  		return;  	}  	Player target = Server.FindPlayerOrPrintMatches (player' toKick' false' true);  	if (target == null) {  		// FIX: Target is null when no such player is online' this caused crashes  		return;  	}  	if (!Player.IsValidName (target.Name)) {  		return;  	}  	if (!player.Can (Permission.MakeVoteKicks)) {  		player.Message ("You do not have permissions to start a VoteKick");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (VoteKickReason.Length < 3) {  		player.Message ("Invalid reason");  		return;  	}  	if (target == player) {  		player.Message ("You cannot VoteKick yourself' lol");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		TargetName = target.Name;  		if (!Player.IsValidName (TargetName)) {  			player.Message ("Invalid name");  			return;  		}  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName);  		Server.Players.Message ("&WReason: {0}"' VoteKickReason);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Logger.Log (LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason);  		Thread.Sleep (60000);  		VoteKickCheck ();  	}));  	VoteThread.Start ();  	break;  case "no":  	if (!VoteIsOn) {  		player.Message ("No vote is currently running");  		return;  	}  	if (player.Info.HasVoted) {  		player.Message ("&CYou have already voted");  		return;  	}  	VotedNo++;  	Voted.Add (player);  	player.Info.HasVoted = true;  	player.Message ("&8You have voted for 'No'");  	break;  case "ask":  	string AskQuestion = cmd.NextAll ();  	Question = AskQuestion;  	if (!player.Can (Permission.MakeVotes)) {  		player.Message ("You do not have permissions to ask a question");  		return;  	}  	if (VoteIsOn) {  		player.Message ("A vote has already started. Each vote lasts 1 minute.");  		return;  	}  	if (Question.Length < 5) {  		player.Message ("Invalid question");  		return;  	}  	VoteThread = new Thread (new ThreadStart (delegate {  		NewVote ();  		VoteStarter = player.ClassyName;  		Server.Players.Message ("{0}&S Asked: {1}"' player.ClassyName' Question);  		Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  		VoteIsOn = true;  		Thread.Sleep (60000);  		VoteCheck ();  	}));  	VoteThread.Start ();  	break;  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: if (VoteKickReason.Length < 3) {  	player.Message ("Invalid reason");  	return;  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: VoteThread = new Thread (new ThreadStart (delegate {  	TargetName = target.Name;  	if (!Player.IsValidName (TargetName)) {  		player.Message ("Invalid name");  		return;  	}  	NewVote ();  	VoteStarter = player.ClassyName;  	Server.Players.Message ("{0}&S started a VoteKick for player: {1}"' player.ClassyName' target.ClassyName);  	Server.Players.Message ("&WReason: {0}"' VoteKickReason);  	Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  	VoteIsOn = true;  	Logger.Log (LogType.SystemActivity' "{0} started a votekick on player {1} reason: {2}"' player.Name' target.Name' VoteKickReason);  	Thread.Sleep (60000);  	VoteKickCheck ();  }));  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: Thread.Sleep (60000);  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: if (Question.Length < 5) {  	player.Message ("Invalid question");  	return;  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: VoteThread = new Thread (new ThreadStart (delegate {  	NewVote ();  	VoteStarter = player.ClassyName;  	Server.Players.Message ("{0}&S Asked: {1}"' player.ClassyName' Question);  	Server.Players.Message ("&9Vote now! &S/Vote &AYes &Sor /Vote &CNo");  	VoteIsOn = true;  	Thread.Sleep (60000);  	VoteCheck ();  }));  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteParams,The following statement contains a magic number: Thread.Sleep (60000);  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The following statement contains a magic number: if (VoteIsOn) {  	Server.Players.Message ("{0}&S wanted to get {1} kicked. Reason: {2} \n&SResults are in! Yes: &A{3} &SNo: &C{4}"' VoteStarter' TargetName' VoteKickReason' VotedYes' VotedNo);  	Player target = null;  	try {  		target = Server.FindPlayerOrPrintMatches (Player.Console' TargetName' true' true);  	} catch (Exception ex) {  		// Log exception  		Logger.Log (LogType.Error' ex.Message);  		// Notify users  		Server.Message ("Unexpected error while trying to execute votekick");  		// Unable to find target so quit.  		VoteIsOn = false;  		TargetName = null;  		return;  	}  	if (target == null) {  		Server.Message ("{0}&S is offline"' target.ClassyName);  		return;  	} else if (VotedYes > VotedNo) {  		Scheduler.NewTask (t => target.Kick (Player.Console' "VoteKick by: " + VoteStarter + " - " + VoteKickReason' LeaveReason.Kick' false' true' false)).RunOnce (TimeSpan.FromSeconds (3));  		Server.Players.Message ("{0}&S was kicked from the server"' target.ClassyName);  	} else  		Server.Players.Message ("{0} &Sdid not get kicked from the server"' target.ClassyName);  	VoteIsOn = false;  	TargetName = null;  	foreach (Player V in Voted) {  		V.Info.HasVoted = false;  	}  }  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The following statement contains a magic number: if (target == null) {  	Server.Message ("{0}&S is offline"' target.ClassyName);  	return;  } else if (VotedYes > VotedNo) {  	Scheduler.NewTask (t => target.Kick (Player.Console' "VoteKick by: " + VoteStarter + " - " + VoteKickReason' LeaveReason.Kick' false' true' false)).RunOnce (TimeSpan.FromSeconds (3));  	Server.Players.Message ("{0}&S was kicked from the server"' target.ClassyName);  } else  	Server.Players.Message ("{0} &Sdid not get kicked from the server"' target.ClassyName);  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The following statement contains a magic number: if (VotedYes > VotedNo) {  	Scheduler.NewTask (t => target.Kick (Player.Console' "VoteKick by: " + VoteStarter + " - " + VoteKickReason' LeaveReason.Kick' false' true' false)).RunOnce (TimeSpan.FromSeconds (3));  	Server.Players.Message ("{0}&S was kicked from the server"' target.ClassyName);  } else  	Server.Players.Message ("{0} &Sdid not get kicked from the server"' target.ClassyName);  
Magic Number,fCraft,VoteHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\VoteHandler.cs,VoteKickCheck,The following statement contains a magic number: Scheduler.NewTask (t => target.Kick (Player.Console' "VoteKick by: " + VoteStarter + " - " + VoteKickReason' LeaveReason.Kick' false' true' false)).RunOnce (TimeSpan.FromSeconds (3));  
Magic Number,fCraft,CommandManager,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\CommandManager.cs,IsValidCommandName,The following statement contains a magic number: if (name.Length == 0 || name.Length > 16)  	return false;  
Magic Number,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = -_r.NextDouble () + -player.Position.L * 2 * Math.PI;  	double ksi = -_r.NextDouble () + player.Position.R * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	world.AddPhysicsTask (new Particle (world' (pos1 + 2 * direction).Round ()' direction' player' Block.Obsidian' particleBehavior)' 0);  }  
Magic Number,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = -_r.NextDouble () + -player.Position.L * 2 * Math.PI;  	double ksi = -_r.NextDouble () + player.Position.R * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	world.AddPhysicsTask (new Particle (world' (pos1 + 2 * direction).Round ()' direction' player' Block.Obsidian' particleBehavior)' 0);  }  
Magic Number,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = -_r.NextDouble () + -player.Position.L * 2 * Math.PI;  	double ksi = -_r.NextDouble () + player.Position.R * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	world.AddPhysicsTask (new Particle (world' (pos1 + 2 * direction).Round ()' direction' player' Block.Obsidian' particleBehavior)' 0);  }  
Magic Number,fCraft,DevCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\DevCommands.cs,SpellHandler,The following statement contains a magic number: world.AddPhysicsTask (new Particle (world' (pos1 + 2 * direction).Round ()' direction' player' Block.Obsidian' particleBehavior)' 0);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The following statement contains a magic number: if (Names.Length <= 15) {  	MessageManyMatches (player' Names);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= Names.Length)  		offset = Math.Max (0' Names.Length - 15);  	PlayerInfo[] Part = Names.Skip (offset).Take (15).ToArray ();  	MessageManyMatches (player' Part);  	if (offset + Part.Length < Names.Length) {  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Whois {3} {4}"' offset + 1' offset + Part.Length' Names.Length' Name' offset + Part.Length);  	} else {  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + Part.Length' Names.Length);  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The following statement contains a magic number: if (Names.Length <= 15) {  	MessageManyMatches (player' Names);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= Names.Length)  		offset = Math.Max (0' Names.Length - 15);  	PlayerInfo[] Part = Names.Skip (offset).Take (15).ToArray ();  	MessageManyMatches (player' Part);  	if (offset + Part.Length < Names.Length) {  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Whois {3} {4}"' offset + 1' offset + Part.Length' Names.Length' Name' offset + Part.Length);  	} else {  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + Part.Length' Names.Length);  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The following statement contains a magic number: if (Names.Length <= 15) {  	MessageManyMatches (player' Names);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= Names.Length)  		offset = Math.Max (0' Names.Length - 15);  	PlayerInfo[] Part = Names.Skip (offset).Take (15).ToArray ();  	MessageManyMatches (player' Part);  	if (offset + Part.Length < Names.Length) {  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/Whois {3} {4}"' offset + 1' offset + Part.Length' Names.Length' Name' offset + Part.Length);  	} else {  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + Part.Length' Names.Length);  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The following statement contains a magic number: if (offset >= Names.Length)  	offset = Math.Max (0' Names.Length - 15);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,WhoIsHandler,The following statement contains a magic number: offset = Math.Max (0' Names.Length - 15);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: switch (Option.ToLower ()) {  default:  	CdList.PrintUsage (player);  	player.Message ("  Sections include: Staff' DisplayedNames' Idles' Portals' Rank' Top10' Emotes");  	break;  case "emotes":  	const string Usage = "Shows a list of all available emotes and their keywords. " + "There are 31 emotes' spanning 3 pages. Use &h/List emotes 2&s and &h/List emotes 3&s to see pages 2 and 3.";  	int page = 1;  	if (cmd.HasNext) {  		if (!cmd.NextInt (out page)) {  			player.Message (Usage);  			return;  		}  	}  	if (page < 1 || page > 3) {  		player.Message (Usage);  		return;  	}  	var emoteChars = Chat.EmoteKeywords.Values.Distinct ().Skip ((page - 1) * 11).Take (11);  	player.Message ("List of emotes' page {0} of 3:"' page);  	foreach (char ch in emoteChars) {  		char ch1 = ch;  		string keywords = Chat.EmoteKeywords.Where (pair => pair.Value == ch1).Select (kvp => "{&F" + kvp.Key.UppercaseFirst () + "&7}").JoinToString (" ");  		player.Message ("&F  {0} &7= {1}"' ch' keywords);  	}  	if (page < 3)  		player.Message ("Type /List Emotes {0} for the next page"' page + 1);  	break;  case "top10":  	List<World> WorldNames = new List<World> (WorldManager.Worlds.Where (w => w.VisitCount > 0).OrderBy (c => c.VisitCount).ToArray ().Reverse ());  	string list = WorldNames.Take (10).JoinToString (w => String.Format ("{0}&S: {1}"' w.ClassyName' w.VisitCount));  	if (WorldNames.Count () < 1) {  		player.Message ("&WNo results found");  		return;  	}  	player.Message ("&WShowing worlds with the most visits: " + list);  	WorldNames.Clear ();  	break;  case "idles":  case "idle":  	var Idles = Server.Players.Where (p => p.IdleTime.TotalMinutes > 5).ToArray ();  	var visiblePlayers = Idles.Where (player.CanSee);  	if (visiblePlayers.Count () > 0)  		player.Message ("Listing players idle for 5 mins or more: {0}"' visiblePlayers.JoinToString (r => String.Format ("{0}&S (Idle {1}"' r.ClassyName' r.IdleTime.ToMiniString ())));  	else  		player.Message ("No players have been idle for more than 5 minutes");  	break;  case "portals":  	if (player.World == null) {  		player.Message ("/List portals cannot be used from Console");  		return;  	}  	if (player.World.Map.Portals == null || player.World.Map.Portals.Count == 0) {  		player.Message ("There are no portals in {0}&S."' player.World.ClassyName);  	} else {  		String[] portalNames = new String[player.World.Map.Portals.Count];  		StringBuilder output = new StringBuilder ("There are " + player.World.Map.Portals.Count + " portals in " + player.World.ClassyName + "&S: ");  		for (int i = 0; i < player.World.Map.Portals.Count; i++) {  			portalNames [i] = ((fCraft.Portals.Portal)player.World.Map.Portals [i]).Name;  		}  		output.Append (portalNames.JoinToString ("' "));  		player.Message (output.ToString ());  	}  	break;  case "staff":  	var StaffNames = PlayerDB.PlayerInfoList.Where (r => r.Rank.Can (Permission.ReadStaffChat) && r.Rank.Can (Permission.Ban) && r.Rank.Can (Permission.Promote)).OrderBy (p => p.Rank).ToArray ();  	if (StaffNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (StaffNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("staff"' StaffNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= StaffNames.Length)  			offset = Math.Max (0' StaffNames.Length - PlayersPerPage);  		PlayerInfo[] StaffPart = StaffNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("staff"' StaffPart);  		if (offset + StaffPart.Length < StaffNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + StaffPart.Length' StaffNames.Length' "staff"' offset + StaffPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + StaffPart.Length' StaffNames.Length);  	}  	break;  case "rank":  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("Usage: /List rank rankName");  		return;  	}  	Rank rank = RankManager.FindRank (rankName);  	var RankNames = PlayerDB.PlayerInfoList.Where (r => r.Rank == rank).ToArray ();  	if (RankNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (RankNames.Length <= PlayersPerPage) {  		player.MessageManyMatches ("players"' RankNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= RankNames.Length)  			offset = Math.Max (0' RankNames.Length - PlayersPerPage);  		PlayerInfo[] RankPart = RankNames.Skip (offset).Take (PlayersPerPage).ToArray ();  		player.MessageManyMatches ("rank list"' RankPart);  		if (offset + RankPart.Length < RankNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + RankPart.Length' RankNames.Length' "rank " + rank.ClassyName' offset + RankPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + RankPart.Length' RankNames.Length);  	}  	break;  case "displayednames":  case "displayedname":  case "dn":  	var DisplayedNames = PlayerDB.PlayerInfoList.Where (r => r.DisplayedName != null).OrderBy (p => p.Rank).ToArray ();  	if (DisplayedNames.Length < 1) {  		player.Message ("&WNo results found");  		return;  	}  	if (DisplayedNames.Length <= 15) {  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= DisplayedNames.Count ())  			offset = Math.Max (0' DisplayedNames.Length - 15);  		PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  		player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  		if (offset + DisplayedNames.Length < DisplayedNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  	}  	break;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: if (page < 1 || page > 3) {  	player.Message (Usage);  	return;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: if (page < 3)  	player.Message ("Type /List Emotes {0} for the next page"' page + 1);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: if (DisplayedNames.Length <= 15) {  	player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= DisplayedNames.Count ())  		offset = Math.Max (0' DisplayedNames.Length - 15);  	PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  	player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  	if (offset + DisplayedNames.Length < DisplayedNames.Length)  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  	else  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: if (DisplayedNames.Length <= 15) {  	player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= DisplayedNames.Count ())  		offset = Math.Max (0' DisplayedNames.Length - 15);  	PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  	player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  	if (offset + DisplayedNames.Length < DisplayedNames.Length)  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  	else  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: if (DisplayedNames.Length <= 15) {  	player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DisplayedNames);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= DisplayedNames.Count ())  		offset = Math.Max (0' DisplayedNames.Length - 15);  	PlayerInfo[] DnPart = DisplayedNames.Skip (offset).Take (15).ToArray ();  	player.MessageManyDisplayedNamesMatches ("DisplayedNames"' DnPart);  	if (offset + DisplayedNames.Length < DisplayedNames.Length)  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + DnPart.Length' DisplayedNames.Length' "DisplayedNames"' offset + DnPart.Length);  	else  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + DnPart.Length' DisplayedNames.Length);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: if (offset >= DisplayedNames.Count ())  	offset = Math.Max (0' DisplayedNames.Length - 15);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ListHandler,The following statement contains a magic number: offset = Math.Max (0' DisplayedNames.Length - 15);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The following statement contains a magic number: if (name.Contains ("/")) {  	// IP range matching (CIDR notation)  	string ipString = name.Substring (0' name.IndexOf ('/'));  	string rangeString = name.Substring (name.IndexOf ('/') + 1);  	byte range;  	if (Server.IsIP (ipString) && IPAddress.TryParse (ipString' out ip) && Byte.TryParse (rangeString' out range) && range <= 32) {  		player.Message ("Searching {0}-{1}"' ip.RangeMin (range)' ip.RangeMax (range));  		infos = PlayerDB.FindPlayersCidr (ip' range);  	} else {  		player.Message ("Info: Invalid IP range format. Use CIDR notation.");  		return;  	}  } else if (Server.IsIP (name) && IPAddress.TryParse (name' out ip)) {  	// find players by IP  	infos = PlayerDB.FindPlayers (ip);  } else if (name.Contains ("*") || name.Contains ("?")) {  	// find players by regex/wildcard  	string regexString = "^" + RegexNonNameChars.Replace (name' "").Replace ("*"' ".*").Replace ("?"' ".") + "$";  	Regex regex = new Regex (regexString' RegexOptions.IgnoreCase | RegexOptions.Compiled);  	infos = PlayerDB.FindPlayers (regex);  } else {  	// find players by partial matching  	PlayerInfo tempInfo;  	if (!PlayerDB.FindPlayerInfo (name' out tempInfo)) {  		infos = PlayerDB.FindPlayers (name);  	} else if (tempInfo == null) {  		player.MessageNoPlayer (name);  		return;  	} else {  		infos = new[] {  			tempInfo  		};  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,InfoHandler,The following statement contains a magic number: if (Server.IsIP (ipString) && IPAddress.TryParse (ipString' out ip) && Byte.TryParse (rangeString' out range) && range <= 32) {  	player.Message ("Searching {0}-{1}"' ip.RangeMin (range)' ip.RangeMax (range));  	infos = PlayerDB.FindPlayersCidr (ip' range);  } else {  	player.Message ("Info: Invalid IP range format. Use CIDR notation.");  	return;  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.LastIP.Equals (IPAddress.None)) {  	player.Message ("About {0}&S: Never seen before."' info.ClassyName);  } else {  	if (target != null) {  		TimeSpan idle = target.IdleTime;  		if (info.IsHidden) {  			if (idle.TotalMinutes > 2) {  				if (player.Can (Permission.ViewPlayerIPs)) {  					player.Message ("About {0}&S: HIDDEN from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  				} else {  					player.Message ("About {0}&S: HIDDEN (idle {1})"' info.ClassyName' idle.ToMiniString ());  				}  			} else {  				if (player.Can (Permission.ViewPlayerIPs)) {  					player.Message ("About {0}&S: HIDDEN. Online from {1}"' info.ClassyName' info.LastIP);  				} else {  					player.Message ("About {0}&S: HIDDEN."' info.ClassyName);  				}  			}  		} else {  			if (idle.TotalMinutes > 1) {  				if (player.Can (Permission.ViewPlayerIPs)) {  					player.Message ("About {0}&S: Online now from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  				} else {  					player.Message ("About {0}&S: Online now (idle {1})"' info.ClassyName' idle.ToMiniString ());  				}  			} else {  				if (player.Can (Permission.ViewPlayerIPs)) {  					player.Message ("About {0}&S: Online now from {1}"' info.ClassyName' info.LastIP);  				} else {  					player.Message ("About {0}&S: Online now."' info.ClassyName);  				}  			}  		}  	} else {  		if (player.Can (Permission.ViewPlayerIPs)) {  			if (info.LeaveReason != LeaveReason.Unknown) {  				player.Message ("About {0}&S: Last seen {1} ago from {2} ({3})."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LastIP' info.LeaveReason);  			} else {  				player.Message ("About {0}&S: Last seen {1} ago from {2}."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LastIP);  			}  		} else {  			if (info.LeaveReason != LeaveReason.Unknown) {  				player.Message ("About {0}&S: Last seen {1} ago ({2})."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LeaveReason);  			} else {  				player.Message ("About {0}&S: Last seen {1} ago."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ());  			}  		}  	}  	// Show login information  	player.Message ("  Logged in {0} time(s) since {1:d MMM yyyy}."' info.TimesVisited' info.FirstLoginDate);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (target != null) {  	TimeSpan idle = target.IdleTime;  	if (info.IsHidden) {  		if (idle.TotalMinutes > 2) {  			if (player.Can (Permission.ViewPlayerIPs)) {  				player.Message ("About {0}&S: HIDDEN from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  			} else {  				player.Message ("About {0}&S: HIDDEN (idle {1})"' info.ClassyName' idle.ToMiniString ());  			}  		} else {  			if (player.Can (Permission.ViewPlayerIPs)) {  				player.Message ("About {0}&S: HIDDEN. Online from {1}"' info.ClassyName' info.LastIP);  			} else {  				player.Message ("About {0}&S: HIDDEN."' info.ClassyName);  			}  		}  	} else {  		if (idle.TotalMinutes > 1) {  			if (player.Can (Permission.ViewPlayerIPs)) {  				player.Message ("About {0}&S: Online now from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  			} else {  				player.Message ("About {0}&S: Online now (idle {1})"' info.ClassyName' idle.ToMiniString ());  			}  		} else {  			if (player.Can (Permission.ViewPlayerIPs)) {  				player.Message ("About {0}&S: Online now from {1}"' info.ClassyName' info.LastIP);  			} else {  				player.Message ("About {0}&S: Online now."' info.ClassyName);  			}  		}  	}  } else {  	if (player.Can (Permission.ViewPlayerIPs)) {  		if (info.LeaveReason != LeaveReason.Unknown) {  			player.Message ("About {0}&S: Last seen {1} ago from {2} ({3})."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LastIP' info.LeaveReason);  		} else {  			player.Message ("About {0}&S: Last seen {1} ago from {2}."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LastIP);  		}  	} else {  		if (info.LeaveReason != LeaveReason.Unknown) {  			player.Message ("About {0}&S: Last seen {1} ago ({2})."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ()' info.LeaveReason);  		} else {  			player.Message ("About {0}&S: Last seen {1} ago."' info.ClassyName' info.TimeSinceLastSeen.ToMiniString ());  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.IsHidden) {  	if (idle.TotalMinutes > 2) {  		if (player.Can (Permission.ViewPlayerIPs)) {  			player.Message ("About {0}&S: HIDDEN from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  		} else {  			player.Message ("About {0}&S: HIDDEN (idle {1})"' info.ClassyName' idle.ToMiniString ());  		}  	} else {  		if (player.Can (Permission.ViewPlayerIPs)) {  			player.Message ("About {0}&S: HIDDEN. Online from {1}"' info.ClassyName' info.LastIP);  		} else {  			player.Message ("About {0}&S: HIDDEN."' info.ClassyName);  		}  	}  } else {  	if (idle.TotalMinutes > 1) {  		if (player.Can (Permission.ViewPlayerIPs)) {  			player.Message ("About {0}&S: Online now from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  		} else {  			player.Message ("About {0}&S: Online now (idle {1})"' info.ClassyName' idle.ToMiniString ());  		}  	} else {  		if (player.Can (Permission.ViewPlayerIPs)) {  			player.Message ("About {0}&S: Online now from {1}"' info.ClassyName' info.LastIP);  		} else {  			player.Message ("About {0}&S: Online now."' info.ClassyName);  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (idle.TotalMinutes > 2) {  	if (player.Can (Permission.ViewPlayerIPs)) {  		player.Message ("About {0}&S: HIDDEN from {1} (idle {2})"' info.ClassyName' info.LastIP' idle.ToMiniString ());  	} else {  		player.Message ("About {0}&S: HIDDEN (idle {1})"' info.ClassyName' idle.ToMiniString ());  	}  } else {  	if (player.Can (Permission.ViewPlayerIPs)) {  		player.Message ("About {0}&S: HIDDEN. Online from {1}"' info.ClassyName' info.LastIP);  	} else {  		player.Message ("About {0}&S: HIDDEN."' info.ClassyName);  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (!info.LastIP.Equals (IPAddress.None)) {  	// Show alts  	List<PlayerInfo> altNames = new List<PlayerInfo> ();  	int bannedAltCount = 0;  	foreach (PlayerInfo playerFromSameIP in PlayerDB.FindPlayers (info.LastIP)) {  		if (playerFromSameIP == info)  			continue;  		altNames.Add (playerFromSameIP);  		if (playerFromSameIP.IsBanned) {  			bannedAltCount++;  		}  	}  	if (altNames.Count > 0) {  		altNames.Sort (new PlayerInfoComparer (player));  		if (altNames.Count > MaxAltsToPrint) {  			if (bannedAltCount > 0) {  				player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  			} else {  				player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  			}  		} else {  			if (bannedAltCount > 0) {  				player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  			} else {  				player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  			}  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (!info.LastIP.Equals (IPAddress.None)) {  	// Show alts  	List<PlayerInfo> altNames = new List<PlayerInfo> ();  	int bannedAltCount = 0;  	foreach (PlayerInfo playerFromSameIP in PlayerDB.FindPlayers (info.LastIP)) {  		if (playerFromSameIP == info)  			continue;  		altNames.Add (playerFromSameIP);  		if (playerFromSameIP.IsBanned) {  			bannedAltCount++;  		}  	}  	if (altNames.Count > 0) {  		altNames.Sort (new PlayerInfoComparer (player));  		if (altNames.Count > MaxAltsToPrint) {  			if (bannedAltCount > 0) {  				player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  			} else {  				player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  			}  		} else {  			if (bannedAltCount > 0) {  				player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  			} else {  				player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  			}  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (altNames.Count > 0) {  	altNames.Sort (new PlayerInfoComparer (player));  	if (altNames.Count > MaxAltsToPrint) {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  		}  	} else {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (altNames.Count > 0) {  	altNames.Sort (new PlayerInfoComparer (player));  	if (altNames.Count > MaxAltsToPrint) {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  		}  	} else {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (altNames.Count > MaxAltsToPrint) {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  	}  } else {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (altNames.Count > MaxAltsToPrint) {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  	}  } else {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (bannedAltCount > 0) {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  } else {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (bannedAltCount > 0) {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  } else {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2}  &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.BlocksDrawn > 500000000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000000' info.MessagesWritten);  } else if (info.BlocksDrawn > 500000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  } else if (info.BlocksDrawn > 0) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten);  } else {  	player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.BlocksDrawn > 500000000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000000' info.MessagesWritten);  } else if (info.BlocksDrawn > 500000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  } else if (info.BlocksDrawn > 0) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten);  } else {  	player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.BlocksDrawn > 500000000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000000' info.MessagesWritten);  } else if (info.BlocksDrawn > 500000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  } else if (info.BlocksDrawn > 0) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten);  } else {  	player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.BlocksDrawn > 500000000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000000' info.MessagesWritten);  } else if (info.BlocksDrawn > 500000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  } else if (info.BlocksDrawn > 0) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten);  } else {  	player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: player.Message ("  Built {0} and deleted {1} blocks' drew {2}M blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000000' info.MessagesWritten);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.BlocksDrawn > 500000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  } else if (info.BlocksDrawn > 0) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten);  } else {  	player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: if (info.BlocksDrawn > 500000) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  } else if (info.BlocksDrawn > 0) {  	player.Message ("  Built {0} and deleted {1} blocks' drew {2} blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn' info.MessagesWritten);  } else {  	player.Message ("  Built {0} and deleted {1} blocks' wrote {2} messages."' info.BlocksBuilt' info.BlocksDeleted' info.MessagesWritten);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following statement contains a magic number: player.Message ("  Built {0} and deleted {1} blocks' drew {2}K blocks' wrote {3} messages."' info.BlocksBuilt' info.BlocksDeleted' info.BlocksDrawn / 1000' info.MessagesWritten);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: if (altNames.Count > 0) {  	altNames.Sort (new PlayerInfoComparer (player));  	if (altNames.Count > MaxAltsToPrint) {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  		}  	} else {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: if (altNames.Count > 0) {  	altNames.Sort (new PlayerInfoComparer (player));  	if (altNames.Count > MaxAltsToPrint) {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  		}  	} else {  		if (bannedAltCount > 0) {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  		} else {  			player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  		}  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: if (altNames.Count > MaxAltsToPrint) {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  	}  } else {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: if (altNames.Count > MaxAltsToPrint) {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  	}  } else {  	if (bannedAltCount > 0) {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts ({1} banned) on IP: {2}"' altNames.Count' bannedAltCount' altNames.ToArray ().JoinToClassyString ());  	} else {  		player.MessagePrefixed ("&S  "' "&S  {0} accounts on IP: {1}"' altNames.Count' altNames.ToArray ().JoinToClassyString ());  	}  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: if (bannedAltCount > 0) {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  } else {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: if (bannedAltCount > 0) {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  } else {  	player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: player.MessagePrefixed ("&S  "' "&S  Over {0} accounts ({1} banned) on IP: {2} &Setc"' MaxAltsToPrint' bannedAltCount' altNames.Take (15).ToArray ().JoinToClassyString ());  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following statement contains a magic number: player.MessagePrefixed ("&S  "' "&S  Over {0} accounts on IP: {1} &Setc"' MaxAltsToPrint' altNames.Take (15).ToArray ().JoinToClassyString ());  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message ("Servers status: Up for {0:0.0} hours' using {1:0} MB"' DateTime.UtcNow.Subtract (Server.StartTime).TotalHours' (Process.GetCurrentProcess ().PrivateMemorySize64 / (1024 * 1024)));  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message ("Servers status: Up for {0:0.0} hours' using {1:0} MB"' DateTime.UtcNow.Subtract (Server.StartTime).TotalHours' (Process.GetCurrentProcess ().PrivateMemorySize64 / (1024 * 1024)));  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: if (Server.IsMonitoringCPUUsage) {  	player.Message ("  Averaging {0:0.0}% CPU now' {1:0.0}% overall"' Server.CPUUsageLastMinute * 100' Server.CPUUsageTotal * 100);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: if (Server.IsMonitoringCPUUsage) {  	player.Message ("  Averaging {0:0.0}% CPU now' {1:0.0}% overall"' Server.CPUUsageLastMinute * 100' Server.CPUUsageTotal * 100);  }  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message ("  Averaging {0:0.0}% CPU now' {1:0.0}% overall"' Server.CPUUsageLastMinute * 100' Server.CPUUsageTotal * 100);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message ("  Averaging {0:0.0}% CPU now' {1:0.0}% overall"' Server.CPUUsageLastMinute * 100' Server.CPUUsageTotal * 100);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message ("  Bandwidth: {0:0.0} KB/s up' {1:0.0} KB/s down"' bytesSentRate / 1000' bytesReceivedRate / 1000);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,ServerInfoHandler,The following statement contains a magic number: player.Message ("  Bandwidth: {0:0.0} KB/s up' {1:0.0} KB/s down"' bytesSentRate / 1000' bytesReceivedRate / 1000);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,MeasureHandler,The following statement contains a magic number: player.SelectionStart (2' MeasureCallback' null);  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format ("&F[{0}&C{1}&F{2}]"' Compass.Substring (offset - 12' 11)' Compass.Substring (offset - 1' 3)' Compass.Substring (offset + 2' 11));  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format ("&F[{0}&C{1}&F{2}]"' Compass.Substring (offset - 12' 11)' Compass.Substring (offset - 1' 3)' Compass.Substring (offset + 2' 11));  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format ("&F[{0}&C{1}&F{2}]"' Compass.Substring (offset - 12' 11)' Compass.Substring (offset - 1' 3)' Compass.Substring (offset + 2' 11));  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format ("&F[{0}&C{1}&F{2}]"' Compass.Substring (offset - 12' 11)' Compass.Substring (offset - 1' 3)' Compass.Substring (offset + 2' 11));  
Magic Number,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,GetCompassString,The following statement contains a magic number: return String.Format ("&F[{0}&C{1}&F{2}]"' Compass.Substring (offset - 12' 11)' Compass.Substring (offset - 1' 3)' Compass.Substring (offset + 2' 11));  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: infos = infos.Where (info => (info.TimeSinceLastSeen.TotalDays < 30 && !info.IsBanned)).ToList ();  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimeSinceFirstLoginMedian = DateTime.UtcNow.Subtract (infos.OrderByDescending (info => info.FirstLoginDate).ElementAt (infos.Count / 2).FirstLoginDate);  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimeSinceLastLoginMedian = DateTime.UtcNow.Subtract (infos.OrderByDescending (info => info.LastLoginDate).ElementAt (infos.Count / 2).LastLoginDate);  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TotalTimeMedian = infos.OrderByDescending (info => info.TotalTime).ElementAt (infos.Count / 2).TotalTime;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.BlocksBuiltMedian = infos.OrderByDescending (info => info.BlocksBuilt).ElementAt (infos.Count / 2).BlocksBuilt;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.BlocksDeletedMedian = infos.OrderByDescending (info => info.BlocksDeleted).ElementAt (infos.Count / 2).BlocksDeleted;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.BlocksDrawnMedian = infos.OrderByDescending (info => info.BlocksDrawn).ElementAt (infos.Count / 2).BlocksDrawn;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesVisitedMedian = infos.OrderByDescending (info => info.TimesVisited).ElementAt (infos.Count / 2).TimesVisited;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.MessagesWrittenMedian = infos.OrderByDescending (info => info.MessagesWritten).ElementAt (infos.Count / 2).MessagesWritten;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesKickedMedian = infos.OrderByDescending (info => info.TimesKicked).ElementAt (infos.Count / 2).TimesKicked;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesKickedOthersMedian = infos.OrderByDescending (info => info.TimesKickedOthers).ElementAt (infos.Count / 2).TimesKickedOthers;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: stat.TimesBannedOthersMedian = infos.OrderByDescending (info => info.TimesBannedOthers).ElementAt (infos.Count / 2).TimesBannedOthers;  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTimeSinceFirstLogin.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimeSinceFirstLogin.ToCompactString ()' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTimeSinceFirstLogin.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimeSinceFirstLogin.ToCompactString ()' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTimeSinceFirstLogin) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimeSinceFirstLogin.ToCompactString ()' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTimeSinceLastLogin.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimeSinceLastLogin.ToCompactString ()' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTimeSinceLastLogin.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimeSinceLastLogin.ToCompactString ()' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTimeSinceLastLogin) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimeSinceLastLogin.ToCompactString ()' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTotalTime.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TotalTime.ToCompactString ()' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTotalTime.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TotalTime.ToCompactString ()' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTotalTime) {  		writer.WriteLine ("        {0'20}  {1}"' info.TotalTime.ToCompactString ()' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopBlocksBuilt.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksBuilt' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopBlocksBuilt.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksBuilt' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopBlocksBuilt) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksBuilt' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopBlocksDeleted.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksDeleted' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopBlocksDeleted.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksDeleted' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopBlocksDeleted) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksDeleted' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopBlocksChanged.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' (info.BlocksDeleted + info.BlocksBuilt)' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopBlocksChanged.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' (info.BlocksDeleted + info.BlocksBuilt)' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopBlocksChanged) {  		writer.WriteLine ("        {0'20}  {1}"' (info.BlocksDeleted + info.BlocksBuilt)' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopBlocksDrawn.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksDrawn' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopBlocksDrawn.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksDrawn' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopBlocksDrawn) {  		writer.WriteLine ("        {0'20}  {1}"' info.BlocksDrawn' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopBlockRatio.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20:0.000}  {1}"' (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopBlockRatio.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20:0.000}  {1}"' (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopBlockRatio) {  		writer.WriteLine ("        {0'20:0.000}  {1}"' (info.BlocksBuilt / (double)Math.Max (info.BlocksDeleted' 1))' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTimesVisited.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesVisited' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTimesVisited.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesVisited' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTimesVisited) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesVisited' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopMessagesWritten.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.MessagesWritten' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopMessagesWritten.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.MessagesWritten' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopMessagesWritten) {  		writer.WriteLine ("        {0'20}  {1}"' info.MessagesWritten' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTimesKicked.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesKicked' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTimesKicked.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesKicked' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTimesKicked) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesKicked' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTimesKickedOthers.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesKickedOthers' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTimesKickedOthers.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesKickedOthers' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTimesKickedOthers) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesKickedOthers' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,DumpPlayerGroupStats,The following statement contains a magic number: if (infos.Count () > TopPlayersToList * 2 + 1) {  	foreach (PlayerInfo info in stat.TopTimesBannedOthers.Take (TopPlayersToList)) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesBannedOthers' info.Name);  	}  	writer.WriteLine ("                           ....");  	foreach (PlayerInfo info in stat.TopTimesBannedOthers.Reverse ().Take (TopPlayersToList).Reverse ()) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesBannedOthers' info.Name);  	}  } else {  	foreach (PlayerInfo info in stat.TopTimesBannedOthers) {  		writer.WriteLine ("        {0'20}  {1}"' info.TimesBannedOthers' info.Name);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The following statement contains a magic number: switch (propertyName.ToLower ()) {  case "timeskicked":  	int oldTimesKicked = info.TimesKicked;  	if (ValidateInt (valName' 0' 9999)) {  		info.TimesKicked = Int32.Parse (valName);  		player.Message ("SetInfo: TimesKicked for {0}&S changed from {1} to {2}"' info.ClassyName' oldTimesKicked' info.TimesKicked);  		break;  	} else {  		player.Message ("SetInfo: TimesKicked value acceptible (Acceptible value range: 0-9999)");  		return;  	}  case "previousrank":  	Rank newPreviousRank;  	if (valName.Length > 0) {  		newPreviousRank = RankManager.FindRank (valName);  		if (newPreviousRank == null) {  			player.MessageNoRank (valName);  			return;  		}  	} else {  		newPreviousRank = null;  	}  	Rank oldPreviousRank = info.PreviousRank;  	if (newPreviousRank == oldPreviousRank) {  		if (newPreviousRank == null) {  			player.Message ("SetInfo: PreviousRank for {0}&S is not set."' info.ClassyName);  		} else {  			player.Message ("SetInfo: PreviousRank for {0}&S is already set to {1}"' info.ClassyName' newPreviousRank.ClassyName);  		}  		return;  	}  	info.PreviousRank = newPreviousRank;  	if (oldPreviousRank == null) {  		player.Message ("SetInfo: PreviousRank for {0}&S set to {1}&"' info.ClassyName' newPreviousRank.ClassyName);  	} else if (newPreviousRank == null) {  		player.Message ("SetInfo: PreviousRank for {0}&S was reset (was {1}&S)"' info.ClassyName' oldPreviousRank.ClassyName);  	} else {  		player.Message ("SetInfo: PreviousRank for {0}&S changed from {1}&S to {2}"' info.ClassyName' oldPreviousRank.ClassyName' newPreviousRank.ClassyName);  	}  	break;  case "totaltime":  	TimeSpan newTotalTime;  	TimeSpan oldTotalTime = info.TotalTime;  	if (valName.TryParseMiniTimespan (out newTotalTime)) {  		if (newTotalTime > DateTimeUtil.MaxTimeSpan) {  			player.MessageMaxTimeSpan ();  			return;  		}  		info.TotalTime = newTotalTime;  		player.Message ("SetInfo: TotalTime for {0}&S changed from {1} ({2}) to {3} ({4})"' info.ClassyName' oldTotalTime.ToMiniString ()' oldTotalTime.ToCompactString ()' info.TotalTime.ToMiniString ()' info.TotalTime.ToCompactString ());  		break;  	} else {  		player.Message ("SetInfo: Could not parse value given for TotalTime.");  		return;  	}  case "rankchangetype":  	RankChangeType oldType = info.RankChangeType;  	try {  		info.RankChangeType = (RankChangeType)Enum.Parse (typeof(RankChangeType)' valName' true);  	} catch (ArgumentException) {  		player.Message ("SetInfo: Could not parse RankChangeType. Allowed values: {0}"' String.Join ("' "' Enum.GetNames (typeof(RankChangeType))));  		return;  	}  	player.Message ("SetInfo: RankChangeType for {0}&S changed from {1} to {2}"' info.ClassyName' oldType' info.RankChangeType);  	break;  case "banreason":  	if (valName.Length == 0)  		valName = null;  	if (SetPlayerInfoField (player' "BanReason"' info' info.BanReason' valName)) {  		info.BanReason = valName;  		break;  	} else {  		return;  	}  case "unbanreason":  	if (valName.Length == 0)  		valName = null;  	if (SetPlayerInfoField (player' "UnbanReason"' info' info.UnbanReason' valName)) {  		info.UnbanReason = valName;  		break;  	} else {  		return;  	}  case "rankreason":  	if (valName.Length == 0)  		valName = null;  	if (SetPlayerInfoField (player' "RankReason"' info' info.RankChangeReason' valName)) {  		info.RankChangeReason = valName;  		break;  	} else {  		return;  	}  case "kickreason":  	if (valName.Length == 0)  		valName = null;  	if (SetPlayerInfoField (player' "KickReason"' info' info.LastKickReason' valName)) {  		info.LastKickReason = valName;  		break;  	} else {  		return;  	}  case "displayedname":  case "dn":  	string oldDisplayedName = info.DisplayedName;  	if (valName.Length == 0)  		valName = null;  	if (valName == info.DisplayedName) {  		if (valName == null) {  			player.Message ("SetInfo: DisplayedName for {0} is not set."' info.Name);  		} else {  			player.Message ("SetInfo: DisplayedName for {0} is already set to \"{1}&S\""' info.Name' valName);  		}  		return;  	}  	info.DisplayedName = valName;  	if (oldDisplayedName == null) {  		player.Message ("SetInfo: DisplayedName for {0} set to \"{1}&S\""' info.Name' valName);  	} else if (valName == null) {  		player.Message ("SetInfo: DisplayedName for {0} was reset (was \"{1}&S\")"' info.Name' oldDisplayedName);  	} else {  		player.Message ("SetInfo: DisplayedName for {0} changed from \"{1}&S\" to \"{2}&S\""' info.Name' oldDisplayedName' valName);  	}  	break;  default:  	player.Message ("Only the following properties are editable: " + "TimesKicked' PreviousRank' TotalTime' RankChangeType' " + "BanReason' UnbanReason' RankReason' KickReason' DisplayedName");  	return;  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,SetInfoHandler,The following statement contains a magic number: if (ValidateInt (valName' 0' 9999)) {  	info.TimesKicked = Int32.Parse (valName);  	player.Message ("SetInfo: TimesKicked for {0}&S changed from {1} to {2}"' info.ClassyName' oldTimesKicked' info.TimesKicked);  	break;  } else {  	player.Message ("SetInfo: TimesKicked value acceptible (Acceptible value range: 0-9999)");  	return;  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,The following statement contains a magic number: using (LogRecorder rec = new LogRecorder ()) {  	bool success;  	switch (whatToReload) {  	case "config":  		success = Config.Load (true' true);  		break;  	case "autorank":  		success = AutoRankManager.Init ();  		break;  	case "swears":  		Chat.badWordMatchers = null;  		Chat.Swears.Clear ();  		success = true;  		break;  	case "salt":  		Heartbeat.Salt = Server.GetRandomString (32);  		player.Message ("&WNote: Until server synchronizes with Minecraft.net' " + "connecting players may have trouble verifying names.");  		success = true;  		break;  	default:  		CdReload.PrintUsage (player);  		return;  	}  	if (rec.HasMessages) {  		foreach (string msg in rec.MessageList) {  			player.Message (msg);  		}  	}  	if (success) {  		player.Message ("Reload: reloaded {0}."' whatToReload);  	} else {  		player.Message ("&WReload: Error(s) occured while reloading {0}."' whatToReload);  	}  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,The following statement contains a magic number: switch (whatToReload) {  case "config":  	success = Config.Load (true' true);  	break;  case "autorank":  	success = AutoRankManager.Init ();  	break;  case "swears":  	Chat.badWordMatchers = null;  	Chat.Swears.Clear ();  	success = true;  	break;  case "salt":  	Heartbeat.Salt = Server.GetRandomString (32);  	player.Message ("&WNote: Until server synchronizes with Minecraft.net' " + "connecting players may have trouble verifying names.");  	success = true;  	break;  default:  	CdReload.PrintUsage (player);  	return;  }  
Magic Number,fCraft,MaintenanceCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\MaintenanceCommands.cs,ReloadHandler,The following statement contains a magic number: Heartbeat.Salt = Server.GetRandomString (32);  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The following statement contains a magic number: if (time < 10) {  	player.Message ("&WYou can use /Kill again in " + Math.Round (10 - time) + " seconds.");  	return;  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The following statement contains a magic number: if (time < 10) {  	player.Message ("&WYou can use /Kill again in " + Math.Round (10 - time) + " seconds.");  	return;  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,KillHandler,The following statement contains a magic number: player.Message ("&WYou can use /Kill again in " + Math.Round (10 - time) + " seconds.");  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: if (time < 10) {  	player.Message ("&WYou can use /Slap again in " + Math.Round (10 - time) + " seconds.");  	return;  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: if (time < 10) {  	player.Message ("&WYou can use /Slap again in " + Math.Round (10 - time) + " seconds.");  	return;  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: player.Message ("&WYou can use /Slap again in " + Math.Round (10 - time) + " seconds.");  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Slap,The following statement contains a magic number: if (player.Can (Permission.Slap' target.Info.Rank)) {  	var slap = new Position (target.Position.X' target.Position.Y' (target.World.Map.Bounds.ZMax) * 32);  	target.TeleportTo (slap);  	string aMessage;  	if (string.IsNullOrEmpty (item)) {  		Server.Players.CanSee (target).Union (target).Message ("{0} &Swas slapped sky high by {1}"' target.ClassyName' player.ClassyName);  		IRC.PlayerSomethingMessage (player' "slapped"' target' null);  		player.Info.LastUsedSlap = DateTime.UtcNow;  		return;  	} else  		switch (item.ToLower ()) {  		case "bakingtray":  			aMessage = String.Format ("{0} &Swas slapped by {1}&S with a Baking Tray"' target.ClassyName' player.ClassyName);  			break;  		case "fish":  			aMessage = String.Format ("{0} &Swas slapped by {1}&S with a Giant Fish"' target.ClassyName' player.ClassyName);  			break;  		case "bitchslap":  			aMessage = String.Format ("{0} &Swas bitch-slapped by {1}"' target.ClassyName' player.ClassyName);  			break;  		case "shoe":  			aMessage = String.Format ("{0} &Swas slapped by {1}&S with a Shoe"' target.ClassyName' player.ClassyName);  			break;  		default:  			Server.Players.CanSee (target).Union (target).Message ("{0} &Swas slapped sky high by {1}"' target.ClassyName' player.ClassyName);  			IRC.PlayerSomethingMessage (player' "slapped"' target' null);  			player.Info.LastUsedSlap = DateTime.UtcNow;  			return;  		}  	Server.Players.CanSee (target).Union (target).Message (aMessage);  	IRC.PlayerSomethingMessage (player' "slapped"' target' null);  	player.Info.LastUsedSlap = DateTime.UtcNow;  	return;  } else {  	player.Message ("&sYou can only Slap players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Slap).ClassyName);  	player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPZone,The following statement contains a magic number: if (zoneName == null) {  	player.Message ("No zone name specified. See &W/Help tpzone");  	return;  } else {  	Zone zone = player.World.Map.Zones.Find (zoneName);  	if (zone == null) {  		player.MessageNoZone (zoneName);  		return;  	}  	Position zPos = new Position ((((zone.Bounds.XMin + zone.Bounds.XMax) / 2) * 32)' (((zone.Bounds.YMin + zone.Bounds.YMax) / 2) * 32)' (((zone.Bounds.ZMin + zone.Bounds.ZMax) / 2) + 2) * 32);  	player.TeleportTo ((zPos));  	player.Message ("&WTeleporting you to zone " + zone.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Warn,The following statement contains a magic number: if (player.Can (Permission.Warn' target.Info.Rank)) {  	target.Info.IsHidden = false;  	if (target.Info.Warn (player.Name)) {  		Server.Message ("{0}&S has been warned by {1}"' target.ClassyName' player.ClassyName);  		Scheduler.NewTask (t => target.Info.UnWarn ()).RunOnce (TimeSpan.FromMinutes (15));  	} else {  		try {  			target.Kick (player' "Auto Kick (2 warnings or more)"' LeaveReason.Kick' true' true' true);  		} catch (PlayerOpException ex) {  			player.Message (ex.MessageColored);  			if (ex.ErrorCode == PlayerOpExceptionCode.ReasonRequired)  				return;  		}  	}  } else {  	player.Message ("You can only warn players ranked {0}&S or lower"' player.Info.Rank.GetLimit (Permission.Warn).ClassyName);  	player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Warn,The following statement contains a magic number: if (target.Info.Warn (player.Name)) {  	Server.Message ("{0}&S has been warned by {1}"' target.ClassyName' player.ClassyName);  	Scheduler.NewTask (t => target.Info.UnWarn ()).RunOnce (TimeSpan.FromMinutes (15));  } else {  	try {  		target.Kick (player' "Auto Kick (2 warnings or more)"' LeaveReason.Kick' true' true' true);  	} catch (PlayerOpException ex) {  		player.Message (ex.MessageColored);  		if (ex.ErrorCode == PlayerOpExceptionCode.ReasonRequired)  			return;  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,Warn,The following statement contains a magic number: Scheduler.NewTask (t => target.Info.UnWarn ()).RunOnce (TimeSpan.FromMinutes (15));  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,The following statement contains a magic number: if (playerName == null || playerName.Length < 2 || (playerName [0] != '-' && playerName [0] != '+')) {  	CdBanEx.PrintUsage (player);  	return;  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: if (playerName == null) {  	Map map = player.WorldMap;  	map.Spawn = player.Position;  	player.TeleportTo (map.Spawn);  	player.Send (PacketWriter.MakeAddEntity (255' player.ListName' player.Position));  	player.Message ("New spawn point saved.");  	Logger.Log (LogType.UserActivity' "{0} changed the spawned point."' player.Name);  } else if (player.Can (Permission.Bring)) {  	Player[] infos = playerWorld.FindPlayers (player' playerName);  	if (infos.Length == 1) {  		Player target = infos [0];  		player.LastUsedPlayerName = target.Name;  		if (player.Can (Permission.Bring' target.Info.Rank)) {  			target.Send (PacketWriter.MakeAddEntity (255' target.ListName' player.Position));  		} else {  			player.Message ("You may only set spawn of players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName);  			player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  		}  	} else if (infos.Length > 0) {  		player.MessageManyMatches ("player"' infos);  	} else {  		infos = Server.FindPlayers (player' playerName' true);  		if (infos.Length > 0) {  			player.Message ("You may only set spawn of players on the same world as you.");  		} else {  			player.MessageNoPlayer (playerName);  		}  	}  } else {  	player.MessageNoAccess (CdSetSpawn);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: if (playerName == null) {  	Map map = player.WorldMap;  	map.Spawn = player.Position;  	player.TeleportTo (map.Spawn);  	player.Send (PacketWriter.MakeAddEntity (255' player.ListName' player.Position));  	player.Message ("New spawn point saved.");  	Logger.Log (LogType.UserActivity' "{0} changed the spawned point."' player.Name);  } else if (player.Can (Permission.Bring)) {  	Player[] infos = playerWorld.FindPlayers (player' playerName);  	if (infos.Length == 1) {  		Player target = infos [0];  		player.LastUsedPlayerName = target.Name;  		if (player.Can (Permission.Bring' target.Info.Rank)) {  			target.Send (PacketWriter.MakeAddEntity (255' target.ListName' player.Position));  		} else {  			player.Message ("You may only set spawn of players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName);  			player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  		}  	} else if (infos.Length > 0) {  		player.MessageManyMatches ("player"' infos);  	} else {  		infos = Server.FindPlayers (player' playerName' true);  		if (infos.Length > 0) {  			player.Message ("You may only set spawn of players on the same world as you.");  		} else {  			player.MessageNoPlayer (playerName);  		}  	}  } else {  	player.MessageNoAccess (CdSetSpawn);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: player.Send (PacketWriter.MakeAddEntity (255' player.ListName' player.Position));  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: if (player.Can (Permission.Bring)) {  	Player[] infos = playerWorld.FindPlayers (player' playerName);  	if (infos.Length == 1) {  		Player target = infos [0];  		player.LastUsedPlayerName = target.Name;  		if (player.Can (Permission.Bring' target.Info.Rank)) {  			target.Send (PacketWriter.MakeAddEntity (255' target.ListName' player.Position));  		} else {  			player.Message ("You may only set spawn of players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName);  			player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  		}  	} else if (infos.Length > 0) {  		player.MessageManyMatches ("player"' infos);  	} else {  		infos = Server.FindPlayers (player' playerName' true);  		if (infos.Length > 0) {  			player.Message ("You may only set spawn of players on the same world as you.");  		} else {  			player.MessageNoPlayer (playerName);  		}  	}  } else {  	player.MessageNoAccess (CdSetSpawn);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: if (infos.Length == 1) {  	Player target = infos [0];  	player.LastUsedPlayerName = target.Name;  	if (player.Can (Permission.Bring' target.Info.Rank)) {  		target.Send (PacketWriter.MakeAddEntity (255' target.ListName' player.Position));  	} else {  		player.Message ("You may only set spawn of players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName);  		player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  	}  } else if (infos.Length > 0) {  	player.MessageManyMatches ("player"' infos);  } else {  	infos = Server.FindPlayers (player' playerName' true);  	if (infos.Length > 0) {  		player.Message ("You may only set spawn of players on the same world as you.");  	} else {  		player.MessageNoPlayer (playerName);  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: if (player.Can (Permission.Bring' target.Info.Rank)) {  	target.Send (PacketWriter.MakeAddEntity (255' target.ListName' player.Position));  } else {  	player.Message ("You may only set spawn of players ranked {0}&S or lower."' player.Info.Rank.GetLimit (Permission.Bring).ClassyName);  	player.Message ("{0}&S is ranked {1}"' target.ClassyName' target.Info.Rank.ClassyName);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,SetSpawnHandler,The following statement contains a magic number: target.Send (PacketWriter.MakeAddEntity (255' target.ListName' player.Position));  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.Next () != null) {  	cmd.Rewind ();  	int x' y' z;  	if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  		if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  			player.Message ("Coordinates are outside the valid range!");  		} else {  			player.TeleportTo (new Position {  				X = (short)(x * 32 + 16)'  				Y = (short)(y * 32 + 16)'  				Z = (short)(z * 32 + 16)'  				R = player.Position.R'  				L = player.Position.L  			});  		}  	} else {  		CdTP.PrintUsage (player);  	}  } else {  	if (name == "-") {  		if (player.LastUsedPlayerName != null) {  			name = player.LastUsedPlayerName;  		} else {  			player.Message ("Cannot repeat player name: you haven't used any names yet.");  			return;  		}  	}  	Player[] matches = Server.FindPlayers (player' name' true);  	if (matches.Length == 1) {  		Player target = matches [0];  		World targetWorld = target.World;  		if (targetWorld == null)  			PlayerOpException.ThrowNoWorld (target);  		if (targetWorld == player.World) {  			player.TeleportTo (target.Position);  		} else {  			switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (targetWorld.IsFull) {  					player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  					return;  				}  				player.StopSpectating ();  				player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  				break;  			case SecurityCheckResult.BlackListed:  				player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  				break;  			// TODO: case PermissionType.RankTooHigh:  			}  		}  	} else if (matches.Length > 1) {  		player.MessageManyMatches ("player"' matches);  	} else {  		// Try to guess if player typed "/TP" instead of "/Join"  		World[] worlds = WorldManager.FindWorlds (player' name);  		if (worlds.Length == 1) {  			player.LastUsedWorldName = worlds [0].Name;  			player.StopSpectating ();  			player.ParseMessage ("/Join " + worlds [0].Name' false);  		} else {  			player.MessageNoPlayer (name);  		}  	}  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (cmd.NextInt (out x) && cmd.NextInt (out y) && cmd.NextInt (out z)) {  	if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  		player.Message ("Coordinates are outside the valid range!");  	} else {  		player.TeleportTo (new Position {  			X = (short)(x * 32 + 16)'  			Y = (short)(y * 32 + 16)'  			Z = (short)(z * 32 + 16)'  			R = player.Position.R'  			L = player.Position.L  		});  	}  } else {  	CdTP.PrintUsage (player);  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: if (x <= -1024 || x >= 1024 || y <= -1024 || y >= 1024 || z <= -1024 || z >= 1024) {  	player.Message ("Coordinates are outside the valid range!");  } else {  	player.TeleportTo (new Position {  		X = (short)(x * 32 + 16)'  		Y = (short)(y * 32 + 16)'  		Z = (short)(z * 32 + 16)'  		R = player.Position.R'  		L = player.Position.L  	});  }  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: player.TeleportTo (new Position {  	X = (short)(x * 32 + 16)'  	Y = (short)(y * 32 + 16)'  	Z = (short)(z * 32 + 16)'  	R = player.Position.R'  	L = player.Position.L  });  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: player.TeleportTo (new Position {  	X = (short)(x * 32 + 16)'  	Y = (short)(y * 32 + 16)'  	Z = (short)(z * 32 + 16)'  	R = player.Position.R'  	L = player.Position.L  });  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: player.TeleportTo (new Position {  	X = (short)(x * 32 + 16)'  	Y = (short)(y * 32 + 16)'  	Z = (short)(z * 32 + 16)'  	R = player.Position.R'  	L = player.Position.L  });  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: player.TeleportTo (new Position {  	X = (short)(x * 32 + 16)'  	Y = (short)(y * 32 + 16)'  	Z = (short)(z * 32 + 16)'  	R = player.Position.R'  	L = player.Position.L  });  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: player.TeleportTo (new Position {  	X = (short)(x * 32 + 16)'  	Y = (short)(y * 32 + 16)'  	Z = (short)(z * 32 + 16)'  	R = player.Position.R'  	L = player.Position.L  });  
Magic Number,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following statement contains a magic number: player.TeleportTo (new Position {  	X = (short)(x * 32 + 16)'  	Y = (short)(y * 32 + 16)'  	Z = (short)(z * 32 + 16)'  	R = player.Position.R'  	L = player.Position.L  });  
Magic Number,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The following statement contains a magic number: for (int i = 0; i < w; ++i)  	if (bmp.GetPixel (i' row).R != 255)  		return false;  
Magic Number,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The following statement contains a magic number: if (bmp.GetPixel (i' row).R != 255)  	return false;  
Magic Number,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The following statement contains a magic number: for (int i = 0; i < h; ++i)  	if (bmp.GetPixel (col' i).R != 255)  		return false;  
Magic Number,fCraft,FontHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\FontHandler.cs,Crop,The following statement contains a magic number: if (bmp.GetPixel (col' i).R != 255)  	return false;  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: using (Graphics gr = Graphics.FromImage (bm)) {  	gr.FillRectangle (Brushes.White' 0' 0' bm.Width' bm.Height);  	// Draw the rectangles.  	gr.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;  	List<PointF> points = new List<PointF> ();  	DrawPhiRectanglesOnGraphics (points' x' y' wid' hgt' orientation);  	// Draw the true spiral.  	PointF start = points [0];  	PointF origin = points [points.Count - 1];  	float dx = start.X - origin.X;  	float dy = start.Y - origin.Y;  	double radius = Math.Sqrt (dx * dx + dy * dy);  	double theta = Math.Atan2 (dy' dx);  	const int num_slices = 1000;  	double dtheta = Math.PI / 2 / num_slices;  	double factor = 1 - (1 / phi) / num_slices * 0.78;  	//@  	List<PointF> new_points = new List<PointF> ();  	// Repeat until dist is too small to see.  	while (radius > 0.1) {  		PointF new_point = new PointF ((float)(origin.X + radius * Math.Cos (theta))' (float)(origin.Y + radius * Math.Sin (theta)));  		new_points.Add (new_point);  		theta += dtheta;  		radius *= factor;  	}  	gr.DrawLines (Pens.Blue' new_points.ToArray ());  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: using (Graphics gr = Graphics.FromImage (bm)) {  	gr.FillRectangle (Brushes.White' 0' 0' bm.Width' bm.Height);  	// Draw the rectangles.  	gr.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;  	List<PointF> points = new List<PointF> ();  	DrawPhiRectanglesOnGraphics (points' x' y' wid' hgt' orientation);  	// Draw the true spiral.  	PointF start = points [0];  	PointF origin = points [points.Count - 1];  	float dx = start.X - origin.X;  	float dy = start.Y - origin.Y;  	double radius = Math.Sqrt (dx * dx + dy * dy);  	double theta = Math.Atan2 (dy' dx);  	const int num_slices = 1000;  	double dtheta = Math.PI / 2 / num_slices;  	double factor = 1 - (1 / phi) / num_slices * 0.78;  	//@  	List<PointF> new_points = new List<PointF> ();  	// Repeat until dist is too small to see.  	while (radius > 0.1) {  		PointF new_point = new PointF ((float)(origin.X + radius * Math.Cos (theta))' (float)(origin.Y + radius * Math.Sin (theta)));  		new_points.Add (new_point);  		theta += dtheta;  		radius *= factor;  	}  	gr.DrawLines (Pens.Blue' new_points.ToArray ());  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: using (Graphics gr = Graphics.FromImage (bm)) {  	gr.FillRectangle (Brushes.White' 0' 0' bm.Width' bm.Height);  	// Draw the rectangles.  	gr.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;  	List<PointF> points = new List<PointF> ();  	DrawPhiRectanglesOnGraphics (points' x' y' wid' hgt' orientation);  	// Draw the true spiral.  	PointF start = points [0];  	PointF origin = points [points.Count - 1];  	float dx = start.X - origin.X;  	float dy = start.Y - origin.Y;  	double radius = Math.Sqrt (dx * dx + dy * dy);  	double theta = Math.Atan2 (dy' dx);  	const int num_slices = 1000;  	double dtheta = Math.PI / 2 / num_slices;  	double factor = 1 - (1 / phi) / num_slices * 0.78;  	//@  	List<PointF> new_points = new List<PointF> ();  	// Repeat until dist is too small to see.  	while (radius > 0.1) {  		PointF new_point = new PointF ((float)(origin.X + radius * Math.Cos (theta))' (float)(origin.Y + radius * Math.Sin (theta)));  		new_points.Add (new_point);  		theta += dtheta;  		radius *= factor;  	}  	gr.DrawLines (Pens.Blue' new_points.ToArray ());  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: using (Graphics gr = Graphics.FromImage (bm)) {  	gr.FillRectangle (Brushes.White' 0' 0' bm.Width' bm.Height);  	// Draw the rectangles.  	gr.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;  	List<PointF> points = new List<PointF> ();  	DrawPhiRectanglesOnGraphics (points' x' y' wid' hgt' orientation);  	// Draw the true spiral.  	PointF start = points [0];  	PointF origin = points [points.Count - 1];  	float dx = start.X - origin.X;  	float dy = start.Y - origin.Y;  	double radius = Math.Sqrt (dx * dx + dy * dy);  	double theta = Math.Atan2 (dy' dx);  	const int num_slices = 1000;  	double dtheta = Math.PI / 2 / num_slices;  	double factor = 1 - (1 / phi) / num_slices * 0.78;  	//@  	List<PointF> new_points = new List<PointF> ();  	// Repeat until dist is too small to see.  	while (radius > 0.1) {  		PointF new_point = new PointF ((float)(origin.X + radius * Math.Cos (theta))' (float)(origin.Y + radius * Math.Sin (theta)));  		new_points.Add (new_point);  		theta += dtheta;  		radius *= factor;  	}  	gr.DrawLines (Pens.Blue' new_points.ToArray ());  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawBitmap,The following statement contains a magic number: while (radius > 0.1) {  	PointF new_point = new PointF ((float)(origin.X + radius * Math.Cos (theta))' (float)(origin.Y + radius * Math.Sin (theta)));  	new_points.Add (new_point);  	theta += dtheta;  	radius *= factor;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following statement contains a magic number: new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateVertices,The following statement contains a magic number: if (sides < 3)  	throw new ArgumentException ("Polygon must have 3 sides or more.");  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateVertices,The following statement contains a magic number: for (double i = startingAngle; i < startingAngle + 360.0; i += step) {  	points.Add (DegreesToXY (angle' radius' center));  	angle += step;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawStar,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.FillRectangle (Brushes.White' 0' 0' bmp.Width' bmp.Height);  	// Get the star's points.  	PointF[] star_points = MakeStarPoints (-Math.PI / 2' num_points' Radius / 2);  	// Draw the star.  	SolidBrush brush = new SolidBrush (System.Drawing.Color.Black);  	if (Fill) {  		g.FillPolygon (brush' star_points);  	}  	g.DrawPolygon (Pens.Black' star_points);  	bmp = Crop (bmp);  	bmp.RotateFlip (RotateFlipType.Rotate180FlipX);  	Draw (bmp);  	bmp.Dispose ();  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawStar,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.FillRectangle (Brushes.White' 0' 0' bmp.Width' bmp.Height);  	// Get the star's points.  	PointF[] star_points = MakeStarPoints (-Math.PI / 2' num_points' Radius / 2);  	// Draw the star.  	SolidBrush brush = new SolidBrush (System.Drawing.Color.Black);  	if (Fill) {  		g.FillPolygon (brush' star_points);  	}  	g.DrawPolygon (Pens.Black' star_points);  	bmp = Crop (bmp);  	bmp.RotateFlip (RotateFlipType.Rotate180FlipX);  	Draw (bmp);  	bmp.Dispose ();  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: if (skip == 1) {  	result = new PointF[num_points];  	theta = start_theta;  	dtheta = 2 * Math.PI / num_points;  	for (int i = 0; i < num_points; i++) {  		result [i] = new PointF ((float)(cx + cx * Math.Cos (theta))' (float)(cy + cy * Math.Sin (theta)));  		theta += dtheta;  	}  	return result;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: dtheta = 2 * Math.PI / num_points;  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: result = new PointF[2 * num_points];  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: for (int i = 0; i < num_points; i++) {  	result [2 * i] = new PointF ((float)(cx + cx * Math.Cos (theta))' (float)(cy + cy * Math.Sin (theta)));  	theta += dtheta;  	result [2 * i + 1] = new PointF ((float)(cx + cx * Math.Cos (theta) * concave_radius)' (float)(cy + cy * Math.Sin (theta) * concave_radius));  	theta += dtheta;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: for (int i = 0; i < num_points; i++) {  	result [2 * i] = new PointF ((float)(cx + cx * Math.Cos (theta))' (float)(cy + cy * Math.Sin (theta)));  	theta += dtheta;  	result [2 * i + 1] = new PointF ((float)(cx + cx * Math.Cos (theta) * concave_radius)' (float)(cy + cy * Math.Sin (theta) * concave_radius));  	theta += dtheta;  }  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: result [2 * i] = new PointF ((float)(cx + cx * Math.Cos (theta))' (float)(cy + cy * Math.Sin (theta)));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,MakeStarPoints,The following statement contains a magic number: result [2 * i + 1] = new PointF ((float)(cx + cx * Math.Cos (theta) * concave_radius)' (float)(cy + cy * Math.Sin (theta) * concave_radius));  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,CalculateConcaveRadius,The following statement contains a magic number: if (num_points < 5)  	return 0.33f;  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The following statement contains a magic number: for (int i = 0; i < w; ++i)  	if (bmp.GetPixel (i' row).R != 255)  		return false;  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The following statement contains a magic number: if (bmp.GetPixel (i' row).R != 255)  	return false;  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The following statement contains a magic number: for (int i = 0; i < h; ++i)  	if (bmp.GetPixel (col' i).R != 255)  		return false;  
Magic Number,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,Crop,The following statement contains a magic number: if (bmp.GetPixel (col' i).R != 255)  	return false;  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedHandler,The following statement contains a magic number: if (Option.ToLower () == "create") {  	player.Message ("Feed: Click 2 blocks or use &H/Mark&S to set direction.");  	player.SelectionStart (2' FeedCallback' Option' Permission.Draw);  	return;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedHandler,The following statement contains a magic number: player.SelectionStart (2' FeedCallback' Option' Permission.Draw);  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  		x1 = x;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  		x1 = x;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  	player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  	x1 = x;  	z1 = z;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  		x1 = x;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  		x1 = x;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  	player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  	x1 = x;  	z1 = z;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  		y1 = y;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  		y1 = y;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  	player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  	y1 = y;  	z1 = z;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  		y1 = y;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  	for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  		player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  		y1 = y;  		z1 = z;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following statement contains a magic number: for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  	player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  	y1 = y;  	z1 = z;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (worldName.Length < 2) {  	CdWorldSearch.PrintUsage (player);  	return;  } else {  	worldName = worldName.ToLower ();  	var WorldNames = WorldManager.Worlds.Where (w => w.Name.ToLower ().Contains (worldName)).ToArray ();  	if (WorldNames.Length <= 30) {  		player.MessageManyMatches ("worlds"' WorldNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= WorldNames.Count ())  			offset = Math.Max (0' WorldNames.Length - 30);  		World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  		player.MessageManyMatches ("worlds"' WorldPart);  		if (offset + WorldNames.Length < WorldNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  		return;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (worldName.Length < 2) {  	CdWorldSearch.PrintUsage (player);  	return;  } else {  	worldName = worldName.ToLower ();  	var WorldNames = WorldManager.Worlds.Where (w => w.Name.ToLower ().Contains (worldName)).ToArray ();  	if (WorldNames.Length <= 30) {  		player.MessageManyMatches ("worlds"' WorldNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= WorldNames.Count ())  			offset = Math.Max (0' WorldNames.Length - 30);  		World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  		player.MessageManyMatches ("worlds"' WorldPart);  		if (offset + WorldNames.Length < WorldNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  		return;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (worldName.Length < 2) {  	CdWorldSearch.PrintUsage (player);  	return;  } else {  	worldName = worldName.ToLower ();  	var WorldNames = WorldManager.Worlds.Where (w => w.Name.ToLower ().Contains (worldName)).ToArray ();  	if (WorldNames.Length <= 30) {  		player.MessageManyMatches ("worlds"' WorldNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= WorldNames.Count ())  			offset = Math.Max (0' WorldNames.Length - 30);  		World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  		player.MessageManyMatches ("worlds"' WorldPart);  		if (offset + WorldNames.Length < WorldNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  		return;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (worldName.Length < 2) {  	CdWorldSearch.PrintUsage (player);  	return;  } else {  	worldName = worldName.ToLower ();  	var WorldNames = WorldManager.Worlds.Where (w => w.Name.ToLower ().Contains (worldName)).ToArray ();  	if (WorldNames.Length <= 30) {  		player.MessageManyMatches ("worlds"' WorldNames);  	} else {  		int offset;  		if (!cmd.NextInt (out offset))  			offset = 0;  		if (offset >= WorldNames.Count ())  			offset = Math.Max (0' WorldNames.Length - 30);  		World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  		player.MessageManyMatches ("worlds"' WorldPart);  		if (offset + WorldNames.Length < WorldNames.Length)  			player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  		else  			player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  		return;  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (WorldNames.Length <= 30) {  	player.MessageManyMatches ("worlds"' WorldNames);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= WorldNames.Count ())  		offset = Math.Max (0' WorldNames.Length - 30);  	World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  	player.MessageManyMatches ("worlds"' WorldPart);  	if (offset + WorldNames.Length < WorldNames.Length)  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  	else  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  	return;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (WorldNames.Length <= 30) {  	player.MessageManyMatches ("worlds"' WorldNames);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= WorldNames.Count ())  		offset = Math.Max (0' WorldNames.Length - 30);  	World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  	player.MessageManyMatches ("worlds"' WorldPart);  	if (offset + WorldNames.Length < WorldNames.Length)  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  	else  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  	return;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (WorldNames.Length <= 30) {  	player.MessageManyMatches ("worlds"' WorldNames);  } else {  	int offset;  	if (!cmd.NextInt (out offset))  		offset = 0;  	if (offset >= WorldNames.Count ())  		offset = Math.Max (0' WorldNames.Length - 30);  	World[] WorldPart = WorldNames.Skip (offset).Take (30).ToArray ();  	player.MessageManyMatches ("worlds"' WorldPart);  	if (offset + WorldNames.Length < WorldNames.Length)  		player.Message ("Showing {0}-{1} (out of {2}). Next: &H/List {3} {4}"' offset + 1' offset + WorldPart.Length' WorldNames.Length' "worldsearch"' offset + WorldPart.Length);  	else  		player.Message ("Showing matches {0}-{1} (out of {2})."' offset + 1' offset + WorldPart.Length' WorldNames.Length);  	return;  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: if (offset >= WorldNames.Count ())  	offset = Math.Max (0' WorldNames.Length - 30);  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldSearchHandler,The following statement contains a magic number: offset = Math.Max (0' WorldNames.Length - 30);  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: switch (text.Length) {  case 3:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  	green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	break;  case 4:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  	blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  	break;  case 6:  	red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  	green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  	blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  	break;  case 7:  	if (text [0] != '#')  		throw new FormatException ();  	red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  	green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  	blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [0]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [1]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [3]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: red = (byte)(HexToValue (text [0]) * 16 + HexToValue (text [1]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [2]) * 16 + HexToValue (text [3]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [4]) * 16 + HexToValue (text [5]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: red = (byte)(HexToValue (text [1]) * 16 + HexToValue (text [2]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: green = (byte)(HexToValue (text [3]) * 16 + HexToValue (text [4]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: blue = (byte)(HexToValue (text [5]) * 16 + HexToValue (text [6]));  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: return red * 256 * 256 + green * 256 + blue;  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: return red * 256 * 256 + green * 256 + blue;  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,ParseHexColor,The following statement contains a magic number: return red * 256 * 256 + green * 256 + blue;  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: if (c >= '0' && c <= '9') {  	return (byte)(c - '0');  } else if (c >= 'A' && c <= 'F') {  	return (byte)(c - 'A' + 10);  } else if (c >= 'a' && c <= 'f') {  	return (byte)(c - 'a' + 10);  } else {  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: if (c >= '0' && c <= '9') {  	return (byte)(c - '0');  } else if (c >= 'A' && c <= 'F') {  	return (byte)(c - 'A' + 10);  } else if (c >= 'a' && c <= 'f') {  	return (byte)(c - 'a' + 10);  } else {  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: if (c >= 'A' && c <= 'F') {  	return (byte)(c - 'A' + 10);  } else if (c >= 'a' && c <= 'f') {  	return (byte)(c - 'a' + 10);  } else {  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: if (c >= 'A' && c <= 'F') {  	return (byte)(c - 'A' + 10);  } else if (c >= 'a' && c <= 'f') {  	return (byte)(c - 'a' + 10);  } else {  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: return (byte)(c - 'A' + 10);  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: if (c >= 'a' && c <= 'f') {  	return (byte)(c - 'a' + 10);  } else {  	throw new FormatException ();  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,HexToValue,The following statement contains a magic number: return (byte)(c - 'a' + 10);  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: foreach (World world in WorldManager.Worlds) {  	if (world.RealisticEnv) {  		int sky;  		int clouds;  		int fog;  		DateTime now = DateTime.UtcNow;  		var SunriseStart = new TimeSpan (6' 30' 0);  		var SunriseEnd = new TimeSpan (7' 29' 59);  		var MorningStart = new TimeSpan (7' 30' 0);  		var MorningEnd = new TimeSpan (11' 59' 59);  		var NormalStart = new TimeSpan (12' 0' 0);  		var NormalEnd = new TimeSpan (16' 59' 59);  		var EveningStart = new TimeSpan (17' 0' 0);  		var EveningEnd = new TimeSpan (18' 59' 59);  		var SunsetStart = new TimeSpan (19' 0' 0);  		var SunsetEnd = new TimeSpan (19' 29' 59);  		var NightaStart = new TimeSpan (19' 30' 0);  		var NightaEnd = new TimeSpan (1' 0' 1);  		var NightbStart = new TimeSpan (1' 0' 2);  		var NightbEnd = new TimeSpan (6' 29' 59);  		if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  		 {  			sky = ParseHexColor ("ffff33");  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("ff3333");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  		 {  			sky = -1;  			clouds = ParseHexColor ("ff0033");  			fog = ParseHexColor ("fffff0");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  		 {  			sky = -1;  			clouds = -1;  			fog = -1;  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  		 {  			sky = ParseHexColor ("99cccc");  			clouds = -1;  			fog = ParseHexColor ("99ccff");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  		 {  			sky = ParseHexColor ("9999cc");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("cc9966");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Water;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  		 {  			sky = ParseHexColor ("003366");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Black;  			WorldManager.SaveWorldList ();  			return;  		}  		if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  		 {  			sky = ParseHexColor ("000000");  			clouds = ParseHexColor ("000033");  			fog = ParseHexColor ("000033");  			world.SkyColor = sky;  			world.CloudColor = clouds;  			world.FogColor = fog;  			world.EdgeBlock = Block.Obsidian;  			WorldManager.SaveWorldList ();  		}  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,TimeCheck,The following statement contains a magic number: if (world.RealisticEnv) {  	int sky;  	int clouds;  	int fog;  	DateTime now = DateTime.UtcNow;  	var SunriseStart = new TimeSpan (6' 30' 0);  	var SunriseEnd = new TimeSpan (7' 29' 59);  	var MorningStart = new TimeSpan (7' 30' 0);  	var MorningEnd = new TimeSpan (11' 59' 59);  	var NormalStart = new TimeSpan (12' 0' 0);  	var NormalEnd = new TimeSpan (16' 59' 59);  	var EveningStart = new TimeSpan (17' 0' 0);  	var EveningEnd = new TimeSpan (18' 59' 59);  	var SunsetStart = new TimeSpan (19' 0' 0);  	var SunsetEnd = new TimeSpan (19' 29' 59);  	var NightaStart = new TimeSpan (19' 30' 0);  	var NightaEnd = new TimeSpan (1' 0' 1);  	var NightbStart = new TimeSpan (1' 0' 2);  	var NightbEnd = new TimeSpan (6' 29' 59);  	if (now.TimeOfDay > SunriseStart && now.TimeOfDay < SunriseEnd)//sunrise  	 {  		sky = ParseHexColor ("ffff33");  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("ff3333");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > MorningStart && now.TimeOfDay < MorningEnd)//end of sunrise  	 {  		sky = -1;  		clouds = ParseHexColor ("ff0033");  		fog = ParseHexColor ("fffff0");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NormalStart && now.TimeOfDay < NormalEnd)//env normal  	 {  		sky = -1;  		clouds = -1;  		fog = -1;  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > EveningStart && now.TimeOfDay < EveningEnd)//evening  	 {  		sky = ParseHexColor ("99cccc");  		clouds = -1;  		fog = ParseHexColor ("99ccff");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > SunsetStart && now.TimeOfDay < SunsetEnd)//sunset  	 {  		sky = ParseHexColor ("9999cc");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("cc9966");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Water;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightaStart && now.TimeOfDay < NightaEnd)//end of sunset  	 {  		sky = ParseHexColor ("003366");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Black;  		WorldManager.SaveWorldList ();  		return;  	}  	if (now.TimeOfDay > NightbStart && now.TimeOfDay < NightbEnd)//black  	 {  		sky = ParseHexColor ("000000");  		clouds = ParseHexColor ("000033");  		fog = ParseHexColor ("000033");  		world.SkyColor = sky;  		world.CloudColor = clouds;  		world.FogColor = fog;  		world.EdgeBlock = Block.Obsidian;  		WorldManager.SaveWorldList ();  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: if (givenZoneName.StartsWith ("+")) {  	// personal zone (/ZAdd +Name)  	givenZoneName = givenZoneName.Substring (1);  	// Find the target player  	PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' givenZoneName);  	if (info == null)  		return;  	// Make sure that the name is not taken already.  	// If a zone named after the player already exists' try adding a number after the name (e.g. "Notch2")  	newZone.Name = info.Name;  	for (int i = 2; zoneCollection.Contains (newZone.Name); i++) {  		newZone.Name = givenZoneName + i;  	}  	newZone.Controller.MinRank = info.Rank.NextRankUp ?? info.Rank;  	newZone.Controller.Include (info);  	player.Message ("Zone: Creating a {0}+&S zone for player {1}&S."' newZone.Controller.MinRank.ClassyName' info.ClassyName);  } else {  	// Adding an ordinary' rank-restricted zone.  	if (!World.IsValidName (givenZoneName)) {  		player.Message ("\"{0}\" is not a valid zone name"' givenZoneName);  		return;  	}  	if (zoneCollection.Contains (givenZoneName)) {  		player.Message ("A zone with this name already exists. Use &H/ZEdit&S to edit.");  		return;  	}  	newZone.Name = givenZoneName;  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("No rank was specified. See &H/Help zone");  		return;  	}  	Rank minRank = RankManager.FindRank (rankName);  	if (minRank != null) {  		string name;  		while ((name = cmd.Next ()) != null) {  			if (name.Length == 0)  				continue;  			if (name.ToLower ().StartsWith ("msg=")) {  				newZone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  				player.Message ("Zone: Custom denied messaged changed to '" + newZone.Message + "'");  				break;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  			if (info == null)  				return;  			if (name.StartsWith ("+")) {  				newZone.Controller.Include (info);  			} else if (name.StartsWith ("-")) {  				newZone.Controller.Exclude (info);  			}  		}  		newZone.Controller.MinRank = minRank;  	} else {  		player.MessageNoRank (rankName);  		return;  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: if (givenZoneName.StartsWith ("+")) {  	// personal zone (/ZAdd +Name)  	givenZoneName = givenZoneName.Substring (1);  	// Find the target player  	PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' givenZoneName);  	if (info == null)  		return;  	// Make sure that the name is not taken already.  	// If a zone named after the player already exists' try adding a number after the name (e.g. "Notch2")  	newZone.Name = info.Name;  	for (int i = 2; zoneCollection.Contains (newZone.Name); i++) {  		newZone.Name = givenZoneName + i;  	}  	newZone.Controller.MinRank = info.Rank.NextRankUp ?? info.Rank;  	newZone.Controller.Include (info);  	player.Message ("Zone: Creating a {0}+&S zone for player {1}&S."' newZone.Controller.MinRank.ClassyName' info.ClassyName);  } else {  	// Adding an ordinary' rank-restricted zone.  	if (!World.IsValidName (givenZoneName)) {  		player.Message ("\"{0}\" is not a valid zone name"' givenZoneName);  		return;  	}  	if (zoneCollection.Contains (givenZoneName)) {  		player.Message ("A zone with this name already exists. Use &H/ZEdit&S to edit.");  		return;  	}  	newZone.Name = givenZoneName;  	string rankName = cmd.Next ();  	if (rankName == null) {  		player.Message ("No rank was specified. See &H/Help zone");  		return;  	}  	Rank minRank = RankManager.FindRank (rankName);  	if (minRank != null) {  		string name;  		while ((name = cmd.Next ()) != null) {  			if (name.Length == 0)  				continue;  			if (name.ToLower ().StartsWith ("msg=")) {  				newZone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  				player.Message ("Zone: Custom denied messaged changed to '" + newZone.Message + "'");  				break;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  			if (info == null)  				return;  			if (name.StartsWith ("+")) {  				newZone.Controller.Include (info);  			} else if (name.StartsWith ("-")) {  				newZone.Controller.Exclude (info);  			}  		}  		newZone.Controller.MinRank = minRank;  	} else {  		player.MessageNoRank (rankName);  		return;  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: for (int i = 2; zoneCollection.Contains (newZone.Name); i++) {  	newZone.Name = givenZoneName + i;  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: if (minRank != null) {  	string name;  	while ((name = cmd.Next ()) != null) {  		if (name.Length == 0)  			continue;  		if (name.ToLower ().StartsWith ("msg=")) {  			newZone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  			player.Message ("Zone: Custom denied messaged changed to '" + newZone.Message + "'");  			break;  		}  		PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  		if (info == null)  			return;  		if (name.StartsWith ("+")) {  			newZone.Controller.Include (info);  		} else if (name.StartsWith ("-")) {  			newZone.Controller.Exclude (info);  		}  	}  	newZone.Controller.MinRank = minRank;  } else {  	player.MessageNoRank (rankName);  	return;  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: while ((name = cmd.Next ()) != null) {  	if (name.Length == 0)  		continue;  	if (name.ToLower ().StartsWith ("msg=")) {  		newZone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  		player.Message ("Zone: Custom denied messaged changed to '" + newZone.Message + "'");  		break;  	}  	PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  	if (info == null)  		return;  	if (name.StartsWith ("+")) {  		newZone.Controller.Include (info);  	} else if (name.StartsWith ("-")) {  		newZone.Controller.Exclude (info);  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: if (name.ToLower ().StartsWith ("msg=")) {  	newZone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  	player.Message ("Zone: Custom denied messaged changed to '" + newZone.Message + "'");  	break;  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: newZone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following statement contains a magic number: player.SelectionStart (2' ZoneAddCallback' newZone' CdZoneAdd.Permissions);  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following statement contains a magic number: while ((name = cmd.Next ()) != null) {  	if (name.StartsWith ("+")) {  		if (name.Length == 1) {  			CdZoneEdit.PrintUsage (player);  			break;  		}  		PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  		if (info == null)  			return;  		// prevent players from whitelisting themselves to bypass protection  		if (!player.Info.Rank.AllowSecurityCircumvention && player.Info == info) {  			if (!zone.Controller.Check (info)) {  				player.Message ("You must be {0}+&S to add yourself to this zone's whitelist."' zone.Controller.MinRank.ClassyName);  				continue;  			}  		}  		switch (zone.Controller.Include (info)) {  		case PermissionOverride.Deny:  			player.Message ("{0}&S is no longer excluded from zone {1}"' info.ClassyName' zone.ClassyName);  			changesWereMade = true;  			break;  		case PermissionOverride.None:  			player.Message ("{0}&S is now included in zone {1}"' info.ClassyName' zone.ClassyName);  			changesWereMade = true;  			break;  		case PermissionOverride.Allow:  			player.Message ("{0}&S is already included in zone {1}"' info.ClassyName' zone.ClassyName);  			break;  		}  	} else if (name.StartsWith ("-")) {  		if (name.Length == 1) {  			CdZoneEdit.PrintUsage (player);  			break;  		}  		PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  		if (info == null)  			return;  		switch (zone.Controller.Exclude (info)) {  		case PermissionOverride.Deny:  			player.Message ("{0}&S is already excluded from zone {1}"' info.ClassyName' zone.ClassyName);  			break;  		case PermissionOverride.None:  			player.Message ("{0}&S is now excluded from zone {1}"' info.ClassyName' zone.ClassyName);  			changesWereMade = true;  			break;  		case PermissionOverride.Allow:  			player.Message ("{0}&S is no longer included in zone {1}"' info.ClassyName' zone.ClassyName);  			changesWereMade = true;  			break;  		}  	} else if (name.ToLower ().StartsWith ("msg=")) {  		zone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  		changesWereMade = true;  		player.Message ("Zedit: Custom denied messaged changed to '" + zone.Message + "'");  		break;  	} else {  		Rank minRank = RankManager.FindRank (name);  		if (minRank != null) {  			// prevent players from lowering rank so bypass protection  			if (!player.Info.Rank.AllowSecurityCircumvention && zone.Controller.MinRank > player.Info.Rank && minRank <= player.Info.Rank) {  				player.Message ("You are not allowed to lower the zone's rank.");  				continue;  			}  			if (zone.Controller.MinRank != minRank) {  				zone.Controller.MinRank = minRank;  				player.Message ("Permission for zone \"{0}\" changed to {1}+"' zone.Name' minRank.ClassyName);  				changesWereMade = true;  			}  		} else {  			player.MessageNoRank (name);  		}  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following statement contains a magic number: if (name.StartsWith ("+")) {  	if (name.Length == 1) {  		CdZoneEdit.PrintUsage (player);  		break;  	}  	PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  	if (info == null)  		return;  	// prevent players from whitelisting themselves to bypass protection  	if (!player.Info.Rank.AllowSecurityCircumvention && player.Info == info) {  		if (!zone.Controller.Check (info)) {  			player.Message ("You must be {0}+&S to add yourself to this zone's whitelist."' zone.Controller.MinRank.ClassyName);  			continue;  		}  	}  	switch (zone.Controller.Include (info)) {  	case PermissionOverride.Deny:  		player.Message ("{0}&S is no longer excluded from zone {1}"' info.ClassyName' zone.ClassyName);  		changesWereMade = true;  		break;  	case PermissionOverride.None:  		player.Message ("{0}&S is now included in zone {1}"' info.ClassyName' zone.ClassyName);  		changesWereMade = true;  		break;  	case PermissionOverride.Allow:  		player.Message ("{0}&S is already included in zone {1}"' info.ClassyName' zone.ClassyName);  		break;  	}  } else if (name.StartsWith ("-")) {  	if (name.Length == 1) {  		CdZoneEdit.PrintUsage (player);  		break;  	}  	PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  	if (info == null)  		return;  	switch (zone.Controller.Exclude (info)) {  	case PermissionOverride.Deny:  		player.Message ("{0}&S is already excluded from zone {1}"' info.ClassyName' zone.ClassyName);  		break;  	case PermissionOverride.None:  		player.Message ("{0}&S is now excluded from zone {1}"' info.ClassyName' zone.ClassyName);  		changesWereMade = true;  		break;  	case PermissionOverride.Allow:  		player.Message ("{0}&S is no longer included in zone {1}"' info.ClassyName' zone.ClassyName);  		changesWereMade = true;  		break;  	}  } else if (name.ToLower ().StartsWith ("msg=")) {  	zone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  	changesWereMade = true;  	player.Message ("Zedit: Custom denied messaged changed to '" + zone.Message + "'");  	break;  } else {  	Rank minRank = RankManager.FindRank (name);  	if (minRank != null) {  		// prevent players from lowering rank so bypass protection  		if (!player.Info.Rank.AllowSecurityCircumvention && zone.Controller.MinRank > player.Info.Rank && minRank <= player.Info.Rank) {  			player.Message ("You are not allowed to lower the zone's rank.");  			continue;  		}  		if (zone.Controller.MinRank != minRank) {  			zone.Controller.MinRank = minRank;  			player.Message ("Permission for zone \"{0}\" changed to {1}+"' zone.Name' minRank.ClassyName);  			changesWereMade = true;  		}  	} else {  		player.MessageNoRank (name);  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following statement contains a magic number: if (name.StartsWith ("-")) {  	if (name.Length == 1) {  		CdZoneEdit.PrintUsage (player);  		break;  	}  	PlayerInfo info = PlayerDB.FindPlayerInfoOrPrintMatches (player' name.Substring (1));  	if (info == null)  		return;  	switch (zone.Controller.Exclude (info)) {  	case PermissionOverride.Deny:  		player.Message ("{0}&S is already excluded from zone {1}"' info.ClassyName' zone.ClassyName);  		break;  	case PermissionOverride.None:  		player.Message ("{0}&S is now excluded from zone {1}"' info.ClassyName' zone.ClassyName);  		changesWereMade = true;  		break;  	case PermissionOverride.Allow:  		player.Message ("{0}&S is no longer included in zone {1}"' info.ClassyName' zone.ClassyName);  		changesWereMade = true;  		break;  	}  } else if (name.ToLower ().StartsWith ("msg=")) {  	zone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  	changesWereMade = true;  	player.Message ("Zedit: Custom denied messaged changed to '" + zone.Message + "'");  	break;  } else {  	Rank minRank = RankManager.FindRank (name);  	if (minRank != null) {  		// prevent players from lowering rank so bypass protection  		if (!player.Info.Rank.AllowSecurityCircumvention && zone.Controller.MinRank > player.Info.Rank && minRank <= player.Info.Rank) {  			player.Message ("You are not allowed to lower the zone's rank.");  			continue;  		}  		if (zone.Controller.MinRank != minRank) {  			zone.Controller.MinRank = minRank;  			player.Message ("Permission for zone \"{0}\" changed to {1}+"' zone.Name' minRank.ClassyName);  			changesWereMade = true;  		}  	} else {  		player.MessageNoRank (name);  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following statement contains a magic number: if (name.ToLower ().StartsWith ("msg=")) {  	zone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  	changesWereMade = true;  	player.Message ("Zedit: Custom denied messaged changed to '" + zone.Message + "'");  	break;  } else {  	Rank minRank = RankManager.FindRank (name);  	if (minRank != null) {  		// prevent players from lowering rank so bypass protection  		if (!player.Info.Rank.AllowSecurityCircumvention && zone.Controller.MinRank > player.Info.Rank && minRank <= player.Info.Rank) {  			player.Message ("You are not allowed to lower the zone's rank.");  			continue;  		}  		if (zone.Controller.MinRank != minRank) {  			zone.Controller.MinRank = minRank;  			player.Message ("Permission for zone \"{0}\" changed to {1}+"' zone.Name' minRank.ClassyName);  			changesWereMade = true;  		}  	} else {  		player.MessageNoRank (name);  	}  }  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following statement contains a magic number: zone.Message = name.Substring (4) + " " + (cmd.NextAll () ?? "");  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The following statement contains a magic number: player.Message ("  Zone center is at ({0}'{1}'{2})."' (zone.Bounds.XMin + zone.Bounds.XMax) / 2' (zone.Bounds.YMin + zone.Bounds.YMax) / 2' (zone.Bounds.ZMin + zone.Bounds.ZMax) / 2);  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The following statement contains a magic number: player.Message ("  Zone center is at ({0}'{1}'{2})."' (zone.Bounds.XMin + zone.Bounds.XMax) / 2' (zone.Bounds.YMin + zone.Bounds.YMax) / 2' (zone.Bounds.ZMin + zone.Bounds.ZMax) / 2);  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneInfoHandler,The following statement contains a magic number: player.Message ("  Zone center is at ({0}'{1}'{2})."' (zone.Bounds.XMin + zone.Bounds.XMax) / 2' (zone.Bounds.YMin + zone.Bounds.YMax) / 2' (zone.Bounds.ZMin + zone.Bounds.ZMax) / 2);  
Magic Number,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneMarkHandler,The following statement contains a magic number: switch (player.SelectionMarksExpected) {  case 0:  	player.MessageNow ("Cannot use ZMark - no selection in progress.");  	break;  case 2:  	{  		string zoneName = cmd.Next ();  		if (zoneName == null) {  			CdZoneMark.PrintUsage (player);  			return;  		}  		Zone zone = player.WorldMap.Zones.Find (zoneName);  		if (zone == null) {  			player.MessageNoZone (zoneName);  			return;  		}  		player.SelectionResetMarks ();  		player.SelectionAddMark (zone.Bounds.MinVertex' false);  		player.SelectionAddMark (zone.Bounds.MaxVertex' true);  	}  	break;  default:  	player.MessageNow ("ZMark can only be used for 2-block selection.");  	break;  }  
Magic Number,fCraft,Football,F:\newReposMay17\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: if (e.Coords == _world.footballPos) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	Vector3F dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	_world.AddPhysicsTask (new Particle (_world' e.Coords' dir' e.Player' Block.White' _footballBehavior)' 0);  }  
Magic Number,fCraft,Football,F:\newReposMay17\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: if (e.Coords == _world.footballPos) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	Vector3F dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	_world.AddPhysicsTask (new Particle (_world' e.Coords' dir' e.Player' Block.White' _footballBehavior)' 0);  }  
Magic Number,fCraft,Football,F:\newReposMay17\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: if (e.Coords == _world.footballPos) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	Vector3F dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	_world.AddPhysicsTask (new Particle (_world' e.Coords' dir' e.Player' Block.White' _footballBehavior)' 0);  }  
Magic Number,fCraft,Football,F:\newReposMay17\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: if (e.Coords == _world.footballPos) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	Vector3F dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	_world.AddPhysicsTask (new Particle (_world' e.Coords' dir' e.Player' Block.White' _footballBehavior)' 0);  }  
Magic Number,fCraft,Football,F:\newReposMay17\GlennMR_800craft\fCraft\Games\Football.cs,ClickedFootball,The following statement contains a magic number: if (e.Coords == _world.footballPos) {  	double ksi = 2.0 * Math.PI * (-e.Player.Position.L) / 256.0;  	double r = Math.Cos (ksi);  	double phi = 2.0 * Math.PI * (e.Player.Position.R - 64) / 256.0;  	Vector3F dir = new Vector3F ((float)(r * Math.Cos (phi))' (float)(r * Math.Sin (phi))' (float)(Math.Sin (ksi)));  	_world.AddPhysicsTask (new Particle (_world' e.Coords' dir' e.Player' Block.White' _footballBehavior)' 0);  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: _map.Spawn = new Position (_map.Width / 2' 5' _ground + 3).ToVector3I ().ToPlayerCoords ();  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: _map.Spawn = new Position (_map.Width / 2' 5' _ground + 3).ToVector3I ().ToPlayerCoords ();  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,Start,The following statement contains a magic number: _map.Spawn = new Position (_map.Width / 2' 5' _ground + 3).ToVector3I ().ToPlayerCoords ();  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpRed,The following statement contains a magic number: for (int x = 0; x <= _map.Width; x++) {  	for (int y = 0; y <= 10; y++) {  		_map.SetBlock (x' y' _ground' Block.Red);  		_map.SetBlock (x' y' _ground - 1' Block.Black);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpRed,The following statement contains a magic number: for (int y = 0; y <= 10; y++) {  	_map.SetBlock (x' y' _ground' Block.Red);  	_map.SetBlock (x' y' _ground - 1' Block.Black);  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMiddleWater,The following statement contains a magic number: for (int x = _map.Width; x >= 0; x--) {  	for (int y = _map.Length - 50; y >= _map.Length - 56; y--) {  		_map.SetBlock (x' y' _ground' Block.Water);  		_map.SetBlock (x' y' _ground - 1' Block.Water);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMiddleWater,The following statement contains a magic number: for (int x = _map.Width; x >= 0; x--) {  	for (int y = _map.Length - 50; y >= _map.Length - 56; y--) {  		_map.SetBlock (x' y' _ground' Block.Water);  		_map.SetBlock (x' y' _ground - 1' Block.Water);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMiddleWater,The following statement contains a magic number: for (int y = _map.Length - 50; y >= _map.Length - 56; y--) {  	_map.SetBlock (x' y' _ground' Block.Water);  	_map.SetBlock (x' y' _ground - 1' Block.Water);  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMiddleWater,The following statement contains a magic number: for (int y = _map.Length - 50; y >= _map.Length - 56; y--) {  	_map.SetBlock (x' y' _ground' Block.Water);  	_map.SetBlock (x' y' _ground - 1' Block.Water);  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpGreen,The following statement contains a magic number: for (int x = _map.Width; x >= 0; x--) {  	for (int y = _map.Length; y >= _map.Length - 10; y--) {  		_map.SetBlock (x' y' _ground' Block.Green);  		_map.SetBlock (x' y' _ground - 1' Block.Black);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpGreen,The following statement contains a magic number: for (int y = _map.Length; y >= _map.Length - 10; y--) {  	_map.SetBlock (x' y' _ground' Block.Green);  	_map.SetBlock (x' y' _ground - 1' Block.Black);  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: for (short i = 0; i <= _map.Width; ++i) {  	for (short j = 0; j <= _map.Length; ++j) {  		if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) {  			_map.SetBlock (i' j' _ground' Block.Dirt);  			_map.SetBlock (i' j' _ground - 1' Block.Dirt);  			if (_rand.Next (1' 100) > 96) {  				Vector3I vec = new Vector3I (i' j' _ground);  				Mines.TryAdd (vec.ToString ()' vec);  				//_map.SetBlock(vec' Block.Red);//  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: for (short i = 0; i <= _map.Width; ++i) {  	for (short j = 0; j <= _map.Length; ++j) {  		if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) {  			_map.SetBlock (i' j' _ground' Block.Dirt);  			_map.SetBlock (i' j' _ground - 1' Block.Dirt);  			if (_rand.Next (1' 100) > 96) {  				Vector3I vec = new Vector3I (i' j' _ground);  				Mines.TryAdd (vec.ToString ()' vec);  				//_map.SetBlock(vec' Block.Red);//  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: for (short j = 0; j <= _map.Length; ++j) {  	if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) {  		_map.SetBlock (i' j' _ground' Block.Dirt);  		_map.SetBlock (i' j' _ground - 1' Block.Dirt);  		if (_rand.Next (1' 100) > 96) {  			Vector3I vec = new Vector3I (i' j' _ground);  			Mines.TryAdd (vec.ToString ()' vec);  			//_map.SetBlock(vec' Block.Red);//  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: for (short j = 0; j <= _map.Length; ++j) {  	if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) {  		_map.SetBlock (i' j' _ground' Block.Dirt);  		_map.SetBlock (i' j' _ground - 1' Block.Dirt);  		if (_rand.Next (1' 100) > 96) {  			Vector3I vec = new Vector3I (i' j' _ground);  			Mines.TryAdd (vec.ToString ()' vec);  			//_map.SetBlock(vec' Block.Red);//  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) {  	_map.SetBlock (i' j' _ground' Block.Dirt);  	_map.SetBlock (i' j' _ground - 1' Block.Dirt);  	if (_rand.Next (1' 100) > 96) {  		Vector3I vec = new Vector3I (i' j' _ground);  		Mines.TryAdd (vec.ToString ()' vec);  		//_map.SetBlock(vec' Block.Red);//  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: if (_map.GetBlock (i' j' _ground) != Block.Red && _map.GetBlock (i' j' _ground) != Block.Green && _map.GetBlock (i' j' _ground) != Block.Water) {  	_map.SetBlock (i' j' _ground' Block.Dirt);  	_map.SetBlock (i' j' _ground - 1' Block.Dirt);  	if (_rand.Next (1' 100) > 96) {  		Vector3I vec = new Vector3I (i' j' _ground);  		Mines.TryAdd (vec.ToString ()' vec);  		//_map.SetBlock(vec' Block.Red);//  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: if (_rand.Next (1' 100) > 96) {  	Vector3I vec = new Vector3I (i' j' _ground);  	Mines.TryAdd (vec.ToString ()' vec);  	//_map.SetBlock(vec' Block.Red);//  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,SetUpMines,The following statement contains a magic number: if (_rand.Next (1' 100) > 96) {  	Vector3I vec = new Vector3I (i' j' _ground);  	Mines.TryAdd (vec.ToString ()' vec);  	//_map.SetBlock(vec' Block.Red);//  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world != null && e.Player.World == _world) {  	if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_map.InBounds (newPos)) {  					e.Player.TeleportTo (_map.Spawn);  					newPos = (Vector3I)_map.Spawn;  				}  				// Check if the player jumped' flew' whatevers  				if (newPos.Z > _ground + 2) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  				foreach (Vector3I pos in Mines.Values) {  					if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  						_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  						_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  						Vector3I removed;  						Mines.TryRemove (pos.ToString ()' out removed);  					}  				}  				if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  					_stopped = true;  					Stop (e.Player' true);  				}  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_world.gameMode == GameMode.MineField && !Failed.Contains (e.Player)) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_map.InBounds (newPos)) {  				e.Player.TeleportTo (_map.Spawn);  				newPos = (Vector3I)_map.Spawn;  			}  			// Check if the player jumped' flew' whatevers  			if (newPos.Z > _ground + 2) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  			foreach (Vector3I pos in Mines.Values) {  				if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  					_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  					_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  					Vector3I removed;  					Mines.TryRemove (pos.ToString ()' out removed);  				}  			}  			if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  				_stopped = true;  				Stop (e.Player' true);  			}  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_map.InBounds (newPos)) {  			e.Player.TeleportTo (_map.Spawn);  			newPos = (Vector3I)_map.Spawn;  		}  		// Check if the player jumped' flew' whatevers  		if (newPos.Z > _ground + 2) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  		foreach (Vector3I pos in Mines.Values) {  			if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  				_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  				_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  				Vector3I removed;  				Mines.TryRemove (pos.ToString ()' out removed);  			}  		}  		if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  			_stopped = true;  			Stop (e.Player' true);  		}  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  	if (!_map.InBounds (newPos)) {  		e.Player.TeleportTo (_map.Spawn);  		newPos = (Vector3I)_map.Spawn;  	}  	// Check if the player jumped' flew' whatevers  	if (newPos.Z > _ground + 2) {  		e.Player.TeleportTo (e.OldPosition);  		newPos = oldPos;  	}  	foreach (Vector3I pos in Mines.Values) {  		if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  			_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  			_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  			Vector3I removed;  			Mines.TryRemove (pos.ToString ()' out removed);  		}  	}  	if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  		_stopped = true;  		Stop (e.Player' true);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  	if (!_map.InBounds (newPos)) {  		e.Player.TeleportTo (_map.Spawn);  		newPos = (Vector3I)_map.Spawn;  	}  	// Check if the player jumped' flew' whatevers  	if (newPos.Z > _ground + 2) {  		e.Player.TeleportTo (e.OldPosition);  		newPos = oldPos;  	}  	foreach (Vector3I pos in Mines.Values) {  		if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  			_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  			_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  			Vector3I removed;  			Mines.TryRemove (pos.ToString ()' out removed);  		}  	}  	if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  		_stopped = true;  		Stop (e.Player' true);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  	if (!_map.InBounds (newPos)) {  		e.Player.TeleportTo (_map.Spawn);  		newPos = (Vector3I)_map.Spawn;  	}  	// Check if the player jumped' flew' whatevers  	if (newPos.Z > _ground + 2) {  		e.Player.TeleportTo (e.OldPosition);  		newPos = oldPos;  	}  	foreach (Vector3I pos in Mines.Values) {  		if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  			_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  			_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  			Vector3I removed;  			Mines.TryRemove (pos.ToString ()' out removed);  		}  	}  	if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  		_stopped = true;  		Stop (e.Player' true);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (newPos.Z > _ground + 2) {  	e.Player.TeleportTo (e.OldPosition);  	newPos = oldPos;  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: foreach (Vector3I pos in Mines.Values) {  	if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  		_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  		_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  		Vector3I removed;  		Mines.TryRemove (pos.ToString ()' out removed);  	}  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (newPos == new Vector3I (pos.X' pos.Y' pos.Z + 2) || newPos == new Vector3I (pos.X' pos.Y' pos.Z + 1) || newPos == new Vector3I (pos.X' pos.Y' pos.Z)) {  	_world.Map.QueueUpdate (new BlockUpdate (null' pos' Block.TNT));  	_world.AddPhysicsTask (new TNTTask (_world' pos' null' true' false)' 0);  	Vector3I removed;  	Mines.TryRemove (pos.ToString ()' out removed);  }  
Magic Number,fCraft,MineField,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineField.cs,PlayerMoving,The following statement contains a magic number: if (_map.GetBlock (newPos.X' newPos.Y' newPos.Z - 2) == Block.Green && !_stopped) {  	_stopped = true;  	Stop (e.Player' true);  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Start,The following statement contains a magic number: Scheduler.NewTask (t => _world.Players.Message ("&WThe game will be starting soon...")).RunRepeating (TimeSpan.FromSeconds (0)' TimeSpan.FromSeconds (20)' 2);  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Start,The following statement contains a magic number: Scheduler.NewTask (t => _world.Players.Message ("&WThe game will be starting soon...")).RunRepeating (TimeSpan.FromSeconds (0)' TimeSpan.FromSeconds (20)' 2);  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Interval,The following statement contains a magic number: if (_started && startTime != null && (DateTime.UtcNow - startTime).TotalMinutes >= 5) {  	_world.Players.Message ("&WThe Zombies have failed to infect everyone... &9HUMANS WIN!");  	Stop (null);  	return;  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,Interval,The following statement contains a magic number: if (lastChecked != null && (DateTime.UtcNow - lastChecked).TotalSeconds >= 30) {  	_world.Players.Message ("&WThere are {0} humans"' _humanCount.ToString ());  	foreach (Player p in _world.Players) {  		if (p.iName == _zomb)  			p.Message ("&8You are " + _zomb);  		else  			p.Message ("&8You are a Human");  	}  	lastChecked = DateTime.UtcNow;  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.gameMode == GameMode.ZombieSurvival) {  	if (e.Player.World.Name == _world.Name && _world != null) {  		if (e.NewPosition != null) {  			Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  			Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  			//check player bounds' revert if needed  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				if (!_world.Map.InBounds (newPos)) {  					e.Player.TeleportTo (_world.Map.Spawn);  					newPos = (Vector3I)_world.Map.Spawn;  				}  				if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  					e.Player.TeleportTo (e.OldPosition);  					newPos = oldPos;  				}  			}  			//if they are inbounds' check infection zone (33*33) and infect if needed  			if (_world.Map.InBounds (newPos)) {  				if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  					foreach (Player p in _world.Players) {  						Vector3I pos = p.Position.ToBlockCoords ();  						if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  							ToZombie (e.Player' p);  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.Player.World.Name == _world.Name && _world != null) {  	if (e.NewPosition != null) {  		Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  		Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  		//check player bounds' revert if needed  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			if (!_world.Map.InBounds (newPos)) {  				e.Player.TeleportTo (_world.Map.Spawn);  				newPos = (Vector3I)_world.Map.Spawn;  			}  			if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  				e.Player.TeleportTo (e.OldPosition);  				newPos = oldPos;  			}  		}  		//if they are inbounds' check infection zone (33*33) and infect if needed  		if (_world.Map.InBounds (newPos)) {  			if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  				foreach (Player p in _world.Players) {  					Vector3I pos = p.Position.ToBlockCoords ();  					if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  						ToZombie (e.Player' p);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition != null) {  	Vector3I oldPos = new Vector3I (e.OldPosition.X / 32' e.OldPosition.Y / 32' e.OldPosition.Z / 32);  	Vector3I newPos = new Vector3I (e.NewPosition.X / 32' e.NewPosition.Y / 32' e.NewPosition.Z / 32);  	//check player bounds' revert if needed  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		if (!_world.Map.InBounds (newPos)) {  			e.Player.TeleportTo (_world.Map.Spawn);  			newPos = (Vector3I)_world.Map.Spawn;  		}  		if (oldPos.X - newPos.X > 1 || oldPos.Y - newPos.Y > 1 || newPos.X - oldPos.X > 1 || newPos.Y - oldPos.Y > 1) {  			e.Player.TeleportTo (e.OldPosition);  			newPos = oldPos;  		}  	}  	//if they are inbounds' check infection zone (33*33) and infect if needed  	if (_world.Map.InBounds (newPos)) {  		if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  			foreach (Player p in _world.Players) {  				Vector3I pos = p.Position.ToBlockCoords ();  				if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  					ToZombie (e.Player' p);  				}  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (_world.Map.InBounds (newPos)) {  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		foreach (Player p in _world.Players) {  			Vector3I pos = p.Position.ToBlockCoords ();  			if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  				ToZombie (e.Player' p);  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (_world.Map.InBounds (newPos)) {  	if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  		foreach (Player p in _world.Players) {  			Vector3I pos = p.Position.ToBlockCoords ();  			if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  				ToZombie (e.Player' p);  			}  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  	foreach (Player p in _world.Players) {  		Vector3I pos = p.Position.ToBlockCoords ();  		if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  			ToZombie (e.Player' p);  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (oldPos.X != newPos.X || oldPos.Y != newPos.Y || oldPos.Z != newPos.Z) {  	foreach (Player p in _world.Players) {  		Vector3I pos = p.Position.ToBlockCoords ();  		if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  			ToZombie (e.Player' p);  		}  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: foreach (Player p in _world.Players) {  	Vector3I pos = p.Position.ToBlockCoords ();  	if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  		ToZombie (e.Player' p);  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: foreach (Player p in _world.Players) {  	Vector3I pos = p.Position.ToBlockCoords ();  	if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  		ToZombie (e.Player' p);  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  	ToZombie (e.Player' p);  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,OnPlayerMoved,The following statement contains a magic number: if (e.NewPosition.DistanceSquaredTo (pos.ToPlayerCoords ()) <= 33 * 33) {  	ToZombie (e.Player' p);  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: foreach (Player p in _world.Players) {  	int x = rand.Next (2' _world.Map.Width);  	int y = rand.Next (2' _world.Map.Length);  	int z1 = 0;  	for (int z = _world.Map.Height - 1; z > 0; z--) {  		if (_world.Map.GetBlock (x' y' z) != Block.Air) {  			z1 = z + 3;  			break;  		}  	}  	p.TeleportTo (new Position (x' y' z1 + 2).ToVector3I ().ToPlayerCoords ());  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: foreach (Player p in _world.Players) {  	int x = rand.Next (2' _world.Map.Width);  	int y = rand.Next (2' _world.Map.Length);  	int z1 = 0;  	for (int z = _world.Map.Height - 1; z > 0; z--) {  		if (_world.Map.GetBlock (x' y' z) != Block.Air) {  			z1 = z + 3;  			break;  		}  	}  	p.TeleportTo (new Position (x' y' z1 + 2).ToVector3I ().ToPlayerCoords ());  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: foreach (Player p in _world.Players) {  	int x = rand.Next (2' _world.Map.Width);  	int y = rand.Next (2' _world.Map.Length);  	int z1 = 0;  	for (int z = _world.Map.Height - 1; z > 0; z--) {  		if (_world.Map.GetBlock (x' y' z) != Block.Air) {  			z1 = z + 3;  			break;  		}  	}  	p.TeleportTo (new Position (x' y' z1 + 2).ToVector3I ().ToPlayerCoords ());  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: foreach (Player p in _world.Players) {  	int x = rand.Next (2' _world.Map.Width);  	int y = rand.Next (2' _world.Map.Length);  	int z1 = 0;  	for (int z = _world.Map.Height - 1; z > 0; z--) {  		if (_world.Map.GetBlock (x' y' z) != Block.Air) {  			z1 = z + 3;  			break;  		}  	}  	p.TeleportTo (new Position (x' y' z1 + 2).ToVector3I ().ToPlayerCoords ());  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: for (int z = _world.Map.Height - 1; z > 0; z--) {  	if (_world.Map.GetBlock (x' y' z) != Block.Air) {  		z1 = z + 3;  		break;  	}  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: if (_world.Map.GetBlock (x' y' z) != Block.Air) {  	z1 = z + 3;  	break;  }  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: z1 = z + 3;  
Magic Number,fCraft,ZombieGame,F:\newReposMay17\GlennMR_800craft\fCraft\Games\ZombieGame.cs,ShufflePlayerPositions,The following statement contains a magic number: p.TeleportTo (new Position (x' y' z1 + 2).ToVector3I ().ToPlayerCoords ());  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax + 1 && (player.Position.X / 32) >= Range.Xmin - 1) {  	if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax + 1 && (player.Position.X / 32) >= Range.Xmin - 1) {  	if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax + 1 && (player.Position.X / 32) >= Range.Xmin - 1) {  	if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax + 1 && (player.Position.X / 32) >= Range.Xmin - 1) {  	if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax + 1 && (player.Position.X / 32) >= Range.Xmin - 1) {  	if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax + 1 && (player.Position.X / 32) >= Range.Xmin - 1) {  	if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax + 1 && (player.Position.Y / 32) >= Range.Ymin - 1) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  	return true;  }  
Magic Number,fCraft,MessageBlock,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlock.cs,IsInRange,The following statement contains a magic number: if (((player.Position.Z / 32) - 1) <= Range.Zmax + 1 && ((player.Position.Z / 32) - 1) >= Range.Zmin - 1) {  	return true;  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Map.MessageBlocks != null) {  	if (e.Map.MessageBlocks.Count > 0) {  		lock (e.Map.MessageBlocks) {  			foreach (MessageBlock mb in e.Map.MessageBlocks) {  				if (e.Coords == mb.AffectedBlock) {  					e.Result = CanPlaceResult.Revert;  					if (e.Context == BlockChangeContext.Manual) {  						if (mb.IsInRange (e.Coords)) {  							string M = mb.GetMessage ();  							if (M == "")  								return;  							if (e.Player.LastUsedMessageBlock == null) {  								e.Player.LastUsedMessageBlock = DateTime.UtcNow;  								e.Player.Message (M);  								return;  							}  							if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  								e.Player.Message (M);  								e.Player.LastUsedMessageBlock = DateTime.UtcNow;  							}  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Map.MessageBlocks.Count > 0) {  	lock (e.Map.MessageBlocks) {  		foreach (MessageBlock mb in e.Map.MessageBlocks) {  			if (e.Coords == mb.AffectedBlock) {  				e.Result = CanPlaceResult.Revert;  				if (e.Context == BlockChangeContext.Manual) {  					if (mb.IsInRange (e.Coords)) {  						string M = mb.GetMessage ();  						if (M == "")  							return;  						if (e.Player.LastUsedMessageBlock == null) {  							e.Player.LastUsedMessageBlock = DateTime.UtcNow;  							e.Player.Message (M);  							return;  						}  						if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  							e.Player.Message (M);  							e.Player.LastUsedMessageBlock = DateTime.UtcNow;  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: lock (e.Map.MessageBlocks) {  	foreach (MessageBlock mb in e.Map.MessageBlocks) {  		if (e.Coords == mb.AffectedBlock) {  			e.Result = CanPlaceResult.Revert;  			if (e.Context == BlockChangeContext.Manual) {  				if (mb.IsInRange (e.Coords)) {  					string M = mb.GetMessage ();  					if (M == "")  						return;  					if (e.Player.LastUsedMessageBlock == null) {  						e.Player.LastUsedMessageBlock = DateTime.UtcNow;  						e.Player.Message (M);  						return;  					}  					if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  						e.Player.Message (M);  						e.Player.LastUsedMessageBlock = DateTime.UtcNow;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: foreach (MessageBlock mb in e.Map.MessageBlocks) {  	if (e.Coords == mb.AffectedBlock) {  		e.Result = CanPlaceResult.Revert;  		if (e.Context == BlockChangeContext.Manual) {  			if (mb.IsInRange (e.Coords)) {  				string M = mb.GetMessage ();  				if (M == "")  					return;  				if (e.Player.LastUsedMessageBlock == null) {  					e.Player.LastUsedMessageBlock = DateTime.UtcNow;  					e.Player.Message (M);  					return;  				}  				if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  					e.Player.Message (M);  					e.Player.LastUsedMessageBlock = DateTime.UtcNow;  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Coords == mb.AffectedBlock) {  	e.Result = CanPlaceResult.Revert;  	if (e.Context == BlockChangeContext.Manual) {  		if (mb.IsInRange (e.Coords)) {  			string M = mb.GetMessage ();  			if (M == "")  				return;  			if (e.Player.LastUsedMessageBlock == null) {  				e.Player.LastUsedMessageBlock = DateTime.UtcNow;  				e.Player.Message (M);  				return;  			}  			if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  				e.Player.Message (M);  				e.Player.LastUsedMessageBlock = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (mb.IsInRange (e.Coords)) {  		string M = mb.GetMessage ();  		if (M == "")  			return;  		if (e.Player.LastUsedMessageBlock == null) {  			e.Player.LastUsedMessageBlock = DateTime.UtcNow;  			e.Player.Message (M);  			return;  		}  		if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  			e.Player.Message (M);  			e.Player.LastUsedMessageBlock = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (mb.IsInRange (e.Coords)) {  	string M = mb.GetMessage ();  	if (M == "")  		return;  	if (e.Player.LastUsedMessageBlock == null) {  		e.Player.LastUsedMessageBlock = DateTime.UtcNow;  		e.Player.Message (M);  		return;  	}  	if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  		e.Player.Message (M);  		e.Player.LastUsedMessageBlock = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  	e.Player.Message (M);  	e.Player.LastUsedMessageBlock = DateTime.UtcNow;  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: try {  	if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  		lock (e.Player.MessageBlockLock) {  			if (e.Player.WorldMap == null)  				return;  			if (e.Player.WorldMap.MessageBlocks != null) {  				lock (e.Player.WorldMap.MessageBlocks) {  					foreach (MessageBlock mb in e.Player.WorldMap.MessageBlocks) {  						if (e.Player.WorldMap == null)  							return;  						if (mb.IsInRange (e.Player)) {  							string M = mb.GetMessage ();  							if (M == "")  								return;  							if (e.Player.LastUsedMessageBlock == null) {  								e.Player.LastUsedMessageBlock = DateTime.UtcNow;  								e.Player.Message (M);  								return;  							}  							if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  								e.Player.Message (M);  								e.Player.LastUsedMessageBlock = DateTime.UtcNow;  							}  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlock_Moving: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  	lock (e.Player.MessageBlockLock) {  		if (e.Player.WorldMap == null)  			return;  		if (e.Player.WorldMap.MessageBlocks != null) {  			lock (e.Player.WorldMap.MessageBlocks) {  				foreach (MessageBlock mb in e.Player.WorldMap.MessageBlocks) {  					if (e.Player.WorldMap == null)  						return;  					if (mb.IsInRange (e.Player)) {  						string M = mb.GetMessage ();  						if (M == "")  							return;  						if (e.Player.LastUsedMessageBlock == null) {  							e.Player.LastUsedMessageBlock = DateTime.UtcNow;  							e.Player.Message (M);  							return;  						}  						if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  							e.Player.Message (M);  							e.Player.LastUsedMessageBlock = DateTime.UtcNow;  						}  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: lock (e.Player.MessageBlockLock) {  	if (e.Player.WorldMap == null)  		return;  	if (e.Player.WorldMap.MessageBlocks != null) {  		lock (e.Player.WorldMap.MessageBlocks) {  			foreach (MessageBlock mb in e.Player.WorldMap.MessageBlocks) {  				if (e.Player.WorldMap == null)  					return;  				if (mb.IsInRange (e.Player)) {  					string M = mb.GetMessage ();  					if (M == "")  						return;  					if (e.Player.LastUsedMessageBlock == null) {  						e.Player.LastUsedMessageBlock = DateTime.UtcNow;  						e.Player.Message (M);  						return;  					}  					if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  						e.Player.Message (M);  						e.Player.LastUsedMessageBlock = DateTime.UtcNow;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.WorldMap.MessageBlocks != null) {  	lock (e.Player.WorldMap.MessageBlocks) {  		foreach (MessageBlock mb in e.Player.WorldMap.MessageBlocks) {  			if (e.Player.WorldMap == null)  				return;  			if (mb.IsInRange (e.Player)) {  				string M = mb.GetMessage ();  				if (M == "")  					return;  				if (e.Player.LastUsedMessageBlock == null) {  					e.Player.LastUsedMessageBlock = DateTime.UtcNow;  					e.Player.Message (M);  					return;  				}  				if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  					e.Player.Message (M);  					e.Player.LastUsedMessageBlock = DateTime.UtcNow;  				}  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: lock (e.Player.WorldMap.MessageBlocks) {  	foreach (MessageBlock mb in e.Player.WorldMap.MessageBlocks) {  		if (e.Player.WorldMap == null)  			return;  		if (mb.IsInRange (e.Player)) {  			string M = mb.GetMessage ();  			if (M == "")  				return;  			if (e.Player.LastUsedMessageBlock == null) {  				e.Player.LastUsedMessageBlock = DateTime.UtcNow;  				e.Player.Message (M);  				return;  			}  			if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  				e.Player.Message (M);  				e.Player.LastUsedMessageBlock = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: foreach (MessageBlock mb in e.Player.WorldMap.MessageBlocks) {  	if (e.Player.WorldMap == null)  		return;  	if (mb.IsInRange (e.Player)) {  		string M = mb.GetMessage ();  		if (M == "")  			return;  		if (e.Player.LastUsedMessageBlock == null) {  			e.Player.LastUsedMessageBlock = DateTime.UtcNow;  			e.Player.Message (M);  			return;  		}  		if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  			e.Player.Message (M);  			e.Player.LastUsedMessageBlock = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: if (mb.IsInRange (e.Player)) {  	string M = mb.GetMessage ();  	if (M == "")  		return;  	if (e.Player.LastUsedMessageBlock == null) {  		e.Player.LastUsedMessageBlock = DateTime.UtcNow;  		e.Player.Message (M);  		return;  	}  	if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  		e.Player.Message (M);  		e.Player.LastUsedMessageBlock = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,Player_Moved,The following statement contains a magic number: if ((DateTime.UtcNow - e.Player.LastUsedMessageBlock).TotalSeconds > 4) {  	e.Player.Message (M);  	e.Player.LastUsedMessageBlock = DateTime.UtcNow;  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "MessageBlockHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Zdistance <= 10 && Zdistance >= -10) {  	return true;  }  
Magic Number,fCraft,MessageBlockHandler,F:\newReposMay17\GlennMR_800craft\fCraft\MessageBlocks\MessageBlockHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Zdistance <= 10 && Zdistance >= -10) {  	return true;  }  
Magic Number,fCraft,PacketReader,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketReader.cs,ReadString,The following statement contains a magic number: return Encoding.ASCII.GetString (ReadBytes (64)).Trim ();  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,NegotiateProtocolExtension,The following statement contains a magic number: writer.Write (Packet.MakeExtInfo (2).Data);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: if (packet.Data [7] > (byte)Map.MaxLegalBlockType && !UsesCustomBlocks) {  	packet.Data [7] = (byte)Map.GetFallbackBlock ((Block)packet.Data [7]);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: if (packet.Data [7] > (byte)Map.MaxLegalBlockType && !UsesCustomBlocks) {  	packet.Data [7] = (byte)Map.GetFallbackBlock ((Block)packet.Data [7]);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: if (packet.Data [7] > (byte)Map.MaxLegalBlockType && !UsesCustomBlocks) {  	packet.Data [7] = (byte)Map.GetFallbackBlock ((Block)packet.Data [7]);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: packet.Data [7] = (byte)Map.GetFallbackBlock ((Block)packet.Data [7]);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessOutgoingSetBlock,The following statement contains a magic number: packet.Data [7] = (byte)Map.GetFallbackBlock ((Block)packet.Data [7]);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,CanBeKilled,The following statement contains a magic number: if ((DateTime.UtcNow - LastTimeKilled).TotalSeconds < 15) {  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [1] == ' ') {  	otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  } else {  	otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [1] == ' ') {  	otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  } else {  	otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [1] == ' ') {  	otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  } else {  	otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [1] == ' ') {  	otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  } else {  	otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  	messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [2] == ' ') {  	rank = Info.Rank;  } else {  	string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  	rank = RankManager.FindRank (rankName);  	if (rank == null) {  		MessageNoRank (rankName);  		break;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [2] == ' ') {  	rank = Info.Rank;  } else {  	string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  	rank = RankManager.FindRank (rankName);  	if (rank == null) {  		MessageNoRank (rankName);  		break;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following statement contains a magic number: if (rawMessage [2] == ' ') {  	rank = Info.Rank;  } else {  	string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  	rank = RankManager.FindRank (rankName);  	if (rank == null) {  		MessageNoRank (rankName);  		break;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following statement contains a magic number: if (Info.IsFrozen || Math.Abs (coord.X * 32 - Position.X) > MaxBlockPlacementRange || Math.Abs (coord.Y * 32 - Position.Y) > MaxBlockPlacementRange || Math.Abs (coord.Z * 32 - Position.Z) > MaxBlockPlacementRange) {  	RevertBlockNow (coord);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following statement contains a magic number: if (Info.IsFrozen || Math.Abs (coord.X * 32 - Position.X) > MaxBlockPlacementRange || Math.Abs (coord.Y * 32 - Position.Y) > MaxBlockPlacementRange || Math.Abs (coord.Z * 32 - Position.Z) > MaxBlockPlacementRange) {  	RevertBlockNow (coord);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following statement contains a magic number: if (Info.IsFrozen || Math.Abs (coord.X * 32 - Position.X) > MaxBlockPlacementRange || Math.Abs (coord.Y * 32 - Position.Y) > MaxBlockPlacementRange || Math.Abs (coord.Z * 32 - Position.Z) > MaxBlockPlacementRange) {  	RevertBlockNow (coord);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidName,The following statement contains a magic number: if (name.Length < 2 || name.Length > 16)  	return false;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidName,The following statement contains a magic number: if (name.Length < 2 || name.Length > 16)  	return false;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Player,The following statement contains a magic number: MaxBlockPlacementRange = 7 * 32;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Player,The following statement contains a magic number: MaxBlockPlacementRange = 7 * 32;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,Player,The following statement contains a magic number: SocketTimeout = 10000;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The following statement contains a magic number: try {  	Server.RaiseSessionConnectedEvent (this);  	// try to log the player in' otherwise die.  	if (!LoginSequence ())  		return;  	BandwidthUseMode = Info.BandwidthUseMode;  	// set up some temp variables  	Packet packet = new Packet ();  	int pollCounter = 0' pingCounter = 0;  	// main i/o loop  	while (canSend) {  		int packetsSent = 0;  		// detect player disconnect  		if (pollCounter > SocketPollInterval) {  			if (!client.Connected || (client.Client.Poll (1000' SelectMode.SelectRead) && client.Client.Available == 0)) {  				if (Info != null) {  					Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to player {0} ({1})."' Name' IP);  				} else {  					Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to unidentified player at {0}."' IP);  				}  				LeaveReason = LeaveReason.ClientQuit;  				return;  			}  			if (pingCounter > PingInterval) {  				writer.WritePing ();  				BytesSent++;  				pingCounter = 0;  				MeasureBandwidthUseRates ();  			}  			pingCounter++;  			pollCounter = 0;  			if (IsUsingWoM) {  				MessageNowPrefixed (""' "^detail.user=" + InfoCommands.GetCompassString (Position.R));  			}  		}  		pollCounter++;  		if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  			UpdateVisibleEntities ();  			lastMovementUpdate = DateTime.UtcNow;  		}  		// send output to player  		while (canSend && packetsSent < Server.MaxSessionPacketsPerTick) {  			if (!priorityOutputQueue.TryDequeue (out packet))  				if (!outputQueue.TryDequeue (out packet))  					break;  			if (IsDeaf && packet.OpCode == OpCode.Message)  				continue;  			writer.Write (packet.Data);  			BytesSent += packet.Data.Length;  			packetsSent++;  			if (packet.OpCode == OpCode.Kick) {  				writer.Flush ();  				if (LeaveReason == LeaveReason.Unknown)  					LeaveReason = LeaveReason.Kick;  				return;  			}  			if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  				UpdateVisibleEntities ();  				lastMovementUpdate = DateTime.UtcNow;  			}  		}  		// check if player needs to change worlds  		if (canSend) {  			lock (joinWorldLock) {  				if (forcedWorldToJoin != null) {  					while (priorityOutputQueue.TryDequeue (out packet)) {  						writer.Write (packet.Data);  						BytesSent += packet.Data.Length;  						packetsSent++;  						if (packet.OpCode == OpCode.Kick) {  							writer.Flush ();  							if (LeaveReason == LeaveReason.Unknown)  								LeaveReason = LeaveReason.Kick;  							return;  						}  					}  					if (!JoinWorldNow (forcedWorldToJoin' useWorldSpawn' worldChangeReason)) {  						Logger.Log (LogType.Warning' "Player.IoLoop: Player was asked to force-join a world' but it was full.");  						KickNow ("World is full."' LeaveReason.ServerFull);  					}  					forcedWorldToJoin = null;  				}  			}  			if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  				UpdateVisibleEntities ();  				lastMovementUpdate = DateTime.UtcNow;  			}  		}  		// get input from player  		while (canReceive && stream.DataAvailable) {  			byte opcode = reader.ReadByte ();  			switch ((OpCode)opcode) {  			case OpCode.Message:  				if (!ProcessMessagePacket ())  					return;  				break;  			case OpCode.Teleport:  				ProcessMovementPacket ();  				break;  			case OpCode.SetBlockClient:  				ProcessSetBlockPacket ();  				break;  			case OpCode.Ping:  				BytesReceived++;  				continue;  			default:  				Logger.Log (LogType.SuspiciousActivity' "Player {0} was kicked after sending an invalid opcode ({1})."' Name' opcode);  				KickNow ("Unknown packet opcode " + opcode' LeaveReason.InvalidOpcodeKick);  				return;  			}  			if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  				UpdateVisibleEntities ();  				lastMovementUpdate = DateTime.UtcNow;  			}  		}  		Thread.Sleep (SleepDelay);  	}  } catch (IOException) {  	LeaveReason = LeaveReason.ClientQuit;  } catch (SocketException) {  	LeaveReason = LeaveReason.ClientQuit;  	#if !DEBUG  	            } catch ( Exception ex ) {                 LeaveReason = LeaveReason.ServerError;                 Logger.LogAndReportCrash( "Error in Player.IoLoop"' "800Craft"' ex' false ); #endif  } finally {  	canQueue = false;  	canSend = false;  	Disconnect ();  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The following statement contains a magic number: while (canSend) {  	int packetsSent = 0;  	// detect player disconnect  	if (pollCounter > SocketPollInterval) {  		if (!client.Connected || (client.Client.Poll (1000' SelectMode.SelectRead) && client.Client.Available == 0)) {  			if (Info != null) {  				Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to player {0} ({1})."' Name' IP);  			} else {  				Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to unidentified player at {0}."' IP);  			}  			LeaveReason = LeaveReason.ClientQuit;  			return;  		}  		if (pingCounter > PingInterval) {  			writer.WritePing ();  			BytesSent++;  			pingCounter = 0;  			MeasureBandwidthUseRates ();  		}  		pingCounter++;  		pollCounter = 0;  		if (IsUsingWoM) {  			MessageNowPrefixed (""' "^detail.user=" + InfoCommands.GetCompassString (Position.R));  		}  	}  	pollCounter++;  	if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  		UpdateVisibleEntities ();  		lastMovementUpdate = DateTime.UtcNow;  	}  	// send output to player  	while (canSend && packetsSent < Server.MaxSessionPacketsPerTick) {  		if (!priorityOutputQueue.TryDequeue (out packet))  			if (!outputQueue.TryDequeue (out packet))  				break;  		if (IsDeaf && packet.OpCode == OpCode.Message)  			continue;  		writer.Write (packet.Data);  		BytesSent += packet.Data.Length;  		packetsSent++;  		if (packet.OpCode == OpCode.Kick) {  			writer.Flush ();  			if (LeaveReason == LeaveReason.Unknown)  				LeaveReason = LeaveReason.Kick;  			return;  		}  		if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  			UpdateVisibleEntities ();  			lastMovementUpdate = DateTime.UtcNow;  		}  	}  	// check if player needs to change worlds  	if (canSend) {  		lock (joinWorldLock) {  			if (forcedWorldToJoin != null) {  				while (priorityOutputQueue.TryDequeue (out packet)) {  					writer.Write (packet.Data);  					BytesSent += packet.Data.Length;  					packetsSent++;  					if (packet.OpCode == OpCode.Kick) {  						writer.Flush ();  						if (LeaveReason == LeaveReason.Unknown)  							LeaveReason = LeaveReason.Kick;  						return;  					}  				}  				if (!JoinWorldNow (forcedWorldToJoin' useWorldSpawn' worldChangeReason)) {  					Logger.Log (LogType.Warning' "Player.IoLoop: Player was asked to force-join a world' but it was full.");  					KickNow ("World is full."' LeaveReason.ServerFull);  				}  				forcedWorldToJoin = null;  			}  		}  		if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  			UpdateVisibleEntities ();  			lastMovementUpdate = DateTime.UtcNow;  		}  	}  	// get input from player  	while (canReceive && stream.DataAvailable) {  		byte opcode = reader.ReadByte ();  		switch ((OpCode)opcode) {  		case OpCode.Message:  			if (!ProcessMessagePacket ())  				return;  			break;  		case OpCode.Teleport:  			ProcessMovementPacket ();  			break;  		case OpCode.SetBlockClient:  			ProcessSetBlockPacket ();  			break;  		case OpCode.Ping:  			BytesReceived++;  			continue;  		default:  			Logger.Log (LogType.SuspiciousActivity' "Player {0} was kicked after sending an invalid opcode ({1})."' Name' opcode);  			KickNow ("Unknown packet opcode " + opcode' LeaveReason.InvalidOpcodeKick);  			return;  		}  		if (DateTime.UtcNow.Subtract (lastMovementUpdate) > movementUpdateInterval) {  			UpdateVisibleEntities ();  			lastMovementUpdate = DateTime.UtcNow;  		}  	}  	Thread.Sleep (SleepDelay);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The following statement contains a magic number: if (pollCounter > SocketPollInterval) {  	if (!client.Connected || (client.Client.Poll (1000' SelectMode.SelectRead) && client.Client.Available == 0)) {  		if (Info != null) {  			Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to player {0} ({1})."' Name' IP);  		} else {  			Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to unidentified player at {0}."' IP);  		}  		LeaveReason = LeaveReason.ClientQuit;  		return;  	}  	if (pingCounter > PingInterval) {  		writer.WritePing ();  		BytesSent++;  		pingCounter = 0;  		MeasureBandwidthUseRates ();  	}  	pingCounter++;  	pollCounter = 0;  	if (IsUsingWoM) {  		MessageNowPrefixed (""' "^detail.user=" + InfoCommands.GetCompassString (Position.R));  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IoLoop,The following statement contains a magic number: if (!client.Connected || (client.Client.Poll (1000' SelectMode.SelectRead) && client.Client.Available == 0)) {  	if (Info != null) {  		Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to player {0} ({1})."' Name' IP);  	} else {  		Logger.Log (LogType.Debug' "Player.IoLoop: Lost connection to unidentified player at {0}."' IP);  	}  	LeaveReason = LeaveReason.ClientQuit;  	return;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMessagePacket,The following statement contains a magic number: BytesReceived += 66;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: BytesReceived += 10;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (Info.IsFrozen) {  	// special handling for frozen players  	if (delta.X * delta.X + delta.Y * delta.Y > AntiSpeedMaxDistanceSquared || Math.Abs (delta.Z) > 40) {  		SendNow (PacketWriter.MakeSelfTeleport (Position));  	}  	newPos.X = Position.X;  	newPos.Y = Position.Y;  	newPos.Z = Position.Z;  	// recalculate deltas  	delta.X = 0;  	delta.Y = 0;  	delta.Z = 0;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (delta.X * delta.X + delta.Y * delta.Y > AntiSpeedMaxDistanceSquared || Math.Abs (delta.Z) > 40) {  	SendNow (PacketWriter.MakeSelfTeleport (Position));  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if (IsFlying) {  	Vector3I oldPosi = new Vector3I (oldPos.X / 32' oldPos.Y / 32' oldPos.Z / 32);  	Vector3I newPosi = new Vector3I (newPos.X / 32' newPos.Y / 32' newPos.Z / 32);  	//Checking e.Old vs e.New increases accuracy' checking old vs new uses a lot less updates  	if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  		//finally' /fly decends  		if ((oldPos.Z > newPos.Z)) {  			foreach (Vector3I block in FlyCache.Values) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  		// Create new block parts  		for (int i = -1; i <= 1; i++)//reduced width and length by 1  		 {  			for (int j = -1; j <= 1; j++) {  				for (int k = 2; k <= 3; k++)//added a 2nd layer  				 {  					Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  					if (World.Map.GetBlock (layer) == Block.Air) {  						SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  						FlyCache.TryAdd (layer.ToString ()' layer);  					}  				}  			}  		}  		// Remove old blocks  		foreach (Vector3I block in FlyCache.Values) {  			if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  				SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  				Vector3I removed;  				FlyCache.TryRemove (block.ToString ()' out removed);  			}  		}  	}  } else if (!Can (Permission.UseSpeedHack)) {  	int distSquared = delta.X * delta.X + delta.Y * delta.Y + delta.Z * delta.Z;  	// speedhack detection  	if (DetectMovementPacketSpam ()) {  		return;  	} else if ((distSquared - delta.Z * delta.Z > AntiSpeedMaxDistanceSquared || delta.Z > AntiSpeedMaxJumpDelta) && speedHackDetectionCounter >= 0) {  		if (speedHackDetectionCounter == 0) {  			lastValidPosition = Position;  		} else if (speedHackDetectionCounter > 1) {  			DenyMovement ();  			speedHackDetectionCounter = 0;  			return;  		}  		speedHackDetectionCounter++;  	} else {  		speedHackDetectionCounter = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  	//finally' /fly decends  	if ((oldPos.Z > newPos.Z)) {  		foreach (Vector3I block in FlyCache.Values) {  			SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  			Vector3I removed;  			FlyCache.TryRemove (block.ToString ()' out removed);  		}  	}  	// Create new block parts  	for (int i = -1; i <= 1; i++)//reduced width and length by 1  	 {  		for (int j = -1; j <= 1; j++) {  			for (int k = 2; k <= 3; k++)//added a 2nd layer  			 {  				Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  				if (World.Map.GetBlock (layer) == Block.Air) {  					SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  					FlyCache.TryAdd (layer.ToString ()' layer);  				}  			}  		}  	}  	// Remove old blocks  	foreach (Vector3I block in FlyCache.Values) {  		if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  			SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  			Vector3I removed;  			FlyCache.TryRemove (block.ToString ()' out removed);  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: if ((oldPosi.X != newPosi.X) || (oldPosi.Y != newPosi.Y) || (oldPosi.Z != newPosi.Z)) {  	//finally' /fly decends  	if ((oldPos.Z > newPos.Z)) {  		foreach (Vector3I block in FlyCache.Values) {  			SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  			Vector3I removed;  			FlyCache.TryRemove (block.ToString ()' out removed);  		}  	}  	// Create new block parts  	for (int i = -1; i <= 1; i++)//reduced width and length by 1  	 {  		for (int j = -1; j <= 1; j++) {  			for (int k = 2; k <= 3; k++)//added a 2nd layer  			 {  				Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  				if (World.Map.GetBlock (layer) == Block.Air) {  					SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  					FlyCache.TryAdd (layer.ToString ()' layer);  				}  			}  		}  	}  	// Remove old blocks  	foreach (Vector3I block in FlyCache.Values) {  		if (fCraft.Utils.FlyHandler.CanRemoveBlock (this' block' newPosi)) {  			SendNow (PacketWriter.MakeSetBlock (block' Block.Air));  			Vector3I removed;  			FlyCache.TryRemove (block.ToString ()' out removed);  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: for (int i = -1; i <= 1; i++)//reduced width and length by 1   {  	for (int j = -1; j <= 1; j++) {  		for (int k = 2; k <= 3; k++)//added a 2nd layer  		 {  			Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  			if (World.Map.GetBlock (layer) == Block.Air) {  				SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  				FlyCache.TryAdd (layer.ToString ()' layer);  			}  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: for (int i = -1; i <= 1; i++)//reduced width and length by 1   {  	for (int j = -1; j <= 1; j++) {  		for (int k = 2; k <= 3; k++)//added a 2nd layer  		 {  			Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  			if (World.Map.GetBlock (layer) == Block.Air) {  				SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  				FlyCache.TryAdd (layer.ToString ()' layer);  			}  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: for (int j = -1; j <= 1; j++) {  	for (int k = 2; k <= 3; k++)//added a 2nd layer  	 {  		Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  		if (World.Map.GetBlock (layer) == Block.Air) {  			SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  			FlyCache.TryAdd (layer.ToString ()' layer);  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: for (int j = -1; j <= 1; j++) {  	for (int k = 2; k <= 3; k++)//added a 2nd layer  	 {  		Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  		if (World.Map.GetBlock (layer) == Block.Air) {  			SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  			FlyCache.TryAdd (layer.ToString ()' layer);  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: for (int k = 2; k <= 3; k++)//added a 2nd layer   {  	Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  	if (World.Map.GetBlock (layer) == Block.Air) {  		SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  		FlyCache.TryAdd (layer.ToString ()' layer);  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessMovementPacket,The following statement contains a magic number: for (int k = 2; k <= 3; k++)//added a 2nd layer   {  	Vector3I layer = new Vector3I (newPosi.X + i' newPosi.Y + j' newPosi.Z - k);  	if (World.Map.GetBlock (layer) == Block.Air) {  		SendNow (PacketWriter.MakeSetBlock (layer' Block.Glass));  		FlyCache.TryAdd (layer.ToString ()' layer);  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessSetBlockPacket,The following statement contains a magic number: BytesReceived += 9;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ProcessSetBlockPacket,The following statement contains a magic number: if (type > 49) {  	type = MapDat.MapBlock (type);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: switch (opcode) {  case (byte)OpCode.Handshake:  	break;  case 2:  	GentlyKickBetaClients ();  	return false;  case 250:  	GentlyKickBetaClients ();  	return false;  case (byte)'G':  	ServeCfg ();  	return false;  default:  	Logger.Log (LogType.Error' "Player.LoginSequence: Unexpected opcode in the first packet from {0}: {1}."' IP' opcode);  	KickNow ("Incompatible client' or a network error."' LeaveReason.ProtocolViolation);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: switch (opcode) {  case (byte)OpCode.Handshake:  	break;  case 2:  	GentlyKickBetaClients ();  	return false;  case 250:  	GentlyKickBetaClients ();  	return false;  case (byte)'G':  	ServeCfg ();  	return false;  default:  	Logger.Log (LogType.Error' "Player.LoginSequence: Unexpected opcode in the first packet from {0}: {1}."' IP' opcode);  	KickNow ("Incompatible client' or a network error."' LeaveReason.ProtocolViolation);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (!IsValidName (givenName)) {  	//check if email' provide crappy support here  	if (givenName.Contains ("@")) {  		//if the user is an email address  		UsedMojang = true;  		PlayerInfo[] temp = PlayerDB.FindPlayerInfoByEmail (givenName);  		//check if they have been here before  		if (temp != null && temp.Length == 1) {  			//restore name if needed  			givenName = temp [0].Name;  		} else {  			//else' new player. Build a unique name  			Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  			int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  			string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  			//this should be the first part of the name ("Jonty800"@email.com)  			if (trimmedName == null)  				throw new ArgumentNullException ("trimmedName");  			if (trimmedName.Length > 16) {  				trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  				//shorten name  			}  			foreach (char ch in trimmedName.ToCharArray ()) {  				//replace invalid chars with "_"  				if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  					trimmedName = trimmedName.Replace (ch' '_');  				}  			}  			givenName = trimmedName + "." + nameAppend.ToString ();  			//this is now the player's new name  			//run a test to see if it is unique or not (unable to test)  			PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  			//gather matches  			while (Players.Length != 0) {  				//while matches were found  				//Name already exists. Reroll  				if (givenName.Length > 14) {  					//kick if substring causes invalid name  					Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  					KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  					return false;  					//returning false breaks loops in C#' right? haha been a while  				}  				givenName = givenName + (nameAppend + 1);  				//keep adding a new number to the end of the string until unique  				Players = PlayerDB.FindPlayers (givenName);  				//update Players based on new name  			}  		}  	} else {  		Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name: {0} ({1})"' givenName' IP);  		KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  		return false;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (!IsValidName (givenName)) {  	//check if email' provide crappy support here  	if (givenName.Contains ("@")) {  		//if the user is an email address  		UsedMojang = true;  		PlayerInfo[] temp = PlayerDB.FindPlayerInfoByEmail (givenName);  		//check if they have been here before  		if (temp != null && temp.Length == 1) {  			//restore name if needed  			givenName = temp [0].Name;  		} else {  			//else' new player. Build a unique name  			Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  			int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  			string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  			//this should be the first part of the name ("Jonty800"@email.com)  			if (trimmedName == null)  				throw new ArgumentNullException ("trimmedName");  			if (trimmedName.Length > 16) {  				trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  				//shorten name  			}  			foreach (char ch in trimmedName.ToCharArray ()) {  				//replace invalid chars with "_"  				if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  					trimmedName = trimmedName.Replace (ch' '_');  				}  			}  			givenName = trimmedName + "." + nameAppend.ToString ();  			//this is now the player's new name  			//run a test to see if it is unique or not (unable to test)  			PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  			//gather matches  			while (Players.Length != 0) {  				//while matches were found  				//Name already exists. Reroll  				if (givenName.Length > 14) {  					//kick if substring causes invalid name  					Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  					KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  					return false;  					//returning false breaks loops in C#' right? haha been a while  				}  				givenName = givenName + (nameAppend + 1);  				//keep adding a new number to the end of the string until unique  				Players = PlayerDB.FindPlayers (givenName);  				//update Players based on new name  			}  		}  	} else {  		Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name: {0} ({1})"' givenName' IP);  		KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  		return false;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (!IsValidName (givenName)) {  	//check if email' provide crappy support here  	if (givenName.Contains ("@")) {  		//if the user is an email address  		UsedMojang = true;  		PlayerInfo[] temp = PlayerDB.FindPlayerInfoByEmail (givenName);  		//check if they have been here before  		if (temp != null && temp.Length == 1) {  			//restore name if needed  			givenName = temp [0].Name;  		} else {  			//else' new player. Build a unique name  			Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  			int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  			string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  			//this should be the first part of the name ("Jonty800"@email.com)  			if (trimmedName == null)  				throw new ArgumentNullException ("trimmedName");  			if (trimmedName.Length > 16) {  				trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  				//shorten name  			}  			foreach (char ch in trimmedName.ToCharArray ()) {  				//replace invalid chars with "_"  				if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  					trimmedName = trimmedName.Replace (ch' '_');  				}  			}  			givenName = trimmedName + "." + nameAppend.ToString ();  			//this is now the player's new name  			//run a test to see if it is unique or not (unable to test)  			PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  			//gather matches  			while (Players.Length != 0) {  				//while matches were found  				//Name already exists. Reroll  				if (givenName.Length > 14) {  					//kick if substring causes invalid name  					Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  					KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  					return false;  					//returning false breaks loops in C#' right? haha been a while  				}  				givenName = givenName + (nameAppend + 1);  				//keep adding a new number to the end of the string until unique  				Players = PlayerDB.FindPlayers (givenName);  				//update Players based on new name  			}  		}  	} else {  		Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name: {0} ({1})"' givenName' IP);  		KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  		return false;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (givenName.Contains ("@")) {  	//if the user is an email address  	UsedMojang = true;  	PlayerInfo[] temp = PlayerDB.FindPlayerInfoByEmail (givenName);  	//check if they have been here before  	if (temp != null && temp.Length == 1) {  		//restore name if needed  		givenName = temp [0].Name;  	} else {  		//else' new player. Build a unique name  		Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  		int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  		string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  		//this should be the first part of the name ("Jonty800"@email.com)  		if (trimmedName == null)  			throw new ArgumentNullException ("trimmedName");  		if (trimmedName.Length > 16) {  			trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  			//shorten name  		}  		foreach (char ch in trimmedName.ToCharArray ()) {  			//replace invalid chars with "_"  			if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  				trimmedName = trimmedName.Replace (ch' '_');  			}  		}  		givenName = trimmedName + "." + nameAppend.ToString ();  		//this is now the player's new name  		//run a test to see if it is unique or not (unable to test)  		PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  		//gather matches  		while (Players.Length != 0) {  			//while matches were found  			//Name already exists. Reroll  			if (givenName.Length > 14) {  				//kick if substring causes invalid name  				Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  				KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  				return false;  				//returning false breaks loops in C#' right? haha been a while  			}  			givenName = givenName + (nameAppend + 1);  			//keep adding a new number to the end of the string until unique  			Players = PlayerDB.FindPlayers (givenName);  			//update Players based on new name  		}  	}  } else {  	Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name: {0} ({1})"' givenName' IP);  	KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (givenName.Contains ("@")) {  	//if the user is an email address  	UsedMojang = true;  	PlayerInfo[] temp = PlayerDB.FindPlayerInfoByEmail (givenName);  	//check if they have been here before  	if (temp != null && temp.Length == 1) {  		//restore name if needed  		givenName = temp [0].Name;  	} else {  		//else' new player. Build a unique name  		Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  		int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  		string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  		//this should be the first part of the name ("Jonty800"@email.com)  		if (trimmedName == null)  			throw new ArgumentNullException ("trimmedName");  		if (trimmedName.Length > 16) {  			trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  			//shorten name  		}  		foreach (char ch in trimmedName.ToCharArray ()) {  			//replace invalid chars with "_"  			if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  				trimmedName = trimmedName.Replace (ch' '_');  			}  		}  		givenName = trimmedName + "." + nameAppend.ToString ();  		//this is now the player's new name  		//run a test to see if it is unique or not (unable to test)  		PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  		//gather matches  		while (Players.Length != 0) {  			//while matches were found  			//Name already exists. Reroll  			if (givenName.Length > 14) {  				//kick if substring causes invalid name  				Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  				KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  				return false;  				//returning false breaks loops in C#' right? haha been a while  			}  			givenName = givenName + (nameAppend + 1);  			//keep adding a new number to the end of the string until unique  			Players = PlayerDB.FindPlayers (givenName);  			//update Players based on new name  		}  	}  } else {  	Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name: {0} ({1})"' givenName' IP);  	KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (givenName.Contains ("@")) {  	//if the user is an email address  	UsedMojang = true;  	PlayerInfo[] temp = PlayerDB.FindPlayerInfoByEmail (givenName);  	//check if they have been here before  	if (temp != null && temp.Length == 1) {  		//restore name if needed  		givenName = temp [0].Name;  	} else {  		//else' new player. Build a unique name  		Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  		int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  		string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  		//this should be the first part of the name ("Jonty800"@email.com)  		if (trimmedName == null)  			throw new ArgumentNullException ("trimmedName");  		if (trimmedName.Length > 16) {  			trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  			//shorten name  		}  		foreach (char ch in trimmedName.ToCharArray ()) {  			//replace invalid chars with "_"  			if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  				trimmedName = trimmedName.Replace (ch' '_');  			}  		}  		givenName = trimmedName + "." + nameAppend.ToString ();  		//this is now the player's new name  		//run a test to see if it is unique or not (unable to test)  		PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  		//gather matches  		while (Players.Length != 0) {  			//while matches were found  			//Name already exists. Reroll  			if (givenName.Length > 14) {  				//kick if substring causes invalid name  				Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  				KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  				return false;  				//returning false breaks loops in C#' right? haha been a while  			}  			givenName = givenName + (nameAppend + 1);  			//keep adding a new number to the end of the string until unique  			Players = PlayerDB.FindPlayers (givenName);  			//update Players based on new name  		}  	}  } else {  	Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name: {0} ({1})"' givenName' IP);  	KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  	return false;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (temp != null && temp.Length == 1) {  	//restore name if needed  	givenName = temp [0].Name;  } else {  	//else' new player. Build a unique name  	Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  	int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  	string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  	//this should be the first part of the name ("Jonty800"@email.com)  	if (trimmedName == null)  		throw new ArgumentNullException ("trimmedName");  	if (trimmedName.Length > 16) {  		trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  		//shorten name  	}  	foreach (char ch in trimmedName.ToCharArray ()) {  		//replace invalid chars with "_"  		if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  			trimmedName = trimmedName.Replace (ch' '_');  		}  	}  	givenName = trimmedName + "." + nameAppend.ToString ();  	//this is now the player's new name  	//run a test to see if it is unique or not (unable to test)  	PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  	//gather matches  	while (Players.Length != 0) {  		//while matches were found  		//Name already exists. Reroll  		if (givenName.Length > 14) {  			//kick if substring causes invalid name  			Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  			KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  			return false;  			//returning false breaks loops in C#' right? haha been a while  		}  		givenName = givenName + (nameAppend + 1);  		//keep adding a new number to the end of the string until unique  		Players = PlayerDB.FindPlayers (givenName);  		//update Players based on new name  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (temp != null && temp.Length == 1) {  	//restore name if needed  	givenName = temp [0].Name;  } else {  	//else' new player. Build a unique name  	Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  	int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  	string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  	//this should be the first part of the name ("Jonty800"@email.com)  	if (trimmedName == null)  		throw new ArgumentNullException ("trimmedName");  	if (trimmedName.Length > 16) {  		trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  		//shorten name  	}  	foreach (char ch in trimmedName.ToCharArray ()) {  		//replace invalid chars with "_"  		if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  			trimmedName = trimmedName.Replace (ch' '_');  		}  	}  	givenName = trimmedName + "." + nameAppend.ToString ();  	//this is now the player's new name  	//run a test to see if it is unique or not (unable to test)  	PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  	//gather matches  	while (Players.Length != 0) {  		//while matches were found  		//Name already exists. Reroll  		if (givenName.Length > 14) {  			//kick if substring causes invalid name  			Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  			KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  			return false;  			//returning false breaks loops in C#' right? haha been a while  		}  		givenName = givenName + (nameAppend + 1);  		//keep adding a new number to the end of the string until unique  		Players = PlayerDB.FindPlayers (givenName);  		//update Players based on new name  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (temp != null && temp.Length == 1) {  	//restore name if needed  	givenName = temp [0].Name;  } else {  	//else' new player. Build a unique name  	Logger.Log (LogType.SystemActivity' "Email account " + givenName + " connected' attemping to create unique new name");  	int nameAppend = PlayerDB.PlayerInfoList.Count (p => p.MojangAccount != null) + 1;  	string trimmedName = givenName.Split ('@') [0].Replace ("@"' "");  	//this should be the first part of the name ("Jonty800"@email.com)  	if (trimmedName == null)  		throw new ArgumentNullException ("trimmedName");  	if (trimmedName.Length > 16) {  		trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  		//shorten name  	}  	foreach (char ch in trimmedName.ToCharArray ()) {  		//replace invalid chars with "_"  		if ((ch < '0' && ch != '.') || (ch > '9' && ch < 'A') || (ch > 'Z' && ch < '_') || (ch > '_' && ch < 'a') || ch > 'z') {  			trimmedName = trimmedName.Replace (ch' '_');  		}  	}  	givenName = trimmedName + "." + nameAppend.ToString ();  	//this is now the player's new name  	//run a test to see if it is unique or not (unable to test)  	PlayerInfo[] Players = PlayerDB.FindPlayers (givenName);  	//gather matches  	while (Players.Length != 0) {  		//while matches were found  		//Name already exists. Reroll  		if (givenName.Length > 14) {  			//kick if substring causes invalid name  			Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  			KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  			return false;  			//returning false breaks loops in C#' right? haha been a while  		}  		givenName = givenName + (nameAppend + 1);  		//keep adding a new number to the end of the string until unique  		Players = PlayerDB.FindPlayers (givenName);  		//update Players based on new name  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (trimmedName.Length > 16) {  	trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  	//shorten name  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (trimmedName.Length > 16) {  	trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  	//shorten name  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: trimmedName = trimmedName.Substring (0' 15 - (nameAppend.ToString ().Length));  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: while (Players.Length != 0) {  	//while matches were found  	//Name already exists. Reroll  	if (givenName.Length > 14) {  		//kick if substring causes invalid name  		Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  		KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  		return false;  		//returning false breaks loops in C#' right? haha been a while  	}  	givenName = givenName + (nameAppend + 1);  	//keep adding a new number to the end of the string until unique  	Players = PlayerDB.FindPlayers (givenName);  	//update Players based on new name  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: if (givenName.Length > 14) {  	//kick if substring causes invalid name  	Logger.Log (LogType.SuspiciousActivity' "Player.LoginSequence: Unacceptable player name' player failed to get new name"' IP);  	KickNow ("Invalid characters in player name!"' LeaveReason.ProtocolViolation);  	return false;  	//returning false breaks loops in C#' right? haha been a while  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: BytesReceived += 131;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: foreach (Zone zone in startingWorld.Map.Zones) {  	Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  	i++;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: foreach (Zone zone in startingWorld.Map.Zones) {  	Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  	i++;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: foreach (Zone zone in startingWorld.Map.Zones) {  	Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  	i++;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: foreach (Zone zone in startingWorld.Map.Zones) {  	Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  	i++;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following statement contains a magic number: Send (Packet.MakeAddSelectionBox ((byte)i' "Whatever"' (short)zone.Bounds.XMin' (short)zone.Bounds.ZMin' (short)zone.Bounds.YMin' (short)zone.Bounds.XMax' (short)zone.Bounds.ZMax' (short)zone.Bounds.YMax' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)' (short)rand.Next (255)));  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: if (strLen >= 2 && strLen <= 16) {  	string smpPlayerName = Encoding.BigEndianUnicode.GetString (reader.ReadBytes (strLen * 2));  	Logger.Log (LogType.Warning' "Player.LoginSequence: Player \"{0}\" tried connecting with Minecraft Beta client from {1}. " + "800Craft does not support Minecraft Beta."' smpPlayerName' IP);  	// send SMP KICK packet  	writer.Write ((byte)255);  	byte[] stringData = Encoding.BigEndianUnicode.GetBytes (NoSmpMessage);  	writer.Write ((short)NoSmpMessage.Length);  	writer.Write (stringData);  	BytesSent += (1 + stringData.Length);  	writer.Flush ();  } else {  	// Not SMP client (invalid player name length)  	Logger.Log (LogType.Error' "Player.LoginSequence: Unexpected opcode in the first packet from {0}: 2."' IP);  	KickNow ("Unexpected handshake message - possible protocol mismatch!"' LeaveReason.ProtocolViolation);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: if (strLen >= 2 && strLen <= 16) {  	string smpPlayerName = Encoding.BigEndianUnicode.GetString (reader.ReadBytes (strLen * 2));  	Logger.Log (LogType.Warning' "Player.LoginSequence: Player \"{0}\" tried connecting with Minecraft Beta client from {1}. " + "800Craft does not support Minecraft Beta."' smpPlayerName' IP);  	// send SMP KICK packet  	writer.Write ((byte)255);  	byte[] stringData = Encoding.BigEndianUnicode.GetBytes (NoSmpMessage);  	writer.Write ((short)NoSmpMessage.Length);  	writer.Write (stringData);  	BytesSent += (1 + stringData.Length);  	writer.Flush ();  } else {  	// Not SMP client (invalid player name length)  	Logger.Log (LogType.Error' "Player.LoginSequence: Unexpected opcode in the first packet from {0}: 2."' IP);  	KickNow ("Unexpected handshake message - possible protocol mismatch!"' LeaveReason.ProtocolViolation);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: if (strLen >= 2 && strLen <= 16) {  	string smpPlayerName = Encoding.BigEndianUnicode.GetString (reader.ReadBytes (strLen * 2));  	Logger.Log (LogType.Warning' "Player.LoginSequence: Player \"{0}\" tried connecting with Minecraft Beta client from {1}. " + "800Craft does not support Minecraft Beta."' smpPlayerName' IP);  	// send SMP KICK packet  	writer.Write ((byte)255);  	byte[] stringData = Encoding.BigEndianUnicode.GetBytes (NoSmpMessage);  	writer.Write ((short)NoSmpMessage.Length);  	writer.Write (stringData);  	BytesSent += (1 + stringData.Length);  	writer.Flush ();  } else {  	// Not SMP client (invalid player name length)  	Logger.Log (LogType.Error' "Player.LoginSequence: Unexpected opcode in the first packet from {0}: 2."' IP);  	KickNow ("Unexpected handshake message - possible protocol mismatch!"' LeaveReason.ProtocolViolation);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: if (strLen >= 2 && strLen <= 16) {  	string smpPlayerName = Encoding.BigEndianUnicode.GetString (reader.ReadBytes (strLen * 2));  	Logger.Log (LogType.Warning' "Player.LoginSequence: Player \"{0}\" tried connecting with Minecraft Beta client from {1}. " + "800Craft does not support Minecraft Beta."' smpPlayerName' IP);  	// send SMP KICK packet  	writer.Write ((byte)255);  	byte[] stringData = Encoding.BigEndianUnicode.GetBytes (NoSmpMessage);  	writer.Write ((short)NoSmpMessage.Length);  	writer.Write (stringData);  	BytesSent += (1 + stringData.Length);  	writer.Flush ();  } else {  	// Not SMP client (invalid player name length)  	Logger.Log (LogType.Error' "Player.LoginSequence: Unexpected opcode in the first packet from {0}: 2."' IP);  	KickNow ("Unexpected handshake message - possible protocol mismatch!"' LeaveReason.ProtocolViolation);  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GentlyKickBetaClients,The following statement contains a magic number: writer.Write ((byte)255);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ServeCfg,The following statement contains a magic number: using (StreamReader textReader = new StreamReader (stream)) {  	using (StreamWriter textWriter = new StreamWriter (stream)) {  		string firstLine = "G" + textReader.ReadLine ();  		var match = HttpFirstLine.Match (firstLine);  		if (match.Success) {  			string worldName = match.Groups [1].Value;  			bool firstTime = match.Groups [2].Success;  			World world = WorldManager.FindWorldExact (worldName);  			if (world != null) {  				string cfg = world.GenerateWoMConfig (firstTime);  				byte[] content = Encoding.UTF8.GetBytes (cfg);  				textWriter.WriteLine ("HTTP/1.1 200 OK");  				textWriter.WriteLine ("Date: " + DateTime.UtcNow.ToString ("R"));  				textWriter.WriteLine ("Content-Type: text/plain");  				textWriter.WriteLine ("Content-Length: " + content.Length);  				textWriter.WriteLine ();  				textWriter.WriteLine (cfg);  			} else {  				textWriter.WriteLine ("HTTP/1.1 404 Not Found");  			}  		} else {  			textWriter.WriteLine ("HTTP/1.1 400 Bad Request");  		}  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ServeCfg,The following statement contains a magic number: using (StreamWriter textWriter = new StreamWriter (stream)) {  	string firstLine = "G" + textReader.ReadLine ();  	var match = HttpFirstLine.Match (firstLine);  	if (match.Success) {  		string worldName = match.Groups [1].Value;  		bool firstTime = match.Groups [2].Success;  		World world = WorldManager.FindWorldExact (worldName);  		if (world != null) {  			string cfg = world.GenerateWoMConfig (firstTime);  			byte[] content = Encoding.UTF8.GetBytes (cfg);  			textWriter.WriteLine ("HTTP/1.1 200 OK");  			textWriter.WriteLine ("Date: " + DateTime.UtcNow.ToString ("R"));  			textWriter.WriteLine ("Content-Type: text/plain");  			textWriter.WriteLine ("Content-Length: " + content.Length);  			textWriter.WriteLine ();  			textWriter.WriteLine (cfg);  		} else {  			textWriter.WriteLine ("HTTP/1.1 404 Not Found");  		}  	} else {  		textWriter.WriteLine ("HTTP/1.1 400 Bad Request");  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ServeCfg,The following statement contains a magic number: if (match.Success) {  	string worldName = match.Groups [1].Value;  	bool firstTime = match.Groups [2].Success;  	World world = WorldManager.FindWorldExact (worldName);  	if (world != null) {  		string cfg = world.GenerateWoMConfig (firstTime);  		byte[] content = Encoding.UTF8.GetBytes (cfg);  		textWriter.WriteLine ("HTTP/1.1 200 OK");  		textWriter.WriteLine ("Date: " + DateTime.UtcNow.ToString ("R"));  		textWriter.WriteLine ("Content-Type: text/plain");  		textWriter.WriteLine ("Content-Length: " + content.Length);  		textWriter.WriteLine ();  		textWriter.WriteLine (cfg);  	} else {  		textWriter.WriteLine ("HTTP/1.1 404 Not Found");  	}  } else {  	textWriter.WriteLine ("HTTP/1.1 400 Bad Request");  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: while (mapBytesSent < blockData.Length) {  	int chunkSize = blockData.Length - mapBytesSent;  	if (chunkSize > 1024) {  		chunkSize = 1024;  	} else {  		// CRC fix for ManicDigger  		for (int i = 0; i < buffer.Length; i++) {  			buffer [i] = 0;  		}  	}  	Array.Copy (blockData' mapBytesSent' buffer' 0' chunkSize);  	byte progress = (byte)(100 * mapBytesSent / blockData.Length);  	// write in chunks of 1024 bytes or less  	writer.WriteMapChunk (buffer' chunkSize' progress);  	BytesSent += 1028;  	mapBytesSent += chunkSize;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: while (mapBytesSent < blockData.Length) {  	int chunkSize = blockData.Length - mapBytesSent;  	if (chunkSize > 1024) {  		chunkSize = 1024;  	} else {  		// CRC fix for ManicDigger  		for (int i = 0; i < buffer.Length; i++) {  			buffer [i] = 0;  		}  	}  	Array.Copy (blockData' mapBytesSent' buffer' 0' chunkSize);  	byte progress = (byte)(100 * mapBytesSent / blockData.Length);  	// write in chunks of 1024 bytes or less  	writer.WriteMapChunk (buffer' chunkSize' progress);  	BytesSent += 1028;  	mapBytesSent += chunkSize;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: while (mapBytesSent < blockData.Length) {  	int chunkSize = blockData.Length - mapBytesSent;  	if (chunkSize > 1024) {  		chunkSize = 1024;  	} else {  		// CRC fix for ManicDigger  		for (int i = 0; i < buffer.Length; i++) {  			buffer [i] = 0;  		}  	}  	Array.Copy (blockData' mapBytesSent' buffer' 0' chunkSize);  	byte progress = (byte)(100 * mapBytesSent / blockData.Length);  	// write in chunks of 1024 bytes or less  	writer.WriteMapChunk (buffer' chunkSize' progress);  	BytesSent += 1028;  	mapBytesSent += chunkSize;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: while (mapBytesSent < blockData.Length) {  	int chunkSize = blockData.Length - mapBytesSent;  	if (chunkSize > 1024) {  		chunkSize = 1024;  	} else {  		// CRC fix for ManicDigger  		for (int i = 0; i < buffer.Length; i++) {  			buffer [i] = 0;  		}  	}  	Array.Copy (blockData' mapBytesSent' buffer' 0' chunkSize);  	byte progress = (byte)(100 * mapBytesSent / blockData.Length);  	// write in chunks of 1024 bytes or less  	writer.WriteMapChunk (buffer' chunkSize' progress);  	BytesSent += 1028;  	mapBytesSent += chunkSize;  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: if (chunkSize > 1024) {  	chunkSize = 1024;  } else {  	// CRC fix for ManicDigger  	for (int i = 0; i < buffer.Length; i++) {  		buffer [i] = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: if (chunkSize > 1024) {  	chunkSize = 1024;  } else {  	// CRC fix for ManicDigger  	for (int i = 0; i < buffer.Length; i++) {  		buffer [i] = 0;  	}  }  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: chunkSize = 1024;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 1028;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 7;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: writer.WriteAddEntity (255' this' map.Spawn);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 74;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: writer.WriteTeleport (255' Position);  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,JoinWorldNow,The following statement contains a magic number: BytesSent += 10;  
Magic Number,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ReadString,The following statement contains a magic number: return Encoding.ASCII.GetString (reader.ReadBytes (64)).TrimEnd ();  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtInfo,The following statement contains a magic number: Encoding.ASCII.GetBytes (VersionString.PadRight (64)' 0' 64' packet.Data' 1);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtInfo,The following statement contains a magic number: Encoding.ASCII.GetBytes (VersionString.PadRight (64)' 0' 64' packet.Data' 1);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtInfo,The following statement contains a magic number: ToNetOrder (extCount' packet.Data' 65);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtEntry,The following statement contains a magic number: Encoding.ASCII.GetBytes (name.PadRight (64)' 0' 64' packet.Data' 1);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtEntry,The following statement contains a magic number: Encoding.ASCII.GetBytes (name.PadRight (64)' 0' 64' packet.Data' 1);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeExtEntry,The following statement contains a magic number: ToNetOrder (version' packet.Data' 65);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: Encoding.ASCII.GetBytes (Label.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: Encoding.ASCII.GetBytes (Label.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: Encoding.ASCII.GetBytes (Label.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (StartX' packet.Data' 66);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (StartY' packet.Data' 68);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (StartZ' packet.Data' 70);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (EndX' packet.Data' 72);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (EndY' packet.Data' 74);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (EndZ' packet.Data' 76);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (R' packet.Data' 78);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (G' packet.Data' 80);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (B' packet.Data' 82);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeAddSelectionBox,The following statement contains a magic number: ToNetOrder (A' packet.Data' 84);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeSetBlockPermission,The following statement contains a magic number: packet.Data [2] = (byte)(canPlace ? 1 : 0);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeSetBlockPermission,The following statement contains a magic number: packet.Data [3] = (byte)(canDelete ? 1 : 0);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr [offset] = (byte)((number & 0xff00) >> 8);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr [offset] = (byte)((number & 0xff000000) >> 24);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr [offset + 1] = (byte)((number & 0x00ff0000) >> 16);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr [offset + 2] = (byte)((number & 0x0000ff00) >> 8);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr [offset + 2] = (byte)((number & 0x0000ff00) >> 8);  
Magic Number,fCraft,Packet,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ToNetOrder,The following statement contains a magic number: arr [offset + 3] = (byte)(number & 0x000000ff);  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ResetSpawn,The following statement contains a magic number: Spawn = new Position (Width * 16' Length * 16' Math.Min (short.MaxValue' Height * 32));  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ResetSpawn,The following statement contains a magic number: Spawn = new Position (Width * 16' Length * 16' Math.Min (short.MaxValue' Height * 32));  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ResetSpawn,The following statement contains a magic number: Spawn = new Position (Width * 16' Length * 16' Math.Min (short.MaxValue' Height * 32));  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,SetBlock,The following statement contains a magic number: if (coords.X < Width && coords.Y < Length && coords.Z < Height && coords.X >= 0 && coords.Y >= 0 && coords.Z >= 0 && (byte)type < 50) {  	Blocks [Index (coords)] = (byte)type;  	HasChangedSinceSave = true;  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The following statement contains a magic number: if (Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0) {  	Logger.Log (LogType.Warning' "Map.ValidateHeader: Spawn coordinates are outside the valid range! Using center of the map instead.");  	ResetSpawn ();  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The following statement contains a magic number: if (Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0) {  	Logger.Log (LogType.Warning' "Map.ValidateHeader: Spawn coordinates are outside the valid range! Using center of the map instead.");  	ResetSpawn ();  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ValidateHeader,The following statement contains a magic number: if (Spawn.X > Width * 32 || Spawn.Y > Length * 32 || Spawn.Z > Height * 32 || Spawn.X < 0 || Spawn.Y < 0 || Spawn.Z < 0) {  	Logger.Log (LogType.Warning' "Map.ValidateHeader: Spawn coordinates are outside the valid range! Using center of the map instead.");  	ResetSpawn ();  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidDimension,The following statement contains a magic number: return dimension >= 16 && dimension <= 2048;  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IsValidDimension,The following statement contains a magic number: return dimension >= 16 && dimension <= 2048;  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IsRecommendedDimension,The following statement contains a magic number: return dimension >= 16 && (dimension & (dimension - 1)) == 0 && dimension <= 1024;  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,IsRecommendedDimension,The following statement contains a magic number: return dimension >= 16 && (dimension & (dimension - 1)) == 0 && dimension <= 1024;  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ConvertBlockTypes,The following statement contains a magic number: if (mapping.Length != 256)  	throw new ArgumentException ("Mapping must list all 256 blocks"' "mapping");  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ConvertBlockTypes,The following statement contains a magic number: fixed (byte* ptr = Blocks) {  	for (int j = 0; j < Blocks.Length; j++) {  		if (ptr [j] > 49) {  			ptr [j] = mapping [ptr [j]];  			mapped = true;  		}  	}  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ConvertBlockTypes,The following statement contains a magic number: for (int j = 0; j < Blocks.Length; j++) {  	if (ptr [j] > 49) {  		ptr [j] = mapping [ptr [j]];  		mapped = true;  	}  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ConvertBlockTypes,The following statement contains a magic number: if (ptr [j] > 49) {  	ptr [j] = mapping [ptr [j]];  	mapped = true;  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GetCompressedCopy,The following statement contains a magic number: using (GZipStream compressor = new GZipStream (stream' CompressionMode.Compress)) {  	if (prependBlockCount) {  		// convert block count to big-endian  		int convertedBlockCount = IPAddress.HostToNetworkOrder (Blocks.Length);  		// write block count to gzip stream  		compressor.Write (BitConverter.GetBytes (convertedBlockCount)' 0' 4);  	}  	compressor.Write (Blocks' 0' Blocks.Length);  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GetCompressedCopy,The following statement contains a magic number: if (prependBlockCount) {  	// convert block count to big-endian  	int convertedBlockCount = IPAddress.HostToNetworkOrder (Blocks.Length);  	// write block count to gzip stream  	compressor.Write (BitConverter.GetBytes (convertedBlockCount)' 0' 4);  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,GetCompressedCopy,The following statement contains a magic number: compressor.Write (BitConverter.GetBytes (convertedBlockCount)' 0' 4);  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeFloodBarrier,The following statement contains a magic number: for (int x = 0; x < Width; x++) {  	for (int z = 0; z < Height / 2; z++) {  		SetBlock (x' 0' z' Block.Admincrete);  		SetBlock (x' Length - 1' z' Block.Admincrete);  	}  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeFloodBarrier,The following statement contains a magic number: for (int z = 0; z < Height / 2; z++) {  	SetBlock (x' 0' z' Block.Admincrete);  	SetBlock (x' Length - 1' z' Block.Admincrete);  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeFloodBarrier,The following statement contains a magic number: for (int y = 0; y < Length; y++) {  	for (int z = 0; z < Height / 2; z++) {  		SetBlock (0' y' z' Block.Admincrete);  		SetBlock (Width - 1' y' z' Block.Admincrete);  	}  }  
Magic Number,fCraft,Map,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,MakeFloodBarrier,The following statement contains a magic number: for (int z = 0; z < Height / 2; z++) {  	SetBlock (0' y' z' Block.Admincrete);  	SetBlock (Width - 1' y' z' Block.Admincrete);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = _r.NextDouble () * 2 * Math.PI;  	double ksi = _r.NextDouble () * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  			_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = _r.NextDouble () * 2 * Math.PI;  	double ksi = _r.NextDouble () * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  			_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = _r.NextDouble () * 2 * Math.PI;  	double ksi = _r.NextDouble () * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  			_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = _r.NextDouble () * 2 * Math.PI;  	double ksi = _r.NextDouble () * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  			_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: for (int i = 0; i < n; ++i) {  	double phi = _r.NextDouble () * 2 * Math.PI;  	double ksi = _r.NextDouble () * Math.PI - Math.PI / 2.0;  	Vector3F direction = (new Vector3F ((float)(Math.Cos (phi) * Math.Cos (ksi))' (float)(Math.Sin (phi) * Math.Cos (ksi))' (float)Math.Sin (ksi))).Normalize ();  	if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  			_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  	if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  		_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  	if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  		_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: if (_owner.CanPlace (_map' (_pos + 2 * direction).Round ()' Block.Obsidian' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  	if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  		_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  	_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: if (_map.GetBlock ((_pos + 2 * direction).Round ()) != Block.Obsidian) {  	_world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,CreateParticles,The following statement contains a magic number: _world.AddPhysicsTask (new Particle (_world' (_pos + 2 * direction).Round ()' direction' _owner' Block.Obsidian' _particleBehavior)' 0);  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (++_currentR <= R) {  	_explosion = new List<BData> ();  	int rPrev = 0;  	for (int z = _currentR; z >= 0; --z) {  		double r2 = _currentR * _currentR - z * z;  		double r = Math.Sqrt (r2);  		double yPrev = r;  		for (double x = 0; x <= Math.Round (r); ++x) {  			if (x > r)  				x = r;  			double y = Math.Sqrt (r2 - x * x);  			int ix = (int)Math.Round (x);  			for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  				for (int mx = -1; mx < 2; mx += 2) {  					for (int my = -1; my < 2; my += 2) {  						for (int mz = -1; mz < 2; mz += 2) {  							if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  								TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  							}  							yPrev = y;  						}  					}  				}  			}  		}  		rPrev = (int)Math.Round (r);  	}  	Util.RndPermutate (_explosion);  	foreach (BData pt in _explosion) {  		if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  			 {  				UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  				foreach (Player p in _world.Players) {  					if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  						//less or equal than 2 blocks  						HitPlayer (_world' p' _owner);  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int z = _currentR; z >= 0; --z) {  	double r2 = _currentR * _currentR - z * z;  	double r = Math.Sqrt (r2);  	double yPrev = r;  	for (double x = 0; x <= Math.Round (r); ++x) {  		if (x > r)  			x = r;  		double y = Math.Sqrt (r2 - x * x);  		int ix = (int)Math.Round (x);  		for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  			for (int mx = -1; mx < 2; mx += 2) {  				for (int my = -1; my < 2; my += 2) {  					for (int mz = -1; mz < 2; mz += 2) {  						if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  							TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  						}  						yPrev = y;  					}  				}  			}  		}  	}  	rPrev = (int)Math.Round (r);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int z = _currentR; z >= 0; --z) {  	double r2 = _currentR * _currentR - z * z;  	double r = Math.Sqrt (r2);  	double yPrev = r;  	for (double x = 0; x <= Math.Round (r); ++x) {  		if (x > r)  			x = r;  		double y = Math.Sqrt (r2 - x * x);  		int ix = (int)Math.Round (x);  		for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  			for (int mx = -1; mx < 2; mx += 2) {  				for (int my = -1; my < 2; my += 2) {  					for (int mz = -1; mz < 2; mz += 2) {  						if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  							TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  						}  						yPrev = y;  					}  				}  			}  		}  	}  	rPrev = (int)Math.Round (r);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int z = _currentR; z >= 0; --z) {  	double r2 = _currentR * _currentR - z * z;  	double r = Math.Sqrt (r2);  	double yPrev = r;  	for (double x = 0; x <= Math.Round (r); ++x) {  		if (x > r)  			x = r;  		double y = Math.Sqrt (r2 - x * x);  		int ix = (int)Math.Round (x);  		for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  			for (int mx = -1; mx < 2; mx += 2) {  				for (int my = -1; my < 2; my += 2) {  					for (int mz = -1; mz < 2; mz += 2) {  						if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  							TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  						}  						yPrev = y;  					}  				}  			}  		}  	}  	rPrev = (int)Math.Round (r);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int z = _currentR; z >= 0; --z) {  	double r2 = _currentR * _currentR - z * z;  	double r = Math.Sqrt (r2);  	double yPrev = r;  	for (double x = 0; x <= Math.Round (r); ++x) {  		if (x > r)  			x = r;  		double y = Math.Sqrt (r2 - x * x);  		int ix = (int)Math.Round (x);  		for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  			for (int mx = -1; mx < 2; mx += 2) {  				for (int my = -1; my < 2; my += 2) {  					for (int mz = -1; mz < 2; mz += 2) {  						if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  							TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  						}  						yPrev = y;  					}  				}  			}  		}  	}  	rPrev = (int)Math.Round (r);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int z = _currentR; z >= 0; --z) {  	double r2 = _currentR * _currentR - z * z;  	double r = Math.Sqrt (r2);  	double yPrev = r;  	for (double x = 0; x <= Math.Round (r); ++x) {  		if (x > r)  			x = r;  		double y = Math.Sqrt (r2 - x * x);  		int ix = (int)Math.Round (x);  		for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  			for (int mx = -1; mx < 2; mx += 2) {  				for (int my = -1; my < 2; my += 2) {  					for (int mz = -1; mz < 2; mz += 2) {  						if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  							TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  						}  						yPrev = y;  					}  				}  			}  		}  	}  	rPrev = (int)Math.Round (r);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int z = _currentR; z >= 0; --z) {  	double r2 = _currentR * _currentR - z * z;  	double r = Math.Sqrt (r2);  	double yPrev = r;  	for (double x = 0; x <= Math.Round (r); ++x) {  		if (x > r)  			x = r;  		double y = Math.Sqrt (r2 - x * x);  		int ix = (int)Math.Round (x);  		for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  			for (int mx = -1; mx < 2; mx += 2) {  				for (int my = -1; my < 2; my += 2) {  					for (int mz = -1; mz < 2; mz += 2) {  						if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  							TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  						}  						yPrev = y;  					}  				}  			}  		}  	}  	rPrev = (int)Math.Round (r);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (double x = 0; x <= Math.Round (r); ++x) {  	if (x > r)  		x = r;  	double y = Math.Sqrt (r2 - x * x);  	int ix = (int)Math.Round (x);  	for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  		for (int mx = -1; mx < 2; mx += 2) {  			for (int my = -1; my < 2; my += 2) {  				for (int mz = -1; mz < 2; mz += 2) {  					if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  						TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  					}  					yPrev = y;  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (double x = 0; x <= Math.Round (r); ++x) {  	if (x > r)  		x = r;  	double y = Math.Sqrt (r2 - x * x);  	int ix = (int)Math.Round (x);  	for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  		for (int mx = -1; mx < 2; mx += 2) {  			for (int my = -1; my < 2; my += 2) {  				for (int mz = -1; mz < 2; mz += 2) {  					if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  						TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  					}  					yPrev = y;  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (double x = 0; x <= Math.Round (r); ++x) {  	if (x > r)  		x = r;  	double y = Math.Sqrt (r2 - x * x);  	int ix = (int)Math.Round (x);  	for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  		for (int mx = -1; mx < 2; mx += 2) {  			for (int my = -1; my < 2; my += 2) {  				for (int mz = -1; mz < 2; mz += 2) {  					if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  						TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  					}  					yPrev = y;  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (double x = 0; x <= Math.Round (r); ++x) {  	if (x > r)  		x = r;  	double y = Math.Sqrt (r2 - x * x);  	int ix = (int)Math.Round (x);  	for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  		for (int mx = -1; mx < 2; mx += 2) {  			for (int my = -1; my < 2; my += 2) {  				for (int mz = -1; mz < 2; mz += 2) {  					if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  						TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  					}  					yPrev = y;  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (double x = 0; x <= Math.Round (r); ++x) {  	if (x > r)  		x = r;  	double y = Math.Sqrt (r2 - x * x);  	int ix = (int)Math.Round (x);  	for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  		for (int mx = -1; mx < 2; mx += 2) {  			for (int my = -1; my < 2; my += 2) {  				for (int mz = -1; mz < 2; mz += 2) {  					if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  						TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  					}  					yPrev = y;  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (double x = 0; x <= Math.Round (r); ++x) {  	if (x > r)  		x = r;  	double y = Math.Sqrt (r2 - x * x);  	int ix = (int)Math.Round (x);  	for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  		for (int mx = -1; mx < 2; mx += 2) {  			for (int my = -1; my < 2; my += 2) {  				for (int mz = -1; mz < 2; mz += 2) {  					if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  						TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  					}  					yPrev = y;  				}  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  	for (int mx = -1; mx < 2; mx += 2) {  		for (int my = -1; my < 2; my += 2) {  			for (int mz = -1; mz < 2; mz += 2) {  				if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  					TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  				}  				yPrev = y;  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  	for (int mx = -1; mx < 2; mx += 2) {  		for (int my = -1; my < 2; my += 2) {  			for (int mz = -1; mz < 2; mz += 2) {  				if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  					TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  				}  				yPrev = y;  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  	for (int mx = -1; mx < 2; mx += 2) {  		for (int my = -1; my < 2; my += 2) {  			for (int mz = -1; mz < 2; mz += 2) {  				if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  					TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  				}  				yPrev = y;  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  	for (int mx = -1; mx < 2; mx += 2) {  		for (int my = -1; my < 2; my += 2) {  			for (int mz = -1; mz < 2; mz += 2) {  				if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  					TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  				}  				yPrev = y;  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  	for (int mx = -1; mx < 2; mx += 2) {  		for (int my = -1; my < 2; my += 2) {  			for (int mz = -1; mz < 2; mz += 2) {  				if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  					TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  				}  				yPrev = y;  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int iy = ix > rPrev ? 0 : (int)Math.Round (y); iy < Math.Max (Math.Round (y) + 1' Math.Round (yPrev)); ++iy) {  	for (int mx = -1; mx < 2; mx += 2) {  		for (int my = -1; my < 2; my += 2) {  			for (int mz = -1; mz < 2; mz += 2) {  				if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  					TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  				}  				yPrev = y;  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mx = -1; mx < 2; mx += 2) {  	for (int my = -1; my < 2; my += 2) {  		for (int mz = -1; mz < 2; mz += 2) {  			if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  				TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  			}  			yPrev = y;  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mx = -1; mx < 2; mx += 2) {  	for (int my = -1; my < 2; my += 2) {  		for (int mz = -1; mz < 2; mz += 2) {  			if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  				TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  			}  			yPrev = y;  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mx = -1; mx < 2; mx += 2) {  	for (int my = -1; my < 2; my += 2) {  		for (int mz = -1; mz < 2; mz += 2) {  			if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  				TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  			}  			yPrev = y;  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mx = -1; mx < 2; mx += 2) {  	for (int my = -1; my < 2; my += 2) {  		for (int mz = -1; mz < 2; mz += 2) {  			if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  				TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  			}  			yPrev = y;  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mx = -1; mx < 2; mx += 2) {  	for (int my = -1; my < 2; my += 2) {  		for (int mz = -1; mz < 2; mz += 2) {  			if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  				TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  			}  			yPrev = y;  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mx = -1; mx < 2; mx += 2) {  	for (int my = -1; my < 2; my += 2) {  		for (int mz = -1; mz < 2; mz += 2) {  			if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  				TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  			}  			yPrev = y;  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: mx += 2
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int my = -1; my < 2; my += 2) {  	for (int mz = -1; mz < 2; mz += 2) {  		if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  		}  		yPrev = y;  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int my = -1; my < 2; my += 2) {  	for (int mz = -1; mz < 2; mz += 2) {  		if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  		}  		yPrev = y;  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int my = -1; my < 2; my += 2) {  	for (int mz = -1; mz < 2; mz += 2) {  		if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  		}  		yPrev = y;  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int my = -1; my < 2; my += 2) {  	for (int mz = -1; mz < 2; mz += 2) {  		if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  			TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  		}  		yPrev = y;  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: my += 2
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mz = -1; mz < 2; mz += 2) {  	if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  	}  	yPrev = y;  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: for (int mz = -1; mz < 2; mz += 2) {  	if (_owner.CanPlace (_map' new Vector3I (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		TryAddPoint (mx * ix + _pos.X' my * iy + _pos.Y' mz * z + _pos.Z);  	}  	yPrev = y;  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: mz += 2
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: foreach (BData pt in _explosion) {  	if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  		 {  			UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  			foreach (Player p in _world.Players) {  				if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  					//less or equal than 2 blocks  					HitPlayer (_world' p' _owner);  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: foreach (BData pt in _explosion) {  	if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  		if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  		 {  			UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  			foreach (Player p in _world.Players) {  				if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  					//less or equal than 2 blocks  					HitPlayer (_world' p' _owner);  			}  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  	if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  	 {  		UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  		foreach (Player p in _world.Players) {  			if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  				//less or equal than 2 blocks  				HitPlayer (_world' p' _owner);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (_owner.CanPlace (_map' new Vector3I (pt.X' pt.Y' pt.Z)' Block.Wood' BlockChangeContext.Manual) == CanPlaceResult.Allowed) {  	if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here  	 {  		UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  		foreach (Player p in _world.Players) {  			if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  				//less or equal than 2 blocks  				HitPlayer (_world' p' _owner);  		}  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here   {  	UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  	foreach (Player p in _world.Players) {  		if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  			//less or equal than 2 blocks  			HitPlayer (_world' p' _owner);  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (_map.GetBlock (pt.X' pt.Y' pt.Z) != Block.Lava)//if another tnt hasnt already caused lava here   {  	UpdateMap (new BlockUpdate (null' (short)pt.X' (short)pt.Y' (short)pt.Z' Block.Lava));  	foreach (Player p in _world.Players) {  		if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  			//less or equal than 2 blocks  			HitPlayer (_world' p' _owner);  	}  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: foreach (Player p in _world.Players) {  	if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  		//less or equal than 2 blocks  		HitPlayer (_world' p' _owner);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: foreach (Player p in _world.Players) {  	if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  		//less or equal than 2 blocks  		HitPlayer (_world' p' _owner);  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  	//less or equal than 2 blocks  	HitPlayer (_world' p' _owner);  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,Explosion,The following statement contains a magic number: if (p.CanBeKilled () && p.Position.DistanceSquaredTo ((new Vector3I (pt.X' pt.Y' pt.Z)).ToPlayerCoords ()) <= 64 * 64)  	//less or equal than 2 blocks  	HitPlayer (_world' p' _owner);  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.Lava != prevBlock) {  	//chain explosion  	if (Block.TNT == prevBlock) {  		_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  		UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  	}  	if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  		_explosion.Add (new BData () {  			X = x'  			Y = y'  			Z = z'  			PrevBlock = _map.GetBlock (x' y' z)  		});  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.Lava != prevBlock) {  	//chain explosion  	if (Block.TNT == prevBlock) {  		_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  		UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  	}  	if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  		_explosion.Add (new BData () {  			X = x'  			Y = y'  			Z = z'  			PrevBlock = _map.GetBlock (x' y' z)  		});  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.Lava != prevBlock) {  	//chain explosion  	if (Block.TNT == prevBlock) {  		_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  		UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  	}  	if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  		_explosion.Add (new BData () {  			X = x'  			Y = y'  			Z = z'  			PrevBlock = _map.GetBlock (x' y' z)  		});  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.Lava != prevBlock) {  	//chain explosion  	if (Block.TNT == prevBlock) {  		_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  		UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  	}  	if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  		_explosion.Add (new BData () {  			X = x'  			Y = y'  			Z = z'  			PrevBlock = _map.GetBlock (x' y' z)  		});  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.Lava != prevBlock) {  	//chain explosion  	if (Block.TNT == prevBlock) {  		_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  		UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  	}  	if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  		_explosion.Add (new BData () {  			X = x'  			Y = y'  			Z = z'  			PrevBlock = _map.GetBlock (x' y' z)  		});  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.TNT == prevBlock) {  	_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  	UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if (Block.TNT == prevBlock) {  	_world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  	UpdateMap (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Air));  }  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: _world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: _world.AddPhysicsTask (new TNTTask (_world' new Vector3I (x' y' z)' _owner' false' _particles)' _r.Next (150' 300));  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  	_explosion.Add (new BData () {  		X = x'  		Y = y'  		Z = z'  		PrevBlock = _map.GetBlock (x' y' z)  	});  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  	_explosion.Add (new BData () {  		X = x'  		Y = y'  		Z = z'  		PrevBlock = _map.GetBlock (x' y' z)  	});  
Magic Number,fCraft,TNTTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,TryAddPoint,The following statement contains a magic number: if ((0.2 + 0.75 * (R - _currentR) / R) * 0.65 > _r.NextDouble ())  	_explosion.Add (new BData () {  		X = x'  		Y = y'  		Z = z'  		PrevBlock = _map.GetBlock (x' y' z)  	});  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: lock (_world.SyncRoot) {  	if (_world.fireworkPhysics) {  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  			if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  				_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  			}  			Random rand = new Random ();  			int blockId = new Random ().Next (1' 9);  			Block fBlock = new Block ();  			if (blockId <= 6) {  				fBlock = (Block)rand.Next (21' 33);  			}  			for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  				for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  					for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  						if (blockId >= 7) {  							fBlock = (Block)rand.Next (21' 33);  						}  						if (rand.Next (1' 50) < 3) {  							_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  						}  					}  				}  			}  			_world.FireworkCount--;  			return 0;  		}  		if (_notSent) {  			if (_world.Map.GetBlock (_pos) != Block.Gold) {  				_world.FireworkCount--;  				return 0;  			}  		}  		_notSent = false;  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		_z++;  		_count++;  		return Delay;  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.fireworkPhysics) {  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  		if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  			_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  		}  		Random rand = new Random ();  		int blockId = new Random ().Next (1' 9);  		Block fBlock = new Block ();  		if (blockId <= 6) {  			fBlock = (Block)rand.Next (21' 33);  		}  		for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  			for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  				for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  					if (blockId >= 7) {  						fBlock = (Block)rand.Next (21' 33);  					}  					if (rand.Next (1' 50) < 3) {  						_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  					}  				}  			}  		}  		_world.FireworkCount--;  		return 0;  	}  	if (_notSent) {  		if (_world.Map.GetBlock (_pos) != Block.Gold) {  			_world.FireworkCount--;  			return 0;  		}  	}  	_notSent = false;  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)_z' Block.Gold));  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Lava));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	_z++;  	_count++;  	return Delay;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z) != Block.Air || _count >= _height) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 1)' Block.Air));  	if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  		_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  	}  	Random rand = new Random ();  	int blockId = new Random ().Next (1' 9);  	Block fBlock = new Block ();  	if (blockId <= 6) {  		fBlock = (Block)rand.Next (21' 33);  	}  	for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  		for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  			for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  				if (blockId >= 7) {  					fBlock = (Block)rand.Next (21' 33);  				}  				if (rand.Next (1' 50) < 3) {  					_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  				}  			}  		}  	}  	_world.FireworkCount--;  	return 0;  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (blockId <= 6) {  	fBlock = (Block)rand.Next (21' 33);  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (blockId <= 6) {  	fBlock = (Block)rand.Next (21' 33);  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (blockId <= 6) {  	fBlock = (Block)rand.Next (21' 33);  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = (Block)rand.Next (21' 33);  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = (Block)rand.Next (21' 33);  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int X2 = _pos.X - 5; X2 <= _pos.X + 5; X2++) {  	for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  		for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  			if (blockId >= 7) {  				fBlock = (Block)rand.Next (21' 33);  			}  			if (rand.Next (1' 50) < 3) {  				_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  			}  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Y2 = (_pos.Y - 5); Y2 <= (_pos.Y + 5); Y2++) {  	for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  		if (blockId >= 7) {  			fBlock = (Block)rand.Next (21' 33);  		}  		if (rand.Next (1' 50) < 3) {  			_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  		}  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: for (int Z2 = (_z - 5); Z2 <= (_z + 5); Z2++) {  	if (blockId >= 7) {  		fBlock = (Block)rand.Next (21' 33);  	}  	if (rand.Next (1' 50) < 3) {  		_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  	}  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (blockId >= 7) {  	fBlock = (Block)rand.Next (21' 33);  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (blockId >= 7) {  	fBlock = (Block)rand.Next (21' 33);  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (blockId >= 7) {  	fBlock = (Block)rand.Next (21' 33);  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = (Block)rand.Next (21' 33);  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: fBlock = (Block)rand.Next (21' 33);  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (rand.Next (1' 50) < 3) {  	_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (rand.Next (1' 50) < 3) {  	_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (rand.Next (1' 50) < 3) {  	_world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.AddPhysicsTask (new FireworkParticle (_world' new Vector3I (X2' Y2' Z2)' fBlock)' rand.Next (1' 100));  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: if (_world.Map.GetBlock (_pos.X' _pos.Y' _z - 2) == Block.Lava) {  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  }  
Magic Number,fCraft,Firework,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ExplodingPhysics.cs,PerformInternal,The following statement contains a magic number: _world.Map.QueueUpdate (new BlockUpdate (null' (short)_pos.X' (short)_pos.Y' (short)(_z - 2)' Block.Air));  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: for (int i = 0; i < _a.GetLength (0); ++i)  	for (int j = 0; j < _a.GetLength (1); ++j) {  		if (Empty (i' j) && Neighbors (i' j) == 3)  			_a [i' j] = Newborn;  	}  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: for (int j = 0; j < _a.GetLength (1); ++j) {  	if (Empty (i' j) && Neighbors (i' j) == 3)  		_a [i' j] = Newborn;  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: if (Empty (i' j) && Neighbors (i' j) == 3)  	_a [i' j] = Newborn;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: for (int i = 0; i < _a.GetLength (0); ++i)  	for (int j = 0; j < _a.GetLength (1); ++j) {  		if (Alive (i' j)) {  			int n = Neighbors (i' j);  			if (n > 3 || n < 2)  				_a [i' j] = Dead;  		}  	}  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: for (int i = 0; i < _a.GetLength (0); ++i)  	for (int j = 0; j < _a.GetLength (1); ++j) {  		if (Alive (i' j)) {  			int n = Neighbors (i' j);  			if (n > 3 || n < 2)  				_a [i' j] = Dead;  		}  	}  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: for (int j = 0; j < _a.GetLength (1); ++j) {  	if (Alive (i' j)) {  		int n = Neighbors (i' j);  		if (n > 3 || n < 2)  			_a [i' j] = Dead;  	}  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: for (int j = 0; j < _a.GetLength (1); ++j) {  	if (Alive (i' j)) {  		int n = Neighbors (i' j);  		if (n > 3 || n < 2)  			_a [i' j] = Dead;  	}  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: if (Alive (i' j)) {  	int n = Neighbors (i' j);  	if (n > 3 || n < 2)  		_a [i' j] = Dead;  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: if (Alive (i' j)) {  	int n = Neighbors (i' j);  	if (n > 3 || n < 2)  		_a [i' j] = Dead;  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: if (n > 3 || n < 2)  	_a [i' j] = Dead;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,HalfStep,The following statement contains a magic number: if (n > 3 || n < 2)  	_a [i' j] = Dead;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: if (computeHash)  	Hash = (int)216713671;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: Hash = (int)216713671;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: for (int i = 0; i < _a.GetLength (0); ++i)  	for (int j = 0; j < _a.GetLength (1); ++j) {  		if (_a [i' j] == from) {  			_a [i' j] = to;  			changed = true;  		}  		if (computeHash && _a [i' j] == Normal) {  			const int p = 16777619;  			int h = i | (j << 16);  			Hash ^= h * p;  		}  	}  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: for (int i = 0; i < _a.GetLength (0); ++i)  	for (int j = 0; j < _a.GetLength (1); ++j) {  		if (_a [i' j] == from) {  			_a [i' j] = to;  			changed = true;  		}  		if (computeHash && _a [i' j] == Normal) {  			const int p = 16777619;  			int h = i | (j << 16);  			Hash ^= h * p;  		}  	}  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: for (int j = 0; j < _a.GetLength (1); ++j) {  	if (_a [i' j] == from) {  		_a [i' j] = to;  		changed = true;  	}  	if (computeHash && _a [i' j] == Normal) {  		const int p = 16777619;  		int h = i | (j << 16);  		Hash ^= h * p;  	}  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: for (int j = 0; j < _a.GetLength (1); ++j) {  	if (_a [i' j] == from) {  		_a [i' j] = to;  		changed = true;  	}  	if (computeHash && _a [i' j] == Normal) {  		const int p = 16777619;  		int h = i | (j << 16);  		Hash ^= h * p;  	}  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: if (computeHash && _a [i' j] == Normal) {  	const int p = 16777619;  	int h = i | (j << 16);  	Hash ^= h * p;  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,Replace,The following statement contains a magic number: if (computeHash && _a [i' j] == Normal) {  	const int p = 16777619;  	int h = i | (j << 16);  	Hash ^= h * p;  }  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,SetStateToRandom,The following statement contains a magic number: for (int i = 0; i < _a.GetLength (0); ++i)  	for (int j = 0; j < _a.GetLength (1); ++j)  		_a [i' j] = r.NextDouble () < 0.3 ? Normal : Nothing;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,SetStateToRandom,The following statement contains a magic number: for (int j = 0; j < _a.GetLength (1); ++j)  	_a [i' j] = r.NextDouble () < 0.3 ? Normal : Nothing;  
Magic Number,fCraft,Life2d,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2d.cs,SetStateToRandom,The following statement contains a magic number: _a [i' j] = r.NextDouble () < 0.3 ? Normal : Nothing;  
Magic Number,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: if (_first) {  	if (_world.Map.GetBlock (_startingPos.X' _startingPos.Y' _nextZ) != Block.Air || Count > _maxFall) {  		return 0;  	}  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_startingPos.X' (short)_startingPos.Y' (short)_nextZ' _block));  	_first = false;  	return _rand.Next (100' 401);  }  
Magic Number,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: if (_first) {  	if (_world.Map.GetBlock (_startingPos.X' _startingPos.Y' _nextZ) != Block.Air || Count > _maxFall) {  		return 0;  	}  	_world.Map.QueueUpdate (new BlockUpdate (null' (short)_startingPos.X' (short)_startingPos.Y' (short)_nextZ' _block));  	_first = false;  	return _rand.Next (100' 401);  }  
Magic Number,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next (100' 401);  
Magic Number,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next (100' 401);  
Magic Number,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next (100' 401);  
Magic Number,fCraft,FireworkParticle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,PerformInternal,The following statement contains a magic number: return _rand.Next (100' 401);  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The following statement contains a magic number: _stepDelay = behavior.ProcessingStepsPerSecond <= 0 || behavior.ProcessingStepsPerSecond > 20 ? 50 : 1000 / behavior.ProcessingStepsPerSecond;  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The following statement contains a magic number: _stepDelay = behavior.ProcessingStepsPerSecond <= 0 || behavior.ProcessingStepsPerSecond > 20 ? 50 : 1000 / behavior.ProcessingStepsPerSecond;  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,Particle,The following statement contains a magic number: _stepDelay = behavior.ProcessingStepsPerSecond <= 0 || behavior.ProcessingStepsPerSecond > 20 ? 50 : 1000 / behavior.ProcessingStepsPerSecond;  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: foreach (Player p in _world.Players) {  	if (ReferenceEquals (p' _owner) && (_startingPos - _pos).LengthSquared <= 2 * 2)  		//do not react on owner within 2 blocks of the starting position  		continue;  	if (p.CanBeKilled () && p.Position.DistanceSquaredTo (_pos.ToPlayerCoords ()) <= 33 * 33)  		//less or equal than a block  		_behavior.HitPlayer (_world' _pos' p' _owner' ref _restDistance' updates);  }  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: foreach (Player p in _world.Players) {  	if (ReferenceEquals (p' _owner) && (_startingPos - _pos).LengthSquared <= 2 * 2)  		//do not react on owner within 2 blocks of the starting position  		continue;  	if (p.CanBeKilled () && p.Position.DistanceSquaredTo (_pos.ToPlayerCoords ()) <= 33 * 33)  		//less or equal than a block  		_behavior.HitPlayer (_world' _pos' p' _owner' ref _restDistance' updates);  }  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: foreach (Player p in _world.Players) {  	if (ReferenceEquals (p' _owner) && (_startingPos - _pos).LengthSquared <= 2 * 2)  		//do not react on owner within 2 blocks of the starting position  		continue;  	if (p.CanBeKilled () && p.Position.DistanceSquaredTo (_pos.ToPlayerCoords ()) <= 33 * 33)  		//less or equal than a block  		_behavior.HitPlayer (_world' _pos' p' _owner' ref _restDistance' updates);  }  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: foreach (Player p in _world.Players) {  	if (ReferenceEquals (p' _owner) && (_startingPos - _pos).LengthSquared <= 2 * 2)  		//do not react on owner within 2 blocks of the starting position  		continue;  	if (p.CanBeKilled () && p.Position.DistanceSquaredTo (_pos.ToPlayerCoords ()) <= 33 * 33)  		//less or equal than a block  		_behavior.HitPlayer (_world' _pos' p' _owner' ref _restDistance' updates);  }  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: if (ReferenceEquals (p' _owner) && (_startingPos - _pos).LengthSquared <= 2 * 2)  	//do not react on owner within 2 blocks of the starting position  	continue;  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: if (ReferenceEquals (p' _owner) && (_startingPos - _pos).LengthSquared <= 2 * 2)  	//do not react on owner within 2 blocks of the starting position  	continue;  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: if (p.CanBeKilled () && p.Position.DistanceSquaredTo (_pos.ToPlayerCoords ()) <= 33 * 33)  	//less or equal than a block  	_behavior.HitPlayer (_world' _pos' p' _owner' ref _restDistance' updates);  
Magic Number,fCraft,Particle,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CheckHitPlayers,The following statement contains a magic number: if (p.CanBeKilled () && p.Position.DistanceSquaredTo (_pos.ToPlayerCoords ()) <= 33 * 33)  	//less or equal than a block  	_behavior.HitPlayer (_world' _pos' p' _owner' ref _restDistance' updates);  
Magic Number,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (Block.TNT == block)//explode it   {  	world.AddPhysicsTask (new TNTTask (world' pos' owner' false' true)' _r.Next (150' 300));  }  
Magic Number,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (Block.TNT == block)//explode it   {  	world.AddPhysicsTask (new TNTTask (world' pos' owner' false' true)' _r.Next (150' 300));  }  
Magic Number,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: world.AddPhysicsTask (new TNTTask (world' pos' owner' false' true)' _r.Next (150' 300));  
Magic Number,fCraft,ExplosionParticleBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: world.AddPhysicsTask (new TNTTask (world' pos' owner' false' true)' _r.Next (150' 300));  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (Block.Air != block)//hit a building   {  	if (owner.bluePortal.Count > 0) {  		if (pos == owner.bluePortal [0] || pos == owner.bluePortal [1]) {  			return false;  		}  	}  	if (owner.orangePortal.Count > 0) {  		if (pos == owner.orangePortal [0] || pos == owner.orangePortal [1]) {  			return false;  		}  	}  	//blue portal  	if (sending == Block.Water) {  		if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  			if (owner.bluePortal.Count > 0) {  				int i = 0;  				foreach (Vector3I b in owner.bluePortal) {  					world.Map.QueueUpdate (new BlockUpdate (null' b' owner.blueOld [i]));  					i++;  				}  				owner.blueOld.Clear ();  				owner.bluePortal.Clear ();  			}  			owner.blueOld.Add (world.Map.GetBlock (pos));  			owner.blueOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  			owner.orangeOut = owner.Position.R;  			for (double z = pos.Z; z < pos.Z + 2; z++) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Water));  				owner.bluePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  			}  			return false;  		} else {  			return false;  		}  	} //orange portal  	else if (sending == Block.Lava) {  		if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  			if (owner.orangePortal.Count > 0) {  				int i = 0;  				foreach (Vector3I b in owner.orangePortal) {  					world.Map.QueueUpdate (new BlockUpdate (null' b' owner.orangeOld [i]));  					i++;  				}  				owner.orangeOld.Clear ();  				owner.orangePortal.Clear ();  			}  			owner.orangeOld.Add (world.Map.GetBlock (pos));  			owner.orangeOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  			owner.blueOut = owner.Position.R;  			for (double z = pos.Z; z < pos.Z + 2; z++) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  				owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  			}  			return false;  		} else {  			return false;  		}  	}  	updates.Add (new BlockUpdate (null' pos' world.Map.GetBlock (pos)));  	//restore  	restDistance = 0;  	return false;  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (Block.Air != block)//hit a building   {  	if (owner.bluePortal.Count > 0) {  		if (pos == owner.bluePortal [0] || pos == owner.bluePortal [1]) {  			return false;  		}  	}  	if (owner.orangePortal.Count > 0) {  		if (pos == owner.orangePortal [0] || pos == owner.orangePortal [1]) {  			return false;  		}  	}  	//blue portal  	if (sending == Block.Water) {  		if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  			if (owner.bluePortal.Count > 0) {  				int i = 0;  				foreach (Vector3I b in owner.bluePortal) {  					world.Map.QueueUpdate (new BlockUpdate (null' b' owner.blueOld [i]));  					i++;  				}  				owner.blueOld.Clear ();  				owner.bluePortal.Clear ();  			}  			owner.blueOld.Add (world.Map.GetBlock (pos));  			owner.blueOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  			owner.orangeOut = owner.Position.R;  			for (double z = pos.Z; z < pos.Z + 2; z++) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Water));  				owner.bluePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  			}  			return false;  		} else {  			return false;  		}  	} //orange portal  	else if (sending == Block.Lava) {  		if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  			if (owner.orangePortal.Count > 0) {  				int i = 0;  				foreach (Vector3I b in owner.orangePortal) {  					world.Map.QueueUpdate (new BlockUpdate (null' b' owner.orangeOld [i]));  					i++;  				}  				owner.orangeOld.Clear ();  				owner.orangePortal.Clear ();  			}  			owner.orangeOld.Add (world.Map.GetBlock (pos));  			owner.orangeOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  			owner.blueOut = owner.Position.R;  			for (double z = pos.Z; z < pos.Z + 2; z++) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  				owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  			}  			return false;  		} else {  			return false;  		}  	}  	updates.Add (new BlockUpdate (null' pos' world.Map.GetBlock (pos)));  	//restore  	restDistance = 0;  	return false;  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (sending == Block.Water) {  	if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  		if (owner.bluePortal.Count > 0) {  			int i = 0;  			foreach (Vector3I b in owner.bluePortal) {  				world.Map.QueueUpdate (new BlockUpdate (null' b' owner.blueOld [i]));  				i++;  			}  			owner.blueOld.Clear ();  			owner.bluePortal.Clear ();  		}  		owner.blueOld.Add (world.Map.GetBlock (pos));  		owner.blueOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  		owner.orangeOut = owner.Position.R;  		for (double z = pos.Z; z < pos.Z + 2; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Water));  			owner.bluePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  		}  		return false;  	} else {  		return false;  	}  } //orange portal  else if (sending == Block.Lava) {  	if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  		if (owner.orangePortal.Count > 0) {  			int i = 0;  			foreach (Vector3I b in owner.orangePortal) {  				world.Map.QueueUpdate (new BlockUpdate (null' b' owner.orangeOld [i]));  				i++;  			}  			owner.orangeOld.Clear ();  			owner.orangePortal.Clear ();  		}  		owner.orangeOld.Add (world.Map.GetBlock (pos));  		owner.orangeOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  		owner.blueOut = owner.Position.R;  		for (double z = pos.Z; z < pos.Z + 2; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  			owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  		}  		return false;  	} else {  		return false;  	}  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (sending == Block.Water) {  	if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  		if (owner.bluePortal.Count > 0) {  			int i = 0;  			foreach (Vector3I b in owner.bluePortal) {  				world.Map.QueueUpdate (new BlockUpdate (null' b' owner.blueOld [i]));  				i++;  			}  			owner.blueOld.Clear ();  			owner.bluePortal.Clear ();  		}  		owner.blueOld.Add (world.Map.GetBlock (pos));  		owner.blueOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  		owner.orangeOut = owner.Position.R;  		for (double z = pos.Z; z < pos.Z + 2; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Water));  			owner.bluePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  		}  		return false;  	} else {  		return false;  	}  } //orange portal  else if (sending == Block.Lava) {  	if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  		if (owner.orangePortal.Count > 0) {  			int i = 0;  			foreach (Vector3I b in owner.orangePortal) {  				world.Map.QueueUpdate (new BlockUpdate (null' b' owner.orangeOld [i]));  				i++;  			}  			owner.orangeOld.Clear ();  			owner.orangePortal.Clear ();  		}  		owner.orangeOld.Add (world.Map.GetBlock (pos));  		owner.orangeOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  		owner.blueOut = owner.Position.R;  		for (double z = pos.Z; z < pos.Z + 2; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  			owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  		}  		return false;  	} else {  		return false;  	}  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  	if (owner.bluePortal.Count > 0) {  		int i = 0;  		foreach (Vector3I b in owner.bluePortal) {  			world.Map.QueueUpdate (new BlockUpdate (null' b' owner.blueOld [i]));  			i++;  		}  		owner.blueOld.Clear ();  		owner.bluePortal.Clear ();  	}  	owner.blueOld.Add (world.Map.GetBlock (pos));  	owner.blueOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  	owner.orangeOut = owner.Position.R;  	for (double z = pos.Z; z < pos.Z + 2; z++) {  		world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Water));  		owner.bluePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  	}  	return false;  } else {  	return false;  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: for (double z = pos.Z; z < pos.Z + 2; z++) {  	world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Water));  	owner.bluePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (sending == Block.Lava) {  	if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  		if (owner.orangePortal.Count > 0) {  			int i = 0;  			foreach (Vector3I b in owner.orangePortal) {  				world.Map.QueueUpdate (new BlockUpdate (null' b' owner.orangeOld [i]));  				i++;  			}  			owner.orangeOld.Clear ();  			owner.orangePortal.Clear ();  		}  		owner.orangeOld.Add (world.Map.GetBlock (pos));  		owner.orangeOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  		owner.blueOut = owner.Position.R;  		for (double z = pos.Z; z < pos.Z + 2; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  			owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  		}  		return false;  	} else {  		return false;  	}  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: if (CanPlacePortal (pos.X' pos.Y' pos.Z' world.Map)) {  	if (owner.orangePortal.Count > 0) {  		int i = 0;  		foreach (Vector3I b in owner.orangePortal) {  			world.Map.QueueUpdate (new BlockUpdate (null' b' owner.orangeOld [i]));  			i++;  		}  		owner.orangeOld.Clear ();  		owner.orangePortal.Clear ();  	}  	owner.orangeOld.Add (world.Map.GetBlock (pos));  	owner.orangeOld.Add (world.Map.GetBlock (pos.X' pos.Y' pos.Z + 1));  	owner.blueOut = owner.Position.R;  	for (double z = pos.Z; z < pos.Z + 2; z++) {  		world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  		owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  	}  	return false;  } else {  	return false;  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,VisitBlock,The following statement contains a magic number: for (double z = pos.Z; z < pos.Z + 2; z++) {  	world.Map.QueueUpdate (new BlockUpdate (null' (short)(pos.X)' (short)(pos.Y)' (short)z' Block.Lava));  	owner.orangePortal.Add (new Vector3I ((int)pos.X' (int)pos.Y' (int)z));  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CanPlacePortal,The following statement contains a magic number: for (int Z = z; Z < z + 2; Z++) {  	Block check = map.GetBlock (x' y' Z);  	if (check != Block.Air && check != Block.Water && check != Block.Lava) {  		Count++;  	}  }  
Magic Number,fCraft,BulletBehavior,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\ParticleSystem.cs,CanPlacePortal,The following statement contains a magic number: if (Count == 2) {  	return true;  } else {  	return false;  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.NewBlock == Block.Gold) {  	if (e.Context == BlockChangeContext.Manual) {  		if (e.Player.fireworkMode && world.fireworkPhysics) {  			if (world.FireworkCount > 10) {  				e.Result = CanPlaceResult.Revert;  				e.Player.Message ("&WThere are too many active fireworks on this world");  				return;  			} else {  				world.FireworkCount++;  				world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  			}  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.NewBlock == Block.Gold) {  	if (e.Context == BlockChangeContext.Manual) {  		if (e.Player.fireworkMode && world.fireworkPhysics) {  			if (world.FireworkCount > 10) {  				e.Result = CanPlaceResult.Revert;  				e.Player.Message ("&WThere are too many active fireworks on this world");  				return;  			} else {  				world.FireworkCount++;  				world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  			}  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (e.Player.fireworkMode && world.fireworkPhysics) {  		if (world.FireworkCount > 10) {  			e.Result = CanPlaceResult.Revert;  			e.Player.Message ("&WThere are too many active fireworks on this world");  			return;  		} else {  			world.FireworkCount++;  			world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (e.Player.fireworkMode && world.fireworkPhysics) {  		if (world.FireworkCount > 10) {  			e.Result = CanPlaceResult.Revert;  			e.Player.Message ("&WThere are too many active fireworks on this world");  			return;  		} else {  			world.FireworkCount++;  			world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Player.fireworkMode && world.fireworkPhysics) {  	if (world.FireworkCount > 10) {  		e.Result = CanPlaceResult.Revert;  		e.Player.Message ("&WThere are too many active fireworks on this world");  		return;  	} else {  		world.FireworkCount++;  		world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Player.fireworkMode && world.fireworkPhysics) {  	if (world.FireworkCount > 10) {  		e.Result = CanPlaceResult.Revert;  		e.Player.Message ("&WThere are too many active fireworks on this world");  		return;  	} else {  		world.FireworkCount++;  		world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (world.FireworkCount > 10) {  	e.Result = CanPlaceResult.Revert;  	e.Player.Message ("&WThere are too many active fireworks on this world");  	return;  } else {  	world.FireworkCount++;  	world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (world.FireworkCount > 10) {  	e.Result = CanPlaceResult.Revert;  	e.Player.Message ("&WThere are too many active fireworks on this world");  	return;  } else {  	world.FireworkCount++;  	world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask (new Firework (world' e.Coords)' 300);  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.NewBlock == Block.TNT) {  	if (world.tntPhysics) {  		if (e.Context == BlockChangeContext.Manual) {  			lock (world.SyncRoot) {  				world.AddPhysicsTask (new TNTTask (world' e.Coords' e.Player' false' true)' 3000);  				return;  			}  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (world.tntPhysics) {  	if (e.Context == BlockChangeContext.Manual) {  		lock (world.SyncRoot) {  			world.AddPhysicsTask (new TNTTask (world' e.Coords' e.Player' false' true)' 3000);  			return;  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	lock (world.SyncRoot) {  		world.AddPhysicsTask (new TNTTask (world' e.Coords' e.Player' false' true)' 3000);  		return;  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: lock (world.SyncRoot) {  	world.AddPhysicsTask (new TNTTask (world' e.Coords' e.Player' false' true)' 3000);  	return;  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask (new TNTTask (world' e.Coords' e.Player' false' true)' 3000);  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.NewBlock == Block.Sand || e.NewBlock == Block.Gravel) {  	if (e.Context == BlockChangeContext.Manual) {  		if (world.sandPhysics) {  			lock (world.SyncRoot) {  				world.AddPhysicsTask (new SandTask (world' e.Coords' e.NewBlock)' 150);  				return;  			}  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (world.sandPhysics) {  		lock (world.SyncRoot) {  			world.AddPhysicsTask (new SandTask (world' e.Coords' e.NewBlock)' 150);  			return;  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (world.sandPhysics) {  	lock (world.SyncRoot) {  		world.AddPhysicsTask (new SandTask (world' e.Coords' e.NewBlock)' 150);  		return;  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: lock (world.SyncRoot) {  	world.AddPhysicsTask (new SandTask (world' e.Coords' e.NewBlock)' 150);  	return;  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask (new SandTask (world' e.Coords' e.NewBlock)' 150);  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (Physics.CanFloat (e.NewBlock)) {  	if (world.waterPhysics) {  		if (e.Context == BlockChangeContext.Manual) {  			world.AddPhysicsTask (new BlockFloat (world' e.Coords' e.NewBlock)' 200);  			return;  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (world.waterPhysics) {  	if (e.Context == BlockChangeContext.Manual) {  		world.AddPhysicsTask (new BlockFloat (world' e.Coords' e.NewBlock)' 200);  		return;  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	world.AddPhysicsTask (new BlockFloat (world' e.Coords' e.NewBlock)' 200);  	return;  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask (new BlockFloat (world' e.Coords' e.NewBlock)' 200);  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (!Physics.CanFloat (e.NewBlock) && e.NewBlock != Block.Air && e.NewBlock != Block.Water && e.NewBlock != Block.Lava && e.NewBlock != Block.BrownMushroom && e.NewBlock != Block.RedFlower && e.NewBlock != Block.RedMushroom && e.NewBlock != Block.YellowFlower && e.NewBlock != Block.Plant) {  	if (e.Context == BlockChangeContext.Manual) {  		if (world.waterPhysics) {  			world.AddPhysicsTask (new BlockSink (world' e.Coords' e.NewBlock)' 200);  			return;  		}  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (world.waterPhysics) {  		world.AddPhysicsTask (new BlockSink (world' e.Coords' e.NewBlock)' 200);  		return;  	}  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: if (world.waterPhysics) {  	world.AddPhysicsTask (new BlockSink (world' e.Coords' e.NewBlock)' 200);  	return;  }  
Magic Number,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,PlayerPlacingPhysics,The following statement contains a magic number: world.AddPhysicsTask (new BlockSink (world' e.Coords' e.NewBlock)' 200);  
Magic Number,fCraft,MinBinaryHeap,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PhysicsHeap.cs,ParentIdx,The following statement contains a magic number: return (idx - 1) / 2;  
Magic Number,fCraft,MinBinaryHeap,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PhysicsHeap.cs,Kids,The following statement contains a magic number: kid1 = 2 * idx + 1;  
Magic Number,fCraft,PhysScheduler,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PhysicsScheduler.cs,Stop,The following statement contains a magic number: if (_thread.Join (10000)) {  	//blocked?  	_thread.Abort ();  	//very bad  }  
Magic Number,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: for (int x = _x - 5; x < _x + 5; ++x) {  	for (int y = _y - 5; y < _y + 5; ++y) {  		for (int z = _z + 1; z < _z + height; ++z) {  			Block b = _map.GetBlock (x' y' z);  			if (Block.Air != b && Block.Leaves != b)  				return false;  		}  	}  }  
Magic Number,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: for (int x = _x - 5; x < _x + 5; ++x) {  	for (int y = _y - 5; y < _y + 5; ++y) {  		for (int z = _z + 1; z < _z + height; ++z) {  			Block b = _map.GetBlock (x' y' z);  			if (Block.Air != b && Block.Leaves != b)  				return false;  		}  	}  }  
Magic Number,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: for (int x = _x - 5; x < _x + 5; ++x) {  	for (int y = _y - 5; y < _y + 5; ++y) {  		for (int z = _z + 1; z < _z + height; ++z) {  			Block b = _map.GetBlock (x' y' z);  			if (Block.Air != b && Block.Leaves != b)  				return false;  		}  	}  }  
Magic Number,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: for (int x = _x - 5; x < _x + 5; ++x) {  	for (int y = _y - 5; y < _y + 5; ++y) {  		for (int z = _z + 1; z < _z + height; ++z) {  			Block b = _map.GetBlock (x' y' z);  			if (Block.Air != b && Block.Leaves != b)  				return false;  		}  	}  }  
Magic Number,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: for (int y = _y - 5; y < _y + 5; ++y) {  	for (int z = _z + 1; z < _z + height; ++z) {  		Block b = _map.GetBlock (x' y' z);  		if (Block.Air != b && Block.Leaves != b)  			return false;  	}  }  
Magic Number,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,CanGrow,The following statement contains a magic number: for (int y = _y - 5; y < _y + 5; ++y) {  	for (int z = _z + 1; z < _z + height; ++z) {  		Block b = _map.GetBlock (x' y' z);  		if (Block.Air != b && Block.Leaves != b)  			return false;  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: for (int y = start; y < end; y++) {  	int rad;  	if (y > start + 1) {  		rad = 1;  	} else {  		rad = 2;  	}  	for (int xoff = -rad; xoff < rad + 1; xoff++) {  		for (int zoff = -rad; zoff < rad + 1; zoff++) {  			if (w.Map != null && w.IsLoaded) {  				if (Rand.NextDouble () > .618 && Math.Abs (xoff) == Math.Abs (zoff) && Math.Abs (xoff) == rad) {  					continue;  				}  				w.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.X + xoff)' (short)(Pos.Y + zoff)' (short)y' Block.Leaves));  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: for (int y = start; y < end; y++) {  	int rad;  	if (y > start + 1) {  		rad = 1;  	} else {  		rad = 2;  	}  	for (int xoff = -rad; xoff < rad + 1; xoff++) {  		for (int zoff = -rad; zoff < rad + 1; zoff++) {  			if (w.Map != null && w.IsLoaded) {  				if (Rand.NextDouble () > .618 && Math.Abs (xoff) == Math.Abs (zoff) && Math.Abs (xoff) == rad) {  					continue;  				}  				w.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.X + xoff)' (short)(Pos.Y + zoff)' (short)y' Block.Leaves));  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: if (y > start + 1) {  	rad = 1;  } else {  	rad = 2;  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: rad = 2;  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: for (int xoff = -rad; xoff < rad + 1; xoff++) {  	for (int zoff = -rad; zoff < rad + 1; zoff++) {  		if (w.Map != null && w.IsLoaded) {  			if (Rand.NextDouble () > .618 && Math.Abs (xoff) == Math.Abs (zoff) && Math.Abs (xoff) == rad) {  				continue;  			}  			w.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.X + xoff)' (short)(Pos.Y + zoff)' (short)y' Block.Leaves));  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: for (int zoff = -rad; zoff < rad + 1; zoff++) {  	if (w.Map != null && w.IsLoaded) {  		if (Rand.NextDouble () > .618 && Math.Abs (xoff) == Math.Abs (zoff) && Math.Abs (xoff) == rad) {  			continue;  		}  		w.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.X + xoff)' (short)(Pos.Y + zoff)' (short)y' Block.Leaves));  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: if (w.Map != null && w.IsLoaded) {  	if (Rand.NextDouble () > .618 && Math.Abs (xoff) == Math.Abs (zoff) && Math.Abs (xoff) == rad) {  		continue;  	}  	w.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.X + xoff)' (short)(Pos.Y + zoff)' (short)y' Block.Leaves));  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakeNormalFoliage,The following statement contains a magic number: if (Rand.NextDouble () > .618 && Math.Abs (xoff) == Math.Abs (zoff) && Math.Abs (xoff) == rad) {  	continue;  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: if (world.Map != null && world.IsLoaded) {  	int z = Pos.Z + Height;  	for (int xoff = -2; xoff < 3; xoff++) {  		for (int yoff = -2; yoff < 3; yoff++) {  			if (Math.Abs (xoff) == Math.Abs (yoff)) {  				if (world.Map != null && world.IsLoaded) {  					world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  				}  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: if (world.Map != null && world.IsLoaded) {  	int z = Pos.Z + Height;  	for (int xoff = -2; xoff < 3; xoff++) {  		for (int yoff = -2; yoff < 3; yoff++) {  			if (Math.Abs (xoff) == Math.Abs (yoff)) {  				if (world.Map != null && world.IsLoaded) {  					world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  				}  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: if (world.Map != null && world.IsLoaded) {  	int z = Pos.Z + Height;  	for (int xoff = -2; xoff < 3; xoff++) {  		for (int yoff = -2; yoff < 3; yoff++) {  			if (Math.Abs (xoff) == Math.Abs (yoff)) {  				if (world.Map != null && world.IsLoaded) {  					world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  				}  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: if (world.Map != null && world.IsLoaded) {  	int z = Pos.Z + Height;  	for (int xoff = -2; xoff < 3; xoff++) {  		for (int yoff = -2; yoff < 3; yoff++) {  			if (Math.Abs (xoff) == Math.Abs (yoff)) {  				if (world.Map != null && world.IsLoaded) {  					world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  				}  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: for (int xoff = -2; xoff < 3; xoff++) {  	for (int yoff = -2; yoff < 3; yoff++) {  		if (Math.Abs (xoff) == Math.Abs (yoff)) {  			if (world.Map != null && world.IsLoaded) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: for (int xoff = -2; xoff < 3; xoff++) {  	for (int yoff = -2; yoff < 3; yoff++) {  		if (Math.Abs (xoff) == Math.Abs (yoff)) {  			if (world.Map != null && world.IsLoaded) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: for (int xoff = -2; xoff < 3; xoff++) {  	for (int yoff = -2; yoff < 3; yoff++) {  		if (Math.Abs (xoff) == Math.Abs (yoff)) {  			if (world.Map != null && world.IsLoaded) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: for (int xoff = -2; xoff < 3; xoff++) {  	for (int yoff = -2; yoff < 3; yoff++) {  		if (Math.Abs (xoff) == Math.Abs (yoff)) {  			if (world.Map != null && world.IsLoaded) {  				world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  			}  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: for (int yoff = -2; yoff < 3; yoff++) {  	if (Math.Abs (xoff) == Math.Abs (yoff)) {  		if (world.Map != null && world.IsLoaded) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  		}  	}  }  
Magic Number,fCraft,TreeGeneration,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\TreeGeneration.cs,MakePalmFoliage,The following statement contains a magic number: for (int yoff = -2; yoff < 3; yoff++) {  	if (Math.Abs (xoff) == Math.Abs (yoff)) {  		if (world.Map != null && world.IsLoaded) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)(Pos.Z + xoff)' (short)(Pos.Y + yoff)' (short)z' Block.Leaves));  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: try {  	foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  		if (p.World != null)//ignore console  		 {  			if (p.World.waterPhysics) {  				Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  				if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  					if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  						p.DrownTime = DateTime.UtcNow;  					}  					if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  						p.TeleportTo (p.WorldMap.Spawn);  						p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  					}  				} else {  					p.DrownTime = DateTime.UtcNow;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "" + ex);  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: try {  	foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  		if (p.World != null)//ignore console  		 {  			if (p.World.waterPhysics) {  				Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  				if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  					if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  						p.DrownTime = DateTime.UtcNow;  					}  					if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  						p.TeleportTo (p.WorldMap.Spawn);  						p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  					}  				} else {  					p.DrownTime = DateTime.UtcNow;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "" + ex);  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: try {  	foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  		if (p.World != null)//ignore console  		 {  			if (p.World.waterPhysics) {  				Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  				if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  					if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  						p.DrownTime = DateTime.UtcNow;  					}  					if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  						p.TeleportTo (p.WorldMap.Spawn);  						p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  					}  				} else {  					p.DrownTime = DateTime.UtcNow;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "" + ex);  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: try {  	foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  		if (p.World != null)//ignore console  		 {  			if (p.World.waterPhysics) {  				Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  				if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  					if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  						p.DrownTime = DateTime.UtcNow;  					}  					if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  						p.TeleportTo (p.WorldMap.Spawn);  						p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  					}  				} else {  					p.DrownTime = DateTime.UtcNow;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "" + ex);  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: try {  	foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  		if (p.World != null)//ignore console  		 {  			if (p.World.waterPhysics) {  				Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  				if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  					if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  						p.DrownTime = DateTime.UtcNow;  					}  					if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  						p.TeleportTo (p.WorldMap.Spawn);  						p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  					}  				} else {  					p.DrownTime = DateTime.UtcNow;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.SeriousError' "" + ex);  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  	if (p.World != null)//ignore console  	 {  		if (p.World.waterPhysics) {  			Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  			if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  				if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  					p.DrownTime = DateTime.UtcNow;  				}  				if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  					p.TeleportTo (p.WorldMap.Spawn);  					p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  				}  			} else {  				p.DrownTime = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  	if (p.World != null)//ignore console  	 {  		if (p.World.waterPhysics) {  			Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  			if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  				if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  					p.DrownTime = DateTime.UtcNow;  				}  				if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  					p.TeleportTo (p.WorldMap.Spawn);  					p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  				}  			} else {  				p.DrownTime = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  	if (p.World != null)//ignore console  	 {  		if (p.World.waterPhysics) {  			Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  			if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  				if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  					p.DrownTime = DateTime.UtcNow;  				}  				if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  					p.TeleportTo (p.WorldMap.Spawn);  					p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  				}  			} else {  				p.DrownTime = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  	if (p.World != null)//ignore console  	 {  		if (p.World.waterPhysics) {  			Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  			if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  				if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  					p.DrownTime = DateTime.UtcNow;  				}  				if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  					p.TeleportTo (p.WorldMap.Spawn);  					p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  				}  			} else {  				p.DrownTime = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: foreach (Player p in Server.Players.Where (p => !p.Immortal)) {  	if (p.World != null)//ignore console  	 {  		if (p.World.waterPhysics) {  			Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  			if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  				if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  					p.DrownTime = DateTime.UtcNow;  				}  				if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  					p.TeleportTo (p.WorldMap.Spawn);  					p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  				}  			} else {  				p.DrownTime = DateTime.UtcNow;  			}  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World != null)//ignore console   {  	if (p.World.waterPhysics) {  		Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  		if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  			if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  				p.DrownTime = DateTime.UtcNow;  			}  			if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  				p.TeleportTo (p.WorldMap.Spawn);  				p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  			}  		} else {  			p.DrownTime = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World != null)//ignore console   {  	if (p.World.waterPhysics) {  		Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  		if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  			if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  				p.DrownTime = DateTime.UtcNow;  			}  			if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  				p.TeleportTo (p.WorldMap.Spawn);  				p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  			}  		} else {  			p.DrownTime = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World != null)//ignore console   {  	if (p.World.waterPhysics) {  		Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  		if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  			if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  				p.DrownTime = DateTime.UtcNow;  			}  			if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  				p.TeleportTo (p.WorldMap.Spawn);  				p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  			}  		} else {  			p.DrownTime = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World != null)//ignore console   {  	if (p.World.waterPhysics) {  		Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  		if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  			if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  				p.DrownTime = DateTime.UtcNow;  			}  			if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  				p.TeleportTo (p.WorldMap.Spawn);  				p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  			}  		} else {  			p.DrownTime = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World != null)//ignore console   {  	if (p.World.waterPhysics) {  		Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  		if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  			if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  				p.DrownTime = DateTime.UtcNow;  			}  			if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  				p.TeleportTo (p.WorldMap.Spawn);  				p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  			}  		} else {  			p.DrownTime = DateTime.UtcNow;  		}  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World.waterPhysics) {  	Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  	if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  		if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  			p.DrownTime = DateTime.UtcNow;  		}  		if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  			p.TeleportTo (p.WorldMap.Spawn);  			p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  		}  	} else {  		p.DrownTime = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World.waterPhysics) {  	Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  	if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  		if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  			p.DrownTime = DateTime.UtcNow;  		}  		if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  			p.TeleportTo (p.WorldMap.Spawn);  			p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  		}  	} else {  		p.DrownTime = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World.waterPhysics) {  	Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  	if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  		if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  			p.DrownTime = DateTime.UtcNow;  		}  		if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  			p.TeleportTo (p.WorldMap.Spawn);  			p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  		}  	} else {  		p.DrownTime = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World.waterPhysics) {  	Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  	if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  		if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  			p.DrownTime = DateTime.UtcNow;  		}  		if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  			p.TeleportTo (p.WorldMap.Spawn);  			p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  		}  	} else {  		p.DrownTime = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.World.waterPhysics) {  	Position pos = new Position ((short)(p.Position.X / 32)' (short)(p.Position.Y / 32)' (short)((p.Position.Z + 1) / 32));  	if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  		if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  			p.DrownTime = DateTime.UtcNow;  		}  		if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  			p.TeleportTo (p.WorldMap.Spawn);  			p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  		}  	} else {  		p.DrownTime = DateTime.UtcNow;  	}  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  	if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  		p.DrownTime = DateTime.UtcNow;  	}  	if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  		p.TeleportTo (p.WorldMap.Spawn);  		p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  	}  } else {  	p.DrownTime = DateTime.UtcNow;  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.WorldMap.GetBlock (pos.X' pos.Y' pos.Z) == Block.Water) {  	if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  		p.DrownTime = DateTime.UtcNow;  	}  	if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  		p.TeleportTo (p.WorldMap.Spawn);  		p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  	}  } else {  	p.DrownTime = DateTime.UtcNow;  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if (p.DrownTime == null || (DateTime.UtcNow - p.DrownTime).TotalSeconds > 33) {  	p.DrownTime = DateTime.UtcNow;  }  
Magic Number,fCraft,WaterPhysics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\WaterPhysics.cs,drownCheck,The following statement contains a magic number: if ((DateTime.UtcNow - p.DrownTime).TotalSeconds > 30) {  	p.TeleportTo (p.WorldMap.Spawn);  	p.World.Players.Message ("{0}&S drowned and died"' p.ClassyName);  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,The following statement contains a magic number: while (startIndex != -1) {  	int endIndex = message.IndexOf ('}'' startIndex + 1);  	if (endIndex == -1) {  		break;  		// abort if there are no more closing braces  	}  	// see if emote was escaped (if odd number of backslashes precede it)  	bool escaped = false;  	for (int i = startIndex - 1; i >= 0 && message [i] == '\\'; i--) {  		escaped = !escaped;  	}  	// extract the keyword  	string keyword = message.Substring (startIndex + 1' endIndex - startIndex - 1);  	char substitute;  	if (EmoteKeywords.TryGetValue (keyword.ToLowerInvariant ()' out substitute)) {  		if (escaped) {  			// it was escaped; remove escaping character  			startIndex++;  			output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  			lastAppendedIndex = startIndex - 1;  		} else {  			// it was not escaped; insert substitute character  			output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  			output.Append (substitute);  			startIndex = endIndex + 1;  			lastAppendedIndex = startIndex;  		}  	} else {  		startIndex++;  		// unrecognized macro' keep going  	}  	startIndex = message.IndexOf ('{'' startIndex);  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,The following statement contains a magic number: if (EmoteKeywords.TryGetValue (keyword.ToLowerInvariant ()' out substitute)) {  	if (escaped) {  		// it was escaped; remove escaping character  		startIndex++;  		output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  		lastAppendedIndex = startIndex - 1;  	} else {  		// it was not escaped; insert substitute character  		output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  		output.Append (substitute);  		startIndex = endIndex + 1;  		lastAppendedIndex = startIndex;  	}  } else {  	startIndex++;  	// unrecognized macro' keep going  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,The following statement contains a magic number: if (escaped) {  	// it was escaped; remove escaping character  	startIndex++;  	output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  	lastAppendedIndex = startIndex - 1;  } else {  	// it was not escaped; insert substitute character  	output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  	output.Append (substitute);  	startIndex = endIndex + 1;  	lastAppendedIndex = startIndex;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplaceEmoteKeywords,The following statement contains a magic number: output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: while (startIndex != -1 && startIndex < message.Length - 1) {  	// see if colorcode was escaped (if odd number of backslashes precede it)  	bool escaped = false;  	for (int i = startIndex - 1; i >= 0 && message [i] == '\\'; i--) {  		escaped = !escaped;  	}  	// extract the colorcode  	char colorCode = message [startIndex + 1];  	if (Color.IsValidColorCode (colorCode) || allowNewlines && (colorCode == 'n' || colorCode == 'N')) {  		if (escaped) {  			// it was escaped; remove escaping character  			startIndex++;  			output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  			lastAppendedIndex = startIndex - 1;  		} else {  			// it was not escaped; insert substitute character  			output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  			output.Append ('&');  			lastAppendedIndex = startIndex + 1;  			startIndex += 2;  		}  	} else {  		startIndex++;  		// unrecognized colorcode' keep going  	}  	startIndex = message.IndexOf ('%'' startIndex);  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: while (startIndex != -1 && startIndex < message.Length - 1) {  	// see if colorcode was escaped (if odd number of backslashes precede it)  	bool escaped = false;  	for (int i = startIndex - 1; i >= 0 && message [i] == '\\'; i--) {  		escaped = !escaped;  	}  	// extract the colorcode  	char colorCode = message [startIndex + 1];  	if (Color.IsValidColorCode (colorCode) || allowNewlines && (colorCode == 'n' || colorCode == 'N')) {  		if (escaped) {  			// it was escaped; remove escaping character  			startIndex++;  			output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  			lastAppendedIndex = startIndex - 1;  		} else {  			// it was not escaped; insert substitute character  			output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  			output.Append ('&');  			lastAppendedIndex = startIndex + 1;  			startIndex += 2;  		}  	} else {  		startIndex++;  		// unrecognized colorcode' keep going  	}  	startIndex = message.IndexOf ('%'' startIndex);  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: if (Color.IsValidColorCode (colorCode) || allowNewlines && (colorCode == 'n' || colorCode == 'N')) {  	if (escaped) {  		// it was escaped; remove escaping character  		startIndex++;  		output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  		lastAppendedIndex = startIndex - 1;  	} else {  		// it was not escaped; insert substitute character  		output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  		output.Append ('&');  		lastAppendedIndex = startIndex + 1;  		startIndex += 2;  	}  } else {  	startIndex++;  	// unrecognized colorcode' keep going  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: if (Color.IsValidColorCode (colorCode) || allowNewlines && (colorCode == 'n' || colorCode == 'N')) {  	if (escaped) {  		// it was escaped; remove escaping character  		startIndex++;  		output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  		lastAppendedIndex = startIndex - 1;  	} else {  		// it was not escaped; insert substitute character  		output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  		output.Append ('&');  		lastAppendedIndex = startIndex + 1;  		startIndex += 2;  	}  } else {  	startIndex++;  	// unrecognized colorcode' keep going  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: if (escaped) {  	// it was escaped; remove escaping character  	startIndex++;  	output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  	lastAppendedIndex = startIndex - 1;  } else {  	// it was not escaped; insert substitute character  	output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  	output.Append ('&');  	lastAppendedIndex = startIndex + 1;  	startIndex += 2;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: if (escaped) {  	// it was escaped; remove escaping character  	startIndex++;  	output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  	lastAppendedIndex = startIndex - 1;  } else {  	// it was not escaped; insert substitute character  	output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex);  	output.Append ('&');  	lastAppendedIndex = startIndex + 1;  	startIndex += 2;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: output.Append (message' lastAppendedIndex' startIndex - lastAppendedIndex - 2);  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,ReplacePercentColorCodes,The following statement contains a magic number: startIndex += 2;  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch (message [0]) {  case '/':  	if (message.Length < 2) {  		// message too short to be a command  		return RawMessageType.Invalid;  	}  	if (message [1] == '/') {  		// escaped slash in the beginning: "//blah"  		return RawMessageType.Chat;  	}  	if (message [1] != ' ') {  		// normal command: "/cmd"  		return RawMessageType.Command;  	}  	return RawMessageType.Invalid;  case '@':  	if (message.Length < 4 || message.IndexOf (' ') == -1) {  		// message too short to be a PM or rank chat  		return RawMessageType.Invalid;  	}  	if (message [1] == '@') {  		return RawMessageType.RankChat;  	}  	if (message [1] == '-' && message [2] == ' ') {  		// name shortcut: "@- blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] == ' ' && message.IndexOf (' '' 2) != -1) {  		// alternative PM notation: "@ name blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] != ' ') {  		// primary PM notation: "@name blah"  		return RawMessageType.PrivateChat;  	}  	return RawMessageType.Invalid;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch (message [0]) {  case '/':  	if (message.Length < 2) {  		// message too short to be a command  		return RawMessageType.Invalid;  	}  	if (message [1] == '/') {  		// escaped slash in the beginning: "//blah"  		return RawMessageType.Chat;  	}  	if (message [1] != ' ') {  		// normal command: "/cmd"  		return RawMessageType.Command;  	}  	return RawMessageType.Invalid;  case '@':  	if (message.Length < 4 || message.IndexOf (' ') == -1) {  		// message too short to be a PM or rank chat  		return RawMessageType.Invalid;  	}  	if (message [1] == '@') {  		return RawMessageType.RankChat;  	}  	if (message [1] == '-' && message [2] == ' ') {  		// name shortcut: "@- blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] == ' ' && message.IndexOf (' '' 2) != -1) {  		// alternative PM notation: "@ name blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] != ' ') {  		// primary PM notation: "@name blah"  		return RawMessageType.PrivateChat;  	}  	return RawMessageType.Invalid;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch (message [0]) {  case '/':  	if (message.Length < 2) {  		// message too short to be a command  		return RawMessageType.Invalid;  	}  	if (message [1] == '/') {  		// escaped slash in the beginning: "//blah"  		return RawMessageType.Chat;  	}  	if (message [1] != ' ') {  		// normal command: "/cmd"  		return RawMessageType.Command;  	}  	return RawMessageType.Invalid;  case '@':  	if (message.Length < 4 || message.IndexOf (' ') == -1) {  		// message too short to be a PM or rank chat  		return RawMessageType.Invalid;  	}  	if (message [1] == '@') {  		return RawMessageType.RankChat;  	}  	if (message [1] == '-' && message [2] == ' ') {  		// name shortcut: "@- blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] == ' ' && message.IndexOf (' '' 2) != -1) {  		// alternative PM notation: "@ name blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] != ' ') {  		// primary PM notation: "@name blah"  		return RawMessageType.PrivateChat;  	}  	return RawMessageType.Invalid;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: switch (message [0]) {  case '/':  	if (message.Length < 2) {  		// message too short to be a command  		return RawMessageType.Invalid;  	}  	if (message [1] == '/') {  		// escaped slash in the beginning: "//blah"  		return RawMessageType.Chat;  	}  	if (message [1] != ' ') {  		// normal command: "/cmd"  		return RawMessageType.Command;  	}  	return RawMessageType.Invalid;  case '@':  	if (message.Length < 4 || message.IndexOf (' ') == -1) {  		// message too short to be a PM or rank chat  		return RawMessageType.Invalid;  	}  	if (message [1] == '@') {  		return RawMessageType.RankChat;  	}  	if (message [1] == '-' && message [2] == ' ') {  		// name shortcut: "@- blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] == ' ' && message.IndexOf (' '' 2) != -1) {  		// alternative PM notation: "@ name blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] != ' ') {  		// primary PM notation: "@name blah"  		return RawMessageType.PrivateChat;  	}  	return RawMessageType.Invalid;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: if (message.Length < 2) {  	// message too short to be a command  	return RawMessageType.Invalid;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: if (message.Length < 4 || message.IndexOf (' ') == -1) {  	// message too short to be a PM or rank chat  	return RawMessageType.Invalid;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: if (message [1] == '-' && message [2] == ' ') {  	// name shortcut: "@- blah"  	return RawMessageType.PrivateChat;  }  
Magic Number,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following statement contains a magic number: if (message [1] == ' ' && message.IndexOf (' '' 2) != -1) {  	// alternative PM notation: "@ name blah"  	return RawMessageType.PrivateChat;  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,RunCompatibilityChecks,The following statement contains a magic number: if (loadedVersion < 4) {  	int unhid = 0' unfroze = 0' unmuted = 0;  	Logger.Log (LogType.SystemActivity' "PlayerDB: Checking consistency of banned player records...");  	foreach (PlayerInfo t in list) {  		if (t.IsBanned) {  			if (t.IsHidden) {  				unhid++;  				t.IsHidden = false;  			}  			if (t.IsFrozen) {  				t.Unfreeze ();  				unfroze++;  			}  			if (t.IsMuted) {  				t.Unmute ();  				unmuted++;  			}  		}  	}  	Logger.Log (LogType.SystemActivity' "PlayerDB: Unhid {0}' unfroze {1}' and unmuted {2} banned accounts."' unhid' unfroze' unmuted);  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,IdentifyFormatVersion,The following statement contains a magic number: if (headerParts.Length < 2) {  	throw new FormatException ("Invalid PlayerDB header format: " + header);  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,IdentifyFormatVersion,The following statement contains a magic number: if (Int32.TryParse (headerParts [0]' out maxIDField)) {  	if (maxIDField >= 255) {  		// IDs start at 256  		maxID = maxIDField;  	}  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,IdentifyFormatVersion,The following statement contains a magic number: if (maxIDField >= 255) {  	// IDs start at 256  	maxID = maxIDField;  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,StartSaveTask,The following statement contains a magic number: saveTask = Scheduler.NewBackgroundTask (SaveTask).RunForever (SaveInterval' SaveInterval + TimeSpan.FromSeconds (15));  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayersCidr,The following statement contains a magic number: if (range > 32)  	throw new ArgumentOutOfRangeException ("range");  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayersCidr,The following statement contains a magic number: if (range > 32)  	throw new ArgumentOutOfRangeException ("range");  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayerInfoOrPrintMatches,The following statement contains a magic number: if (target == null) {  	PlayerInfo[] targets = FindPlayers (name);  	if (targets.Length == 0) {  		player.MessageNoPlayer (name);  		return null;  	} else if (targets.Length > 1) {  		Array.Sort (targets' new PlayerInfoComparer (player));  		player.MessageManyMatches ("player"' targets.Take (25).ToArray ());  		return null;  	}  	target = targets [0];  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayerInfoOrPrintMatches,The following statement contains a magic number: if (targets.Length == 0) {  	player.MessageNoPlayer (name);  	return null;  } else if (targets.Length > 1) {  	Array.Sort (targets' new PlayerInfoComparer (player));  	player.MessageManyMatches ("player"' targets.Take (25).ToArray ());  	return null;  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayerInfoOrPrintMatches,The following statement contains a magic number: if (targets.Length > 1) {  	Array.Sort (targets' new PlayerInfoComparer (player));  	player.MessageManyMatches ("player"' targets.Take (25).ToArray ());  	return null;  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,FindPlayerInfoOrPrintMatches,The following statement contains a magic number: player.MessageManyMatches ("player"' targets.Take (25).ToArray ());  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The following statement contains a magic number: if (player.TotalTime.TotalMinutes > 30 || player.TimeSinceLastSeen.TotalDays < 30) {  	return false;  }  
Magic Number,fCraft,PlayerDB,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerDB.cs,PlayerIsInactive,The following statement contains a magic number: if (player.TotalTime.TotalMinutes > 30 || player.TimeSinceLastSeen.TotalDays < 30) {  	return false;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.Rank = Rank.Parse (fields [2]) ?? RankManager.DefaultRank;  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [3].ToDateTime (ref info.RankChangeDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [4].Length > 0)  	info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [4].Length > 0)  	info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: switch (fields [5]) {  case "b":  	info.BanStatus = BanStatus.Banned;  	break;  case "x":  	info.BanStatus = BanStatus.IPBanExempt;  	break;  default:  	info.BanStatus = BanStatus.NotBanned;  	break;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [6].ToDateTime (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [6].ToDateTime (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [6].ToDateTime (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [6].ToDateTime (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [6].ToDateTime (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [7].Length > 0)  	info.BannedBy = Unescape (fields [7]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [7].Length > 0)  	info.BannedBy = Unescape (fields [7]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.BannedBy = Unescape (fields [7]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [10].Length > 0)  	info.BanReason = Unescape (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [10].Length > 0)  	info.BanReason = Unescape (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.BanReason = Unescape (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [8].ToDateTime (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [8].ToDateTime (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [8].ToDateTime (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [8].ToDateTime (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [8].ToDateTime (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [9].Length > 0)  	info.UnbannedBy = Unescape (fields [9]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [9].Length > 0)  	info.UnbannedBy = Unescape (fields [9]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.UnbannedBy = Unescape (fields [9]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [11].Length > 0)  	info.UnbanReason = Unescape (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [11].Length > 0)  	info.UnbanReason = Unescape (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.UnbanReason = Unescape (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [12].ToDateTime (ref info.LastFailedLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [13].Length > 1 || !IPAddress.TryParse (fields [13]' out info.LastFailedLoginIP)) {  	// LEGACY  	info.LastFailedLoginIP = IPAddress.None;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [13].Length > 1 || !IPAddress.TryParse (fields [13]' out info.LastFailedLoginIP)) {  	// LEGACY  	info.LastFailedLoginIP = IPAddress.None;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [14].Length > 0) {  	info.MojangAccount = fields [14];  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [14].Length > 0) {  	info.MojangAccount = fields [14];  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.MojangAccount = fields [14];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [15].ToDateTime (ref info.FirstLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [16].ToDateTime (ref info.LastLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [17].ToTimeSpan (out info.TotalTime);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [18].Length > 0)  	Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [18].Length > 0)  	Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [19].Length > 0)  	Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [19].Length > 0)  	Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [20]' out info.TimesVisited);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [20].Length > 0)  	Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [20].Length > 0)  	Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [22]' out info.PromoCount);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [23].Length > 0)  	info.TitleName = fields [23].ToString ();  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [23].Length > 0)  	info.TitleName = fields [23].ToString ();  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.TitleName = fields [23].ToString ();  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [24].Length > 0)  	info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [24].Length > 0)  	info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [25].Length > 0)  	info.RankChangeReason = Unescape (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [25].Length > 0)  	info.RankChangeReason = Unescape (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.RankChangeReason = Unescape (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [26]' out info.TimesKicked);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [27]' out info.TimesKickedOthers);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [28]' out info.TimesBannedOthers);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.ID = Int32.Parse (fields [29]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (info.ID < 256)  	info.ID = PlayerDB.GetNextID ();  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  	info.RankChangeType = (RankChangeType)rankChangeTypeCode;  	if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  		info.GuessRankChangeType ();  	}  } else {  	info.GuessRankChangeType ();  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [31].ToDateTime (ref info.LastKickDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (!fields [32].ToDateTime (ref info.LastSeen) || info.LastSeen < info.LastLoginDate) {  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: Int64.TryParse (fields [33]' out info.BlocksDrawn);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickBy = Unescape (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickBy = Unescape (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.LastKickBy = Unescape (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [35].Length > 0)  	info.LastKickReason = Unescape (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [35].Length > 0)  	info.LastKickReason = Unescape (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.LastKickReason = Unescape (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [36].ToDateTime (ref info.BannedUntil);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.IsFrozen = (fields [37] == "f");  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [38].Length > 0)  	info.FrozenBy = Unescape (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [38].Length > 0)  	info.FrozenBy = Unescape (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.FrozenBy = Unescape (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [39].ToDateTime (ref info.FrozenOn);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [40].ToDateTime (ref info.MutedUntil);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [41].Length > 0)  	info.MutedBy = Unescape (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [41].Length > 0)  	info.MutedBy = Unescape (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.MutedBy = Unescape (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.Password = Unescape (fields [42]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (Byte.TryParse (fields [44]' out bandwidthUseModeCode)) {  	info.BandwidthUseMode = (BandwidthUseMode)bandwidthUseModeCode;  	if (!Enum.IsDefined (typeof(BandwidthUseMode)' bandwidthUseModeCode)) {  		info.BandwidthUseMode = BandwidthUseMode.Default;  	}  } else {  	info.BandwidthUseMode = BandwidthUseMode.Default;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 45) {  	if (fields [45].Length == 0) {  		info.IsHidden = false;  	} else {  		info.IsHidden = info.Rank.Can (Permission.Hide);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 45) {  	if (fields [45].Length == 0) {  		info.IsHidden = false;  	} else {  		info.IsHidden = info.Rank.Can (Permission.Hide);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields [45].Length == 0) {  	info.IsHidden = false;  } else {  	info.IsHidden = info.Rank.Can (Permission.Hide);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 46) {  	fields [46].ToDateTime (ref info.LastModified);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 46) {  	fields [46].ToDateTime (ref info.LastModified);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: fields [46].ToDateTime (ref info.LastModified);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 47 && fields [47].Length > 0) {  	info.DisplayedName = Unescape (fields [47]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 47 && fields [47].Length > 0) {  	info.DisplayedName = Unescape (fields [47]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length > 47 && fields [47].Length > 0) {  	info.DisplayedName = Unescape (fields [47]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat2,The following statement contains a magic number: info.DisplayedName = Unescape (fields [47]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.Rank = Rank.Parse (fields [2]) ?? RankManager.DefaultRank;  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [3].ToDateTimeLegacy (ref info.RankChangeDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [4].Length > 0)  	info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [4].Length > 0)  	info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: switch (fields [5]) {  case "b":  	info.BanStatus = BanStatus.Banned;  	break;  case "x":  	info.BanStatus = BanStatus.IPBanExempt;  	break;  default:  	info.BanStatus = BanStatus.NotBanned;  	break;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [6].ToDateTimeLegacy (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [6].ToDateTimeLegacy (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [6].ToDateTimeLegacy (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [6].ToDateTimeLegacy (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [6].ToDateTimeLegacy (ref info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = Unescape (fields [7]);  	if (fields [10].Length > 0)  		info.BanReason = Unescape (fields [10]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [7].Length > 0)  	info.BannedBy = Unescape (fields [7]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [7].Length > 0)  	info.BannedBy = Unescape (fields [7]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.BannedBy = Unescape (fields [7]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [10].Length > 0)  	info.BanReason = Unescape (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [10].Length > 0)  	info.BanReason = Unescape (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.BanReason = Unescape (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [8].ToDateTimeLegacy (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [8].ToDateTimeLegacy (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [8].ToDateTimeLegacy (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [8].ToDateTimeLegacy (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [8].ToDateTimeLegacy (ref info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = Unescape (fields [9]);  	if (fields [11].Length > 0)  		info.UnbanReason = Unescape (fields [11]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [9].Length > 0)  	info.UnbannedBy = Unescape (fields [9]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [9].Length > 0)  	info.UnbannedBy = Unescape (fields [9]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.UnbannedBy = Unescape (fields [9]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [11].Length > 0)  	info.UnbanReason = Unescape (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [11].Length > 0)  	info.UnbanReason = Unescape (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.UnbanReason = Unescape (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [12].ToDateTimeLegacy (ref info.LastFailedLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [13].Length > 1 || !IPAddress.TryParse (fields [13]' out info.LastFailedLoginIP)) {  	// LEGACY  	info.LastFailedLoginIP = IPAddress.None;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [13].Length > 1 || !IPAddress.TryParse (fields [13]' out info.LastFailedLoginIP)) {  	// LEGACY  	info.LastFailedLoginIP = IPAddress.None;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [15].ToDateTimeLegacy (ref info.FirstLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [16].ToDateTimeLegacy (ref info.LastLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [17].ToTimeSpanLegacy (ref info.TotalTime);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [18].Length > 0)  	Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [18].Length > 0)  	Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [19].Length > 0)  	Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [19].Length > 0)  	Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [20]' out info.TimesVisited);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [20].Length > 0)  	Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [20].Length > 0)  	Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [24].Length > 0)  	info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [24].Length > 0)  	info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [25].Length > 0)  	info.RankChangeReason = Unescape (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [25].Length > 0)  	info.RankChangeReason = Unescape (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.RankChangeReason = Unescape (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [26]' out info.TimesKicked);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [27]' out info.TimesKickedOthers);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [28]' out info.TimesBannedOthers);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.ID = Int32.Parse (fields [29]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (info.ID < 256)  	info.ID = PlayerDB.GetNextID ();  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  	info.RankChangeType = (RankChangeType)rankChangeTypeCode;  	if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  		info.GuessRankChangeType ();  	}  } else {  	info.GuessRankChangeType ();  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [31].ToDateTimeLegacy (ref info.LastKickDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (!fields [32].ToDateTimeLegacy (ref info.LastSeen) || info.LastSeen < info.LastLoginDate) {  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: Int64.TryParse (fields [33]' out info.BlocksDrawn);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickBy = Unescape (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickBy = Unescape (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.LastKickBy = Unescape (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickReason = Unescape (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickReason = Unescape (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.LastKickReason = Unescape (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [36].ToDateTimeLegacy (ref info.BannedUntil);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.IsFrozen = (fields [37] == "f");  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [38].Length > 0)  	info.FrozenBy = Unescape (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [38].Length > 0)  	info.FrozenBy = Unescape (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.FrozenBy = Unescape (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [39].ToDateTimeLegacy (ref info.FrozenOn);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: fields [40].ToDateTimeLegacy (ref info.MutedUntil);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [41].Length > 0)  	info.MutedBy = Unescape (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [41].Length > 0)  	info.MutedBy = Unescape (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.MutedBy = Unescape (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: info.Password = Unescape (fields [42]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (Byte.TryParse (fields [44]' out bandwidthUseModeCode)) {  	info.BandwidthUseMode = (BandwidthUseMode)bandwidthUseModeCode;  	if (!Enum.IsDefined (typeof(BandwidthUseMode)' bandwidthUseModeCode)) {  		info.BandwidthUseMode = BandwidthUseMode.Default;  	}  } else {  	info.BandwidthUseMode = BandwidthUseMode.Default;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields.Length > 45) {  	if (fields [45].Length == 0) {  		info.IsHidden = false;  	} else {  		info.IsHidden = info.Rank.Can (Permission.Hide);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields.Length > 45) {  	if (fields [45].Length == 0) {  		info.IsHidden = false;  	} else {  		info.IsHidden = info.Rank.Can (Permission.Hide);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat1,The following statement contains a magic number: if (fields [45].Length == 0) {  	info.IsHidden = false;  } else {  	info.IsHidden = info.Rank.Can (Permission.Hide);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.Rank = Rank.Parse (fields [2]) ?? RankManager.DefaultRank;  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [3]' out info.RankChangeDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [4].Length > 0) {  	info.RankChangedBy = fields [4];  	if (info.RankChangedBy == "-")  		info.RankChangedBy = null;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [4].Length > 0) {  	info.RankChangedBy = fields [4];  	if (info.RankChangedBy == "-")  		info.RankChangedBy = null;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.RankChangedBy = fields [4];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: switch (fields [5]) {  case "b":  	info.BanStatus = BanStatus.Banned;  	break;  case "x":  	info.BanStatus = BanStatus.IPBanExempt;  	break;  default:  	info.BanStatus = BanStatus.NotBanned;  	break;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [6]' out info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = fields [7];  	if (fields [10].Length > 0) {  		info.BanReason = UnescapeOldFormat (fields [10]);  		if (info.BanReason == "-")  			info.BanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [6]' out info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = fields [7];  	if (fields [10].Length > 0) {  		info.BanReason = UnescapeOldFormat (fields [10]);  		if (info.BanReason == "-")  			info.BanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [6]' out info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = fields [7];  	if (fields [10].Length > 0) {  		info.BanReason = UnescapeOldFormat (fields [10]);  		if (info.BanReason == "-")  			info.BanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [6]' out info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = fields [7];  	if (fields [10].Length > 0) {  		info.BanReason = UnescapeOldFormat (fields [10]);  		if (info.BanReason == "-")  			info.BanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [6]' out info.BanDate)) {  	if (fields [7].Length > 0)  		info.BannedBy = fields [7];  	if (fields [10].Length > 0) {  		info.BanReason = UnescapeOldFormat (fields [10]);  		if (info.BanReason == "-")  			info.BanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [7].Length > 0)  	info.BannedBy = fields [7];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [7].Length > 0)  	info.BannedBy = fields [7];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.BannedBy = fields [7];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [10].Length > 0) {  	info.BanReason = UnescapeOldFormat (fields [10]);  	if (info.BanReason == "-")  		info.BanReason = null;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [10].Length > 0) {  	info.BanReason = UnescapeOldFormat (fields [10]);  	if (info.BanReason == "-")  		info.BanReason = null;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.BanReason = UnescapeOldFormat (fields [10]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [8]' out info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = fields [9];  	if (fields [11].Length > 0) {  		info.UnbanReason = UnescapeOldFormat (fields [11]);  		if (info.UnbanReason == "-")  			info.UnbanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [8]' out info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = fields [9];  	if (fields [11].Length > 0) {  		info.UnbanReason = UnescapeOldFormat (fields [11]);  		if (info.UnbanReason == "-")  			info.UnbanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [8]' out info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = fields [9];  	if (fields [11].Length > 0) {  		info.UnbanReason = UnescapeOldFormat (fields [11]);  		if (info.UnbanReason == "-")  			info.UnbanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [8]' out info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = fields [9];  	if (fields [11].Length > 0) {  		info.UnbanReason = UnescapeOldFormat (fields [11]);  		if (info.UnbanReason == "-")  			info.UnbanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (DateTimeUtil.TryParseLocalDate (fields [8]' out info.UnbanDate)) {  	if (fields [9].Length > 0)  		info.UnbannedBy = fields [9];  	if (fields [11].Length > 0) {  		info.UnbanReason = UnescapeOldFormat (fields [11]);  		if (info.UnbanReason == "-")  			info.UnbanReason = null;  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [9].Length > 0)  	info.UnbannedBy = fields [9];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [9].Length > 0)  	info.UnbannedBy = fields [9];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.UnbannedBy = fields [9];  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [11].Length > 0) {  	info.UnbanReason = UnescapeOldFormat (fields [11]);  	if (info.UnbanReason == "-")  		info.UnbanReason = null;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [11].Length > 0) {  	info.UnbanReason = UnescapeOldFormat (fields [11]);  	if (info.UnbanReason == "-")  		info.UnbanReason = null;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.UnbanReason = UnescapeOldFormat (fields [11]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [12].Length > 1) {  	DateTimeUtil.TryParseLocalDate (fields [12]' out info.LastFailedLoginDate);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [12].Length > 1) {  	DateTimeUtil.TryParseLocalDate (fields [12]' out info.LastFailedLoginDate);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [12]' out info.LastFailedLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [13].Length > 1 || !IPAddress.TryParse (fields [13]' out info.LastFailedLoginIP)) {  	// LEGACY  	info.LastFailedLoginIP = IPAddress.None;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [13].Length > 1 || !IPAddress.TryParse (fields [13]' out info.LastFailedLoginIP)) {  	// LEGACY  	info.LastFailedLoginIP = IPAddress.None;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [15]' out info.FirstLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [16]' out info.LastLoginDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: TimeSpan.TryParse (fields [17]' out info.TotalTime);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [18].Length > 0)  	Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [18].Length > 0)  	Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [18]' out info.BlocksBuilt);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [19].Length > 0)  	Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [19].Length > 0)  	Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [19]' out info.BlocksDeleted);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [20]' out info.TimesVisited);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [20].Length > 0)  	Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [20].Length > 0)  	Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [21]' out info.MessagesWritten);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > MinFieldCount) {  	if (fields [24].Length > 0)  		info.PreviousRank = Rank.Parse (fields [24]);  	if (fields [25].Length > 0)  		info.RankChangeReason = UnescapeOldFormat (fields [25]);  	Int32.TryParse (fields [26]' out info.TimesKicked);  	Int32.TryParse (fields [27]' out info.TimesKickedOthers);  	Int32.TryParse (fields [28]' out info.TimesBannedOthers);  	if (fields.Length > 29) {  		info.ID = Int32.Parse (fields [29]);  		if (info.ID < 256)  			info.ID = PlayerDB.GetNextID ();  		byte rankChangeTypeCode;  		if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  			info.RankChangeType = (RankChangeType)rankChangeTypeCode;  			if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  				info.GuessRankChangeType ();  			}  		} else {  			info.GuessRankChangeType ();  		}  		DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  		if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  			info.LastSeen = info.LastLoginDate;  		}  		Int64.TryParse (fields [33]' out info.BlocksDrawn);  		if (fields [34].Length > 0)  			info.LastKickBy = UnescapeOldFormat (fields [34]);  		if (fields [35].Length > 0)  			info.LastKickReason = UnescapeOldFormat (fields [35]);  	} else {  		info.ID = PlayerDB.GetNextID ();  		info.GuessRankChangeType ();  		info.LastSeen = info.LastLoginDate;  	}  	if (fields.Length > 36) {  		DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  		info.IsFrozen = (fields [37] == "f");  		if (fields [38].Length > 0)  			info.FrozenBy = UnescapeOldFormat (fields [38]);  		DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  		DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  		if (fields [41].Length > 0)  			info.MutedBy = UnescapeOldFormat (fields [41]);  		info.Password = UnescapeOldFormat (fields [42]);  		// fields[43] is "online"' and is ignored  	}  	if (fields.Length > 44) {  		if (fields [44].Length != 0) {  			info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  		}  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [24].Length > 0)  	info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [24].Length > 0)  	info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.PreviousRank = Rank.Parse (fields [24]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [25].Length > 0)  	info.RankChangeReason = UnescapeOldFormat (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [25].Length > 0)  	info.RankChangeReason = UnescapeOldFormat (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.RankChangeReason = UnescapeOldFormat (fields [25]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [26]' out info.TimesKicked);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [27]' out info.TimesKickedOthers);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int32.TryParse (fields [28]' out info.TimesBannedOthers);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 29) {  	info.ID = Int32.Parse (fields [29]);  	if (info.ID < 256)  		info.ID = PlayerDB.GetNextID ();  	byte rankChangeTypeCode;  	if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  		info.RankChangeType = (RankChangeType)rankChangeTypeCode;  		if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  			info.GuessRankChangeType ();  		}  	} else {  		info.GuessRankChangeType ();  	}  	DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  	if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  		info.LastSeen = info.LastLoginDate;  	}  	Int64.TryParse (fields [33]' out info.BlocksDrawn);  	if (fields [34].Length > 0)  		info.LastKickBy = UnescapeOldFormat (fields [34]);  	if (fields [35].Length > 0)  		info.LastKickReason = UnescapeOldFormat (fields [35]);  } else {  	info.ID = PlayerDB.GetNextID ();  	info.GuessRankChangeType ();  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.ID = Int32.Parse (fields [29]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (info.ID < 256)  	info.ID = PlayerDB.GetNextID ();  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (Byte.TryParse (fields [30]' out rankChangeTypeCode)) {  	info.RankChangeType = (RankChangeType)rankChangeTypeCode;  	if (!Enum.IsDefined (typeof(RankChangeType)' rankChangeTypeCode)) {  		info.GuessRankChangeType ();  	}  } else {  	info.GuessRankChangeType ();  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [31]' out info.LastKickDate);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (!DateTimeUtil.TryParseLocalDate (fields [32]' out info.LastSeen) || info.LastSeen < info.LastLoginDate) {  	info.LastSeen = info.LastLoginDate;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: Int64.TryParse (fields [33]' out info.BlocksDrawn);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickBy = UnescapeOldFormat (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [34].Length > 0)  	info.LastKickBy = UnescapeOldFormat (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.LastKickBy = UnescapeOldFormat (fields [34]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [35].Length > 0)  	info.LastKickReason = UnescapeOldFormat (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [35].Length > 0)  	info.LastKickReason = UnescapeOldFormat (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.LastKickReason = UnescapeOldFormat (fields [35]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 36) {  	DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  	info.IsFrozen = (fields [37] == "f");  	if (fields [38].Length > 0)  		info.FrozenBy = UnescapeOldFormat (fields [38]);  	DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  	DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  	if (fields [41].Length > 0)  		info.MutedBy = UnescapeOldFormat (fields [41]);  	info.Password = UnescapeOldFormat (fields [42]);  	// fields[43] is "online"' and is ignored  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [36]' out info.BannedUntil);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.IsFrozen = (fields [37] == "f");  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [38].Length > 0)  	info.FrozenBy = UnescapeOldFormat (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [38].Length > 0)  	info.FrozenBy = UnescapeOldFormat (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.FrozenBy = UnescapeOldFormat (fields [38]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [39]' out info.FrozenOn);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [40]' out info.MutedUntil);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [41].Length > 0)  	info.MutedBy = UnescapeOldFormat (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [41].Length > 0)  	info.MutedBy = UnescapeOldFormat (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.MutedBy = UnescapeOldFormat (fields [41]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.Password = UnescapeOldFormat (fields [42]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 44) {  	if (fields [44].Length != 0) {  		info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 44) {  	if (fields [44].Length != 0) {  		info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length > 44) {  	if (fields [44].Length != 0) {  		info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  	}  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [44].Length != 0) {  	info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: if (fields [44].Length != 0) {  	info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadFormat0,The following statement contains a magic number: info.BandwidthUseMode = (BandwidthUseMode)Int32.Parse (fields [44]);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,The following statement contains a magic number: if (info.BanStatus == BanStatus.Banned) {  	info.BannedUntil = ReadDate (reader);  	info.LastFailedLoginDate = ReadDate (reader);  	info.LastFailedLoginIP = new IPAddress (reader.ReadBytes (4));  } else {  	info.UnbanDate = ReadDate (reader);  	info.UnbannedBy = ReadString (reader);  	info.UnbanReason = ReadString (reader);  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,The following statement contains a magic number: info.LastFailedLoginIP = new IPAddress (reader.ReadBytes (4));  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,LoadBinaryFormat0,The following statement contains a magic number: info.LastIP = new IPAddress (reader.ReadBytes (4));  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Read7BitEncodedInt,The following statement contains a magic number: do {  	if (num2 == 0x23) {  		throw new FormatException ("Invalid 7bit encoded integer.");  	}  	num3 = reader.ReadByte ();  	num |= (num3 & 0x7f) << num2;  	num2 += 7;  } while ((num3 & 0x80) != 0);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Read7BitEncodedInt,The following statement contains a magic number: num2 += 7;  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The following statement contains a magic number: if (IsFrozen) {  	sb.Append (''').Append ('f').Append (''');  	// 37  	sb.AppendEscaped (FrozenBy).Append (''');  	// 38  	FrozenOn.ToUnixTimeString (sb).Append (''');  	// 39  } else {  	sb.Append ('''' 4);  	// 37-39  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The following statement contains a magic number: sb.Append ('''' 4);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The following statement contains a magic number: if (MutedUntil > DateTime.UtcNow) {  	MutedUntil.ToUnixTimeString (sb).Append (''');  	// 40  	sb.AppendEscaped (MutedBy).Append (''');  	// 41  } else {  	sb.Append ('''' 2);  	// 40-41  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The following statement contains a magic number: sb.Append ('''' 2);  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Write7BitEncodedInt,The following statement contains a magic number: while (num >= 0x80) {  	writer.Write ((byte)(num | 0x80));  	num = num >> 7;  }  
Magic Number,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Write7BitEncodedInt,The following statement contains a magic number: num = num >> 7;  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,GetFixed,The following statement contains a magic number: return new Position {  	X = (X)'  	Y = (Y)'  	Z = (short)(Z - 22)'  	R = R'  	L = L  };  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I ((X - 16) / 32' (Y - 16) / 32' (Z - 16) / 32);  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I ((X - 16) / 32' (Y - 16) / 32' (Z - 16) / 32);  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I ((X - 16) / 32' (Y - 16) / 32' (Z - 16) / 32);  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I ((X - 16) / 32' (Y - 16) / 32' (Z - 16) / 32);  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I ((X - 16) / 32' (Y - 16) / 32' (Z - 16) / 32);  
Magic Number,fCraft,Position,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Position.cs,ToBlockCoords,The following statement contains a magic number: return new Vector3I ((X - 16) / 32' (Y - 16) / 32' (Z - 16) / 32);  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (agBlocks != null && agSeconds != null) {  	if (Int32.TryParse (agBlocks.Value' out value)) {  		if (value >= 0 && value < 1000) {  			AntiGriefBlocks = value;  		} else {  			Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefBlocks is not within valid range (0-1000). Assuming default ({1})."' Name' AntiGriefBlocks);  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for antiGriefBlocks. Assuming default ({1})."' Name' AntiGriefBlocks);  	}  	if (Int32.TryParse (agSeconds.Value' out value)) {  		if (value >= 0 && value < 100) {  			AntiGriefSeconds = value;  		} else {  			Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefSeconds is not within valid range (0-100). Assuming default ({1})."' Name' AntiGriefSeconds);  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for antiGriefSeconds. Assuming default ({1})."' Name' AntiGriefSeconds);  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (agBlocks != null && agSeconds != null) {  	if (Int32.TryParse (agBlocks.Value' out value)) {  		if (value >= 0 && value < 1000) {  			AntiGriefBlocks = value;  		} else {  			Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefBlocks is not within valid range (0-1000). Assuming default ({1})."' Name' AntiGriefBlocks);  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for antiGriefBlocks. Assuming default ({1})."' Name' AntiGriefBlocks);  	}  	if (Int32.TryParse (agSeconds.Value' out value)) {  		if (value >= 0 && value < 100) {  			AntiGriefSeconds = value;  		} else {  			Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefSeconds is not within valid range (0-100). Assuming default ({1})."' Name' AntiGriefSeconds);  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for antiGriefSeconds. Assuming default ({1})."' Name' AntiGriefSeconds);  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (Int32.TryParse (agBlocks.Value' out value)) {  	if (value >= 0 && value < 1000) {  		AntiGriefBlocks = value;  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefBlocks is not within valid range (0-1000). Assuming default ({1})."' Name' AntiGriefBlocks);  	}  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for antiGriefBlocks. Assuming default ({1})."' Name' AntiGriefBlocks);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value >= 0 && value < 1000) {  	AntiGriefBlocks = value;  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefBlocks is not within valid range (0-1000). Assuming default ({1})."' Name' AntiGriefBlocks);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (Int32.TryParse (agSeconds.Value' out value)) {  	if (value >= 0 && value < 100) {  		AntiGriefSeconds = value;  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefSeconds is not within valid range (0-100). Assuming default ({1})."' Name' AntiGriefSeconds);  	}  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for antiGriefSeconds. Assuming default ({1})."' Name' AntiGriefSeconds);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value >= 0 && value < 100) {  	AntiGriefSeconds = value;  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Value for antiGriefSeconds is not within valid range (0-100). Assuming default ({1})."' Name' AntiGriefSeconds);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if ((attr = el.Attribute ("drawLimit")) != null) {  	if (Int32.TryParse (attr.Value' out value)) {  		if (value >= 0 && value < 100000000) {  			DrawLimit = value;  		} else {  			Logger.Log (LogType.Warning' "Rank({0}): Value for drawLimit is not within valid range (0-100000000). Assuming default ({1})."' Name' DrawLimit);  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for drawLimit. Assuming default ({1})."' Name' DrawLimit);  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (Int32.TryParse (attr.Value' out value)) {  	if (value >= 0 && value < 100000000) {  		DrawLimit = value;  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Value for drawLimit is not within valid range (0-100000000). Assuming default ({1})."' Name' DrawLimit);  	}  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for drawLimit. Assuming default ({1})."' Name' DrawLimit);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value >= 0 && value < 100000000) {  	DrawLimit = value;  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Value for drawLimit is not within valid range (0-100000000). Assuming default ({1})."' Name' DrawLimit);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if ((attr = el.Attribute ("copySlots")) != null) {  	if (Int32.TryParse (attr.Value' out value)) {  		if (value > 0 && value < 256) {  			CopySlots = value;  		} else {  			Logger.Log (LogType.Warning' "Rank({0}): Value for copySlots is not within valid range (1-255). Assuming default ({1})."' Name' CopySlots);  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for copySlots. Assuming default ({1})."' Name' CopySlots);  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (Int32.TryParse (attr.Value' out value)) {  	if (value > 0 && value < 256) {  		CopySlots = value;  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Value for copySlots is not within valid range (1-255). Assuming default ({1})."' Name' CopySlots);  	}  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for copySlots. Assuming default ({1})."' Name' CopySlots);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value > 0 && value < 256) {  	CopySlots = value;  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Value for copySlots is not within valid range (1-255). Assuming default ({1})."' Name' CopySlots);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if ((attr = el.Attribute ("fillLimit")) != null) {  	if (Int32.TryParse (attr.Value' out value)) {  		if (value < 1) {  			Logger.Log (LogType.Warning' "Rank({0}): Value for fillLimit may not be negative. Assuming default ({1})."' Name' FillLimit);  		} else if (value > 2048) {  			FillLimit = 2048;  		} else {  			FillLimit = value;  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for fillLimit. Assuming default ({1})."' Name' FillLimit);  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if ((attr = el.Attribute ("fillLimit")) != null) {  	if (Int32.TryParse (attr.Value' out value)) {  		if (value < 1) {  			Logger.Log (LogType.Warning' "Rank({0}): Value for fillLimit may not be negative. Assuming default ({1})."' Name' FillLimit);  		} else if (value > 2048) {  			FillLimit = 2048;  		} else {  			FillLimit = value;  		}  	} else {  		Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for fillLimit. Assuming default ({1})."' Name' FillLimit);  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (Int32.TryParse (attr.Value' out value)) {  	if (value < 1) {  		Logger.Log (LogType.Warning' "Rank({0}): Value for fillLimit may not be negative. Assuming default ({1})."' Name' FillLimit);  	} else if (value > 2048) {  		FillLimit = 2048;  	} else {  		FillLimit = value;  	}  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for fillLimit. Assuming default ({1})."' Name' FillLimit);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (Int32.TryParse (attr.Value' out value)) {  	if (value < 1) {  		Logger.Log (LogType.Warning' "Rank({0}): Value for fillLimit may not be negative. Assuming default ({1})."' Name' FillLimit);  	} else if (value > 2048) {  		FillLimit = 2048;  	} else {  		FillLimit = value;  	}  } else {  	Logger.Log (LogType.Warning' "Rank({0}): Could not parse the value for fillLimit. Assuming default ({1})."' Name' FillLimit);  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value < 1) {  	Logger.Log (LogType.Warning' "Rank({0}): Value for fillLimit may not be negative. Assuming default ({1})."' Name' FillLimit);  } else if (value > 2048) {  	FillLimit = 2048;  } else {  	FillLimit = value;  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value < 1) {  	Logger.Log (LogType.Warning' "Rank({0}): Value for fillLimit may not be negative. Assuming default ({1})."' Name' FillLimit);  } else if (value > 2048) {  	FillLimit = 2048;  } else {  	FillLimit = value;  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value > 2048) {  	FillLimit = 2048;  } else {  	FillLimit = value;  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: if (value > 2048) {  	FillLimit = 2048;  } else {  	FillLimit = value;  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Rank,The following statement contains a magic number: FillLimit = 2048;  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidRankName,The following statement contains a magic number: if (rankName.Length < 1 || rankName.Length > 16)  	return false;  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,IsValidID,The following statement contains a magic number: if (id.Length != 16)  	return false;  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Parse,The following statement contains a magic number: if (name.Contains ("#")) {  	// new format  	string id = name.Substring (name.IndexOf ("#") + 1);  	if (RankManager.RanksByID.ContainsKey (id)) {  		// current class  		return RankManager.RanksByID [id];  	} else {  		// unknown class  		int tries = 0;  		while (RankManager.LegacyRankMapping.ContainsKey (id)) {  			id = RankManager.LegacyRankMapping [id];  			if (RankManager.RanksByID.ContainsKey (id)) {  				return RankManager.RanksByID [id];  			}  			// avoid infinite loops due to recursive definitions  			tries++;  			if (tries > 100) {  				throw new RankDefinitionException (name' "Recursive legacy rank definition");  			}  		}  		string plainName = name.Substring (0' name.IndexOf ('#')).ToLower ();  		// try to fall back to name-only  		return RankManager.RanksByName.ContainsKey (plainName) ? RankManager.RanksByName [plainName] : null;  	}  } else if (RankManager.RanksByName.ContainsKey (name.ToLower ())) {  	// old format  	return RankManager.RanksByName [name.ToLower ()];  	// LEGACY  } else {  	// totally unknown rank  	return null;  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Parse,The following statement contains a magic number: if (RankManager.RanksByID.ContainsKey (id)) {  	// current class  	return RankManager.RanksByID [id];  } else {  	// unknown class  	int tries = 0;  	while (RankManager.LegacyRankMapping.ContainsKey (id)) {  		id = RankManager.LegacyRankMapping [id];  		if (RankManager.RanksByID.ContainsKey (id)) {  			return RankManager.RanksByID [id];  		}  		// avoid infinite loops due to recursive definitions  		tries++;  		if (tries > 100) {  			throw new RankDefinitionException (name' "Recursive legacy rank definition");  		}  	}  	string plainName = name.Substring (0' name.IndexOf ('#')).ToLower ();  	// try to fall back to name-only  	return RankManager.RanksByName.ContainsKey (plainName) ? RankManager.RanksByName [plainName] : null;  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Parse,The following statement contains a magic number: while (RankManager.LegacyRankMapping.ContainsKey (id)) {  	id = RankManager.LegacyRankMapping [id];  	if (RankManager.RanksByID.ContainsKey (id)) {  		return RankManager.RanksByID [id];  	}  	// avoid infinite loops due to recursive definitions  	tries++;  	if (tries > 100) {  		throw new RankDefinitionException (name' "Recursive legacy rank definition");  	}  }  
Magic Number,fCraft,Rank,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Rank.cs,Parse,The following statement contains a magic number: if (tries > 100) {  	throw new RankDefinitionException (name' "Recursive legacy rank definition");  }  
Magic Number,fCraft,RankManager,F:\newReposMay17\GlennMR_800craft\fCraft\Player\RankManager.cs,GenerateID,The following statement contains a magic number: return Server.GetRandomString (16);  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: time += 0.03 / 2;  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: time += 0.03 / 2;  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time >= 6) {  	time = 0;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time < 3) {  	pos.X += 1;  	heading = 64;  } else if (time < 6) {  	pos.X -= 1;  	heading = 196;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time < 3) {  	pos.X += 1;  	heading = 64;  } else if (time < 6) {  	pos.X -= 1;  	heading = 196;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time < 3) {  	pos.X += 1;  	heading = 64;  } else if (time < 6) {  	pos.X -= 1;  	heading = 196;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time < 3) {  	pos.X += 1;  	heading = 64;  } else if (time < 6) {  	pos.X -= 1;  	heading = 196;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: heading = 64;  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time < 6) {  	pos.X -= 1;  	heading = 196;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: if (time < 6) {  	pos.X -= 1;  	heading = 196;  }  
Magic Number,fCraft,Bot,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PathFinding.cs,Update,The following statement contains a magic number: heading = 196;  
Magic Number,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,MainLoop,The following statement contains a magic number: while (!Server.IsShuttingDown) {  	DateTime ticksNow = DateTime.UtcNow;  	SchedulerTask[] taskListCache = taskCache;  	for (int i = 0; i < taskListCache.Length && !Server.IsShuttingDown; i++) {  		SchedulerTask task = taskListCache [i];  		if (task.IsStopped || task.NextTime > ticksNow)  			continue;  		if (task.IsRecurring && task.AdjustForExecutionTime) {  			task.NextTime += task.Interval;  		}  		if (task.IsBackground) {  			lock (BackgroundTaskListLock) {  				BackgroundTasks.Enqueue (task);  			}  		} else {  			task.IsExecuting = true;  			#if DEBUG_SCHEDULER  			                        FireEvent( TaskExecuting' task ); #endif  			#if DEBUG  			task.Callback (task);  			task.IsExecuting = false;  			#else  			                        try {                             task.Callback( task );                         } catch ( Exception ex ) {                             Logger.LogAndReportCrash( "Exception thrown by ScheduledTask callback"' "fCraft"' ex' false );                         } finally {                             task.IsExecuting = false;                         } #endif  			#if DEBUG_SCHEDULER  			                        FireEvent( TaskExecuted' task ); #endif  		}  		if (!task.IsRecurring || task.MaxRepeats == 1) {  			task.Stop ();  			continue;  		}  		task.MaxRepeats--;  		ticksNow = DateTime.UtcNow;  		if (!task.AdjustForExecutionTime) {  			task.NextTime = ticksNow.Add (task.Interval);  		}  	}  	Thread.Sleep (10);  }  
Magic Number,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,MainLoop,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,BackgroundLoop,The following statement contains a magic number: while (!Server.IsShuttingDown) {  	if (BackgroundTasks.Count > 0) {  		SchedulerTask task;  		lock (BackgroundTaskListLock) {  			task = BackgroundTasks.Dequeue ();  		}  		task.IsExecuting = true;  		#if DEBUG_SCHEDULER  		                    FireEvent( TaskExecuting' task ); #endif  		#if DEBUG  		task.Callback (task);  		#else  		                    try {                         task.Callback( task );                     } catch ( Exception ex ) {                         Logger.LogAndReportCrash( "Exception thrown by ScheduledTask callback"' "fCraft"' ex' false );                     } finally {                         task.IsExecuting = false;                     } #endif  		#if DEBUG_SCHEDULER  		                    FireEvent( TaskExecuted' task ); #endif  	}  	Thread.Sleep (10);  }  
Magic Number,fCraft,Scheduler,F:\newReposMay17\GlennMR_800craft\fCraft\System\Scheduler.cs,BackgroundLoop,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,fCraft,PlayerProximityTracker,F:\newReposMay17\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,FindPlayersAtDistance,The following statement contains a magic number: d *= d * 32 * 32;  
Magic Number,fCraft,PlayerProximityTracker,F:\newReposMay17\GlennMR_800craft\fCraft\Games\PlayerProximityTracker.cs,FindPlayersAtDistance,The following statement contains a magic number: d *= d * 32 * 32;  
Magic Number,fCraft,Vector3F,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3F.cs,GetHashCode,The following statement contains a magic number: return (int)(X + Y * 1625 + Z * 2642245);  
Magic Number,fCraft,Vector3F,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3F.cs,GetHashCode,The following statement contains a magic number: return (int)(X + Y * 1625 + Z * 2642245);  
Magic Number,fCraft,Vector3F,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3F.cs,ToPlayerCoords,The following statement contains a magic number: return new Position ((int)(X * 32)' (int)(Y * 32)' (int)(Z * 32));  
Magic Number,fCraft,Vector3F,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3F.cs,ToPlayerCoords,The following statement contains a magic number: return new Position ((int)(X * 32)' (int)(Y * 32)' (int)(Z * 32));  
Magic Number,fCraft,Vector3F,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3F.cs,ToPlayerCoords,The following statement contains a magic number: return new Position ((int)(X * 32)' (int)(Y * 32)' (int)(Z * 32));  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,SendRawMessage,The following statement contains a magic number: if (line.Length > maxContentLength) {  	SendRawMessage (prefix' line.Substring (0' maxContentLength)' suffix);  	int offset = maxContentLength;  	while (offset < line.Length) {  		int length = Math.Min (line.Length - offset' maxContentLength - 2);  		SendRawMessage (prefix' "> " + line.Substring (offset' length)' suffix);  		offset += length;  	}  	return;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,SendRawMessage,The following statement contains a magic number: while (offset < line.Length) {  	int length = Math.Min (line.Length - offset' maxContentLength - 2);  	SendRawMessage (prefix' "> " + line.Substring (offset' length)' suffix);  	offset += length;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: if (found.Success) {  	string code = found.Groups [1].Value;  	IRCReplyCode replycode = (IRCReplyCode)int.Parse (code);  	// check if this replycode is known in the RFC  	if (Array.IndexOf (ReplyCodes' replycode) == -1) {  		return IRCMessageType.Unknown;  	}  	switch (replycode) {  	case IRCReplyCode.Welcome:  	case IRCReplyCode.YourHost:  	case IRCReplyCode.Created:  	case IRCReplyCode.MyInfo:  	case IRCReplyCode.Bounce:  		return IRCMessageType.Login;  	case IRCReplyCode.StatsConn:  	case IRCReplyCode.LocalUsers:  	case IRCReplyCode.GlobalUsers:  	case IRCReplyCode.LuserClient:  	case IRCReplyCode.LuserOp:  	case IRCReplyCode.LuserUnknown:  	case IRCReplyCode.LuserMe:  	case IRCReplyCode.LuserChannels:  		return IRCMessageType.Info;  	case IRCReplyCode.MotdStart:  	case IRCReplyCode.Motd:  	case IRCReplyCode.EndOfMotd:  		return IRCMessageType.Motd;  	case IRCReplyCode.NamesReply:  	case IRCReplyCode.EndOfNames:  		return IRCMessageType.Name;  	case IRCReplyCode.WhoReply:  	case IRCReplyCode.EndOfWho:  		return IRCMessageType.Who;  	case IRCReplyCode.ListStart:  	case IRCReplyCode.List:  	case IRCReplyCode.ListEnd:  		return IRCMessageType.List;  	case IRCReplyCode.BanList:  	case IRCReplyCode.EndOfBanList:  		return IRCMessageType.BanList;  	case IRCReplyCode.Topic:  	case IRCReplyCode.TopicSetBy:  	case IRCReplyCode.NoTopic:  		return IRCMessageType.Topic;  	case IRCReplyCode.WhoIsUser:  	case IRCReplyCode.WhoIsServer:  	case IRCReplyCode.WhoIsOperator:  	case IRCReplyCode.WhoIsIdle:  	case IRCReplyCode.WhoIsChannels:  	case IRCReplyCode.EndOfWhoIs:  		return IRCMessageType.WhoIs;  	case IRCReplyCode.WhoWasUser:  	case IRCReplyCode.EndOfWhoWas:  		return IRCMessageType.WhoWas;  	case IRCReplyCode.UserModeIs:  		return IRCMessageType.UserMode;  	case IRCReplyCode.ChannelModeIs:  		return IRCMessageType.ChannelMode;  	default:  		if (((int)replycode >= 400) && ((int)replycode <= 599)) {  			return IRCMessageType.ErrorMessage;  		} else {  			return IRCMessageType.Unknown;  		}  	}  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: if (found.Success) {  	string code = found.Groups [1].Value;  	IRCReplyCode replycode = (IRCReplyCode)int.Parse (code);  	// check if this replycode is known in the RFC  	if (Array.IndexOf (ReplyCodes' replycode) == -1) {  		return IRCMessageType.Unknown;  	}  	switch (replycode) {  	case IRCReplyCode.Welcome:  	case IRCReplyCode.YourHost:  	case IRCReplyCode.Created:  	case IRCReplyCode.MyInfo:  	case IRCReplyCode.Bounce:  		return IRCMessageType.Login;  	case IRCReplyCode.StatsConn:  	case IRCReplyCode.LocalUsers:  	case IRCReplyCode.GlobalUsers:  	case IRCReplyCode.LuserClient:  	case IRCReplyCode.LuserOp:  	case IRCReplyCode.LuserUnknown:  	case IRCReplyCode.LuserMe:  	case IRCReplyCode.LuserChannels:  		return IRCMessageType.Info;  	case IRCReplyCode.MotdStart:  	case IRCReplyCode.Motd:  	case IRCReplyCode.EndOfMotd:  		return IRCMessageType.Motd;  	case IRCReplyCode.NamesReply:  	case IRCReplyCode.EndOfNames:  		return IRCMessageType.Name;  	case IRCReplyCode.WhoReply:  	case IRCReplyCode.EndOfWho:  		return IRCMessageType.Who;  	case IRCReplyCode.ListStart:  	case IRCReplyCode.List:  	case IRCReplyCode.ListEnd:  		return IRCMessageType.List;  	case IRCReplyCode.BanList:  	case IRCReplyCode.EndOfBanList:  		return IRCMessageType.BanList;  	case IRCReplyCode.Topic:  	case IRCReplyCode.TopicSetBy:  	case IRCReplyCode.NoTopic:  		return IRCMessageType.Topic;  	case IRCReplyCode.WhoIsUser:  	case IRCReplyCode.WhoIsServer:  	case IRCReplyCode.WhoIsOperator:  	case IRCReplyCode.WhoIsIdle:  	case IRCReplyCode.WhoIsChannels:  	case IRCReplyCode.EndOfWhoIs:  		return IRCMessageType.WhoIs;  	case IRCReplyCode.WhoWasUser:  	case IRCReplyCode.EndOfWhoWas:  		return IRCMessageType.WhoWas;  	case IRCReplyCode.UserModeIs:  		return IRCMessageType.UserMode;  	case IRCReplyCode.ChannelModeIs:  		return IRCMessageType.ChannelMode;  	default:  		if (((int)replycode >= 400) && ((int)replycode <= 599)) {  			return IRCMessageType.ErrorMessage;  		} else {  			return IRCMessageType.Unknown;  		}  	}  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: switch (replycode) {  case IRCReplyCode.Welcome:  case IRCReplyCode.YourHost:  case IRCReplyCode.Created:  case IRCReplyCode.MyInfo:  case IRCReplyCode.Bounce:  	return IRCMessageType.Login;  case IRCReplyCode.StatsConn:  case IRCReplyCode.LocalUsers:  case IRCReplyCode.GlobalUsers:  case IRCReplyCode.LuserClient:  case IRCReplyCode.LuserOp:  case IRCReplyCode.LuserUnknown:  case IRCReplyCode.LuserMe:  case IRCReplyCode.LuserChannels:  	return IRCMessageType.Info;  case IRCReplyCode.MotdStart:  case IRCReplyCode.Motd:  case IRCReplyCode.EndOfMotd:  	return IRCMessageType.Motd;  case IRCReplyCode.NamesReply:  case IRCReplyCode.EndOfNames:  	return IRCMessageType.Name;  case IRCReplyCode.WhoReply:  case IRCReplyCode.EndOfWho:  	return IRCMessageType.Who;  case IRCReplyCode.ListStart:  case IRCReplyCode.List:  case IRCReplyCode.ListEnd:  	return IRCMessageType.List;  case IRCReplyCode.BanList:  case IRCReplyCode.EndOfBanList:  	return IRCMessageType.BanList;  case IRCReplyCode.Topic:  case IRCReplyCode.TopicSetBy:  case IRCReplyCode.NoTopic:  	return IRCMessageType.Topic;  case IRCReplyCode.WhoIsUser:  case IRCReplyCode.WhoIsServer:  case IRCReplyCode.WhoIsOperator:  case IRCReplyCode.WhoIsIdle:  case IRCReplyCode.WhoIsChannels:  case IRCReplyCode.EndOfWhoIs:  	return IRCMessageType.WhoIs;  case IRCReplyCode.WhoWasUser:  case IRCReplyCode.EndOfWhoWas:  	return IRCMessageType.WhoWas;  case IRCReplyCode.UserModeIs:  	return IRCMessageType.UserMode;  case IRCReplyCode.ChannelModeIs:  	return IRCMessageType.ChannelMode;  default:  	if (((int)replycode >= 400) && ((int)replycode <= 599)) {  		return IRCMessageType.ErrorMessage;  	} else {  		return IRCMessageType.Unknown;  	}  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: switch (replycode) {  case IRCReplyCode.Welcome:  case IRCReplyCode.YourHost:  case IRCReplyCode.Created:  case IRCReplyCode.MyInfo:  case IRCReplyCode.Bounce:  	return IRCMessageType.Login;  case IRCReplyCode.StatsConn:  case IRCReplyCode.LocalUsers:  case IRCReplyCode.GlobalUsers:  case IRCReplyCode.LuserClient:  case IRCReplyCode.LuserOp:  case IRCReplyCode.LuserUnknown:  case IRCReplyCode.LuserMe:  case IRCReplyCode.LuserChannels:  	return IRCMessageType.Info;  case IRCReplyCode.MotdStart:  case IRCReplyCode.Motd:  case IRCReplyCode.EndOfMotd:  	return IRCMessageType.Motd;  case IRCReplyCode.NamesReply:  case IRCReplyCode.EndOfNames:  	return IRCMessageType.Name;  case IRCReplyCode.WhoReply:  case IRCReplyCode.EndOfWho:  	return IRCMessageType.Who;  case IRCReplyCode.ListStart:  case IRCReplyCode.List:  case IRCReplyCode.ListEnd:  	return IRCMessageType.List;  case IRCReplyCode.BanList:  case IRCReplyCode.EndOfBanList:  	return IRCMessageType.BanList;  case IRCReplyCode.Topic:  case IRCReplyCode.TopicSetBy:  case IRCReplyCode.NoTopic:  	return IRCMessageType.Topic;  case IRCReplyCode.WhoIsUser:  case IRCReplyCode.WhoIsServer:  case IRCReplyCode.WhoIsOperator:  case IRCReplyCode.WhoIsIdle:  case IRCReplyCode.WhoIsChannels:  case IRCReplyCode.EndOfWhoIs:  	return IRCMessageType.WhoIs;  case IRCReplyCode.WhoWasUser:  case IRCReplyCode.EndOfWhoWas:  	return IRCMessageType.WhoWas;  case IRCReplyCode.UserModeIs:  	return IRCMessageType.UserMode;  case IRCReplyCode.ChannelModeIs:  	return IRCMessageType.ChannelMode;  default:  	if (((int)replycode >= 400) && ((int)replycode <= 599)) {  		return IRCMessageType.ErrorMessage;  	} else {  		return IRCMessageType.Unknown;  	}  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: if (((int)replycode >= 400) && ((int)replycode <= 599)) {  	return IRCMessageType.ErrorMessage;  } else {  	return IRCMessageType.Unknown;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,GetMessageType,The following statement contains a magic number: if (((int)replycode >= 400) && ((int)replycode <= 599)) {  	return IRCMessageType.ErrorMessage;  } else {  	return IRCMessageType.Unknown;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: switch (type) {  case IRCMessageType.Join:  case IRCMessageType.Kick:  case IRCMessageType.Part:  case IRCMessageType.TopicChange:  case IRCMessageType.ChannelModeChange:  case IRCMessageType.ChannelMessage:  case IRCMessageType.ChannelAction:  case IRCMessageType.ChannelNotice:  	channel = linear [2];  	break;  case IRCMessageType.Who:  case IRCMessageType.Topic:  case IRCMessageType.Invite:  case IRCMessageType.BanList:  case IRCMessageType.ChannelMode:  	channel = linear [3];  	break;  case IRCMessageType.Name:  	channel = linear [4];  	break;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: switch (type) {  case IRCMessageType.Join:  case IRCMessageType.Kick:  case IRCMessageType.Part:  case IRCMessageType.TopicChange:  case IRCMessageType.ChannelModeChange:  case IRCMessageType.ChannelMessage:  case IRCMessageType.ChannelAction:  case IRCMessageType.ChannelNotice:  	channel = linear [2];  	break;  case IRCMessageType.Who:  case IRCMessageType.Topic:  case IRCMessageType.Invite:  case IRCMessageType.BanList:  case IRCMessageType.ChannelMode:  	channel = linear [3];  	break;  case IRCMessageType.Name:  	channel = linear [4];  	break;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: switch (type) {  case IRCMessageType.Join:  case IRCMessageType.Kick:  case IRCMessageType.Part:  case IRCMessageType.TopicChange:  case IRCMessageType.ChannelModeChange:  case IRCMessageType.ChannelMessage:  case IRCMessageType.ChannelAction:  case IRCMessageType.ChannelNotice:  	channel = linear [2];  	break;  case IRCMessageType.Who:  case IRCMessageType.Topic:  case IRCMessageType.Invite:  case IRCMessageType.BanList:  case IRCMessageType.ChannelMode:  	channel = linear [3];  	break;  case IRCMessageType.Name:  	channel = linear [4];  	break;  }  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: channel = linear [2];  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: channel = linear [3];  
Magic Number,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following statement contains a magic number: channel = linear [4];  
Magic Number,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: if (File.Exists (Paths.IPBanListFileName)) {  	using (StreamReader reader = File.OpenText (Paths.IPBanListFileName)) {  		string headerText = reader.ReadLine ();  		if (headerText == null) {  			Logger.Log (LogType.Warning' "IPBanList.Load: IP ban file is empty.");  			return;  		}  		int version = ParseHeader (headerText);  		if (version > FormatVersion) {  			Logger.Log (LogType.Warning' "IPBanList.Load: Attempting to load unsupported IPBanList format ({0}). Errors may occur."' version);  		} else if (version < FormatVersion) {  			Logger.Log (LogType.Warning' "IPBanList.Load: Converting IPBanList to a newer format (version {0} to {1})."' version' FormatVersion);  		}  		while (!reader.EndOfStream) {  			string line = reader.ReadLine ();  			if (line == null)  				break;  			string[] fields = line.Split (''');  			if (fields.Length == IPBanInfo.FieldCount) {  				try {  					IPBanInfo ban;  					switch (version) {  					case 0:  						ban = IPBanInfo.LoadFormat0 (fields' true);  						break;  					case 1:  						ban = IPBanInfo.LoadFormat1 (fields);  						break;  					case 2:  						ban = IPBanInfo.LoadFormat2 (fields);  						break;  					default:  						return;  					}  					if (ban.Address.Equals (IPAddress.Any) || ban.Address.Equals (IPAddress.None)) {  						Logger.Log (LogType.Warning' "IPBanList.Load: Invalid IP address skipped.");  					} else {  						Bans.Add (ban.Address.ToString ()' ban);  					}  				} catch (IOException ex) {  					Logger.Log (LogType.Error' "IPBanList.Load: Error while trying to read from file: {0}"' ex.Message);  				} catch (Exception ex) {  					Logger.Log (LogType.Error' "IPBanList.Load: Could not parse a record: {0}"' ex.Message);  				}  			} else {  				Logger.Log (LogType.Error' "IPBanList.Load: Corrupt record skipped ({0} fields instead of {1}): {2}"' fields.Length' IPBanInfo.FieldCount' String.Join ("'"' fields));  			}  		}  	}  	Logger.Log (LogType.Debug' "IPBanList.Load: Done loading IP ban list ({0} records)."' Bans.Count);  } else {  	Logger.Log (LogType.Warning' "IPBanList.Load: No IP ban file found.");  }  
Magic Number,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: using (StreamReader reader = File.OpenText (Paths.IPBanListFileName)) {  	string headerText = reader.ReadLine ();  	if (headerText == null) {  		Logger.Log (LogType.Warning' "IPBanList.Load: IP ban file is empty.");  		return;  	}  	int version = ParseHeader (headerText);  	if (version > FormatVersion) {  		Logger.Log (LogType.Warning' "IPBanList.Load: Attempting to load unsupported IPBanList format ({0}). Errors may occur."' version);  	} else if (version < FormatVersion) {  		Logger.Log (LogType.Warning' "IPBanList.Load: Converting IPBanList to a newer format (version {0} to {1})."' version' FormatVersion);  	}  	while (!reader.EndOfStream) {  		string line = reader.ReadLine ();  		if (line == null)  			break;  		string[] fields = line.Split (''');  		if (fields.Length == IPBanInfo.FieldCount) {  			try {  				IPBanInfo ban;  				switch (version) {  				case 0:  					ban = IPBanInfo.LoadFormat0 (fields' true);  					break;  				case 1:  					ban = IPBanInfo.LoadFormat1 (fields);  					break;  				case 2:  					ban = IPBanInfo.LoadFormat2 (fields);  					break;  				default:  					return;  				}  				if (ban.Address.Equals (IPAddress.Any) || ban.Address.Equals (IPAddress.None)) {  					Logger.Log (LogType.Warning' "IPBanList.Load: Invalid IP address skipped.");  				} else {  					Bans.Add (ban.Address.ToString ()' ban);  				}  			} catch (IOException ex) {  				Logger.Log (LogType.Error' "IPBanList.Load: Error while trying to read from file: {0}"' ex.Message);  			} catch (Exception ex) {  				Logger.Log (LogType.Error' "IPBanList.Load: Could not parse a record: {0}"' ex.Message);  			}  		} else {  			Logger.Log (LogType.Error' "IPBanList.Load: Corrupt record skipped ({0} fields instead of {1}): {2}"' fields.Length' IPBanInfo.FieldCount' String.Join ("'"' fields));  		}  	}  }  
Magic Number,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: while (!reader.EndOfStream) {  	string line = reader.ReadLine ();  	if (line == null)  		break;  	string[] fields = line.Split (''');  	if (fields.Length == IPBanInfo.FieldCount) {  		try {  			IPBanInfo ban;  			switch (version) {  			case 0:  				ban = IPBanInfo.LoadFormat0 (fields' true);  				break;  			case 1:  				ban = IPBanInfo.LoadFormat1 (fields);  				break;  			case 2:  				ban = IPBanInfo.LoadFormat2 (fields);  				break;  			default:  				return;  			}  			if (ban.Address.Equals (IPAddress.Any) || ban.Address.Equals (IPAddress.None)) {  				Logger.Log (LogType.Warning' "IPBanList.Load: Invalid IP address skipped.");  			} else {  				Bans.Add (ban.Address.ToString ()' ban);  			}  		} catch (IOException ex) {  			Logger.Log (LogType.Error' "IPBanList.Load: Error while trying to read from file: {0}"' ex.Message);  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "IPBanList.Load: Could not parse a record: {0}"' ex.Message);  		}  	} else {  		Logger.Log (LogType.Error' "IPBanList.Load: Corrupt record skipped ({0} fields instead of {1}): {2}"' fields.Length' IPBanInfo.FieldCount' String.Join ("'"' fields));  	}  }  
Magic Number,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: if (fields.Length == IPBanInfo.FieldCount) {  	try {  		IPBanInfo ban;  		switch (version) {  		case 0:  			ban = IPBanInfo.LoadFormat0 (fields' true);  			break;  		case 1:  			ban = IPBanInfo.LoadFormat1 (fields);  			break;  		case 2:  			ban = IPBanInfo.LoadFormat2 (fields);  			break;  		default:  			return;  		}  		if (ban.Address.Equals (IPAddress.Any) || ban.Address.Equals (IPAddress.None)) {  			Logger.Log (LogType.Warning' "IPBanList.Load: Invalid IP address skipped.");  		} else {  			Bans.Add (ban.Address.ToString ()' ban);  		}  	} catch (IOException ex) {  		Logger.Log (LogType.Error' "IPBanList.Load: Error while trying to read from file: {0}"' ex.Message);  	} catch (Exception ex) {  		Logger.Log (LogType.Error' "IPBanList.Load: Could not parse a record: {0}"' ex.Message);  	}  } else {  	Logger.Log (LogType.Error' "IPBanList.Load: Corrupt record skipped ({0} fields instead of {1}): {2}"' fields.Length' IPBanInfo.FieldCount' String.Join ("'"' fields));  }  
Magic Number,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: try {  	IPBanInfo ban;  	switch (version) {  	case 0:  		ban = IPBanInfo.LoadFormat0 (fields' true);  		break;  	case 1:  		ban = IPBanInfo.LoadFormat1 (fields);  		break;  	case 2:  		ban = IPBanInfo.LoadFormat2 (fields);  		break;  	default:  		return;  	}  	if (ban.Address.Equals (IPAddress.Any) || ban.Address.Equals (IPAddress.None)) {  		Logger.Log (LogType.Warning' "IPBanList.Load: Invalid IP address skipped.");  	} else {  		Bans.Add (ban.Address.ToString ()' ban);  	}  } catch (IOException ex) {  	Logger.Log (LogType.Error' "IPBanList.Load: Error while trying to read from file: {0}"' ex.Message);  } catch (Exception ex) {  	Logger.Log (LogType.Error' "IPBanList.Load: Could not parse a record: {0}"' ex.Message);  }  
Magic Number,fCraft,IPBanList,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanList.cs,Load,The following statement contains a magic number: switch (version) {  case 0:  	ban = IPBanInfo.LoadFormat0 (fields' true);  	break;  case 1:  	ban = IPBanInfo.LoadFormat1 (fields);  	break;  case 2:  	ban = IPBanInfo.LoadFormat2 (fields);  	break;  default:  	return;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: n = (n << 13) ^ n;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return (float)(1.0 - ((n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF) / 1073741824d);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return (float)(1.0 - ((n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF) / 1073741824d);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return (float)(1.0 - ((n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF) / 1073741824d);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: n = (n << 13) ^ n;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return (float)(1.0 - ((n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF) / 1073741824d);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return (float)(1.0 - ((n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF) / 1073741824d);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,StaticNoise,The following statement contains a magic number: return (float)(1.0 - ((n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF) / 1073741824d);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: switch (InterpolationMode) {  case NoiseInterpolationMode.Linear:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateLinear (InterpolateLinear (p00' p10' xFloat)' InterpolateLinear (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Cosine:  	p00 = StaticNoise (xInt' yInt);  	p01 = StaticNoise (xInt' yInt + 1);  	p10 = StaticNoise (xInt + 1' yInt);  	p11 = StaticNoise (xInt + 1' yInt + 1);  	return InterpolateCosine (InterpolateCosine (p00' p10' xFloat)' InterpolateCosine (p01' p11' xFloat)' yFloat);  case NoiseInterpolationMode.Bicubic:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateCubic (p00' p01' p10' p11' yFloat);  case NoiseInterpolationMode.Spline:  	for (int xOffset = -1; xOffset < 3; xOffset++) {  		for (int yOffset = -1; yOffset < 3; yOffset++) {  			points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  		}  	}  	p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  	p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  	p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  	p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  	return InterpolateSpline (p00' p01' p10' p11' yFloat);  default:  	throw new ArgumentException ();  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: for (int xOffset = -1; xOffset < 3; xOffset++) {  	for (int yOffset = -1; yOffset < 3; yOffset++) {  		points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: for (int xOffset = -1; xOffset < 3; xOffset++) {  	for (int yOffset = -1; yOffset < 3; yOffset++) {  		points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: for (int yOffset = -1; yOffset < 3; yOffset++) {  	points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p00 = InterpolateCubic (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p01 = InterpolateCubic (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateCubic (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateCubic (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: for (int xOffset = -1; xOffset < 3; xOffset++) {  	for (int yOffset = -1; yOffset < 3; yOffset++) {  		points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: for (int xOffset = -1; xOffset < 3; xOffset++) {  	for (int yOffset = -1; yOffset < 3; yOffset++) {  		points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: for (int yOffset = -1; yOffset < 3; yOffset++) {  	points [xOffset + 1' yOffset + 1] = StaticNoise (xInt + xOffset' yInt + yOffset);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p00 = InterpolateSpline (points [0' 0]' points [1' 0]' points [2' 0]' points [3' 0]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p01 = InterpolateSpline (points [0' 1]' points [1' 1]' points [2' 1]' points [3' 1]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p10 = InterpolateSpline (points [0' 2]' points [1' 2]' points [2' 2]' points [3' 2]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,InterpolatedNoise,The following statement contains a magic number: p11 = InterpolateSpline (points [0' 3]' points [1' 3]' points [2' 3]' points [3' 3]' xFloat);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: for (int n = startOctave; n <= endOctave; n++) {  	total += InterpolatedNoise (x * frequency + frequency' y * frequency + frequency) * amplitude;  	frequency *= 2;  	amplitude *= decay;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: frequency *= 2;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: for (int n = startOctave; n <= endOctave; n++) {  	total += InterpolatedNoise (x * frequency + frequency' y * frequency + frequency' z * frequency + frequency) * amplitude;  	frequency *= 2;  	amplitude *= decay;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: frequency *= 2;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: for (int x = map.GetLength (0) - 1; x >= 0; x--) {  	for (int y = map.GetLength (1) - 1; y >= 0; y--) {  		for (int z = map.GetLength (2) - 1; z >= 0; z--) {  			map [x' y' z] += PerlinNoise (x * maxDim + offsetX' y * maxDim + offsetY' z * maxDim + offsetZ' startOctave' endOctave' decay);  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: for (int y = map.GetLength (1) - 1; y >= 0; y--) {  	for (int z = map.GetLength (2) - 1; z >= 0; z--) {  		map [x' y' z] += PerlinNoise (x * maxDim + offsetX' y * maxDim + offsetY' z * maxDim + offsetZ' startOctave' endOctave' decay);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,PerlinNoise,The following statement contains a magic number: for (int z = map.GetLength (2) - 1; z >= 0; z--) {  	map [x' y' z] += PerlinNoise (x * maxDim + offsetX' y * maxDim + offsetY' z * maxDim + offsetZ' startOctave' endOctave' decay);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: fixed (float* ptr = map) {  	for (int i = 0; i < map.Length; i++) {  		ptr [i] = Math.Abs (ptr [i] * 2 - 1);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: for (int i = 0; i < map.Length; i++) {  	ptr [i] = Math.Abs (ptr [i] * 2 - 1);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: ptr [i] = Math.Abs (ptr [i] * 2 - 1);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: fixed (float* ptr = map) {  	for (int i = 0; i < map.Length; i++) {  		ptr [i] = Math.Abs (ptr [i] * 2 - 1);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: for (int i = 0; i < map.Length; i++) {  	ptr [i] = Math.Abs (ptr [i] * 2 - 1);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,Marble,The following statement contains a magic number: ptr [i] = Math.Abs (ptr [i] * 2 - 1);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int x = offsetX - 1; x >= 0; x--) {  	for (int y = offsetY - 1; y >= 0; y--) {  		data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  		data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  		data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  		data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: for (int y = offsetY - 1; y >= 0; y--) {  	data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  	data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  	data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  	data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x' y] += InterpolateCosine (c00' (c00 + c01) / 2' (c00 + c10) / 2' midpoint' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x + offsetX' y] += InterpolateCosine ((c00 + c10) / 2' midpoint' c10' (c11 + c10) / 2' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x' y + offsetY] += InterpolateCosine ((c00 + c01) / 2' c01' midpoint' (c01 + c11) / 2' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ApplyBias,The following statement contains a magic number: data [x + offsetX' y + offsetY] += InterpolateCosine (midpoint' (c01 + c11) / 2' (c11 + c10) / 2' c11' x * maxX' y * maxY);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ScaleAndClip,The following statement contains a magic number: fixed (float* ptr = data) {  	for (int i = 0; i < data.Length; i++) {  		ptr [i] = Math.Min (1' Math.Max (0' ptr [i] * steepness * 2 - steepness));  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ScaleAndClip,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	ptr [i] = Math.Min (1' Math.Max (0' ptr [i] * steepness * 2 - steepness));  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,ScaleAndClip,The following statement contains a magic number: ptr [i] = Math.Min (1' Math.Max (0' ptr [i] * steepness * 2 - steepness));  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,BoxBlur,The following statement contains a magic number: output [x' y] = (heightmap [x - 1' y - 1] * 2 + heightmap [x - 1' y] * 3 + heightmap [x - 1' y + 1] * 2 + heightmap [x' y - 1] * 3 + heightmap [x' y] * 3 + heightmap [x' y + 1] * 3 + heightmap [x + 1' y - 1] * 2 + heightmap [x + 1' y] * 3 + heightmap [x + 1' y + 1] * 2) * BoxBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  			output [x' y] = heightmap [x' y];  		} else {  			output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  		output [x' y] = heightmap [x' y];  	} else {  		output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: if ((x < 2) || (y < 2) || (x > heightmap.GetLength (0) - 3) || (y > heightmap.GetLength (1) - 3)) {  	output [x' y] = heightmap [x' y];  } else {  	output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,GaussianBlur5X5,The following statement contains a magic number: output [x' y] = (heightmap [x - 2' y - 2] + heightmap [x - 1' y - 2] * 4 + heightmap [x' y - 2] * 7 + heightmap [x + 1' y - 2] * 4 + heightmap [x + 2' y - 2] + heightmap [x - 1' y - 1] * 4 + heightmap [x - 1' y - 1] * 16 + heightmap [x' y - 1] * 26 + heightmap [x + 1' y - 1] * 16 + heightmap [x + 2' y - 1] * 4 + heightmap [x - 2' y] * 7 + heightmap [x - 1' y] * 26 + heightmap [x' y] * 41 + heightmap [x + 1' y] * 26 + heightmap [x + 2' y] * 7 + heightmap [x - 2' y + 1] * 4 + heightmap [x - 1' y + 1] * 16 + heightmap [x' y + 1] * 26 + heightmap [x + 1' y + 1] * 16 + heightmap [x + 2' y + 1] * 4 + heightmap [x - 2' y + 2] + heightmap [x - 1' y + 2] * 4 + heightmap [x' y + 2] * 7 + heightmap [x + 1' y + 2] * 4 + heightmap [x + 2' y + 2]) * GaussianBlurDivisor;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  			output [x' y] = 0;  		} else {  			output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  		output [x' y] = 0;  	} else {  		output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: if ((x == 0) || (y == 0) || (x == heightmap.GetLength (0) - 1) || (y == heightmap.GetLength (1) - 1)) {  	output [x' y] = 0;  } else {  	output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,CalculateSlope,The following statement contains a magic number: output [x' y] = (Math.Abs (heightmap [x' y - 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x' y + 1] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x + 1' y] - heightmap [x' y]) * 3 + Math.Abs (heightmap [x - 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y - 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x - 1' y + 1] - heightmap [x' y]) * 2 + Math.Abs (heightmap [x + 1' y + 1] - heightmap [x' y]) * 2) / 20f;  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: fixed (float* ptr = data) {  	for (int i = 0; i < ThresholdSearchPasses; i++) {  		float coverage = CalculateCoverage (ptr' data.Length' threshold);  		if (coverage > desiredCoverage) {  			threshold = threshold - 1 / (float)(4 << i);  		} else {  			threshold = threshold + 1 / (float)(4 << i);  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: fixed (float* ptr = data) {  	for (int i = 0; i < ThresholdSearchPasses; i++) {  		float coverage = CalculateCoverage (ptr' data.Length' threshold);  		if (coverage > desiredCoverage) {  			threshold = threshold - 1 / (float)(4 << i);  		} else {  			threshold = threshold + 1 / (float)(4 << i);  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: for (int i = 0; i < ThresholdSearchPasses; i++) {  	float coverage = CalculateCoverage (ptr' data.Length' threshold);  	if (coverage > desiredCoverage) {  		threshold = threshold - 1 / (float)(4 << i);  	} else {  		threshold = threshold + 1 / (float)(4 << i);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: for (int i = 0; i < ThresholdSearchPasses; i++) {  	float coverage = CalculateCoverage (ptr' data.Length' threshold);  	if (coverage > desiredCoverage) {  		threshold = threshold - 1 / (float)(4 << i);  	} else {  		threshold = threshold + 1 / (float)(4 << i);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: if (coverage > desiredCoverage) {  	threshold = threshold - 1 / (float)(4 << i);  } else {  	threshold = threshold + 1 / (float)(4 << i);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: if (coverage > desiredCoverage) {  	threshold = threshold - 1 / (float)(4 << i);  } else {  	threshold = threshold + 1 / (float)(4 << i);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: threshold = threshold - 1 / (float)(4 << i);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: threshold = threshold + 1 / (float)(4 << i);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: fixed (float* ptr = data) {  	for (int i = 0; i < ThresholdSearchPasses; i++) {  		float coverage = CalculateCoverage (ptr' data.Length' threshold);  		if (coverage > desiredCoverage) {  			threshold = threshold - 1 / (float)(4 << i);  		} else {  			threshold = threshold + 1 / (float)(4 << i);  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: fixed (float* ptr = data) {  	for (int i = 0; i < ThresholdSearchPasses; i++) {  		float coverage = CalculateCoverage (ptr' data.Length' threshold);  		if (coverage > desiredCoverage) {  			threshold = threshold - 1 / (float)(4 << i);  		} else {  			threshold = threshold + 1 / (float)(4 << i);  		}  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: for (int i = 0; i < ThresholdSearchPasses; i++) {  	float coverage = CalculateCoverage (ptr' data.Length' threshold);  	if (coverage > desiredCoverage) {  		threshold = threshold - 1 / (float)(4 << i);  	} else {  		threshold = threshold + 1 / (float)(4 << i);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: for (int i = 0; i < ThresholdSearchPasses; i++) {  	float coverage = CalculateCoverage (ptr' data.Length' threshold);  	if (coverage > desiredCoverage) {  		threshold = threshold - 1 / (float)(4 << i);  	} else {  		threshold = threshold + 1 / (float)(4 << i);  	}  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: if (coverage > desiredCoverage) {  	threshold = threshold - 1 / (float)(4 << i);  } else {  	threshold = threshold + 1 / (float)(4 << i);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: if (coverage > desiredCoverage) {  	threshold = threshold - 1 / (float)(4 << i);  } else {  	threshold = threshold + 1 / (float)(4 << i);  }  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: threshold = threshold - 1 / (float)(4 << i);  
Magic Number,fCraft,Noise,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Noise.cs,FindThreshold,The following statement contains a magic number: threshold = threshold + 1 / (float)(4 << i);  
Magic Number,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,Updater,The following statement contains a magic number: UpdateCheckTimeout = 4000;  
Magic Number,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,UpdateCheck,The following statement contains a magic number: try {  	using (WebClient client = new WebClient ()) {  		using (Stream stream = client.OpenRead ("http://au70.net/public/update.txt")) {  			stream.ReadTimeout = 1000;  			using (StreamReader reader = new StreamReader (stream)) {  				string s = reader.ReadLine ();  				if (!int.TryParse (s.Replace ("."' "")' out WebVersion)) {  					Logger.Log (LogType.Warning' "Could not parse version value in updater ({0})"' s);  					return false;  				}  				WebVersionFullString = reader.ReadLine ();  				DownloadLocation = reader.ReadLine ();  				UpdaterLocation = reader.ReadLine ();  				Changelog = reader.ReadToEnd ();  			}  		}  		if (WebVersion != 0 && DownloadLocation != null && UpdaterLocation != null) {  			if (WebVersion > Updater.CurrentRelease.Version) {  				Logger.Log (LogType.Warning' "An update of 800Craft is available' you can get it at: " + DownloadLocation);  				return true;  			}  		}  	}  	return false;  } catch (Exception e) {  	Logger.Log (LogType.SystemActivity' "Failed: " + e);  	return false;  }  
Magic Number,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,UpdateCheck,The following statement contains a magic number: using (WebClient client = new WebClient ()) {  	using (Stream stream = client.OpenRead ("http://au70.net/public/update.txt")) {  		stream.ReadTimeout = 1000;  		using (StreamReader reader = new StreamReader (stream)) {  			string s = reader.ReadLine ();  			if (!int.TryParse (s.Replace ("."' "")' out WebVersion)) {  				Logger.Log (LogType.Warning' "Could not parse version value in updater ({0})"' s);  				return false;  			}  			WebVersionFullString = reader.ReadLine ();  			DownloadLocation = reader.ReadLine ();  			UpdaterLocation = reader.ReadLine ();  			Changelog = reader.ReadToEnd ();  		}  	}  	if (WebVersion != 0 && DownloadLocation != null && UpdaterLocation != null) {  		if (WebVersion > Updater.CurrentRelease.Version) {  			Logger.Log (LogType.Warning' "An update of 800Craft is available' you can get it at: " + DownloadLocation);  			return true;  		}  	}  }  
Magic Number,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,UpdateCheck,The following statement contains a magic number: using (Stream stream = client.OpenRead ("http://au70.net/public/update.txt")) {  	stream.ReadTimeout = 1000;  	using (StreamReader reader = new StreamReader (stream)) {  		string s = reader.ReadLine ();  		if (!int.TryParse (s.Replace ("."' "")' out WebVersion)) {  			Logger.Log (LogType.Warning' "Could not parse version value in updater ({0})"' s);  			return false;  		}  		WebVersionFullString = reader.ReadLine ();  		DownloadLocation = reader.ReadLine ();  		UpdaterLocation = reader.ReadLine ();  		Changelog = reader.ReadToEnd ();  	}  }  
Magic Number,fCraft,Updater,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,UpdateCheck,The following statement contains a magic number: stream.ReadTimeout = 1000;  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,GetName,The following statement contains a magic number: if (index >= 0 && index <= 15) {  	return ColorNames.Values [index];  } else {  	return null;  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,The following statement contains a magic number: if (index >= 0 && index <= 15) {  	return "&" + ColorNames.Keys [index];  } else {  	return null;  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,The following statement contains a magic number: switch (color.Length) {  case 2:  	if (color [0] == '&' && IsValidColorCode (color [1])) {  		return color;  	}  	break;  case 1:  	return Parse (color [0]);  case 0:  	return "";  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: if (color.Length == 2 && color [0] == '&') {  	if (ColorNames.ContainsKey (color [1])) {  		return ColorNames.IndexOfKey (color [1]);  	} else {  		switch (color) {  		case "&s":  			return ColorNames.IndexOfKey (Sys [1]);  		case "&y":  			return ColorNames.IndexOfKey (Say [1]);  		case "&p":  			return ColorNames.IndexOfKey (PM [1]);  		case "&r":  			return ColorNames.IndexOfKey (Announcement [1]);  		case "&h":  			return ColorNames.IndexOfKey (Help [1]);  		case "&w":  			return ColorNames.IndexOfKey (Warning [1]);  		case "&m":  			return ColorNames.IndexOfKey (Me [1]);  		case "&i":  			return ColorNames.IndexOfKey (IRC [1]);  		default:  			return 15;  		}  	}  } else if (ColorNames.ContainsValue (color)) {  	return ColorNames.IndexOfValue (color);  } else {  	return 15;  	// white  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: if (color.Length == 2 && color [0] == '&') {  	if (ColorNames.ContainsKey (color [1])) {  		return ColorNames.IndexOfKey (color [1]);  	} else {  		switch (color) {  		case "&s":  			return ColorNames.IndexOfKey (Sys [1]);  		case "&y":  			return ColorNames.IndexOfKey (Say [1]);  		case "&p":  			return ColorNames.IndexOfKey (PM [1]);  		case "&r":  			return ColorNames.IndexOfKey (Announcement [1]);  		case "&h":  			return ColorNames.IndexOfKey (Help [1]);  		case "&w":  			return ColorNames.IndexOfKey (Warning [1]);  		case "&m":  			return ColorNames.IndexOfKey (Me [1]);  		case "&i":  			return ColorNames.IndexOfKey (IRC [1]);  		default:  			return 15;  		}  	}  } else if (ColorNames.ContainsValue (color)) {  	return ColorNames.IndexOfValue (color);  } else {  	return 15;  	// white  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: if (color.Length == 2 && color [0] == '&') {  	if (ColorNames.ContainsKey (color [1])) {  		return ColorNames.IndexOfKey (color [1]);  	} else {  		switch (color) {  		case "&s":  			return ColorNames.IndexOfKey (Sys [1]);  		case "&y":  			return ColorNames.IndexOfKey (Say [1]);  		case "&p":  			return ColorNames.IndexOfKey (PM [1]);  		case "&r":  			return ColorNames.IndexOfKey (Announcement [1]);  		case "&h":  			return ColorNames.IndexOfKey (Help [1]);  		case "&w":  			return ColorNames.IndexOfKey (Warning [1]);  		case "&m":  			return ColorNames.IndexOfKey (Me [1]);  		case "&i":  			return ColorNames.IndexOfKey (IRC [1]);  		default:  			return 15;  		}  	}  } else if (ColorNames.ContainsValue (color)) {  	return ColorNames.IndexOfValue (color);  } else {  	return 15;  	// white  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: if (ColorNames.ContainsKey (color [1])) {  	return ColorNames.IndexOfKey (color [1]);  } else {  	switch (color) {  	case "&s":  		return ColorNames.IndexOfKey (Sys [1]);  	case "&y":  		return ColorNames.IndexOfKey (Say [1]);  	case "&p":  		return ColorNames.IndexOfKey (PM [1]);  	case "&r":  		return ColorNames.IndexOfKey (Announcement [1]);  	case "&h":  		return ColorNames.IndexOfKey (Help [1]);  	case "&w":  		return ColorNames.IndexOfKey (Warning [1]);  	case "&m":  		return ColorNames.IndexOfKey (Me [1]);  	case "&i":  		return ColorNames.IndexOfKey (IRC [1]);  	default:  		return 15;  	}  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: switch (color) {  case "&s":  	return ColorNames.IndexOfKey (Sys [1]);  case "&y":  	return ColorNames.IndexOfKey (Say [1]);  case "&p":  	return ColorNames.IndexOfKey (PM [1]);  case "&r":  	return ColorNames.IndexOfKey (Announcement [1]);  case "&h":  	return ColorNames.IndexOfKey (Help [1]);  case "&w":  	return ColorNames.IndexOfKey (Warning [1]);  case "&m":  	return ColorNames.IndexOfKey (Me [1]);  case "&i":  	return ColorNames.IndexOfKey (IRC [1]);  default:  	return 15;  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: return 15;  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: if (ColorNames.ContainsValue (color)) {  	return ColorNames.IndexOfValue (color);  } else {  	return 15;  	// white  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,ParseToIndex,The following statement contains a magic number: return 15;  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,The following statement contains a magic number: for (int i = sb.Length - 1; i > 0; i--) {  	if (sb [i - 1] == '&') {  		switch (Char.ToLower (sb [i])) {  		case 's':  			sb [i] = Sys [1];  			break;  		case 'y':  			sb [i] = Say [1];  			break;  		case 'p':  			sb [i] = PM [1];  			break;  		case 'r':  			sb [i] = Announcement [1];  			break;  		case 'h':  			sb [i] = Help [1];  			break;  		case 'w':  			sb [i] = Warning [1];  			break;  		case 'm':  			sb [i] = Me [1];  			break;  		case 'i':  			sb [i] = IRC [1];  			break;  		default:  			if (!IsValidColorCode (sb [i])) {  				sb.Remove (i - 1' 2);  			}  			break;  		}  	}  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,The following statement contains a magic number: if (sb [i - 1] == '&') {  	switch (Char.ToLower (sb [i])) {  	case 's':  		sb [i] = Sys [1];  		break;  	case 'y':  		sb [i] = Say [1];  		break;  	case 'p':  		sb [i] = PM [1];  		break;  	case 'r':  		sb [i] = Announcement [1];  		break;  	case 'h':  		sb [i] = Help [1];  		break;  	case 'w':  		sb [i] = Warning [1];  		break;  	case 'm':  		sb [i] = Me [1];  		break;  	case 'i':  		sb [i] = IRC [1];  		break;  	default:  		if (!IsValidColorCode (sb [i])) {  			sb.Remove (i - 1' 2);  		}  		break;  	}  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,The following statement contains a magic number: switch (Char.ToLower (sb [i])) {  case 's':  	sb [i] = Sys [1];  	break;  case 'y':  	sb [i] = Say [1];  	break;  case 'p':  	sb [i] = PM [1];  	break;  case 'r':  	sb [i] = Announcement [1];  	break;  case 'h':  	sb [i] = Help [1];  	break;  case 'w':  	sb [i] = Warning [1];  	break;  case 'm':  	sb [i] = Me [1];  	break;  case 'i':  	sb [i] = IRC [1];  	break;  default:  	if (!IsValidColorCode (sb [i])) {  		sb.Remove (i - 1' 2);  	}  	break;  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,The following statement contains a magic number: if (!IsValidColorCode (sb [i])) {  	sb.Remove (i - 1' 2);  }  
Magic Number,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,SubstituteSpecialColors,The following statement contains a magic number: sb.Remove (i - 1' 2);  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Heartbeat,The following statement contains a magic number: Delay = TimeSpan.FromSeconds (25);  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Heartbeat,The following statement contains a magic number: Timeout = TimeSpan.FromSeconds (10);  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Heartbeat,The following statement contains a magic number: Salt = Server.GetRandomString (32);  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The following statement contains a magic number: try {  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri);  	request.Timeout = 3000;  	request.Method = "POST";  	// turn request string into a byte stream  	byte[] postBytes = Encoding.ASCII.GetBytes (string.Format ("ServerName={0}&Url={1}&Players={2}&MaxPlayers={3}&Uptime={4}"' Uri.EscapeDataString (ConfigKey.ServerName.GetString ())' Server.Uri' Server.Players.Length' ConfigKey.MaxPlayers.GetInt ()' DateTime.UtcNow.Subtract (Server.StartTime).TotalMinutes));  	request.ContentType = "application/x-www-form-urlencoded";  	request.CachePolicy = new System.Net.Cache.RequestCachePolicy (System.Net.Cache.RequestCacheLevel.NoCacheNoStore);  	request.ContentLength = postBytes.Length;  	request.Timeout = 3000;  	Stream requestStream = request.GetRequestStream ();  	// send it  	requestStream.Write (postBytes' 0' postBytes.Length);  	requestStream.Flush ();  	requestStream.Close ();  	/* try                  {                     HttpWebResponse response = (HttpWebResponse)request.GetResponse();                     Logger.LogToConsole(new StreamReader(response.GetResponseStream()).ReadToEnd());                     Logger.LogToConsole(response.StatusCode + "\n");                  }                  catch (Exception ex)                  {                      Logger.LogToConsole("" + ex);                  }*/} catch (Exception) {  	//do nothing' server is probably down and host doesnt care  }  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The following statement contains a magic number: try {  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (uri);  	request.Timeout = 3000;  	request.Method = "POST";  	// turn request string into a byte stream  	byte[] postBytes = Encoding.ASCII.GetBytes (string.Format ("ServerName={0}&Url={1}&Players={2}&MaxPlayers={3}&Uptime={4}"' Uri.EscapeDataString (ConfigKey.ServerName.GetString ())' Server.Uri' Server.Players.Length' ConfigKey.MaxPlayers.GetInt ()' DateTime.UtcNow.Subtract (Server.StartTime).TotalMinutes));  	request.ContentType = "application/x-www-form-urlencoded";  	request.CachePolicy = new System.Net.Cache.RequestCachePolicy (System.Net.Cache.RequestCacheLevel.NoCacheNoStore);  	request.ContentLength = postBytes.Length;  	request.Timeout = 3000;  	Stream requestStream = request.GetRequestStream ();  	// send it  	requestStream.Write (postBytes' 0' postBytes.Length);  	requestStream.Flush ();  	requestStream.Close ();  	/* try                  {                     HttpWebResponse response = (HttpWebResponse)request.GetResponse();                     Logger.LogToConsole(new StreamReader(response.GetResponseStream()).ReadToEnd());                     Logger.LogToConsole(response.StatusCode + "\n");                  }                  catch (Exception ex)                  {                      Logger.LogToConsole("" + ex);                  }*/} catch (Exception) {  	//do nothing' server is probably down and host doesnt care  }  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The following statement contains a magic number: request.Timeout = 3000;  
Magic Number,fCraft,Heartbeat,F:\newReposMay17\GlennMR_800craft\fCraft\Network\Heartbeat.cs,Send800CraftNetBeat,The following statement contains a magic number: request.Timeout = 3000;  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: foreach (string arg in rawArgs) {  	if (arg.StartsWith ("--")) {  		string argKeyName' argValue;  		if (arg.Contains ('=')) {  			argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  			argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  			if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  				argValue = argValue.Substring (1' argValue.Length - 2);  			}  		} else {  			argKeyName = arg.Substring (2);  			argValue = null;  		}  		ArgKey key;  		if (EnumUtil.TryParse (argKeyName' out key' true)) {  			Args.Add (key' argValue);  		} else {  			Console.Error.WriteLine ("Unknown argument: {0}"' arg);  		}  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: foreach (string arg in rawArgs) {  	if (arg.StartsWith ("--")) {  		string argKeyName' argValue;  		if (arg.Contains ('=')) {  			argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  			argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  			if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  				argValue = argValue.Substring (1' argValue.Length - 2);  			}  		} else {  			argKeyName = arg.Substring (2);  			argValue = null;  		}  		ArgKey key;  		if (EnumUtil.TryParse (argKeyName' out key' true)) {  			Args.Add (key' argValue);  		} else {  			Console.Error.WriteLine ("Unknown argument: {0}"' arg);  		}  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: foreach (string arg in rawArgs) {  	if (arg.StartsWith ("--")) {  		string argKeyName' argValue;  		if (arg.Contains ('=')) {  			argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  			argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  			if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  				argValue = argValue.Substring (1' argValue.Length - 2);  			}  		} else {  			argKeyName = arg.Substring (2);  			argValue = null;  		}  		ArgKey key;  		if (EnumUtil.TryParse (argKeyName' out key' true)) {  			Args.Add (key' argValue);  		} else {  			Console.Error.WriteLine ("Unknown argument: {0}"' arg);  		}  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: foreach (string arg in rawArgs) {  	if (arg.StartsWith ("--")) {  		string argKeyName' argValue;  		if (arg.Contains ('=')) {  			argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  			argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  			if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  				argValue = argValue.Substring (1' argValue.Length - 2);  			}  		} else {  			argKeyName = arg.Substring (2);  			argValue = null;  		}  		ArgKey key;  		if (EnumUtil.TryParse (argKeyName' out key' true)) {  			Args.Add (key' argValue);  		} else {  			Console.Error.WriteLine ("Unknown argument: {0}"' arg);  		}  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.StartsWith ("--")) {  	string argKeyName' argValue;  	if (arg.Contains ('=')) {  		argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  		argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  		if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  			argValue = argValue.Substring (1' argValue.Length - 2);  		}  	} else {  		argKeyName = arg.Substring (2);  		argValue = null;  	}  	ArgKey key;  	if (EnumUtil.TryParse (argKeyName' out key' true)) {  		Args.Add (key' argValue);  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  } else {  	Console.Error.WriteLine ("Unknown argument: {0}"' arg);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.StartsWith ("--")) {  	string argKeyName' argValue;  	if (arg.Contains ('=')) {  		argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  		argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  		if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  			argValue = argValue.Substring (1' argValue.Length - 2);  		}  	} else {  		argKeyName = arg.Substring (2);  		argValue = null;  	}  	ArgKey key;  	if (EnumUtil.TryParse (argKeyName' out key' true)) {  		Args.Add (key' argValue);  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  } else {  	Console.Error.WriteLine ("Unknown argument: {0}"' arg);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.StartsWith ("--")) {  	string argKeyName' argValue;  	if (arg.Contains ('=')) {  		argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  		argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  		if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  			argValue = argValue.Substring (1' argValue.Length - 2);  		}  	} else {  		argKeyName = arg.Substring (2);  		argValue = null;  	}  	ArgKey key;  	if (EnumUtil.TryParse (argKeyName' out key' true)) {  		Args.Add (key' argValue);  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  } else {  	Console.Error.WriteLine ("Unknown argument: {0}"' arg);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.StartsWith ("--")) {  	string argKeyName' argValue;  	if (arg.Contains ('=')) {  		argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  		argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  		if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  			argValue = argValue.Substring (1' argValue.Length - 2);  		}  	} else {  		argKeyName = arg.Substring (2);  		argValue = null;  	}  	ArgKey key;  	if (EnumUtil.TryParse (argKeyName' out key' true)) {  		Args.Add (key' argValue);  	} else {  		Console.Error.WriteLine ("Unknown argument: {0}"' arg);  	}  } else {  	Console.Error.WriteLine ("Unknown argument: {0}"' arg);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.Contains ('=')) {  	argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  	argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  	if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  		argValue = argValue.Substring (1' argValue.Length - 2);  	}  } else {  	argKeyName = arg.Substring (2);  	argValue = null;  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.Contains ('=')) {  	argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  	argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  	if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  		argValue = argValue.Substring (1' argValue.Length - 2);  	}  } else {  	argKeyName = arg.Substring (2);  	argValue = null;  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.Contains ('=')) {  	argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  	argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  	if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  		argValue = argValue.Substring (1' argValue.Length - 2);  	}  } else {  	argKeyName = arg.Substring (2);  	argValue = null;  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (arg.Contains ('=')) {  	argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  	argValue = arg.Substring (arg.IndexOf ('=') + 1).Trim ();  	if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  		argValue = argValue.Substring (1' argValue.Length - 2);  	}  } else {  	argKeyName = arg.Substring (2);  	argValue = null;  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argKeyName = arg.Substring (2' arg.IndexOf ('=') - 2).ToLower ().Trim ();  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: if (argValue.StartsWith ("\"") && argValue.EndsWith ("\"")) {  	argValue = argValue.Substring (1' argValue.Length - 2);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argValue = argValue.Substring (1' argValue.Length - 2);  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,InitLibrary,The following statement contains a magic number: argKeyName = arg.Substring (2);  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,StartServer,The following statement contains a magic number: gcTask = Scheduler.NewTask (DoGC).RunForever (GCInterval' TimeSpan.FromSeconds (45));  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,The following statement contains a magic number: lock (SessionLock) {  	if (Sessions.Count > 0) {  		Logger.Log (LogType.SystemActivity' "Shutdown: Kicking {0} players..."' Sessions.Count);  		foreach (Player p in Sessions) {  			// NOTE: kick packet delivery here is not currently guaranteed  			p.Kick ("Server shutting down (" + shutdownParams.ReasonString + Color.White + ")"' LeaveReason.ServerShutdown);  		}  		// increase the chances of kick packets being delivered  		Thread.Sleep (1000);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,The following statement contains a magic number: if (Sessions.Count > 0) {  	Logger.Log (LogType.SystemActivity' "Shutdown: Kicking {0} players..."' Sessions.Count);  	foreach (Player p in Sessions) {  		// NOTE: kick packet delivery here is not currently guaranteed  		p.Kick ("Server shutting down (" + shutdownParams.ReasonString + Color.White + ")"' LeaveReason.ServerShutdown);  	}  	// increase the chances of kick packets being delivered  	Thread.Sleep (1000);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,ShutdownNow,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,VerifyName,The following statement contains a magic number: while (hash.Length < 32) {  	hash = "0" + hash;  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: while (sb.Length < chars) {  	prng.GetBytes (oneChar);  	if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  		//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  		sb.Append ((char)oneChar [0]);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: while (sb.Length < chars) {  	prng.GetBytes (oneChar);  	if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  		//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  		sb.Append ((char)oneChar [0]);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: while (sb.Length < chars) {  	prng.GetBytes (oneChar);  	if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  		//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  		sb.Append ((char)oneChar [0]);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: while (sb.Length < chars) {  	prng.GetBytes (oneChar);  	if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  		//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  		sb.Append ((char)oneChar [0]);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: while (sb.Length < chars) {  	prng.GetBytes (oneChar);  	if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  		//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  		sb.Append ((char)oneChar [0]);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: while (sb.Length < chars) {  	prng.GetBytes (oneChar);  	if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  		//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  		sb.Append ((char)oneChar [0]);  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  	//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  	sb.Append ((char)oneChar [0]);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  	//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  	sb.Append ((char)oneChar [0]);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  	//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  	sb.Append ((char)oneChar [0]);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  	//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  	sb.Append ((char)oneChar [0]);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  	//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  	sb.Append ((char)oneChar [0]);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,GetRandomString,The following statement contains a magic number: if (oneChar [0] >= 48 && oneChar [0] <= 57 || oneChar [0] >= 65 && oneChar [0] <= 90 || oneChar [0] >= 97 && oneChar [0] <= 122) {  	//if( oneChar[0] >= 33 && oneChar[0] <= 126 ) {  	sb.Append ((char)oneChar [0]);  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,CheckExternalIP,The following statement contains a magic number: try {  	using (WebResponse response = request.GetResponse ()) {  		// ReSharper disable AssignNullToNotNullAttribute  		using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  			// ReSharper restore AssignNullToNotNullAttribute  			string responseString = responseReader.ReadToEnd ();  			int startIndex = responseString.IndexOf (":"' System.StringComparison.Ordinal) + 2;  			int endIndex = responseString.IndexOf ('<'' startIndex) - startIndex;  			IPAddress result;  			if (IPAddress.TryParse (responseString.Substring (startIndex' endIndex)' out result)) {  				return result;  			} else {  				return null;  			}  		}  	}  } catch (WebException ex) {  	Logger.Log (LogType.Warning' "Could not check external IP: {0}"' ex);  	return null;  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,CheckExternalIP,The following statement contains a magic number: using (WebResponse response = request.GetResponse ()) {  	// ReSharper disable AssignNullToNotNullAttribute  	using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  		// ReSharper restore AssignNullToNotNullAttribute  		string responseString = responseReader.ReadToEnd ();  		int startIndex = responseString.IndexOf (":"' System.StringComparison.Ordinal) + 2;  		int endIndex = responseString.IndexOf ('<'' startIndex) - startIndex;  		IPAddress result;  		if (IPAddress.TryParse (responseString.Substring (startIndex' endIndex)' out result)) {  			return result;  		} else {  			return null;  		}  	}  }  
Magic Number,fCraft,Server,F:\newReposMay17\GlennMR_800craft\fCraft\System\Server.cs,CheckExternalIP,The following statement contains a magic number: using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  	// ReSharper restore AssignNullToNotNullAttribute  	string responseString = responseReader.ReadToEnd ();  	int startIndex = responseString.IndexOf (":"' System.StringComparison.Ordinal) + 2;  	int endIndex = responseString.IndexOf ('<'' startIndex) - startIndex;  	IPAddress result;  	if (IPAddress.TryParse (responseString.Substring (startIndex' endIndex)' out result)) {  		return result;  	} else {  		return null;  	}  }  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The following statement contains a magic number: switch (key) {  case ConfigKey.AnnouncementColor:  	Color.Announcement = Color.Parse (key.GetString ());  	break;  case ConfigKey.AntispamInterval:  	Player.AntispamInterval = key.GetInt ();  	break;  case ConfigKey.AntispamMessageCount:  	Player.AntispamMessageCount = key.GetInt ();  	break;  case ConfigKey.DefaultBuildRank:  	RankManager.DefaultBuildRank = Rank.Parse (key.GetString ());  	break;  case ConfigKey.DefaultRank:  	RankManager.DefaultRank = Rank.Parse (key.GetString ());  	break;  case ConfigKey.BandwidthUseMode:  	Player[] playerListCache = Server.Players;  	if (playerListCache != null) {  		foreach (Player p in playerListCache) {  			if (p.BandwidthUseMode == BandwidthUseMode.Default) {  				// resets the use tweaks  				p.BandwidthUseMode = BandwidthUseMode.Default;  			}  		}  	}  	break;  case ConfigKey.BlockDBAutoEnableRank:  	RankManager.BlockDBAutoEnableRank = Rank.Parse (key.GetString ());  	if (BlockDB.IsEnabledGlobally) {  		World[] worldListCache = WorldManager.Worlds;  		foreach (World world in worldListCache) {  			if (world.BlockDB.AutoToggleIfNeeded ()) {  				if (world.BlockDB.IsEnabled) {  					Logger.Log (LogType.SystemActivity' "BlockDB is now auto-enabled on world {0}"' world.Name);  				} else {  					Logger.Log (LogType.SystemActivity' "BlockDB is now auto-disabled on world {0}"' world.Name);  				}  			}  		}  	}  	break;  case ConfigKey.BlockUpdateThrottling:  	Server.BlockUpdateThrottling = key.GetInt ();  	break;  case ConfigKey.ConsoleName:  	if (Player.Console != null) {  		Player.Console.Info.Name = key.GetString ();  	}  	break;  case ConfigKey.DefaultBackupInterval:  	// TODO: update SchedulerTasks  	WorldManager.DefaultBackupInterval = new TimeSpan (TimeSpan.TicksPerSecond * key.GetInt ());  	break;  case ConfigKey.HelpColor:  	Color.Help = Color.Parse (key.GetString ());  	break;  case ConfigKey.IRCDelay:  	IRC.SendDelay = key.GetInt ();  	break;  case ConfigKey.IRCMessageColor:  	Color.IRC = Color.Parse (key.GetString ());  	break;  case ConfigKey.LogMode:  	Logger.SplittingType = key.GetEnum<LogSplittingType> ();  	break;  case ConfigKey.MapPath:  	if (!Paths.IgnoreMapPathConfigKey && GetString (ConfigKey.MapPath).Length > 0) {  		if (Paths.TestDirectory ("MapPath"' GetString (ConfigKey.MapPath)' true)) {  			Paths.MapPath = Path.GetFullPath (GetString (ConfigKey.MapPath));  		}  	}  	break;  case ConfigKey.MaxUndo:  	BuildingCommands.MaxUndoCount = key.GetInt ();  	break;  case ConfigKey.MeColor:  	Color.Me = Color.Parse (key.GetString ());  	break;  case ConfigKey.NoPartialPositionUpdates:  	if (key.Enabled ()) {  		Player.FullPositionUpdateInterval = 0;  	} else {  		Player.FullPositionUpdateInterval = Player.FullPositionUpdateIntervalDefault;  	}  	break;  case ConfigKey.PatrolledRank:  	RankManager.PatrolledRank = Rank.Parse (key.GetString ());  	break;  case ConfigKey.PrivateMessageColor:  	Color.PM = Color.Parse (key.GetString ());  	break;  case ConfigKey.RelayAllBlockUpdates:  	Player.RelayAllUpdates = key.Enabled ();  	break;  case ConfigKey.SayColor:  	Color.Say = Color.Parse (key.GetString ());  	break;  case ConfigKey.SystemMessageColor:  	Color.Sys = Color.Parse (key.GetString ());  	break;  case ConfigKey.CustomChatColor:  	Color.Custom = Color.Parse (key.GetString ());  	break;  case ConfigKey.TickInterval:  	Server.TicksPerSecond = 1000 / (float)key.GetInt ();  	break;  case ConfigKey.UploadBandwidth:  	Server.MaxUploadSpeed = key.GetInt ();  	break;  case ConfigKey.WarningColor:  	Color.Warning = Color.Parse (key.GetString ());  	break;  }  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The following statement contains a magic number: Server.TicksPerSecond = 1000 / (float)key.GetInt ();  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: owner.Add (new XAttribute ("rank"' 100));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: owner.Add (new XAttribute ("fillLimit"' 2048));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: owner.Add (new XAttribute ("copySlots"' 4));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: op.Add (new XAttribute ("rank"' 80));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: op.Add (new XAttribute ("fillLimit"' 512));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: op.Add (new XAttribute ("copySlots"' 3));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add (new XAttribute ("rank"' 30));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add (new XAttribute ("drawLimit"' 8000));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add (new XAttribute ("antiGriefBlocks"' 47));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add (new XAttribute ("antiGriefSeconds"' 6));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: builder.Add (new XAttribute ("idleKickAfter"' 20));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add (new XAttribute ("drawLimit"' 512));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add (new XAttribute ("antiGriefBlocks"' 37));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add (new XAttribute ("antiGriefSeconds"' 5));  
Magic Number,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,DefineDefaultRanks,The following statement contains a magic number: guest.Add (new XAttribute ("idleKickAfter"' 20));  
Magic Number,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The following statement contains a magic number: lock (CrashReportLock) {  	if (DateTime.UtcNow.Subtract (lastCrashReport).TotalSeconds < MinCrashReportInterval) {  		Log (LogType.Warning' "Logger.SubmitCrashReport: Could not submit crash report' reports too frequent.");  		return;  	}  	lastCrashReport = DateTime.UtcNow;  	try {  		StringBuilder sb = new StringBuilder ();  		sb.Append ("version=").Append (Uri.EscapeDataString (Updater.CurrentRelease.VersionString));  		sb.Append ("&message=").Append (Uri.EscapeDataString (message));  		sb.Append ("&assembly=").Append (Uri.EscapeDataString (assembly));  		sb.Append ("&runtime=");  		if (MonoCompat.IsMono) {  			sb.Append (Uri.EscapeDataString ("Mono " + MonoCompat.MonoVersionString));  		} else {  			sb.Append (Uri.EscapeDataString ("CLR " + Environment.Version));  		}  		sb.Append ("&os=").Append (Environment.OSVersion.Platform + " / " + Environment.OSVersion.VersionString);  		sb.Append ("&exceptiontype=").Append (Uri.EscapeDataString (exception.GetType ().ToString ()));  		sb.Append ("&exceptionmessage=").Append (Uri.EscapeDataString (exception.Message));  		sb.Append ("&exceptionstacktrace=");  		if (exception.StackTrace != null) {  			sb.Append (Uri.EscapeDataString (exception.StackTrace));  		} else {  			sb.Append ("(none)");  		}  		sb.Append ("&config=");  		if (File.Exists (Paths.ConfigFileName)) {  			sb.Append (Uri.EscapeDataString (File.ReadAllText (Paths.ConfigFileName)));  		}  		string assemblies = AppDomain.CurrentDomain.GetAssemblies ().JoinToString (Environment.NewLine' asm => asm.FullName);  		sb.Append ("&asm=").Append (Uri.EscapeDataString (assemblies));  		string[] lastFewLines;  		lock (LogLock) {  			lastFewLines = RecentMessages.ToArray ();  		}  		sb.Append ("&log=").Append (Uri.EscapeDataString (String.Join (Environment.NewLine' lastFewLines)));  		byte[] formData = Encoding.UTF8.GetBytes (sb.ToString ());  		HttpWebRequest request = (HttpWebRequest)WebRequest.Create (CrashReportUri);  		request.Method = "POST";  		request.Timeout = 15000;  		// 15s timeout  		request.ContentType = "application/x-www-form-urlencoded";  		request.CachePolicy = new RequestCachePolicy (RequestCacheLevel.NoCacheNoStore);  		request.ContentLength = formData.Length;  		request.UserAgent = Updater.UserAgent;  		using (Stream requestStream = request.GetRequestStream ()) {  			requestStream.Write (formData' 0' formData.Length);  			requestStream.Flush ();  		}  		string responseString;  		using (HttpWebResponse response = (HttpWebResponse)request.GetResponse ()) {  			using (Stream responseStream = response.GetResponseStream ()) {  				// ReSharper disable AssignNullToNotNullAttribute  				using (StreamReader reader = new StreamReader (responseStream)) {  					// ReSharper restore AssignNullToNotNullAttribute  					responseString = reader.ReadLine ();  				}  			}  		}  		request.Abort ();  		if (responseString != null && responseString.StartsWith ("ERROR")) {  			Log (LogType.Error' "Crash report could not be processed by 800Craft.net.");  		} else {  			int referenceNumber;  			if (responseString != null && Int32.TryParse (responseString' out referenceNumber)) {  				Log (LogType.SystemActivity' "Crash report submitted (Reference #{0})"' referenceNumber);  			} else {  				Log (LogType.SystemActivity' "Crash report submitted.");  			}  		}  	} catch (Exception ex) {  		Log (LogType.Warning' "Logger.SubmitCrashReport: {0}"' ex);  	}  }  
Magic Number,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The following statement contains a magic number: try {  	StringBuilder sb = new StringBuilder ();  	sb.Append ("version=").Append (Uri.EscapeDataString (Updater.CurrentRelease.VersionString));  	sb.Append ("&message=").Append (Uri.EscapeDataString (message));  	sb.Append ("&assembly=").Append (Uri.EscapeDataString (assembly));  	sb.Append ("&runtime=");  	if (MonoCompat.IsMono) {  		sb.Append (Uri.EscapeDataString ("Mono " + MonoCompat.MonoVersionString));  	} else {  		sb.Append (Uri.EscapeDataString ("CLR " + Environment.Version));  	}  	sb.Append ("&os=").Append (Environment.OSVersion.Platform + " / " + Environment.OSVersion.VersionString);  	sb.Append ("&exceptiontype=").Append (Uri.EscapeDataString (exception.GetType ().ToString ()));  	sb.Append ("&exceptionmessage=").Append (Uri.EscapeDataString (exception.Message));  	sb.Append ("&exceptionstacktrace=");  	if (exception.StackTrace != null) {  		sb.Append (Uri.EscapeDataString (exception.StackTrace));  	} else {  		sb.Append ("(none)");  	}  	sb.Append ("&config=");  	if (File.Exists (Paths.ConfigFileName)) {  		sb.Append (Uri.EscapeDataString (File.ReadAllText (Paths.ConfigFileName)));  	}  	string assemblies = AppDomain.CurrentDomain.GetAssemblies ().JoinToString (Environment.NewLine' asm => asm.FullName);  	sb.Append ("&asm=").Append (Uri.EscapeDataString (assemblies));  	string[] lastFewLines;  	lock (LogLock) {  		lastFewLines = RecentMessages.ToArray ();  	}  	sb.Append ("&log=").Append (Uri.EscapeDataString (String.Join (Environment.NewLine' lastFewLines)));  	byte[] formData = Encoding.UTF8.GetBytes (sb.ToString ());  	HttpWebRequest request = (HttpWebRequest)WebRequest.Create (CrashReportUri);  	request.Method = "POST";  	request.Timeout = 15000;  	// 15s timeout  	request.ContentType = "application/x-www-form-urlencoded";  	request.CachePolicy = new RequestCachePolicy (RequestCacheLevel.NoCacheNoStore);  	request.ContentLength = formData.Length;  	request.UserAgent = Updater.UserAgent;  	using (Stream requestStream = request.GetRequestStream ()) {  		requestStream.Write (formData' 0' formData.Length);  		requestStream.Flush ();  	}  	string responseString;  	using (HttpWebResponse response = (HttpWebResponse)request.GetResponse ()) {  		using (Stream responseStream = response.GetResponseStream ()) {  			// ReSharper disable AssignNullToNotNullAttribute  			using (StreamReader reader = new StreamReader (responseStream)) {  				// ReSharper restore AssignNullToNotNullAttribute  				responseString = reader.ReadLine ();  			}  		}  	}  	request.Abort ();  	if (responseString != null && responseString.StartsWith ("ERROR")) {  		Log (LogType.Error' "Crash report could not be processed by 800Craft.net.");  	} else {  		int referenceNumber;  		if (responseString != null && Int32.TryParse (responseString' out referenceNumber)) {  			Log (LogType.SystemActivity' "Crash report submitted (Reference #{0})"' referenceNumber);  		} else {  			Log (LogType.SystemActivity' "Crash report submitted.");  		}  	}  } catch (Exception ex) {  	Log (LogType.Warning' "Logger.SubmitCrashReport: {0}"' ex);  }  
Magic Number,fCraft,Logger,F:\newReposMay17\GlennMR_800craft\fCraft\System\Logger.cs,LogAndReportCrash,The following statement contains a magic number: request.Timeout = 15000;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,Write,The following statement contains a magic number: if (str.Length > 64)  	throw new ArgumentException ("String is too long (>64)."' "str");  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,Write,The following statement contains a magic number: Write (Encoding.ASCII.GetBytes (str.PadRight (64)));  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,WriteMapChunk,The following statement contains a magic number: Write (chunk' 0' 1024);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes (serverName.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes (serverName.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes (serverName.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes (motd.PadRight (64)' 0' 64' packet.Data' 66);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes (motd.PadRight (64)' 0' 64' packet.Data' 66);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: Encoding.ASCII.GetBytes (motd.PadRight (64)' 0' 64' packet.Data' 66);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: packet.Data [130] = (byte)(player.Can (Permission.DeleteAdmincrete) ? 100 : 0);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeHandshake,The following statement contains a magic number: packet.Data [130] = (byte)(player.Can (Permission.DeleteAdmincrete) ? 100 : 0);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMessage,The following statement contains a magic number: Encoding.ASCII.GetBytes (message.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMessage,The following statement contains a magic number: Encoding.ASCII.GetBytes (message.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMessage,The following statement contains a magic number: Encoding.ASCII.GetBytes (message.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: Encoding.ASCII.GetBytes (name.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: Encoding.ASCII.GetBytes (name.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: Encoding.ASCII.GetBytes (name.PadRight (64)' 0' 64' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: ToNetOrder (pos.X' packet.Data' 66);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: ToNetOrder (pos.Z' packet.Data' 68);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: ToNetOrder (pos.Y' packet.Data' 70);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: packet.Data [72] = pos.R;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeAddEntity,The following statement contains a magic number: packet.Data [73] = pos.L;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeDisconnect,The following statement contains a magic number: Encoding.ASCII.GetBytes (reason.PadRight (64)' 0' 64' packet.Data' 1);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeDisconnect,The following statement contains a magic number: Encoding.ASCII.GetBytes (reason.PadRight (64)' 0' 64' packet.Data' 1);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: ToNetOrder (pos.X' packet.Data' 2);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: ToNetOrder (pos.Z' packet.Data' 4);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: ToNetOrder (pos.Y' packet.Data' 6);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: packet.Data [8] = pos.R;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeTeleport,The following statement contains a magic number: packet.Data [9] = pos.L;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSelfTeleport,The following statement contains a magic number: return MakeTeleport (255' pos.GetFixed ());  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data [2] = (byte)(pos.X & 0xFF);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data [3] = (byte)(pos.Z & 0xFF);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data [4] = (byte)(pos.Y & 0xFF);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data [5] = pos.R;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMoveRotate,The following statement contains a magic number: packet.Data [6] = pos.L;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMove,The following statement contains a magic number: packet.Data [2] = (byte)pos.X;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMove,The following statement contains a magic number: packet.Data [3] = (byte)pos.Z;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeMove,The following statement contains a magic number: packet.Data [4] = (byte)pos.Y;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeRotate,The following statement contains a magic number: packet.Data [2] = pos.R;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeRotate,The following statement contains a magic number: packet.Data [3] = pos.L;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder (z' packet.Data' 3);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder (y' packet.Data' 5);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: packet.Data [7] = (byte)type;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder (coords.Z' packet.Data' 3);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: ToNetOrder (coords.Y' packet.Data' 5);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetBlock,The following statement contains a magic number: packet.Data [7] = (byte)type;  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,MakeSetPermission,The following statement contains a magic number: packet.Data [1] = (byte)(player.Can (Permission.DeleteAdmincrete) ? 100 : 0);  
Magic Number,fCraft,PacketWriter,F:\newReposMay17\GlennMR_800craft\fCraft\Network\PacketWriter.cs,ToNetOrder,The following statement contains a magic number: arr [offset] = (byte)((number & 0xff00) >> 8);  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: if (ch >= 'a' && ch <= 'z')  	return ch - 'a';  else if (ch >= 'A' && ch <= 'Z')  	return ch - 'A';  else if (ch >= '0' && ch <= '9')  	return ch - '0' + 26;  else  	return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: if (ch >= 'a' && ch <= 'z')  	return ch - 'a';  else if (ch >= 'A' && ch <= 'Z')  	return ch - 'A';  else if (ch >= '0' && ch <= '9')  	return ch - '0' + 26;  else  	return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: if (ch >= 'A' && ch <= 'Z')  	return ch - 'A';  else if (ch >= '0' && ch <= '9')  	return ch - '0' + 26;  else  	return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: if (ch >= 'A' && ch <= 'Z')  	return ch - 'A';  else if (ch >= '0' && ch <= '9')  	return ch - '0' + 26;  else  	return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: if (ch >= '0' && ch <= '9')  	return ch - '0' + 26;  else  	return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: if (ch >= '0' && ch <= '9')  	return ch - '0' + 26;  else  	return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: return ch - '0' + 26;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CharToCode,The following statement contains a magic number: return 36;  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CodeToChar,The following statement contains a magic number: if (code < 26)  	return (char)(code + 'a');  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CodeToChar,The following statement contains a magic number: if (code >= 26 && code < 36)  	return (char)(code + '0');  else  	return '_';  
Magic Number,fCraft,Trie,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Trie.cs,CodeToChar,The following statement contains a magic number: if (code >= 26 && code < 36)  	return (char)(code + '0');  else  	return '_';  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,FindRandomTreeLocation,The following statement contains a magic number: if (padding > mindim / 2.2) {  	padding = (int)(mindim / 2.2);  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,FindRandomTreeLocation,The following statement contains a magic number: if (padding > mindim / 2.2) {  	padding = (int)(mindim / 2.2);  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,FindRandomTreeLocation,The following statement contains a magic number: padding = (int)(mindim / 2.2);  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: for (int i = 0; i < remainingTrees && attempts < MaxTries; attempts++) {  	float randomfac = (float)((Math.Sqrt (args.Rand.NextDouble ()) * 1.618 - .618) * args.HeightVariation + .5);  	int height;  	if (i % shortTreeFraction == 0) {  		height = (int)(treeHeight + randomfac);  	} else {  		height = (int)(treeHeight - randomfac);  	}  	Vector3I xyz = FindRandomTreeLocation (args' height);  	if (xyz.Y < 0)  		continue;  	xyz.Y++;  	bool displaced = false;  	// ReSharper disable LoopCanBeConvertedToQuery  	foreach (Tree otherTree in treelist) {  		Vector3I otherLoc = otherTree.Pos;  		float otherheight = otherTree.Height;  		int tallx = otherLoc [0];  		int tallz = otherLoc [2];  		float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  		float threshold = (otherheight + height) * .193f;  		if (dist < threshold) {  			displaced = true;  			break;  		}  	}  	// ReSharper restore LoopCanBeConvertedToQuery  	if (displaced)  		continue;  	treelist.Add (new RainforestTree {  		Args = args'  		Pos = xyz'  		Height = height  	});  	i++;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: for (int i = 0; i < remainingTrees && attempts < MaxTries; attempts++) {  	float randomfac = (float)((Math.Sqrt (args.Rand.NextDouble ()) * 1.618 - .618) * args.HeightVariation + .5);  	int height;  	if (i % shortTreeFraction == 0) {  		height = (int)(treeHeight + randomfac);  	} else {  		height = (int)(treeHeight - randomfac);  	}  	Vector3I xyz = FindRandomTreeLocation (args' height);  	if (xyz.Y < 0)  		continue;  	xyz.Y++;  	bool displaced = false;  	// ReSharper disable LoopCanBeConvertedToQuery  	foreach (Tree otherTree in treelist) {  		Vector3I otherLoc = otherTree.Pos;  		float otherheight = otherTree.Height;  		int tallx = otherLoc [0];  		int tallz = otherLoc [2];  		float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  		float threshold = (otherheight + height) * .193f;  		if (dist < threshold) {  			displaced = true;  			break;  		}  	}  	// ReSharper restore LoopCanBeConvertedToQuery  	if (displaced)  		continue;  	treelist.Add (new RainforestTree {  		Args = args'  		Pos = xyz'  		Height = height  	});  	i++;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: for (int i = 0; i < remainingTrees && attempts < MaxTries; attempts++) {  	float randomfac = (float)((Math.Sqrt (args.Rand.NextDouble ()) * 1.618 - .618) * args.HeightVariation + .5);  	int height;  	if (i % shortTreeFraction == 0) {  		height = (int)(treeHeight + randomfac);  	} else {  		height = (int)(treeHeight - randomfac);  	}  	Vector3I xyz = FindRandomTreeLocation (args' height);  	if (xyz.Y < 0)  		continue;  	xyz.Y++;  	bool displaced = false;  	// ReSharper disable LoopCanBeConvertedToQuery  	foreach (Tree otherTree in treelist) {  		Vector3I otherLoc = otherTree.Pos;  		float otherheight = otherTree.Height;  		int tallx = otherLoc [0];  		int tallz = otherLoc [2];  		float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  		float threshold = (otherheight + height) * .193f;  		if (dist < threshold) {  			displaced = true;  			break;  		}  	}  	// ReSharper restore LoopCanBeConvertedToQuery  	if (displaced)  		continue;  	treelist.Add (new RainforestTree {  		Args = args'  		Pos = xyz'  		Height = height  	});  	i++;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: for (int i = 0; i < remainingTrees && attempts < MaxTries; attempts++) {  	float randomfac = (float)((Math.Sqrt (args.Rand.NextDouble ()) * 1.618 - .618) * args.HeightVariation + .5);  	int height;  	if (i % shortTreeFraction == 0) {  		height = (int)(treeHeight + randomfac);  	} else {  		height = (int)(treeHeight - randomfac);  	}  	Vector3I xyz = FindRandomTreeLocation (args' height);  	if (xyz.Y < 0)  		continue;  	xyz.Y++;  	bool displaced = false;  	// ReSharper disable LoopCanBeConvertedToQuery  	foreach (Tree otherTree in treelist) {  		Vector3I otherLoc = otherTree.Pos;  		float otherheight = otherTree.Height;  		int tallx = otherLoc [0];  		int tallz = otherLoc [2];  		float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  		float threshold = (otherheight + height) * .193f;  		if (dist < threshold) {  			displaced = true;  			break;  		}  	}  	// ReSharper restore LoopCanBeConvertedToQuery  	if (displaced)  		continue;  	treelist.Add (new RainforestTree {  		Args = args'  		Pos = xyz'  		Height = height  	});  	i++;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: for (int i = 0; i < remainingTrees && attempts < MaxTries; attempts++) {  	float randomfac = (float)((Math.Sqrt (args.Rand.NextDouble ()) * 1.618 - .618) * args.HeightVariation + .5);  	int height;  	if (i % shortTreeFraction == 0) {  		height = (int)(treeHeight + randomfac);  	} else {  		height = (int)(treeHeight - randomfac);  	}  	Vector3I xyz = FindRandomTreeLocation (args' height);  	if (xyz.Y < 0)  		continue;  	xyz.Y++;  	bool displaced = false;  	// ReSharper disable LoopCanBeConvertedToQuery  	foreach (Tree otherTree in treelist) {  		Vector3I otherLoc = otherTree.Pos;  		float otherheight = otherTree.Height;  		int tallx = otherLoc [0];  		int tallz = otherLoc [2];  		float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  		float threshold = (otherheight + height) * .193f;  		if (dist < threshold) {  			displaced = true;  			break;  		}  	}  	// ReSharper restore LoopCanBeConvertedToQuery  	if (displaced)  		continue;  	treelist.Add (new RainforestTree {  		Args = args'  		Pos = xyz'  		Height = height  	});  	i++;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: for (int i = 0; i < remainingTrees && attempts < MaxTries; attempts++) {  	float randomfac = (float)((Math.Sqrt (args.Rand.NextDouble ()) * 1.618 - .618) * args.HeightVariation + .5);  	int height;  	if (i % shortTreeFraction == 0) {  		height = (int)(treeHeight + randomfac);  	} else {  		height = (int)(treeHeight - randomfac);  	}  	Vector3I xyz = FindRandomTreeLocation (args' height);  	if (xyz.Y < 0)  		continue;  	xyz.Y++;  	bool displaced = false;  	// ReSharper disable LoopCanBeConvertedToQuery  	foreach (Tree otherTree in treelist) {  		Vector3I otherLoc = otherTree.Pos;  		float otherheight = otherTree.Height;  		int tallx = otherLoc [0];  		int tallz = otherLoc [2];  		float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  		float threshold = (otherheight + height) * .193f;  		if (dist < threshold) {  			displaced = true;  			break;  		}  	}  	// ReSharper restore LoopCanBeConvertedToQuery  	if (displaced)  		continue;  	treelist.Add (new RainforestTree {  		Args = args'  		Pos = xyz'  		Height = height  	});  	i++;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: foreach (Tree otherTree in treelist) {  	Vector3I otherLoc = otherTree.Pos;  	float otherheight = otherTree.Height;  	int tallx = otherLoc [0];  	int tallz = otherLoc [2];  	float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  	float threshold = (otherheight + height) * .193f;  	if (dist < threshold) {  		displaced = true;  		break;  	}  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: foreach (Tree otherTree in treelist) {  	Vector3I otherLoc = otherTree.Pos;  	float otherheight = otherTree.Height;  	int tallx = otherLoc [0];  	int tallz = otherLoc [2];  	float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  	float threshold = (otherheight + height) * .193f;  	if (dist < threshold) {  		displaced = true;  		break;  	}  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantRainForestTrees,The following statement contains a magic number: foreach (Tree otherTree in treelist) {  	Vector3I otherLoc = otherTree.Pos;  	float otherheight = otherTree.Height;  	int tallx = otherLoc [0];  	int tallz = otherLoc [2];  	float dist = (float)Math.Sqrt (Sqr (tallx - xyz.X + .5) + Sqr (tallz - xyz.Z + .5));  	float threshold = (otherheight + height) * .193f;  	if (dist < threshold) {  		displaced = true;  		break;  	}  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: while (treelist.Count < args.TreeCount && attempts < MaxTries) {  	attempts++;  	int height = args.Rand.Next (treeheight - args.HeightVariation' treeheight + args.HeightVariation + 1);  	int padding = (int)(height / 3f + 1);  	int mindim = Math.Min (args.Map.Width' args.Map.Length);  	if (padding > mindim / 2.2) {  		padding = (int)(mindim / 2.2);  	}  	int x = args.Rand.Next (padding' args.Map.Width - padding - 1);  	int z = args.Rand.Next (padding' args.Map.Length - padding - 1);  	int top = args.Map.Height - 1;  	int y = top - DistanceToBlock (args.Map' new Vector3F (x' z' top)' Vector3F.Down' Block.Air' true);  	int dist = DistanceToBlock (args.Map' new Vector3F (x' z' y)' Vector3F.Down' Block.Water' true);  	if (dist > height * .618 || dist == 0) {  		continue;  	}  	y += (int)Math.Sqrt (height - dist) + 2;  	treelist.Add (new Tree {  		Args = args'  		Height = height'  		Pos = new Vector3I (x' y' z)  	});  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: while (treelist.Count < args.TreeCount && attempts < MaxTries) {  	attempts++;  	int height = args.Rand.Next (treeheight - args.HeightVariation' treeheight + args.HeightVariation + 1);  	int padding = (int)(height / 3f + 1);  	int mindim = Math.Min (args.Map.Width' args.Map.Length);  	if (padding > mindim / 2.2) {  		padding = (int)(mindim / 2.2);  	}  	int x = args.Rand.Next (padding' args.Map.Width - padding - 1);  	int z = args.Rand.Next (padding' args.Map.Length - padding - 1);  	int top = args.Map.Height - 1;  	int y = top - DistanceToBlock (args.Map' new Vector3F (x' z' top)' Vector3F.Down' Block.Air' true);  	int dist = DistanceToBlock (args.Map' new Vector3F (x' z' y)' Vector3F.Down' Block.Water' true);  	if (dist > height * .618 || dist == 0) {  		continue;  	}  	y += (int)Math.Sqrt (height - dist) + 2;  	treelist.Add (new Tree {  		Args = args'  		Height = height'  		Pos = new Vector3I (x' y' z)  	});  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: while (treelist.Count < args.TreeCount && attempts < MaxTries) {  	attempts++;  	int height = args.Rand.Next (treeheight - args.HeightVariation' treeheight + args.HeightVariation + 1);  	int padding = (int)(height / 3f + 1);  	int mindim = Math.Min (args.Map.Width' args.Map.Length);  	if (padding > mindim / 2.2) {  		padding = (int)(mindim / 2.2);  	}  	int x = args.Rand.Next (padding' args.Map.Width - padding - 1);  	int z = args.Rand.Next (padding' args.Map.Length - padding - 1);  	int top = args.Map.Height - 1;  	int y = top - DistanceToBlock (args.Map' new Vector3F (x' z' top)' Vector3F.Down' Block.Air' true);  	int dist = DistanceToBlock (args.Map' new Vector3F (x' z' y)' Vector3F.Down' Block.Water' true);  	if (dist > height * .618 || dist == 0) {  		continue;  	}  	y += (int)Math.Sqrt (height - dist) + 2;  	treelist.Add (new Tree {  		Args = args'  		Height = height'  		Pos = new Vector3I (x' y' z)  	});  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: while (treelist.Count < args.TreeCount && attempts < MaxTries) {  	attempts++;  	int height = args.Rand.Next (treeheight - args.HeightVariation' treeheight + args.HeightVariation + 1);  	int padding = (int)(height / 3f + 1);  	int mindim = Math.Min (args.Map.Width' args.Map.Length);  	if (padding > mindim / 2.2) {  		padding = (int)(mindim / 2.2);  	}  	int x = args.Rand.Next (padding' args.Map.Width - padding - 1);  	int z = args.Rand.Next (padding' args.Map.Length - padding - 1);  	int top = args.Map.Height - 1;  	int y = top - DistanceToBlock (args.Map' new Vector3F (x' z' top)' Vector3F.Down' Block.Air' true);  	int dist = DistanceToBlock (args.Map' new Vector3F (x' z' y)' Vector3F.Down' Block.Water' true);  	if (dist > height * .618 || dist == 0) {  		continue;  	}  	y += (int)Math.Sqrt (height - dist) + 2;  	treelist.Add (new Tree {  		Args = args'  		Height = height'  		Pos = new Vector3I (x' y' z)  	});  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: if (padding > mindim / 2.2) {  	padding = (int)(mindim / 2.2);  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: if (padding > mindim / 2.2) {  	padding = (int)(mindim / 2.2);  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: padding = (int)(mindim / 2.2);  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: if (dist > height * .618 || dist == 0) {  	continue;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,PlantMangroves,The following statement contains a magic number: y += (int)Math.Sqrt (height - dist) + 2;  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: for (int i = 0; i < treelist.Count; i++) {  	TreeShape newshape = shapeChoices [args.Rand.Next (0' shapeChoices.Length)];  	Tree newTree;  	switch (newshape) {  	case TreeShape.Normal:  		newTree = new NormalTree ();  		break;  	case TreeShape.Bamboo:  		newTree = new BambooTree ();  		break;  	case TreeShape.Palm:  		newTree = new PalmTree ();  		break;  	case TreeShape.Round:  		newTree = new RoundTree ();  		break;  	case TreeShape.Cone:  		newTree = new ConeTree ();  		break;  	case TreeShape.Rainforest:  		newTree = new RainforestTree ();  		break;  	case TreeShape.Mangrove:  		newTree = new MangroveTree ();  		break;  	default:  		throw new ArgumentException ("Unknown tree shape type");  	}  	newTree.Copy (treelist [i]);  	if (args.MapHeightLimit) {  		int height = newTree.Height;  		int ybase = newTree.Pos [1];  		int mapHeight = args.Map.Height;  		int foliageHeight;  		if (args.Shape == TreeShape.Rainforest) {  			foliageHeight = 2;  		} else {  			foliageHeight = 4;  		}  		if (ybase + height + foliageHeight > mapHeight) {  			newTree.Height = mapHeight - ybase - foliageHeight;  		}  	}  	if (newTree.Height < 1)  		newTree.Height = 1;  	newTree.Prepare ();  	treelist [i] = newTree;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: for (int i = 0; i < treelist.Count; i++) {  	TreeShape newshape = shapeChoices [args.Rand.Next (0' shapeChoices.Length)];  	Tree newTree;  	switch (newshape) {  	case TreeShape.Normal:  		newTree = new NormalTree ();  		break;  	case TreeShape.Bamboo:  		newTree = new BambooTree ();  		break;  	case TreeShape.Palm:  		newTree = new PalmTree ();  		break;  	case TreeShape.Round:  		newTree = new RoundTree ();  		break;  	case TreeShape.Cone:  		newTree = new ConeTree ();  		break;  	case TreeShape.Rainforest:  		newTree = new RainforestTree ();  		break;  	case TreeShape.Mangrove:  		newTree = new MangroveTree ();  		break;  	default:  		throw new ArgumentException ("Unknown tree shape type");  	}  	newTree.Copy (treelist [i]);  	if (args.MapHeightLimit) {  		int height = newTree.Height;  		int ybase = newTree.Pos [1];  		int mapHeight = args.Map.Height;  		int foliageHeight;  		if (args.Shape == TreeShape.Rainforest) {  			foliageHeight = 2;  		} else {  			foliageHeight = 4;  		}  		if (ybase + height + foliageHeight > mapHeight) {  			newTree.Height = mapHeight - ybase - foliageHeight;  		}  	}  	if (newTree.Height < 1)  		newTree.Height = 1;  	newTree.Prepare ();  	treelist [i] = newTree;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: if (args.MapHeightLimit) {  	int height = newTree.Height;  	int ybase = newTree.Pos [1];  	int mapHeight = args.Map.Height;  	int foliageHeight;  	if (args.Shape == TreeShape.Rainforest) {  		foliageHeight = 2;  	} else {  		foliageHeight = 4;  	}  	if (ybase + height + foliageHeight > mapHeight) {  		newTree.Height = mapHeight - ybase - foliageHeight;  	}  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: if (args.MapHeightLimit) {  	int height = newTree.Height;  	int ybase = newTree.Pos [1];  	int mapHeight = args.Map.Height;  	int foliageHeight;  	if (args.Shape == TreeShape.Rainforest) {  		foliageHeight = 2;  	} else {  		foliageHeight = 4;  	}  	if (ybase + height + foliageHeight > mapHeight) {  		newTree.Height = mapHeight - ybase - foliageHeight;  	}  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: if (args.Shape == TreeShape.Rainforest) {  	foliageHeight = 2;  } else {  	foliageHeight = 4;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: if (args.Shape == TreeShape.Rainforest) {  	foliageHeight = 2;  } else {  	foliageHeight = 4;  }  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: foliageHeight = 2;  
Magic Number,fCraft,Forester,F:\newReposMay17\GlennMR_800craft\fCraft\World\Forester.cs,ProcessTrees,The following statement contains a magic number: foliageHeight = 4;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MapGeneratorOld,The following statement contains a magic number: if (!args.CustomWaterLevel) {  	args.WaterLevel = (args.MapHeight - 1) / 2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MapGeneratorOld,The following statement contains a magic number: args.WaterLevel = (args.MapHeight - 1) / 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The following statement contains a magic number: map.Blocks.MemSet ((byte)Block.Stone' 0' width * length * (height / 2 - FlatgrassDirtLevel));  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The following statement contains a magic number: map.Blocks.MemSet ((byte)Block.Dirt' width * length * (height / 2 - FlatgrassDirtLevel)' width * length * (FlatgrassDirtLevel - 1));  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateFlatgrass,The following statement contains a magic number: map.Blocks.MemSet ((byte)Block.Grass' width * length * (height / 2 - 1)' width * length);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateOcean,The following statement contains a magic number: map.Blocks.MemSet ((byte)Block.Water' width * length' width * length * (height / 2 - 1));  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate = 10;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.UseBias)  	progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.LayeredHeightmap)  	progressTotalEstimate += 10;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 10;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.MatchWaterCoverage)  	progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.BelowFuncExponent != 1 || args.AboveFuncExponent != 1)  	progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.CliffSmoothing)  	progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.MaxHeightVariation > 0 || args.MaxDepthVariation > 0)  	progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 15;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.AddCaves)  	progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.AddOre)  	progressTotalEstimate += 3;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 3;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.AddBeaches)  	progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: if (args.AddTrees)  	progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,EstimateComplexity,The following statement contains a magic number: progressTotalEstimate += 5;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,ReportProgress,The following statement contains a magic number: if (h != null) {  	h (this' new ProgressChangedEventArgs ((100 * progressRunningTotal / progressTotalEstimate)' message));  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,ReportProgress,The following statement contains a magic number: h (this' new ProgressChangedEventArgs ((100 * progressRunningTotal / progressTotalEstimate)' message));  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress (10' "Heightmap: Priming");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: if (args.UseBias && !args.DelayBias) {  	ReportProgress (2' "Heightmap: Biasing");  	Noise.Normalize (heightmap);  	ApplyBias ();  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress (2' "Heightmap: Biasing");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: if (args.LayeredHeightmap) {  	ReportProgress (10' "Heightmap: Layering");  	// needs a new Noise object to randomize second map  	float['] heightmap2 = new float[args.MapWidth' args.MapLength];  	new Noise (rand.Next ()' NoiseInterpolationMode.Bicubic).PerlinNoise (heightmap2' 0' args.DetailScale' args.Roughness' 0' 0);  	Noise.Normalize (heightmap2);  	// make a blendmap  	blendmap = new float[args.MapWidth' args.MapLength];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (blendmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (blendmap);  	float cliffSteepness = Math.Max (args.MapWidth' args.MapLength) / 6f;  	Noise.ScaleAndClip (blendmap' cliffSteepness);  	Noise.Blend (heightmap' heightmap2' blendmap);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: if (args.LayeredHeightmap) {  	ReportProgress (10' "Heightmap: Layering");  	// needs a new Noise object to randomize second map  	float['] heightmap2 = new float[args.MapWidth' args.MapLength];  	new Noise (rand.Next ()' NoiseInterpolationMode.Bicubic).PerlinNoise (heightmap2' 0' args.DetailScale' args.Roughness' 0' 0);  	Noise.Normalize (heightmap2);  	// make a blendmap  	blendmap = new float[args.MapWidth' args.MapLength];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (blendmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (blendmap);  	float cliffSteepness = Math.Max (args.MapWidth' args.MapLength) / 6f;  	Noise.ScaleAndClip (blendmap' cliffSteepness);  	Noise.Blend (heightmap' heightmap2' blendmap);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: if (args.LayeredHeightmap) {  	ReportProgress (10' "Heightmap: Layering");  	// needs a new Noise object to randomize second map  	float['] heightmap2 = new float[args.MapWidth' args.MapLength];  	new Noise (rand.Next ()' NoiseInterpolationMode.Bicubic).PerlinNoise (heightmap2' 0' args.DetailScale' args.Roughness' 0' 0);  	Noise.Normalize (heightmap2);  	// make a blendmap  	blendmap = new float[args.MapWidth' args.MapLength];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (blendmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (blendmap);  	float cliffSteepness = Math.Max (args.MapWidth' args.MapLength) / 6f;  	Noise.ScaleAndClip (blendmap' cliffSteepness);  	Noise.Blend (heightmap' heightmap2' blendmap);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: if (args.LayeredHeightmap) {  	ReportProgress (10' "Heightmap: Layering");  	// needs a new Noise object to randomize second map  	float['] heightmap2 = new float[args.MapWidth' args.MapLength];  	new Noise (rand.Next ()' NoiseInterpolationMode.Bicubic).PerlinNoise (heightmap2' 0' args.DetailScale' args.Roughness' 0' 0);  	Noise.Normalize (heightmap2);  	// make a blendmap  	blendmap = new float[args.MapWidth' args.MapLength];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (blendmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (blendmap);  	float cliffSteepness = Math.Max (args.MapWidth' args.MapLength) / 6f;  	Noise.ScaleAndClip (blendmap' cliffSteepness);  	Noise.Blend (heightmap' heightmap2' blendmap);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress (10' "Heightmap: Layering");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (blendmap' 3' blendmapDetailSize' 0.5f' 0' 0);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: if (args.UseBias && args.DelayBias) {  	ReportProgress (2' "Heightmap: Biasing");  	Noise.Normalize (heightmap);  	ApplyBias ();  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateHeightmap,The following statement contains a magic number: ReportProgress (2' "Heightmap: Biasing");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyBias,The following statement contains a magic number: Noise.ApplyBias (heightmap' corners [0]' corners [1]' corners [2]' corners [3]' midpoint);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyBias,The following statement contains a magic number: Noise.ApplyBias (heightmap' corners [0]' corners [1]' corners [2]' corners [3]' midpoint);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.MatchWaterCoverage) {  	ReportProgress (2' "Heightmap Processing: Matching water coverage");  	desiredWaterLevel = Noise.FindThreshold (heightmap' args.WaterCoverage);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (2' "Heightmap Processing: Matching water coverage");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.BelowFuncExponent != 1 || args.AboveFuncExponent != 1) {  	ReportProgress (5' "Heightmap Processing: Adjusting slope");  	for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  		for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  			if (heightmap [x' y] < desiredWaterLevel) {  				float normalizedDepth = 1 - heightmap [x' y] / desiredWaterLevel;  				heightmap [x' y] = desiredWaterLevel - (float)Math.Pow (normalizedDepth' args.BelowFuncExponent) * desiredWaterLevel;  			} else {  				float normalizedHeight = (heightmap [x' y] - desiredWaterLevel) / (1 - desiredWaterLevel);  				heightmap [x' y] = desiredWaterLevel + (float)Math.Pow (normalizedHeight' args.AboveFuncExponent) * (1 - desiredWaterLevel);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (5' "Heightmap Processing: Adjusting slope");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.CliffSmoothing) {  	ReportProgress (2' "Heightmap Processing: Smoothing");  	slopemap = Noise.CalculateSlope (Noise.GaussianBlur5X5 (heightmap));  } else {  	slopemap = Noise.CalculateSlope (heightmap);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (2' "Heightmap Processing: Smoothing");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.MaxHeightVariation != 0 || args.MaxDepthVariation != 0) {  	ReportProgress (5' "Heightmap Processing: Randomizing");  	altmap = new float[map.Width' map.Length];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (altmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (altmap' -1' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.MaxHeightVariation != 0 || args.MaxDepthVariation != 0) {  	ReportProgress (5' "Heightmap Processing: Randomizing");  	altmap = new float[map.Width' map.Length];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (altmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (altmap' -1' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.MaxHeightVariation != 0 || args.MaxDepthVariation != 0) {  	ReportProgress (5' "Heightmap Processing: Randomizing");  	altmap = new float[map.Width' map.Length];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (altmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (altmap' -1' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.MaxHeightVariation != 0 || args.MaxDepthVariation != 0) {  	ReportProgress (5' "Heightmap Processing: Randomizing");  	altmap = new float[map.Width' map.Length];  	int blendmapDetailSize = (int)Math.Log (Math.Max (args.MapWidth' args.MapLength)' 2) - 2;  	new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (altmap' 3' blendmapDetailSize' 0.5f' 0' 0);  	Noise.Normalize (altmap' -1' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (5' "Heightmap Processing: Randomizing");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: new Noise (rand.Next ()' NoiseInterpolationMode.Cosine).PerlinNoise (altmap' 3' blendmapDetailSize' 0.5f' 0' 0);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (10' "Filling");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		int level;  		float slope;  		if (heightmap [x' y] < desiredWaterLevel) {  			float depth = args.MaxDepth;  			if (altmap != null) {  				depth += altmap [x' y] * args.MaxDepthVariation;  			}  			slope = slopemap [x' y] * depth;  			level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  			if (args.AddWater) {  				if (args.WaterLevel - level > 3) {  					map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  				} else {  					map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  				}  				for (int i = args.WaterLevel; i > level; i--) {  					map.SetBlock (x' y' i' bWater);  				}  				for (int i = level; i >= 0; i--) {  					if (level - i < SeaFloorThickness) {  						map.SetBlock (x' y' i' bSeaFloor);  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			} else {  				if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  					map.SetBlock (x' y' level' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' level' bGroundSurface);  					} else {  						map.SetBlock (x' y' level' bCliff);  					}  				}  				for (int i = level - 1; i >= 0; i--) {  					if (level - i < groundThickness) {  						if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  							map.SetBlock (x' y' i' bCliff);  						} else {  							if (slope < args.CliffThreshold) {  								map.SetBlock (x' y' i' bGround);  							} else {  								map.SetBlock (x' y' i' bCliff);  							}  						}  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			}  		} else {  			float height;  			if (altmap != null) {  				height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  			} else {  				height = args.MaxHeight;  			}  			slope = slopemap [x' y] * height;  			if (height != 0) {  				level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  			} else {  				level = args.WaterLevel;  			}  			bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							if (snow) {  								map.SetBlock (x' y' i' Block.White);  							} else {  								map.SetBlock (x' y' i' bGround);  							}  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		int level;  		float slope;  		if (heightmap [x' y] < desiredWaterLevel) {  			float depth = args.MaxDepth;  			if (altmap != null) {  				depth += altmap [x' y] * args.MaxDepthVariation;  			}  			slope = slopemap [x' y] * depth;  			level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  			if (args.AddWater) {  				if (args.WaterLevel - level > 3) {  					map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  				} else {  					map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  				}  				for (int i = args.WaterLevel; i > level; i--) {  					map.SetBlock (x' y' i' bWater);  				}  				for (int i = level; i >= 0; i--) {  					if (level - i < SeaFloorThickness) {  						map.SetBlock (x' y' i' bSeaFloor);  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			} else {  				if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  					map.SetBlock (x' y' level' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' level' bGroundSurface);  					} else {  						map.SetBlock (x' y' level' bCliff);  					}  				}  				for (int i = level - 1; i >= 0; i--) {  					if (level - i < groundThickness) {  						if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  							map.SetBlock (x' y' i' bCliff);  						} else {  							if (slope < args.CliffThreshold) {  								map.SetBlock (x' y' i' bGround);  							} else {  								map.SetBlock (x' y' i' bCliff);  							}  						}  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			}  		} else {  			float height;  			if (altmap != null) {  				height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  			} else {  				height = args.MaxHeight;  			}  			slope = slopemap [x' y] * height;  			if (height != 0) {  				level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  			} else {  				level = args.WaterLevel;  			}  			bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							if (snow) {  								map.SetBlock (x' y' i' Block.White);  							} else {  								map.SetBlock (x' y' i' bGround);  							}  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		int level;  		float slope;  		if (heightmap [x' y] < desiredWaterLevel) {  			float depth = args.MaxDepth;  			if (altmap != null) {  				depth += altmap [x' y] * args.MaxDepthVariation;  			}  			slope = slopemap [x' y] * depth;  			level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  			if (args.AddWater) {  				if (args.WaterLevel - level > 3) {  					map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  				} else {  					map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  				}  				for (int i = args.WaterLevel; i > level; i--) {  					map.SetBlock (x' y' i' bWater);  				}  				for (int i = level; i >= 0; i--) {  					if (level - i < SeaFloorThickness) {  						map.SetBlock (x' y' i' bSeaFloor);  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			} else {  				if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  					map.SetBlock (x' y' level' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' level' bGroundSurface);  					} else {  						map.SetBlock (x' y' level' bCliff);  					}  				}  				for (int i = level - 1; i >= 0; i--) {  					if (level - i < groundThickness) {  						if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  							map.SetBlock (x' y' i' bCliff);  						} else {  							if (slope < args.CliffThreshold) {  								map.SetBlock (x' y' i' bGround);  							} else {  								map.SetBlock (x' y' i' bCliff);  							}  						}  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			}  		} else {  			float height;  			if (altmap != null) {  				height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  			} else {  				height = args.MaxHeight;  			}  			slope = slopemap [x' y] * height;  			if (height != 0) {  				level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  			} else {  				level = args.WaterLevel;  			}  			bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							if (snow) {  								map.SetBlock (x' y' i' Block.White);  							} else {  								map.SetBlock (x' y' i' bGround);  							}  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		int level;  		float slope;  		if (heightmap [x' y] < desiredWaterLevel) {  			float depth = args.MaxDepth;  			if (altmap != null) {  				depth += altmap [x' y] * args.MaxDepthVariation;  			}  			slope = slopemap [x' y] * depth;  			level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  			if (args.AddWater) {  				if (args.WaterLevel - level > 3) {  					map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  				} else {  					map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  				}  				for (int i = args.WaterLevel; i > level; i--) {  					map.SetBlock (x' y' i' bWater);  				}  				for (int i = level; i >= 0; i--) {  					if (level - i < SeaFloorThickness) {  						map.SetBlock (x' y' i' bSeaFloor);  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			} else {  				if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  					map.SetBlock (x' y' level' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' level' bGroundSurface);  					} else {  						map.SetBlock (x' y' level' bCliff);  					}  				}  				for (int i = level - 1; i >= 0; i--) {  					if (level - i < groundThickness) {  						if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  							map.SetBlock (x' y' i' bCliff);  						} else {  							if (slope < args.CliffThreshold) {  								map.SetBlock (x' y' i' bGround);  							} else {  								map.SetBlock (x' y' i' bCliff);  							}  						}  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			}  		} else {  			float height;  			if (altmap != null) {  				height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  			} else {  				height = args.MaxHeight;  			}  			slope = slopemap [x' y] * height;  			if (height != 0) {  				level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  			} else {  				level = args.WaterLevel;  			}  			bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							if (snow) {  								map.SetBlock (x' y' i' Block.White);  							} else {  								map.SetBlock (x' y' i' bGround);  							}  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int x = heightmap.GetLength (0) - 1; x >= 0; x--) {  	for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  		int level;  		float slope;  		if (heightmap [x' y] < desiredWaterLevel) {  			float depth = args.MaxDepth;  			if (altmap != null) {  				depth += altmap [x' y] * args.MaxDepthVariation;  			}  			slope = slopemap [x' y] * depth;  			level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  			if (args.AddWater) {  				if (args.WaterLevel - level > 3) {  					map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  				} else {  					map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  				}  				for (int i = args.WaterLevel; i > level; i--) {  					map.SetBlock (x' y' i' bWater);  				}  				for (int i = level; i >= 0; i--) {  					if (level - i < SeaFloorThickness) {  						map.SetBlock (x' y' i' bSeaFloor);  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			} else {  				if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  					map.SetBlock (x' y' level' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' level' bGroundSurface);  					} else {  						map.SetBlock (x' y' level' bCliff);  					}  				}  				for (int i = level - 1; i >= 0; i--) {  					if (level - i < groundThickness) {  						if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  							map.SetBlock (x' y' i' bCliff);  						} else {  							if (slope < args.CliffThreshold) {  								map.SetBlock (x' y' i' bGround);  							} else {  								map.SetBlock (x' y' i' bCliff);  							}  						}  					} else {  						map.SetBlock (x' y' i' bBedrock);  					}  				}  			}  		} else {  			float height;  			if (altmap != null) {  				height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  			} else {  				height = args.MaxHeight;  			}  			slope = slopemap [x' y] * height;  			if (height != 0) {  				level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  			} else {  				level = args.WaterLevel;  			}  			bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							if (snow) {  								map.SetBlock (x' y' i' Block.White);  							} else {  								map.SetBlock (x' y' i' bGround);  							}  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	int level;  	float slope;  	if (heightmap [x' y] < desiredWaterLevel) {  		float depth = args.MaxDepth;  		if (altmap != null) {  			depth += altmap [x' y] * args.MaxDepthVariation;  		}  		slope = slopemap [x' y] * depth;  		level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  		if (args.AddWater) {  			if (args.WaterLevel - level > 3) {  				map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  			} else {  				map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  			}  			for (int i = args.WaterLevel; i > level; i--) {  				map.SetBlock (x' y' i' bWater);  			}  			for (int i = level; i >= 0; i--) {  				if (level - i < SeaFloorThickness) {  					map.SetBlock (x' y' i' bSeaFloor);  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		} else {  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' bGroundSurface);  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							map.SetBlock (x' y' i' bGround);  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	} else {  		float height;  		if (altmap != null) {  			height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  		} else {  			height = args.MaxHeight;  		}  		slope = slopemap [x' y] * height;  		if (height != 0) {  			level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  		} else {  			level = args.WaterLevel;  		}  		bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						if (snow) {  							map.SetBlock (x' y' i' Block.White);  						} else {  							map.SetBlock (x' y' i' bGround);  						}  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	int level;  	float slope;  	if (heightmap [x' y] < desiredWaterLevel) {  		float depth = args.MaxDepth;  		if (altmap != null) {  			depth += altmap [x' y] * args.MaxDepthVariation;  		}  		slope = slopemap [x' y] * depth;  		level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  		if (args.AddWater) {  			if (args.WaterLevel - level > 3) {  				map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  			} else {  				map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  			}  			for (int i = args.WaterLevel; i > level; i--) {  				map.SetBlock (x' y' i' bWater);  			}  			for (int i = level; i >= 0; i--) {  				if (level - i < SeaFloorThickness) {  					map.SetBlock (x' y' i' bSeaFloor);  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		} else {  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' bGroundSurface);  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							map.SetBlock (x' y' i' bGround);  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	} else {  		float height;  		if (altmap != null) {  			height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  		} else {  			height = args.MaxHeight;  		}  		slope = slopemap [x' y] * height;  		if (height != 0) {  			level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  		} else {  			level = args.WaterLevel;  		}  		bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						if (snow) {  							map.SetBlock (x' y' i' Block.White);  						} else {  							map.SetBlock (x' y' i' bGround);  						}  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	int level;  	float slope;  	if (heightmap [x' y] < desiredWaterLevel) {  		float depth = args.MaxDepth;  		if (altmap != null) {  			depth += altmap [x' y] * args.MaxDepthVariation;  		}  		slope = slopemap [x' y] * depth;  		level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  		if (args.AddWater) {  			if (args.WaterLevel - level > 3) {  				map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  			} else {  				map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  			}  			for (int i = args.WaterLevel; i > level; i--) {  				map.SetBlock (x' y' i' bWater);  			}  			for (int i = level; i >= 0; i--) {  				if (level - i < SeaFloorThickness) {  					map.SetBlock (x' y' i' bSeaFloor);  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		} else {  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' bGroundSurface);  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							map.SetBlock (x' y' i' bGround);  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	} else {  		float height;  		if (altmap != null) {  			height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  		} else {  			height = args.MaxHeight;  		}  		slope = slopemap [x' y] * height;  		if (height != 0) {  			level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  		} else {  			level = args.WaterLevel;  		}  		bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						if (snow) {  							map.SetBlock (x' y' i' Block.White);  						} else {  							map.SetBlock (x' y' i' bGround);  						}  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	int level;  	float slope;  	if (heightmap [x' y] < desiredWaterLevel) {  		float depth = args.MaxDepth;  		if (altmap != null) {  			depth += altmap [x' y] * args.MaxDepthVariation;  		}  		slope = slopemap [x' y] * depth;  		level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  		if (args.AddWater) {  			if (args.WaterLevel - level > 3) {  				map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  			} else {  				map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  			}  			for (int i = args.WaterLevel; i > level; i--) {  				map.SetBlock (x' y' i' bWater);  			}  			for (int i = level; i >= 0; i--) {  				if (level - i < SeaFloorThickness) {  					map.SetBlock (x' y' i' bSeaFloor);  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		} else {  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' bGroundSurface);  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							map.SetBlock (x' y' i' bGround);  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	} else {  		float height;  		if (altmap != null) {  			height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  		} else {  			height = args.MaxHeight;  		}  		slope = slopemap [x' y] * height;  		if (height != 0) {  			level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  		} else {  			level = args.WaterLevel;  		}  		bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						if (snow) {  							map.SetBlock (x' y' i' Block.White);  						} else {  							map.SetBlock (x' y' i' bGround);  						}  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: for (int y = heightmap.GetLength (1) - 1; y >= 0; y--) {  	int level;  	float slope;  	if (heightmap [x' y] < desiredWaterLevel) {  		float depth = args.MaxDepth;  		if (altmap != null) {  			depth += altmap [x' y] * args.MaxDepthVariation;  		}  		slope = slopemap [x' y] * depth;  		level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  		if (args.AddWater) {  			if (args.WaterLevel - level > 3) {  				map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  			} else {  				map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  			}  			for (int i = args.WaterLevel; i > level; i--) {  				map.SetBlock (x' y' i' bWater);  			}  			for (int i = level; i >= 0; i--) {  				if (level - i < SeaFloorThickness) {  					map.SetBlock (x' y' i' bSeaFloor);  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		} else {  			if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  				map.SetBlock (x' y' level' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' level' bGroundSurface);  				} else {  					map.SetBlock (x' y' level' bCliff);  				}  			}  			for (int i = level - 1; i >= 0; i--) {  				if (level - i < groundThickness) {  					if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  						map.SetBlock (x' y' i' bCliff);  					} else {  						if (slope < args.CliffThreshold) {  							map.SetBlock (x' y' i' bGround);  						} else {  							map.SetBlock (x' y' i' bCliff);  						}  					}  				} else {  					map.SetBlock (x' y' i' bBedrock);  				}  			}  		}  	} else {  		float height;  		if (altmap != null) {  			height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  		} else {  			height = args.MaxHeight;  		}  		slope = slopemap [x' y] * height;  		if (height != 0) {  			level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  		} else {  			level = args.WaterLevel;  		}  		bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						if (snow) {  							map.SetBlock (x' y' i' Block.White);  						} else {  							map.SetBlock (x' y' i' bGround);  						}  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (heightmap [x' y] < desiredWaterLevel) {  	float depth = args.MaxDepth;  	if (altmap != null) {  		depth += altmap [x' y] * args.MaxDepthVariation;  	}  	slope = slopemap [x' y] * depth;  	level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  	if (args.AddWater) {  		if (args.WaterLevel - level > 3) {  			map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  		} else {  			map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  		}  		for (int i = args.WaterLevel; i > level; i--) {  			map.SetBlock (x' y' i' bWater);  		}  		for (int i = level; i >= 0; i--) {  			if (level - i < SeaFloorThickness) {  				map.SetBlock (x' y' i' bSeaFloor);  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	} else {  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' bGroundSurface);  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' i' bGround);  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  } else {  	float height;  	if (altmap != null) {  		height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  	} else {  		height = args.MaxHeight;  	}  	slope = slopemap [x' y] * height;  	if (height != 0) {  		level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  	} else {  		level = args.WaterLevel;  	}  	bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					if (snow) {  						map.SetBlock (x' y' i' Block.White);  					} else {  						map.SetBlock (x' y' i' bGround);  					}  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (heightmap [x' y] < desiredWaterLevel) {  	float depth = args.MaxDepth;  	if (altmap != null) {  		depth += altmap [x' y] * args.MaxDepthVariation;  	}  	slope = slopemap [x' y] * depth;  	level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  	if (args.AddWater) {  		if (args.WaterLevel - level > 3) {  			map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  		} else {  			map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  		}  		for (int i = args.WaterLevel; i > level; i--) {  			map.SetBlock (x' y' i' bWater);  		}  		for (int i = level; i >= 0; i--) {  			if (level - i < SeaFloorThickness) {  				map.SetBlock (x' y' i' bSeaFloor);  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	} else {  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' bGroundSurface);  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' i' bGround);  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  } else {  	float height;  	if (altmap != null) {  		height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  	} else {  		height = args.MaxHeight;  	}  	slope = slopemap [x' y] * height;  	if (height != 0) {  		level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  	} else {  		level = args.WaterLevel;  	}  	bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					if (snow) {  						map.SetBlock (x' y' i' Block.White);  					} else {  						map.SetBlock (x' y' i' bGround);  					}  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (heightmap [x' y] < desiredWaterLevel) {  	float depth = args.MaxDepth;  	if (altmap != null) {  		depth += altmap [x' y] * args.MaxDepthVariation;  	}  	slope = slopemap [x' y] * depth;  	level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  	if (args.AddWater) {  		if (args.WaterLevel - level > 3) {  			map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  		} else {  			map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  		}  		for (int i = args.WaterLevel; i > level; i--) {  			map.SetBlock (x' y' i' bWater);  		}  		for (int i = level; i >= 0; i--) {  			if (level - i < SeaFloorThickness) {  				map.SetBlock (x' y' i' bSeaFloor);  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	} else {  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' bGroundSurface);  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' i' bGround);  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  } else {  	float height;  	if (altmap != null) {  		height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  	} else {  		height = args.MaxHeight;  	}  	slope = slopemap [x' y] * height;  	if (height != 0) {  		level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  	} else {  		level = args.WaterLevel;  	}  	bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					if (snow) {  						map.SetBlock (x' y' i' Block.White);  					} else {  						map.SetBlock (x' y' i' bGround);  					}  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (heightmap [x' y] < desiredWaterLevel) {  	float depth = args.MaxDepth;  	if (altmap != null) {  		depth += altmap [x' y] * args.MaxDepthVariation;  	}  	slope = slopemap [x' y] * depth;  	level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  	if (args.AddWater) {  		if (args.WaterLevel - level > 3) {  			map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  		} else {  			map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  		}  		for (int i = args.WaterLevel; i > level; i--) {  			map.SetBlock (x' y' i' bWater);  		}  		for (int i = level; i >= 0; i--) {  			if (level - i < SeaFloorThickness) {  				map.SetBlock (x' y' i' bSeaFloor);  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	} else {  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' bGroundSurface);  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' i' bGround);  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  } else {  	float height;  	if (altmap != null) {  		height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  	} else {  		height = args.MaxHeight;  	}  	slope = slopemap [x' y] * height;  	if (height != 0) {  		level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  	} else {  		level = args.WaterLevel;  	}  	bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					if (snow) {  						map.SetBlock (x' y' i' Block.White);  					} else {  						map.SetBlock (x' y' i' bGround);  					}  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (heightmap [x' y] < desiredWaterLevel) {  	float depth = args.MaxDepth;  	if (altmap != null) {  		depth += altmap [x' y] * args.MaxDepthVariation;  	}  	slope = slopemap [x' y] * depth;  	level = args.WaterLevel - (int)Math.Round (Math.Pow (1 - heightmap [x' y] / desiredWaterLevel' args.BelowFuncExponent) * depth);  	if (args.AddWater) {  		if (args.WaterLevel - level > 3) {  			map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  		} else {  			map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  		}  		for (int i = args.WaterLevel; i > level; i--) {  			map.SetBlock (x' y' i' bWater);  		}  		for (int i = level; i >= 0; i--) {  			if (level - i < SeaFloorThickness) {  				map.SetBlock (x' y' i' bSeaFloor);  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	} else {  		if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  			map.SetBlock (x' y' level' bCliff);  		} else {  			if (slope < args.CliffThreshold) {  				map.SetBlock (x' y' level' bGroundSurface);  			} else {  				map.SetBlock (x' y' level' bCliff);  			}  		}  		for (int i = level - 1; i >= 0; i--) {  			if (level - i < groundThickness) {  				if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  					map.SetBlock (x' y' i' bCliff);  				} else {  					if (slope < args.CliffThreshold) {  						map.SetBlock (x' y' i' bGround);  					} else {  						map.SetBlock (x' y' i' bCliff);  					}  				}  			} else {  				map.SetBlock (x' y' i' bBedrock);  			}  		}  	}  } else {  	float height;  	if (altmap != null) {  		height = args.MaxHeight + altmap [x' y] * args.MaxHeightVariation;  	} else {  		height = args.MaxHeight;  	}  	slope = slopemap [x' y] * height;  	if (height != 0) {  		level = args.WaterLevel + (int)Math.Round (Math.Pow (heightmap [x' y] - desiredWaterLevel' args.AboveFuncExponent) * aboveWaterMultiplier / args.MaxHeight * height);  	} else {  		level = args.WaterLevel;  	}  	bool snow = args.AddSnow && (level > snowThreshold || (level > snowStartThreshold && rand.NextDouble () < (level - snowStartThreshold) / (double)(snowThreshold - snowStartThreshold)));  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					if (snow) {  						map.SetBlock (x' y' i' Block.White);  					} else {  						map.SetBlock (x' y' i' bGround);  					}  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddWater) {  	if (args.WaterLevel - level > 3) {  		map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  	} else {  		map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  	}  	for (int i = args.WaterLevel; i > level; i--) {  		map.SetBlock (x' y' i' bWater);  	}  	for (int i = level; i >= 0; i--) {  		if (level - i < SeaFloorThickness) {  			map.SetBlock (x' y' i' bSeaFloor);  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  } else {  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' bGroundSurface);  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' i' bGround);  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddWater) {  	if (args.WaterLevel - level > 3) {  		map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  	} else {  		map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  	}  	for (int i = args.WaterLevel; i > level; i--) {  		map.SetBlock (x' y' i' bWater);  	}  	for (int i = level; i >= 0; i--) {  		if (level - i < SeaFloorThickness) {  			map.SetBlock (x' y' i' bSeaFloor);  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  } else {  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' bGroundSurface);  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' i' bGround);  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddWater) {  	if (args.WaterLevel - level > 3) {  		map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  	} else {  		map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  	}  	for (int i = args.WaterLevel; i > level; i--) {  		map.SetBlock (x' y' i' bWater);  	}  	for (int i = level; i >= 0; i--) {  		if (level - i < SeaFloorThickness) {  			map.SetBlock (x' y' i' bSeaFloor);  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  } else {  	if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  		map.SetBlock (x' y' level' bCliff);  	} else {  		if (slope < args.CliffThreshold) {  			map.SetBlock (x' y' level' bGroundSurface);  		} else {  			map.SetBlock (x' y' level' bCliff);  		}  	}  	for (int i = level - 1; i >= 0; i--) {  		if (level - i < groundThickness) {  			if (blendmap != null && blendmap [x' y] > CliffsideBlockThreshold && blendmap [x' y] < (1 - CliffsideBlockThreshold)) {  				map.SetBlock (x' y' i' bCliff);  			} else {  				if (slope < args.CliffThreshold) {  					map.SetBlock (x' y' i' bGround);  				} else {  					map.SetBlock (x' y' i' bCliff);  				}  			}  		} else {  			map.SetBlock (x' y' i' bBedrock);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.WaterLevel - level > 3) {  	map.SetBlock (x' y' args.WaterLevel' bDeepWaterSurface);  } else {  	map.SetBlock (x' y' args.WaterLevel' bWaterSurface);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  	map.SetBlock (x' y' level' bCliff);  } else {  	if (slope < args.CliffThreshold) {  		map.SetBlock (x' y' level' bGroundSurface);  	} else {  		map.SetBlock (x' y' level' bCliff);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  	map.SetBlock (x' y' level' bCliff);  } else {  	if (slope < args.CliffThreshold) {  		map.SetBlock (x' y' level' bGroundSurface);  	} else {  		map.SetBlock (x' y' level' bCliff);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  	map.SetBlock (x' y' level' bCliff);  } else {  	if (slope < args.CliffThreshold) {  		map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  	} else {  		map.SetBlock (x' y' level' bCliff);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (blendmap != null && blendmap [x' y] > .25 && blendmap [x' y] < .75) {  	map.SetBlock (x' y' level' bCliff);  } else {  	if (slope < args.CliffThreshold) {  		map.SetBlock (x' y' level' (snow ? Block.White : bGroundSurface));  	} else {  		map.SetBlock (x' y' level' bCliff);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddBeaches) {  	ReportProgress (5' "Processing: Adding beaches");  	AddBeaches (map);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (5' "Processing: Adding beaches");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddTrees) {  	ReportProgress (5' "Processing: Planting trees");  	if (args.AddGiantTrees) {  		Map outMap = new Map (null' map.Width' map.Length' map.Height' false) {  			Blocks = (byte[])map.Blocks.Clone ()  		};  		var foresterArgs = new ForesterArgs {  			Map = map'  			Rand = rand'  			TreeCount = (int)(map.Width * map.Length * 4 / (1024f * (args.TreeSpacingMax + args.TreeSpacingMin) / 2))'  			Operation = Forester.ForesterOperation.Add'  			PlantOn = bGroundSurface  		};  		foresterArgs.BlockPlacing += (sender' e) => outMap.SetBlock (e.Coordinate' e.Block);  		Forester.Generate (foresterArgs);  		map = outMap;  	}  	GenerateTrees (map);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddTrees) {  	ReportProgress (5' "Processing: Planting trees");  	if (args.AddGiantTrees) {  		Map outMap = new Map (null' map.Width' map.Length' map.Height' false) {  			Blocks = (byte[])map.Blocks.Clone ()  		};  		var foresterArgs = new ForesterArgs {  			Map = map'  			Rand = rand'  			TreeCount = (int)(map.Width * map.Length * 4 / (1024f * (args.TreeSpacingMax + args.TreeSpacingMin) / 2))'  			Operation = Forester.ForesterOperation.Add'  			PlantOn = bGroundSurface  		};  		foresterArgs.BlockPlacing += (sender' e) => outMap.SetBlock (e.Coordinate' e.Block);  		Forester.Generate (foresterArgs);  		map = outMap;  	}  	GenerateTrees (map);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddTrees) {  	ReportProgress (5' "Processing: Planting trees");  	if (args.AddGiantTrees) {  		Map outMap = new Map (null' map.Width' map.Length' map.Height' false) {  			Blocks = (byte[])map.Blocks.Clone ()  		};  		var foresterArgs = new ForesterArgs {  			Map = map'  			Rand = rand'  			TreeCount = (int)(map.Width * map.Length * 4 / (1024f * (args.TreeSpacingMax + args.TreeSpacingMin) / 2))'  			Operation = Forester.ForesterOperation.Add'  			PlantOn = bGroundSurface  		};  		foresterArgs.BlockPlacing += (sender' e) => outMap.SetBlock (e.Coordinate' e.Block);  		Forester.Generate (foresterArgs);  		map = outMap;  	}  	GenerateTrees (map);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: ReportProgress (5' "Processing: Planting trees");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddGiantTrees) {  	Map outMap = new Map (null' map.Width' map.Length' map.Height' false) {  		Blocks = (byte[])map.Blocks.Clone ()  	};  	var foresterArgs = new ForesterArgs {  		Map = map'  		Rand = rand'  		TreeCount = (int)(map.Width * map.Length * 4 / (1024f * (args.TreeSpacingMax + args.TreeSpacingMin) / 2))'  		Operation = Forester.ForesterOperation.Add'  		PlantOn = bGroundSurface  	};  	foresterArgs.BlockPlacing += (sender' e) => outMap.SetBlock (e.Coordinate' e.Block);  	Forester.Generate (foresterArgs);  	map = outMap;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateMap,The following statement contains a magic number: if (args.AddGiantTrees) {  	Map outMap = new Map (null' map.Width' map.Length' map.Height' false) {  		Blocks = (byte[])map.Blocks.Clone ()  	};  	var foresterArgs = new ForesterArgs {  		Map = map'  		Rand = rand'  		TreeCount = (int)(map.Width * map.Length * 4 / (1024f * (args.TreeSpacingMax + args.TreeSpacingMin) / 2))'  		Operation = Forester.ForesterOperation.Add'  		PlantOn = bGroundSurface  	};  	foresterArgs.BlockPlacing += (sender' e) => outMap.SetBlock (e.Coordinate' e.Block);  	Forester.Generate (foresterArgs);  	map = outMap;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (k1 = 0; map.Blocks [startX + map.Width * map.Length * (map.Height - 1 - startZ) + map.Width * startY] != bedrockType && k1 < 10000; k1++) {  	startX = rand.Next (0' map.Width);  	startY = rand.Next (0' map.Length);  	startZ = rand.Next (0' map.Height);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: if (k1 >= 10000)  	return;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k2 = 0; k2 < length; k2++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  	for (int j3 = 0; j3 < diameter; j3++) {  		for (int k3 = 0; k3 < diameter; k3++) {  			for (int l3 = 0; l3 < diameter; l3++) {  				if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  					continue;  				}  				int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  				if (map.Blocks [index] == bedrockType) {  					map.Blocks [index] = fillingType;  				}  				if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  					map.Blocks [index] = 0;  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: if (diameter < 1)  	diameter = 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: diameter = 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: x += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: y += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: z += (int)(0.7 * (rand.NextDouble () - 0.5D) * diameter);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int j3 = 0; j3 < diameter; j3++) {  	for (int k3 = 0; k3 < diameter; k3++) {  		for (int l3 = 0; l3 < diameter; l3++) {  			if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  				continue;  			}  			int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  			if (map.Blocks [index] == bedrockType) {  				map.Blocks [index] = fillingType;  			}  			if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  				map.Blocks [index] = 0;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int j3 = 0; j3 < diameter; j3++) {  	for (int k3 = 0; k3 < diameter; k3++) {  		for (int l3 = 0; l3 < diameter; l3++) {  			if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  				continue;  			}  			int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  			if (map.Blocks [index] == bedrockType) {  				map.Blocks [index] = fillingType;  			}  			if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  				map.Blocks [index] = 0;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int j3 = 0; j3 < diameter; j3++) {  	for (int k3 = 0; k3 < diameter; k3++) {  		for (int l3 = 0; l3 < diameter; l3++) {  			if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  				continue;  			}  			int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  			if (map.Blocks [index] == bedrockType) {  				map.Blocks [index] = fillingType;  			}  			if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  				map.Blocks [index] = 0;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int j3 = 0; j3 < diameter; j3++) {  	for (int k3 = 0; k3 < diameter; k3++) {  		for (int l3 = 0; l3 < diameter; l3++) {  			if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  				continue;  			}  			int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  			if (map.Blocks [index] == bedrockType) {  				map.Blocks [index] = fillingType;  			}  			if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  				map.Blocks [index] = 0;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k3 = 0; k3 < diameter; k3++) {  	for (int l3 = 0; l3 < diameter; l3++) {  		if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  			continue;  		}  		int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  		if (map.Blocks [index] == bedrockType) {  			map.Blocks [index] = fillingType;  		}  		if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  			map.Blocks [index] = 0;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k3 = 0; k3 < diameter; k3++) {  	for (int l3 = 0; l3 < diameter; l3++) {  		if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  			continue;  		}  		int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  		if (map.Blocks [index] == bedrockType) {  			map.Blocks [index] = fillingType;  		}  		if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  			map.Blocks [index] = 0;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k3 = 0; k3 < diameter; k3++) {  	for (int l3 = 0; l3 < diameter; l3++) {  		if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  			continue;  		}  		int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  		if (map.Blocks [index] == bedrockType) {  			map.Blocks [index] = fillingType;  		}  		if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  			map.Blocks [index] = 0;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int k3 = 0; k3 < diameter; k3++) {  	for (int l3 = 0; l3 < diameter; l3++) {  		if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  			continue;  		}  		int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  		if (map.Blocks [index] == bedrockType) {  			map.Blocks [index] = fillingType;  		}  		if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  			map.Blocks [index] = 0;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int l3 = 0; l3 < diameter; l3++) {  	if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  		continue;  	}  	int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  	if (map.Blocks [index] == bedrockType) {  		map.Blocks [index] = fillingType;  	}  	if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  		map.Blocks [index] = 0;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int l3 = 0; l3 < diameter; l3++) {  	if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  		continue;  	}  	int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  	if (map.Blocks [index] == bedrockType) {  		map.Blocks [index] = fillingType;  	}  	if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  		map.Blocks [index] = 0;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int l3 = 0; l3 < diameter; l3++) {  	if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  		continue;  	}  	int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  	if (map.Blocks [index] == bedrockType) {  		map.Blocks [index] = fillingType;  	}  	if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  		map.Blocks [index] = 0;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: for (int l3 = 0; l3 < diameter; l3++) {  	if ((j3 - radius) * (j3 - radius) + (k3 - radius) * (k3 - radius) + (l3 - radius) * (l3 - radius) >= radius * radius || x + j3 >= map.Width || z + k3 >= map.Height || y + l3 >= map.Length || x + j3 < 0 || z + k3 < 0 || y + l3 < 0) {  		continue;  	}  	int index = x + j3 + map.Width * map.Length * (map.Height - 1 - (z + k3)) + map.Width * (y + l3);  	if (map.Blocks [index] == bedrockType) {  		map.Blocks [index] = fillingType;  	}  	if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  		map.Blocks [index] = 0;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  	map.Blocks [index] = 0;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  	map.Blocks [index] = 0;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  	map.Blocks [index] = 0;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleCave,The following statement contains a magic number: if ((fillingType == 10 || fillingType == 11 || fillingType == 8 || fillingType == 9) && z + k3 < startZ) {  	map.Blocks [index] = 0;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: AddSingleVein (rand' map' bedrockType' fillingType' k' maxDiameter' l' 10);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int i2 = 0; i2 < i1; i2++) {  	int j2 = j1 + (int)(.5 * (rand.NextDouble () - .5) * map.Width);  	int k2 = k1 + (int)(.5 * (rand.NextDouble () - .5) * map.Height);  	int l2 = l1 + (int)(.5 * (rand.NextDouble () - .5) * map.Length);  	for (int l3 = 0; l3 < k; l3++) {  		int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  		if (diameter < 1)  			diameter = 2;  		int radius = diameter / 2;  		if (radius == 0)  			radius = 1;  		int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  		int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  		int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  		for (int k4 = 0; k4 < diameter; k4++) {  			for (int l4 = 0; l4 < diameter; l4++) {  				for (int i5 = 0; i5 < diameter; i5++) {  					if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  						int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  						if (map.Blocks [index] == bedrockType) {  							map.Blocks [index] = fillingType;  						}  					}  				}  			}  		}  	}  	j1 = j2;  	k1 = k2;  	l1 = l2;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int l3 = 0; l3 < k; l3++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  	int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  	int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  	for (int k4 = 0; k4 < diameter; k4++) {  		for (int l4 = 0; l4 < diameter; l4++) {  			for (int i5 = 0; i5 < diameter; i5++) {  				if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  					int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  					if (map.Blocks [index] == bedrockType) {  						map.Blocks [index] = fillingType;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int l3 = 0; l3 < k; l3++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  	int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  	int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  	for (int k4 = 0; k4 < diameter; k4++) {  		for (int l4 = 0; l4 < diameter; l4++) {  			for (int i5 = 0; i5 < diameter; i5++) {  				if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  					int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  					if (map.Blocks [index] == bedrockType) {  						map.Blocks [index] = fillingType;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int l3 = 0; l3 < k; l3++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  	int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  	int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  	for (int k4 = 0; k4 < diameter; k4++) {  		for (int l4 = 0; l4 < diameter; l4++) {  			for (int i5 = 0; i5 < diameter; i5++) {  				if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  					int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  					if (map.Blocks [index] == bedrockType) {  						map.Blocks [index] = fillingType;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int l3 = 0; l3 < k; l3++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  	int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  	int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  	for (int k4 = 0; k4 < diameter; k4++) {  		for (int l4 = 0; l4 < diameter; l4++) {  			for (int i5 = 0; i5 < diameter; i5++) {  				if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  					int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  					if (map.Blocks [index] == bedrockType) {  						map.Blocks [index] = fillingType;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: for (int l3 = 0; l3 < k; l3++) {  	int diameter = (int)(maxDiameter * rand.NextDouble () * map.Width);  	if (diameter < 1)  		diameter = 2;  	int radius = diameter / 2;  	if (radius == 0)  		radius = 1;  	int i3 = (int)((1 - thirteenOverK) * j1 + thirteenOverK * j2 + (l * radius) * (rand.NextDouble () - .5));  	int j3 = (int)((1 - thirteenOverK) * k1 + thirteenOverK * k2 + (l * radius) * (rand.NextDouble () - .5));  	int k3 = (int)((1 - thirteenOverK) * l1 + thirteenOverK * l2 + (l * radius) * (rand.NextDouble () - .5));  	for (int k4 = 0; k4 < diameter; k4++) {  		for (int l4 = 0; l4 < diameter; l4++) {  			for (int i5 = 0; i5 < diameter; i5++) {  				if ((k4 - radius) * (k4 - radius) + (l4 - radius) * (l4 - radius) + (i5 - radius) * (i5 - radius) < radius * radius && i3 + k4 < map.Width && j3 + l4 < map.Height && k3 + i5 < map.Length && i3 + k4 >= 0 && j3 + l4 >= 0 && k3 + i5 >= 0) {  					int index = i3 + k4 + map.Width * map.Length * (map.Height - 1 - (j3 + l4)) + map.Width * (k3 + i5);  					if (map.Blocks [index] == bedrockType) {  						map.Blocks [index] = fillingType;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: if (diameter < 1)  	diameter = 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddSingleVein,The following statement contains a magic number: diameter = 2;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int x = 1; x < map.Width - 1; x++) {  	for (int z = 1; z < map.Height; z++) {  		for (int y = 1; y < map.Length - 1; y++) {  			int index = map.Index (x' y' z);  			if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  				map.Blocks [index] = sealantType;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int x = 1; x < map.Width - 1; x++) {  	for (int z = 1; z < map.Height; z++) {  		for (int y = 1; y < map.Length - 1; y++) {  			int index = map.Index (x' y' z);  			if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  				map.Blocks [index] = sealantType;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int x = 1; x < map.Width - 1; x++) {  	for (int z = 1; z < map.Height; z++) {  		for (int y = 1; y < map.Length - 1; y++) {  			int index = map.Index (x' y' z);  			if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  				map.Blocks [index] = sealantType;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int x = 1; x < map.Width - 1; x++) {  	for (int z = 1; z < map.Height; z++) {  		for (int y = 1; y < map.Length - 1; y++) {  			int index = map.Index (x' y' z);  			if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  				map.Blocks [index] = sealantType;  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int z = 1; z < map.Height; z++) {  	for (int y = 1; y < map.Length - 1; y++) {  		int index = map.Index (x' y' z);  		if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  			map.Blocks [index] = sealantType;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int z = 1; z < map.Height; z++) {  	for (int y = 1; y < map.Length - 1; y++) {  		int index = map.Index (x' y' z);  		if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  			map.Blocks [index] = sealantType;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int z = 1; z < map.Height; z++) {  	for (int y = 1; y < map.Length - 1; y++) {  		int index = map.Index (x' y' z);  		if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  			map.Blocks [index] = sealantType;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int z = 1; z < map.Height; z++) {  	for (int y = 1; y < map.Length - 1; y++) {  		int index = map.Index (x' y' z);  		if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  			map.Blocks [index] = sealantType;  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int y = 1; y < map.Length - 1; y++) {  	int index = map.Index (x' y' z);  	if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  		map.Blocks [index] = sealantType;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int y = 1; y < map.Length - 1; y++) {  	int index = map.Index (x' y' z);  	if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  		map.Blocks [index] = sealantType;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int y = 1; y < map.Length - 1; y++) {  	int index = map.Index (x' y' z);  	if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  		map.Blocks [index] = sealantType;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: for (int y = 1; y < map.Length - 1; y++) {  	int index = map.Index (x' y' z);  	if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  		map.Blocks [index] = sealantType;  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  	map.Blocks [index] = sealantType;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  	map.Blocks [index] = sealantType;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  	map.Blocks [index] = sealantType;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,SealLiquids,The following statement contains a magic number: if ((map.Blocks [index] == 10 || map.Blocks [index] == 11 || map.Blocks [index] == 8 || map.Blocks [index] == 9) && (map.GetBlock (x - 1' y' z) == Block.Air || map.GetBlock (x + 1' y' z) == Block.Air || map.GetBlock (x' y - 1' z) == Block.Air || map.GetBlock (x' y + 1' z) == Block.Air || map.GetBlock (x' y' z - 1) == Block.Air)) {  	map.Blocks [index] = sealantType;  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaves) {  	ReportProgress (5' "Processing: Adding caves");  	for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  	for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  	for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  	if (args.AddCaveLava) {  		for (int i = 0; i < 8 * args.CaveDensity; i++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  		}  		for (int j = 0; j < 3 * args.CaveDensity; j++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	if (args.AddCaveWater) {  		for (int k = 0; k < 8 * args.CaveDensity; k++) {  			AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  		}  		for (int l = 0; l < 3 * args.CaveDensity; l++) {  			AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  		}  	}  	SealLiquids (map' (byte)bBedrock);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: ReportProgress (5' "Processing: Adding caves");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i1 = 0; i1 < 36 * args.CaveDensity; i1++)  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Air' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int j1 = 0; j1 < 9 * args.CaveDensity; j1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 500' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k1 = 0; k1 < 30 * args.CaveDensity; k1++)  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Air' 300' 0.03 * args.CaveSize' 1' 20);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveLava) {  	for (int i = 0; i < 8 * args.CaveDensity; i++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  	}  	for (int j = 0; j < 3 * args.CaveDensity; j++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveLava) {  	for (int i = 0; i < 8 * args.CaveDensity; i++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  	}  	for (int j = 0; j < 3 * args.CaveDensity; j++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveLava) {  	for (int i = 0; i < 8 * args.CaveDensity; i++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  	}  	for (int j = 0; j < 3 * args.CaveDensity; j++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveLava) {  	for (int i = 0; i < 8 * args.CaveDensity; i++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  	}  	for (int j = 0; j < 3 * args.CaveDensity; j++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveLava) {  	for (int i = 0; i < 8 * args.CaveDensity; i++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  	}  	for (int j = 0; j < 3 * args.CaveDensity; j++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveLava) {  	for (int i = 0; i < 8 * args.CaveDensity; i++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  	}  	for (int j = 0; j < 3 * args.CaveDensity; j++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i = 0; i < 8 * args.CaveDensity; i++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i = 0; i < 8 * args.CaveDensity; i++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i = 0; i < 8 * args.CaveDensity; i++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Lava' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int j = 0; j < 3 * args.CaveDensity; j++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int j = 0; j < 3 * args.CaveDensity; j++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int j = 0; j < 3 * args.CaveDensity; j++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Lava' 1000' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveWater) {  	for (int k = 0; k < 8 * args.CaveDensity; k++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  	}  	for (int l = 0; l < 3 * args.CaveDensity; l++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveWater) {  	for (int k = 0; k < 8 * args.CaveDensity; k++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  	}  	for (int l = 0; l < 3 * args.CaveDensity; l++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveWater) {  	for (int k = 0; k < 8 * args.CaveDensity; k++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  	}  	for (int l = 0; l < 3 * args.CaveDensity; l++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveWater) {  	for (int k = 0; k < 8 * args.CaveDensity; k++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  	}  	for (int l = 0; l < 3 * args.CaveDensity; l++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveWater) {  	for (int k = 0; k < 8 * args.CaveDensity; k++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  	}  	for (int l = 0; l < 3 * args.CaveDensity; l++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddCaveWater) {  	for (int k = 0; k < 8 * args.CaveDensity; k++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  	}  	for (int l = 0; l < 3 * args.CaveDensity; l++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k = 0; k < 8 * args.CaveDensity; k++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k = 0; k < 8 * args.CaveDensity; k++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k = 0; k < 8 * args.CaveDensity; k++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Water' 30' 0.05 * args.CaveSize);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l = 0; l < 3 * args.CaveDensity; l++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l = 0; l < 3 * args.CaveDensity; l++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l = 0; l < 3 * args.CaveDensity; l++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Water' 1000' 0.015 * args.CaveSize' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: if (args.AddOre) {  	ReportProgress (3' "Processing: Adding ore");  	for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  	}  	for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  	}  	for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  		AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  	}  	for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  		AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: ReportProgress (3' "Processing: Adding ore");  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l1 = 0; l1 < 12 * args.CaveDensity; l1++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.Coal' 500' 0.03);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int i2 = 0; i2 < 32 * args.CaveDensity; i2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.Coal' 200' 0.015' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.IronOre' 500' 0.02);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int k2 = 0; k2 < 8 * args.CaveDensity; k2++) {  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  	AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.IronOre' 200' 0.015' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleVein (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 200' 0.0145' 1);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: for (int l2 = 0; l2 < 20 * args.CaveDensity; l2++) {  	AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,AddCaves,The following statement contains a magic number: AddSingleCave (rand' map' (byte)bBedrock' (byte)Block.GoldOre' 400' 0.0175);  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int x = 0; x < map.Width; x += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  		int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  		if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  			continue;  		int nz = map.Shadows [nx' ny];  		if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  			// Pick a random height for the tree between Min and Max'  			// discarding this tree if it would breach the top of the map  			int nh;  			if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  				continue;  			// Generate the trunk of the tree  			for (int z = 1; z <= nh; z++)  				map.SetBlock (nx' ny' nz + z' Block.Log);  			for (int i = -1; i < nh / 2; i++) {  				// Should we draw thin (2x2) or thicker (4x4) foliage  				int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  				// Draw the foliage  				for (int xoff = -radius; xoff < radius + 1; xoff++) {  					for (int yoff = -radius; yoff < radius + 1; yoff++) {  						// Drop random leaves from the edges  						if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  							continue;  						// By default only replace an existing block if its air  						if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  							map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int y = 0; y < map.Length; y += rn.Next (minTrunkPadding' maxTrunkPadding + 1)) {  	int nx = x + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	int ny = y + rn.Next (-(minTrunkPadding / 2)' (maxTrunkPadding / 2) + 1);  	if (nx < 0 || nx >= map.Width || ny < 0 || ny >= map.Length)  		continue;  	int nz = map.Shadows [nx' ny];  	if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  		// Pick a random height for the tree between Min and Max'  		// discarding this tree if it would breach the top of the map  		int nh;  		if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  			continue;  		// Generate the trunk of the tree  		for (int z = 1; z <= nh; z++)  			map.SetBlock (nx' ny' nz + z' Block.Log);  		for (int i = -1; i < nh / 2; i++) {  			// Should we draw thin (2x2) or thicker (4x4) foliage  			int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  			// Draw the foliage  			for (int xoff = -radius; xoff < radius + 1; xoff++) {  				for (int yoff = -radius; yoff < radius + 1; yoff++) {  					// Drop random leaves from the edges  					if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  						continue;  					// By default only replace an existing block if its air  					if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  						map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  				}  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  	// Pick a random height for the tree between Min and Max'  	// discarding this tree if it would breach the top of the map  	int nh;  	if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  		continue;  	// Generate the trunk of the tree  	for (int z = 1; z <= nh; z++)  		map.SetBlock (nx' ny' nz + z' Block.Log);  	for (int i = -1; i < nh / 2; i++) {  		// Should we draw thin (2x2) or thicker (4x4) foliage  		int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  		// Draw the foliage  		for (int xoff = -radius; xoff < radius + 1; xoff++) {  			for (int yoff = -radius; yoff < radius + 1; yoff++) {  				// Drop random leaves from the edges  				if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  					continue;  				// By default only replace an existing block if its air  				if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  					map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  	// Pick a random height for the tree between Min and Max'  	// discarding this tree if it would breach the top of the map  	int nh;  	if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  		continue;  	// Generate the trunk of the tree  	for (int z = 1; z <= nh; z++)  		map.SetBlock (nx' ny' nz + z' Block.Log);  	for (int i = -1; i < nh / 2; i++) {  		// Should we draw thin (2x2) or thicker (4x4) foliage  		int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  		// Draw the foliage  		for (int xoff = -radius; xoff < radius + 1; xoff++) {  			for (int yoff = -radius; yoff < radius + 1; yoff++) {  				// Drop random leaves from the edges  				if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  					continue;  				// By default only replace an existing block if its air  				if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  					map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  	// Pick a random height for the tree between Min and Max'  	// discarding this tree if it would breach the top of the map  	int nh;  	if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  		continue;  	// Generate the trunk of the tree  	for (int z = 1; z <= nh; z++)  		map.SetBlock (nx' ny' nz + z' Block.Log);  	for (int i = -1; i < nh / 2; i++) {  		// Should we draw thin (2x2) or thicker (4x4) foliage  		int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  		// Draw the foliage  		for (int xoff = -radius; xoff < radius + 1; xoff++) {  			for (int yoff = -radius; yoff < radius + 1; yoff++) {  				// Drop random leaves from the edges  				if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  					continue;  				// By default only replace an existing block if its air  				if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  					map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  	// Pick a random height for the tree between Min and Max'  	// discarding this tree if it would breach the top of the map  	int nh;  	if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  		continue;  	// Generate the trunk of the tree  	for (int z = 1; z <= nh; z++)  		map.SetBlock (nx' ny' nz + z' Block.Log);  	for (int i = -1; i < nh / 2; i++) {  		// Should we draw thin (2x2) or thicker (4x4) foliage  		int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  		// Draw the foliage  		for (int xoff = -radius; xoff < radius + 1; xoff++) {  			for (int yoff = -radius; yoff < radius + 1; yoff++) {  				// Drop random leaves from the edges  				if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  					continue;  				// By default only replace an existing block if its air  				if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  					map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: if ((map.GetBlock (nx' ny' nz) == bGroundSurface) && slopemap [nx' ny] < .5) {  	// Pick a random height for the tree between Min and Max'  	// discarding this tree if it would breach the top of the map  	int nh;  	if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  		continue;  	// Generate the trunk of the tree  	for (int z = 1; z <= nh; z++)  		map.SetBlock (nx' ny' nz + z' Block.Log);  	for (int i = -1; i < nh / 2; i++) {  		// Should we draw thin (2x2) or thicker (4x4) foliage  		int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  		// Draw the foliage  		for (int xoff = -radius; xoff < radius + 1; xoff++) {  			for (int yoff = -radius; yoff < radius + 1; yoff++) {  				// Drop random leaves from the edges  				if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  					continue;  				// By default only replace an existing block if its air  				if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  					map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  			}  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: if ((nh = rn.Next (minHeight' maxHeight + 1)) + nz + nh / 2 > map.Height)  	continue;  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int i = -1; i < nh / 2; i++) {  	// Should we draw thin (2x2) or thicker (4x4) foliage  	int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  	// Draw the foliage  	for (int xoff = -radius; xoff < radius + 1; xoff++) {  		for (int yoff = -radius; yoff < radius + 1; yoff++) {  			// Drop random leaves from the edges  			if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  				continue;  			// By default only replace an existing block if its air  			if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  				map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int i = -1; i < nh / 2; i++) {  	// Should we draw thin (2x2) or thicker (4x4) foliage  	int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  	// Draw the foliage  	for (int xoff = -radius; xoff < radius + 1; xoff++) {  		for (int yoff = -radius; yoff < radius + 1; yoff++) {  			// Drop random leaves from the edges  			if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  				continue;  			// By default only replace an existing block if its air  			if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  				map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,GenerateTrees,The following statement contains a magic number: for (int i = -1; i < nh / 2; i++) {  	// Should we draw thin (2x2) or thicker (4x4) foliage  	int radius = (i >= (nh / 2) - topLayers) ? 1 : 2;  	// Draw the foliage  	for (int xoff = -radius; xoff < radius + 1; xoff++) {  		for (int yoff = -radius; yoff < radius + 1; yoff++) {  			// Drop random leaves from the edges  			if (rn.NextDouble () > odds && Math.Abs (xoff) == Math.Abs (yoff) && Math.Abs (xoff) == radius)  				continue;  			// By default only replace an existing block if its air  			if (map.GetBlock (nx + xoff' ny + yoff' nz + nh + i) == Block.Air)  				map.SetBlock (nx + xoff' ny + yoff' nz + nh + i' Block.Leaves);  		}  	}  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: switch (template) {  case MapGenTemplate.Archipelago:  	return new MapGeneratorArgs {  		MaxHeight = 8'  		MaxDepth = 20'  		FeatureScale = 3'  		Roughness = .46f'  		MatchWaterCoverage = true'  		WaterCoverage = .85f  	};  case MapGenTemplate.Atoll:  	return new MapGeneratorArgs {  		Theme = MapGenTheme.Desert'  		MaxHeight = 2'  		MaxDepth = 39'  		UseBias = true'  		Bias = .9f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 2'  		DetailScale = 5'  		MarbledHeightmap = true'  		InvertHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .95f  	};  case MapGenTemplate.Bay:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = 1'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		MarbledHeightmap = true'  		DelayBias = true  	};  case MapGenTemplate.Dunes:  	return new MapGeneratorArgs {  		AddTrees = false'  		AddWater = false'  		Theme = MapGenTheme.Desert'  		MaxHeight = 12'  		MaxDepth = 7'  		FeatureScale = 2'  		DetailScale = 3'  		Roughness = .44f'  		MarbledHeightmap = true'  		InvertHeightmap = true  	};  case MapGenTemplate.Hills:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 8'  		MaxDepth = 8'  		FeatureScale = 2'  		TreeSpacingMin = 7'  		TreeSpacingMax = 13  	};  case MapGenTemplate.Ice:  	return new MapGeneratorArgs {  		AddTrees = false'  		Theme = MapGenTheme.Arctic'  		MaxHeight = 2'  		MaxDepth = 2032'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .64f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .3f'  		MaxHeightVariation = 0'  		AddIgloos = true  	};  case MapGenTemplate.Island:  	return new MapGeneratorArgs {  		MaxHeight = 16'  		MaxDepth = 39'  		UseBias = true'  		Bias = .7f'  		MidPoint = 1'  		LoweredCorners = 4'  		FeatureScale = 3'  		DetailScale = 7'  		MarbledHeightmap = true'  		DelayBias = true'  		AddBeaches = true'  		Roughness = 0.45f  	};  case MapGenTemplate.Lake:  	return new MapGeneratorArgs {  		MaxHeight = 14'  		MaxDepth = 20'  		UseBias = true'  		Bias = .65f'  		MidPoint = -1'  		RaisedCorners = 4'  		FeatureScale = 2'  		Roughness = .56f'  		MatchWaterCoverage = true'  		WaterCoverage = .3f  	};  case MapGenTemplate.Mountains:  	return new MapGeneratorArgs {  		AddWater = false'  		MaxHeight = 40'  		MaxDepth = 10'  		FeatureScale = 1'  		DetailScale = 7'  		MarbledHeightmap = true'  		AddSnow = true'  		MatchWaterCoverage = true'  		WaterCoverage = .5f'  		Roughness = .55f'  		CliffThreshold = .9f  	};  case MapGenTemplate.Random:  	return new MapGeneratorArgs ();  case MapGenTemplate.River:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 8'  		FeatureScale = 0'  		DetailScale = 6'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .31f  	};  case MapGenTemplate.Streams:  	return new MapGeneratorArgs {  		MaxHeight = 5'  		MaxDepth = 4'  		FeatureScale = 2'  		DetailScale = 7'  		Roughness = .55f'  		MarbledHeightmap = true'  		MatchWaterCoverage = true'  		WaterCoverage = .25f'  		TreeSpacingMin = 8'  		TreeSpacingMax = 14  	};  case MapGenTemplate.Peninsula:  	return new MapGeneratorArgs {  		MaxHeight = 22'  		MaxDepth = 12'  		UseBias = true'  		Bias = .5f'  		MidPoint = -1'  		RaisedCorners = 3'  		LoweredCorners = 1'  		TreeSpacingMax = 12'  		TreeSpacingMin = 6'  		InvertHeightmap = true'  		WaterCoverage = .5f  	};  case MapGenTemplate.Flat:  	return new MapGeneratorArgs {  		MaxHeight = 0'  		MaxDepth = 0'  		MaxHeightVariation = 0'  		AddWater = false'  		DetailScale = 0'  		FeatureScale = 0'  		AddCliffs = false  	};  default:  	throw new ArgumentOutOfRangeException ("template");  }  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 8'  	MaxDepth = 20'  	FeatureScale = 3'  	Roughness = .46f'  	MatchWaterCoverage = true'  	WaterCoverage = .85f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 8'  	MaxDepth = 20'  	FeatureScale = 3'  	Roughness = .46f'  	MatchWaterCoverage = true'  	WaterCoverage = .85f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 8'  	MaxDepth = 20'  	FeatureScale = 3'  	Roughness = .46f'  	MatchWaterCoverage = true'  	WaterCoverage = .85f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	Theme = MapGenTheme.Desert'  	MaxHeight = 2'  	MaxDepth = 39'  	UseBias = true'  	Bias = .9f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 2'  	DetailScale = 5'  	MarbledHeightmap = true'  	InvertHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .95f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	Theme = MapGenTheme.Desert'  	MaxHeight = 2'  	MaxDepth = 39'  	UseBias = true'  	Bias = .9f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 2'  	DetailScale = 5'  	MarbledHeightmap = true'  	InvertHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .95f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	Theme = MapGenTheme.Desert'  	MaxHeight = 2'  	MaxDepth = 39'  	UseBias = true'  	Bias = .9f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 2'  	DetailScale = 5'  	MarbledHeightmap = true'  	InvertHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .95f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	Theme = MapGenTheme.Desert'  	MaxHeight = 2'  	MaxDepth = 39'  	UseBias = true'  	Bias = .9f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 2'  	DetailScale = 5'  	MarbledHeightmap = true'  	InvertHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .95f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	Theme = MapGenTheme.Desert'  	MaxHeight = 2'  	MaxDepth = 39'  	UseBias = true'  	Bias = .9f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 2'  	DetailScale = 5'  	MarbledHeightmap = true'  	InvertHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .95f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = 1'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	MarbledHeightmap = true'  	DelayBias = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = 1'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	MarbledHeightmap = true'  	DelayBias = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = 1'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	MarbledHeightmap = true'  	DelayBias = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = 1'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	MarbledHeightmap = true'  	DelayBias = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = 1'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	MarbledHeightmap = true'  	DelayBias = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	AddWater = false'  	Theme = MapGenTheme.Desert'  	MaxHeight = 12'  	MaxDepth = 7'  	FeatureScale = 2'  	DetailScale = 3'  	Roughness = .44f'  	MarbledHeightmap = true'  	InvertHeightmap = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	AddWater = false'  	Theme = MapGenTheme.Desert'  	MaxHeight = 12'  	MaxDepth = 7'  	FeatureScale = 2'  	DetailScale = 3'  	Roughness = .44f'  	MarbledHeightmap = true'  	InvertHeightmap = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	AddWater = false'  	Theme = MapGenTheme.Desert'  	MaxHeight = 12'  	MaxDepth = 7'  	FeatureScale = 2'  	DetailScale = 3'  	Roughness = .44f'  	MarbledHeightmap = true'  	InvertHeightmap = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	AddWater = false'  	Theme = MapGenTheme.Desert'  	MaxHeight = 12'  	MaxDepth = 7'  	FeatureScale = 2'  	DetailScale = 3'  	Roughness = .44f'  	MarbledHeightmap = true'  	InvertHeightmap = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 8'  	MaxDepth = 8'  	FeatureScale = 2'  	TreeSpacingMin = 7'  	TreeSpacingMax = 13  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 8'  	MaxDepth = 8'  	FeatureScale = 2'  	TreeSpacingMin = 7'  	TreeSpacingMax = 13  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 8'  	MaxDepth = 8'  	FeatureScale = 2'  	TreeSpacingMin = 7'  	TreeSpacingMax = 13  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 8'  	MaxDepth = 8'  	FeatureScale = 2'  	TreeSpacingMin = 7'  	TreeSpacingMax = 13  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 8'  	MaxDepth = 8'  	FeatureScale = 2'  	TreeSpacingMin = 7'  	TreeSpacingMax = 13  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	Theme = MapGenTheme.Arctic'  	MaxHeight = 2'  	MaxDepth = 2032'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .64f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .3f'  	MaxHeightVariation = 0'  	AddIgloos = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	Theme = MapGenTheme.Arctic'  	MaxHeight = 2'  	MaxDepth = 2032'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .64f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .3f'  	MaxHeightVariation = 0'  	AddIgloos = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	Theme = MapGenTheme.Arctic'  	MaxHeight = 2'  	MaxDepth = 2032'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .64f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .3f'  	MaxHeightVariation = 0'  	AddIgloos = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddTrees = false'  	Theme = MapGenTheme.Arctic'  	MaxHeight = 2'  	MaxDepth = 2032'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .64f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .3f'  	MaxHeightVariation = 0'  	AddIgloos = true  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 16'  	MaxDepth = 39'  	UseBias = true'  	Bias = .7f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 3'  	DetailScale = 7'  	MarbledHeightmap = true'  	DelayBias = true'  	AddBeaches = true'  	Roughness = 0.45f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 16'  	MaxDepth = 39'  	UseBias = true'  	Bias = .7f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 3'  	DetailScale = 7'  	MarbledHeightmap = true'  	DelayBias = true'  	AddBeaches = true'  	Roughness = 0.45f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 16'  	MaxDepth = 39'  	UseBias = true'  	Bias = .7f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 3'  	DetailScale = 7'  	MarbledHeightmap = true'  	DelayBias = true'  	AddBeaches = true'  	Roughness = 0.45f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 16'  	MaxDepth = 39'  	UseBias = true'  	Bias = .7f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 3'  	DetailScale = 7'  	MarbledHeightmap = true'  	DelayBias = true'  	AddBeaches = true'  	Roughness = 0.45f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 16'  	MaxDepth = 39'  	UseBias = true'  	Bias = .7f'  	MidPoint = 1'  	LoweredCorners = 4'  	FeatureScale = 3'  	DetailScale = 7'  	MarbledHeightmap = true'  	DelayBias = true'  	AddBeaches = true'  	Roughness = 0.45f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 14'  	MaxDepth = 20'  	UseBias = true'  	Bias = .65f'  	MidPoint = -1'  	RaisedCorners = 4'  	FeatureScale = 2'  	Roughness = .56f'  	MatchWaterCoverage = true'  	WaterCoverage = .3f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 14'  	MaxDepth = 20'  	UseBias = true'  	Bias = .65f'  	MidPoint = -1'  	RaisedCorners = 4'  	FeatureScale = 2'  	Roughness = .56f'  	MatchWaterCoverage = true'  	WaterCoverage = .3f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 14'  	MaxDepth = 20'  	UseBias = true'  	Bias = .65f'  	MidPoint = -1'  	RaisedCorners = 4'  	FeatureScale = 2'  	Roughness = .56f'  	MatchWaterCoverage = true'  	WaterCoverage = .3f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 14'  	MaxDepth = 20'  	UseBias = true'  	Bias = .65f'  	MidPoint = -1'  	RaisedCorners = 4'  	FeatureScale = 2'  	Roughness = .56f'  	MatchWaterCoverage = true'  	WaterCoverage = .3f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 40'  	MaxDepth = 10'  	FeatureScale = 1'  	DetailScale = 7'  	MarbledHeightmap = true'  	AddSnow = true'  	MatchWaterCoverage = true'  	WaterCoverage = .5f'  	Roughness = .55f'  	CliffThreshold = .9f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 40'  	MaxDepth = 10'  	FeatureScale = 1'  	DetailScale = 7'  	MarbledHeightmap = true'  	AddSnow = true'  	MatchWaterCoverage = true'  	WaterCoverage = .5f'  	Roughness = .55f'  	CliffThreshold = .9f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	AddWater = false'  	MaxHeight = 40'  	MaxDepth = 10'  	FeatureScale = 1'  	DetailScale = 7'  	MarbledHeightmap = true'  	AddSnow = true'  	MatchWaterCoverage = true'  	WaterCoverage = .5f'  	Roughness = .55f'  	CliffThreshold = .9f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 8'  	FeatureScale = 0'  	DetailScale = 6'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .31f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 8'  	FeatureScale = 0'  	DetailScale = 6'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .31f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 8'  	FeatureScale = 0'  	DetailScale = 6'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .31f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 5'  	MaxDepth = 4'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .55f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .25f'  	TreeSpacingMin = 8'  	TreeSpacingMax = 14  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 5'  	MaxDepth = 4'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .55f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .25f'  	TreeSpacingMin = 8'  	TreeSpacingMax = 14  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 5'  	MaxDepth = 4'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .55f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .25f'  	TreeSpacingMin = 8'  	TreeSpacingMax = 14  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 5'  	MaxDepth = 4'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .55f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .25f'  	TreeSpacingMin = 8'  	TreeSpacingMax = 14  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 5'  	MaxDepth = 4'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .55f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .25f'  	TreeSpacingMin = 8'  	TreeSpacingMax = 14  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 5'  	MaxDepth = 4'  	FeatureScale = 2'  	DetailScale = 7'  	Roughness = .55f'  	MarbledHeightmap = true'  	MatchWaterCoverage = true'  	WaterCoverage = .25f'  	TreeSpacingMin = 8'  	TreeSpacingMax = 14  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = .5f'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	InvertHeightmap = true'  	WaterCoverage = .5f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = .5f'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	InvertHeightmap = true'  	WaterCoverage = .5f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = .5f'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	InvertHeightmap = true'  	WaterCoverage = .5f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = .5f'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	InvertHeightmap = true'  	WaterCoverage = .5f  };  
Magic Number,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,MakeTemplate,The following statement contains a magic number: return new MapGeneratorArgs {  	MaxHeight = 22'  	MaxDepth = 12'  	UseBias = true'  	Bias = .5f'  	MidPoint = -1'  	RaisedCorners = 3'  	LoweredCorners = 1'  	TreeSpacingMax = 12'  	TreeSpacingMin = 6'  	InvertHeightmap = true'  	WaterCoverage = .5f  };  
Magic Number,fCraft,MapGeneratorArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The following statement contains a magic number: if (RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4) {  	throw new ArgumentException ("The sum of raisedCorners and loweredCorners must be between 0 and 4.");  }  
Magic Number,fCraft,MapGeneratorArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The following statement contains a magic number: if (RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4) {  	throw new ArgumentException ("The sum of raisedCorners and loweredCorners must be between 0 and 4.");  }  
Magic Number,fCraft,MapGeneratorArgs,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGeneratorArgs.cs,Validate,The following statement contains a magic number: if (RaisedCorners < 0 || RaisedCorners > 4 || LoweredCorners < 0 || RaisedCorners > 4 || RaisedCorners + LoweredCorners > 4) {  	throw new ArgumentException ("The sum of raisedCorners and loweredCorners must be between 0 and 4.");  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: lock (SyncRoot) {  	if (Map != null)  		return Map;  	if (File.Exists (MapFileName)) {  		try {  			Map = MapUtility.Load (MapFileName);  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "World.LoadMap: Failed to load map ({0}): {1}"' MapFileName' ex);  		}  	}  	// or generate a default one  	if (Map == null) {  		Server.Message ("&WMapfile is missing for world {0}&W. A new map has been created."' ClassyName);  		Logger.Log (LogType.Warning' "World.LoadMap: Map file missing for world {0}. Generating default flatgrass map."' Name);  		Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  	}  	return Map;  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: lock (SyncRoot) {  	if (Map != null)  		return Map;  	if (File.Exists (MapFileName)) {  		try {  			Map = MapUtility.Load (MapFileName);  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "World.LoadMap: Failed to load map ({0}): {1}"' MapFileName' ex);  		}  	}  	// or generate a default one  	if (Map == null) {  		Server.Message ("&WMapfile is missing for world {0}&W. A new map has been created."' ClassyName);  		Logger.Log (LogType.Warning' "World.LoadMap: Map file missing for world {0}. Generating default flatgrass map."' Name);  		Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  	}  	return Map;  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: lock (SyncRoot) {  	if (Map != null)  		return Map;  	if (File.Exists (MapFileName)) {  		try {  			Map = MapUtility.Load (MapFileName);  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "World.LoadMap: Failed to load map ({0}): {1}"' MapFileName' ex);  		}  	}  	// or generate a default one  	if (Map == null) {  		Server.Message ("&WMapfile is missing for world {0}&W. A new map has been created."' ClassyName);  		Logger.Log (LogType.Warning' "World.LoadMap: Map file missing for world {0}. Generating default flatgrass map."' Name);  		Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  	}  	return Map;  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: if (Map == null) {  	Server.Message ("&WMapfile is missing for world {0}&W. A new map has been created."' ClassyName);  	Logger.Log (LogType.Warning' "World.LoadMap: Map file missing for world {0}. Generating default flatgrass map."' Name);  	Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: if (Map == null) {  	Server.Message ("&WMapfile is missing for world {0}&W. A new map has been created."' ClassyName);  	Logger.Log (LogType.Warning' "World.LoadMap: Map file missing for world {0}. Generating default flatgrass map."' Name);  	Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: if (Map == null) {  	Server.Message ("&WMapfile is missing for world {0}&W. A new map has been created."' ClassyName);  	Logger.Log (LogType.Warning' "World.LoadMap: Map file missing for world {0}. Generating default flatgrass map."' Name);  	Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,LoadMap,The following statement contains a magic number: Map = MapGeneratorOld.GenerateFlatgrass (128' 128' 64);  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: if (maxFileSize > 0) {  	while (true) {  		FileInfo[] fis = directory.GetFiles ();  		long size = fis.Sum (fi => fi.Length);  		if (size / 1024 / 1024 > maxFileSize) {  			FileInfo info = backupList [backupList.Count - 1];  			backupList.RemoveAt (backupList.Count - 1);  			try {  				File.Delete (info.FullName);  			} catch (Exception ex) {  				Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex);  				break;  			}  			Logger.Log (LogType.SystemActivity' "Map.SaveBackup: Deleted old backup \"{0}\""' info.Name);  		} else {  			break;  		}  	}  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: if (maxFileSize > 0) {  	while (true) {  		FileInfo[] fis = directory.GetFiles ();  		long size = fis.Sum (fi => fi.Length);  		if (size / 1024 / 1024 > maxFileSize) {  			FileInfo info = backupList [backupList.Count - 1];  			backupList.RemoveAt (backupList.Count - 1);  			try {  				File.Delete (info.FullName);  			} catch (Exception ex) {  				Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex);  				break;  			}  			Logger.Log (LogType.SystemActivity' "Map.SaveBackup: Deleted old backup \"{0}\""' info.Name);  		} else {  			break;  		}  	}  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: while (true) {  	FileInfo[] fis = directory.GetFiles ();  	long size = fis.Sum (fi => fi.Length);  	if (size / 1024 / 1024 > maxFileSize) {  		FileInfo info = backupList [backupList.Count - 1];  		backupList.RemoveAt (backupList.Count - 1);  		try {  			File.Delete (info.FullName);  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex);  			break;  		}  		Logger.Log (LogType.SystemActivity' "Map.SaveBackup: Deleted old backup \"{0}\""' info.Name);  	} else {  		break;  	}  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: while (true) {  	FileInfo[] fis = directory.GetFiles ();  	long size = fis.Sum (fi => fi.Length);  	if (size / 1024 / 1024 > maxFileSize) {  		FileInfo info = backupList [backupList.Count - 1];  		backupList.RemoveAt (backupList.Count - 1);  		try {  			File.Delete (info.FullName);  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex);  			break;  		}  		Logger.Log (LogType.SystemActivity' "Map.SaveBackup: Deleted old backup \"{0}\""' info.Name);  	} else {  		break;  	}  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: if (size / 1024 / 1024 > maxFileSize) {  	FileInfo info = backupList [backupList.Count - 1];  	backupList.RemoveAt (backupList.Count - 1);  	try {  		File.Delete (info.FullName);  	} catch (Exception ex) {  		Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex);  		break;  	}  	Logger.Log (LogType.SystemActivity' "Map.SaveBackup: Deleted old backup \"{0}\""' info.Name);  } else {  	break;  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,DeleteOldBackups,The following statement contains a magic number: if (size / 1024 / 1024 > maxFileSize) {  	FileInfo info = backupList [backupList.Count - 1];  	backupList.RemoveAt (backupList.Count - 1);  	try {  		File.Delete (info.FullName);  	} catch (Exception ex) {  		Logger.Log (LogType.Error' "Map.SaveBackup: Error occurred while trying delete old backup \"{0}\": {1}"' info.Name' ex);  		break;  	}  	Logger.Log (LogType.SystemActivity' "Map.SaveBackup: Deleted old backup \"{0}\""' info.Name);  } else {  	break;  }  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,IsValidName,The following statement contains a magic number: if (name.Length < 2 || name.Length > 16)  	return false;  
Magic Number,fCraft,World,F:\newReposMay17\GlennMR_800craft\fCraft\World\World.cs,IsValidName,The following statement contains a magic number: if (name.Length < 2 || name.Length > 16)  	return false;  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox (Int32.Parse (header [1])' Int32.Parse (header [2])' Int32.Parse (header [3])' Int32.Parse (header [4])' Int32.Parse (header [5])' Int32.Parse (header [6]));  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox (Int32.Parse (header [1])' Int32.Parse (header [2])' Int32.Parse (header [3])' Int32.Parse (header [4])' Int32.Parse (header [5])' Int32.Parse (header [6]));  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox (Int32.Parse (header [1])' Int32.Parse (header [2])' Int32.Parse (header [3])' Int32.Parse (header [4])' Int32.Parse (header [5])' Int32.Parse (header [6]));  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox (Int32.Parse (header [1])' Int32.Parse (header [2])' Int32.Parse (header [3])' Int32.Parse (header [4])' Int32.Parse (header [5])' Int32.Parse (header [6]));  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Bounds = new BoundingBox (Int32.Parse (header [1])' Int32.Parse (header [2])' Int32.Parse (header [3])' Int32.Parse (header [4])' Int32.Parse (header [5])' Int32.Parse (header [6]));  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (buildRank == null) {  	if (world != null) {  		Controller.MinRank = world.BuildSecurity.MinRank;  	} else {  		Controller.ResetMinRank ();  	}  	Logger.Log (LogType.Error' "Zone: Error parsing zone definition: unknown rank \"{0}\". Permission reset to default ({1})."' header [7]' Controller.MinRank.Name);  } else {  	Controller.MinRank = buildRank;  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Logger.Log (LogType.Error' "Zone: Error parsing zone definition: unknown rank \"{0}\". Permission reset to default ({1})."' header [7]' Controller.MinRank.Name);  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (PlayerDB.IsLoaded) {  	// Part 2:  	if (parts [1].Length > 0) {  		foreach (string playerName in parts [1].Split (' ')) {  			if (!Player.IsValidName (playerName)) {  				Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  			if (info == null) {  				Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  				// player name not found in the DB (discarded)  			}  			Controller.Include (info);  		}  	}  	// Part 3: excluded list  	if (parts [2].Length > 0) {  		foreach (string playerName in parts [2].Split (' ')) {  			if (!Player.IsValidName (playerName)) {  				Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" blacklist: {1}"' Name' playerName);  				continue;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  			if (info == null) {  				Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  				// player name not found in the DB (discarded)  			}  			Controller.Exclude (info);  		}  	}  } else {  	rawWhitelist = parts [1];  	rawBlacklist = parts [2];  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (PlayerDB.IsLoaded) {  	// Part 2:  	if (parts [1].Length > 0) {  		foreach (string playerName in parts [1].Split (' ')) {  			if (!Player.IsValidName (playerName)) {  				Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  			if (info == null) {  				Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  				// player name not found in the DB (discarded)  			}  			Controller.Include (info);  		}  	}  	// Part 3: excluded list  	if (parts [2].Length > 0) {  		foreach (string playerName in parts [2].Split (' ')) {  			if (!Player.IsValidName (playerName)) {  				Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" blacklist: {1}"' Name' playerName);  				continue;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  			if (info == null) {  				Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  				// player name not found in the DB (discarded)  			}  			Controller.Exclude (info);  		}  	}  } else {  	rawWhitelist = parts [1];  	rawBlacklist = parts [2];  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (PlayerDB.IsLoaded) {  	// Part 2:  	if (parts [1].Length > 0) {  		foreach (string playerName in parts [1].Split (' ')) {  			if (!Player.IsValidName (playerName)) {  				Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  			if (info == null) {  				Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  				// player name not found in the DB (discarded)  			}  			Controller.Include (info);  		}  	}  	// Part 3: excluded list  	if (parts [2].Length > 0) {  		foreach (string playerName in parts [2].Split (' ')) {  			if (!Player.IsValidName (playerName)) {  				Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" blacklist: {1}"' Name' playerName);  				continue;  			}  			PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  			if (info == null) {  				Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  				continue;  				// player name not found in the DB (discarded)  			}  			Controller.Exclude (info);  		}  	}  } else {  	rawWhitelist = parts [1];  	rawBlacklist = parts [2];  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts [2].Length > 0) {  	foreach (string playerName in parts [2].Split (' ')) {  		if (!Player.IsValidName (playerName)) {  			Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" blacklist: {1}"' Name' playerName);  			continue;  		}  		PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  		if (info == null) {  			Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  			continue;  			// player name not found in the DB (discarded)  		}  		Controller.Exclude (info);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts [2].Length > 0) {  	foreach (string playerName in parts [2].Split (' ')) {  		if (!Player.IsValidName (playerName)) {  			Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" blacklist: {1}"' Name' playerName);  			continue;  		}  		PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  		if (info == null) {  			Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  			continue;  			// player name not found in the DB (discarded)  		}  		Controller.Exclude (info);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: foreach (string playerName in parts [2].Split (' ')) {  	if (!Player.IsValidName (playerName)) {  		Logger.Log (LogType.Warning' "Invalid entry in zone \"{0}\" blacklist: {1}"' Name' playerName);  		continue;  	}  	PlayerInfo info = PlayerDB.FindPlayerInfoExact (playerName);  	if (info == null) {  		Logger.Log (LogType.Warning' "Unrecognized player in zone \"{0}\" whitelist: {1}"' Name' playerName);  		continue;  		// player name not found in the DB (discarded)  	}  	Controller.Exclude (info);  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: rawBlacklist = parts [2];  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 3) {  	string[] xheader = parts [3].Split (' ');  	if (xheader [0] == "-") {  		CreatedBy = null;  		CreatedDate = DateTime.MinValue;  	} else {  		CreatedBy = xheader [0];  		CreatedDate = DateTime.Parse (xheader [1]);  	}  	if (xheader [2] == "-") {  		EditedBy = null;  		EditedDate = DateTime.MinValue;  	} else {  		EditedBy = xheader [2];  		EditedDate = DateTime.Parse (xheader [3]);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 3) {  	string[] xheader = parts [3].Split (' ');  	if (xheader [0] == "-") {  		CreatedBy = null;  		CreatedDate = DateTime.MinValue;  	} else {  		CreatedBy = xheader [0];  		CreatedDate = DateTime.Parse (xheader [1]);  	}  	if (xheader [2] == "-") {  		EditedBy = null;  		EditedDate = DateTime.MinValue;  	} else {  		EditedBy = xheader [2];  		EditedDate = DateTime.Parse (xheader [3]);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 3) {  	string[] xheader = parts [3].Split (' ');  	if (xheader [0] == "-") {  		CreatedBy = null;  		CreatedDate = DateTime.MinValue;  	} else {  		CreatedBy = xheader [0];  		CreatedDate = DateTime.Parse (xheader [1]);  	}  	if (xheader [2] == "-") {  		EditedBy = null;  		EditedDate = DateTime.MinValue;  	} else {  		EditedBy = xheader [2];  		EditedDate = DateTime.Parse (xheader [3]);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 3) {  	string[] xheader = parts [3].Split (' ');  	if (xheader [0] == "-") {  		CreatedBy = null;  		CreatedDate = DateTime.MinValue;  	} else {  		CreatedBy = xheader [0];  		CreatedDate = DateTime.Parse (xheader [1]);  	}  	if (xheader [2] == "-") {  		EditedBy = null;  		EditedDate = DateTime.MinValue;  	} else {  		EditedBy = xheader [2];  		EditedDate = DateTime.Parse (xheader [3]);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 3) {  	string[] xheader = parts [3].Split (' ');  	if (xheader [0] == "-") {  		CreatedBy = null;  		CreatedDate = DateTime.MinValue;  	} else {  		CreatedBy = xheader [0];  		CreatedDate = DateTime.Parse (xheader [1]);  	}  	if (xheader [2] == "-") {  		EditedBy = null;  		EditedDate = DateTime.MinValue;  	} else {  		EditedBy = xheader [2];  		EditedDate = DateTime.Parse (xheader [3]);  	}  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (xheader [2] == "-") {  	EditedBy = null;  	EditedDate = DateTime.MinValue;  } else {  	EditedBy = xheader [2];  	EditedDate = DateTime.Parse (xheader [3]);  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (xheader [2] == "-") {  	EditedBy = null;  	EditedDate = DateTime.MinValue;  } else {  	EditedBy = xheader [2];  	EditedDate = DateTime.Parse (xheader [3]);  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (xheader [2] == "-") {  	EditedBy = null;  	EditedDate = DateTime.MinValue;  } else {  	EditedBy = xheader [2];  	EditedDate = DateTime.Parse (xheader [3]);  }  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: EditedBy = xheader [2];  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: EditedDate = DateTime.Parse (xheader [3]);  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 4 && !string.IsNullOrWhiteSpace (parts [4]))  	Message = parts [4].Replace ('\\'' ''');  else  	Message = null;  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 4 && !string.IsNullOrWhiteSpace (parts [4]))  	Message = parts [4].Replace ('\\'' ''');  else  	Message = null;  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: if (parts.Length > 4 && !string.IsNullOrWhiteSpace (parts [4]))  	Message = parts [4].Replace ('\\'' ''');  else  	Message = null;  
Magic Number,fCraft,Zone,F:\newReposMay17\GlennMR_800craft\fCraft\World\Zone.cs,Zone,The following statement contains a magic number: Message = parts [4].Replace ('\\'' ''');  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: if (fields.Length != 8)  	throw new ArgumentException ("Unexpected field count"' "fields");  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields [2].ToDateTime (ref info.BanDate);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: if (fields [3].Length > 0) {  	info.BanReason = PlayerInfo.Unescape (fields [3]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: if (fields [3].Length > 0) {  	info.BanReason = PlayerInfo.Unescape (fields [3]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: info.BanReason = PlayerInfo.Unescape (fields [3]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: if (fields [4].Length > 0) {  	info.PlayerName = PlayerInfo.Unescape (fields [4]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: if (fields [4].Length > 0) {  	info.PlayerName = PlayerInfo.Unescape (fields [4]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: info.PlayerName = PlayerInfo.Unescape (fields [4]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: Int32.TryParse (fields [5]' out info.Attempts);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: info.LastAttemptName = PlayerInfo.Unescape (fields [6]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat2,The following statement contains a magic number: fields [7].ToDateTime (ref info.LastAttemptDate);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: if (fields.Length != 8)  	throw new ArgumentException ("Unexpected field count"' "fields");  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields [2].ToDateTimeLegacy (ref info.BanDate);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: if (fields [3].Length > 0) {  	info.BanReason = PlayerInfo.Unescape (fields [3]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: if (fields [3].Length > 0) {  	info.BanReason = PlayerInfo.Unescape (fields [3]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: info.BanReason = PlayerInfo.Unescape (fields [3]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: if (fields [4].Length > 0) {  	info.PlayerName = PlayerInfo.Unescape (fields [4]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: if (fields [4].Length > 0) {  	info.PlayerName = PlayerInfo.Unescape (fields [4]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: info.PlayerName = PlayerInfo.Unescape (fields [4]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: Int32.TryParse (fields [5]' out info.Attempts);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: info.LastAttemptName = PlayerInfo.Unescape (fields [6]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat1,The following statement contains a magic number: fields [7].ToDateTimeLegacy (ref info.LastAttemptDate);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: if (fields.Length != 8)  	throw new ArgumentException ("Unexpected field count"' "fields");  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [2]' out info.BanDate);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.BanReason = PlayerInfo.UnescapeOldFormat (fields [3]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: if (fields [4].Length > 1) {  	info.PlayerName = PlayerInfo.UnescapeOldFormat (fields [4]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: if (fields [4].Length > 1) {  	info.PlayerName = PlayerInfo.UnescapeOldFormat (fields [4]);  }  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.PlayerName = PlayerInfo.UnescapeOldFormat (fields [4]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.Attempts = Int32.Parse (fields [5]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: info.LastAttemptName = PlayerInfo.UnescapeOldFormat (fields [6]);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,LoadFormat0,The following statement contains a magic number: DateTimeUtil.TryParseLocalDate (fields [7]' out info.LastAttemptDate);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields [2] = BanDate.ToUnixTimeString ();  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields [3] = PlayerInfo.Escape (BanReason);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields [4] = PlayerInfo.Escape (PlayerName);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields [5] = Attempts.ToString ();  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields [6] = PlayerInfo.Escape (LastAttemptName);  
Magic Number,fCraft,IPBanInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IPBanInfo.cs,Serialize,The following statement contains a magic number: fields [7] = LastAttemptDate.ToUnixTimeString ();  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,MoveNext,The following statement contains a magic number: outputStart = 2;  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: switch (ch) {  case (byte)' ':  	canWrap = true;  	expectingColor = false;  	if (spaceCount == 0) {  		// first space after a word' set wrapping point  		wrapInputIndex = inputIndex;  		wrapOutputIndex = outputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  	}  	spaceCount++;  	break;  case (byte)'&':  	// skip double ampersands  	expectingColor = !expectingColor;  	break;  case (byte)'-':  	if (spaceCount > 0) {  		// set wrapping point' if at beginning of a word  		wrapInputIndex = inputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  	}  	expectingColor = false;  	if (!Append (ch)) {  		if (canWrap) {  			// word doesn't fit in line' backtrack to wrapping point  			inputIndex = wrapInputIndex;  			outputIndex = wrapOutputIndex;  			color = wrapColor;  			endsWithSymbol = wrapEndsWithSymbol;  		}  		// else force wrap (word is too long)' don't backtrack  		return true;  	}  	spaceCount = 0;  	if (wordLength > 2) {  		// allow wrapping after hyphen' if at least 2 word characters precede this hyphen  		wrapInputIndex = inputIndex + 1;  		wrapOutputIndex = outputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  		wordLength = 0;  		canWrap = true;  	}  	break;  case (byte)'\n':  	// break the line early  	inputIndex++;  	return true;  default:  	if (expectingColor) {  		expectingColor = false;  		if (ch == 'N' || ch == 'n') {  			// newline  			inputIndex++;  			return true;  		} else if (ProcessColor (ref ch)) {  			// valid colorcode  			color = ch;  			hadColor = true;  		}  		// else colorcode is invalid' skip  	} else {  		if (spaceCount > 0) {  			// set wrapping point' if at beginning of a word  			wrapInputIndex = inputIndex;  			wrapColor = color;  			wrapEndsWithSymbol = endsWithSymbol;  		}  		if (ch == 0 || ch > 127) {  			// replace unprintable chars with '?'  			ch = (byte)'?';  		}  		if (!Append (ch)) {  			if (canWrap) {  				inputIndex = wrapInputIndex;  				outputIndex = wrapOutputIndex;  				color = wrapColor;  				endsWithSymbol = wrapEndsWithSymbol;  			}  			// else word is too long' dont backtrack to wrap  			return true;  		}  	}  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: switch (ch) {  case (byte)' ':  	canWrap = true;  	expectingColor = false;  	if (spaceCount == 0) {  		// first space after a word' set wrapping point  		wrapInputIndex = inputIndex;  		wrapOutputIndex = outputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  	}  	spaceCount++;  	break;  case (byte)'&':  	// skip double ampersands  	expectingColor = !expectingColor;  	break;  case (byte)'-':  	if (spaceCount > 0) {  		// set wrapping point' if at beginning of a word  		wrapInputIndex = inputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  	}  	expectingColor = false;  	if (!Append (ch)) {  		if (canWrap) {  			// word doesn't fit in line' backtrack to wrapping point  			inputIndex = wrapInputIndex;  			outputIndex = wrapOutputIndex;  			color = wrapColor;  			endsWithSymbol = wrapEndsWithSymbol;  		}  		// else force wrap (word is too long)' don't backtrack  		return true;  	}  	spaceCount = 0;  	if (wordLength > 2) {  		// allow wrapping after hyphen' if at least 2 word characters precede this hyphen  		wrapInputIndex = inputIndex + 1;  		wrapOutputIndex = outputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  		wordLength = 0;  		canWrap = true;  	}  	break;  case (byte)'\n':  	// break the line early  	inputIndex++;  	return true;  default:  	if (expectingColor) {  		expectingColor = false;  		if (ch == 'N' || ch == 'n') {  			// newline  			inputIndex++;  			return true;  		} else if (ProcessColor (ref ch)) {  			// valid colorcode  			color = ch;  			hadColor = true;  		}  		// else colorcode is invalid' skip  	} else {  		if (spaceCount > 0) {  			// set wrapping point' if at beginning of a word  			wrapInputIndex = inputIndex;  			wrapColor = color;  			wrapEndsWithSymbol = endsWithSymbol;  		}  		if (ch == 0 || ch > 127) {  			// replace unprintable chars with '?'  			ch = (byte)'?';  		}  		if (!Append (ch)) {  			if (canWrap) {  				inputIndex = wrapInputIndex;  				outputIndex = wrapOutputIndex;  				color = wrapColor;  				endsWithSymbol = wrapEndsWithSymbol;  			}  			// else word is too long' dont backtrack to wrap  			return true;  		}  	}  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: if (wordLength > 2) {  	// allow wrapping after hyphen' if at least 2 word characters precede this hyphen  	wrapInputIndex = inputIndex + 1;  	wrapOutputIndex = outputIndex;  	wrapColor = color;  	wrapEndsWithSymbol = endsWithSymbol;  	wordLength = 0;  	canWrap = true;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: if (expectingColor) {  	expectingColor = false;  	if (ch == 'N' || ch == 'n') {  		// newline  		inputIndex++;  		return true;  	} else if (ProcessColor (ref ch)) {  		// valid colorcode  		color = ch;  		hadColor = true;  	}  	// else colorcode is invalid' skip  } else {  	if (spaceCount > 0) {  		// set wrapping point' if at beginning of a word  		wrapInputIndex = inputIndex;  		wrapColor = color;  		wrapEndsWithSymbol = endsWithSymbol;  	}  	if (ch == 0 || ch > 127) {  		// replace unprintable chars with '?'  		ch = (byte)'?';  	}  	if (!Append (ch)) {  		if (canWrap) {  			inputIndex = wrapInputIndex;  			outputIndex = wrapOutputIndex;  			color = wrapColor;  			endsWithSymbol = wrapEndsWithSymbol;  		}  		// else word is too long' dont backtrack to wrap  		return true;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessChar,The following statement contains a magic number: if (ch == 0 || ch > 127) {  	// replace unprintable chars with '?'  	ch = (byte)'?';  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,PrepareOutput,The following statement contains a magic number: if (endsWithSymbol) {  	output [65] = (byte)'.';  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,PrepareOutput,The following statement contains a magic number: output [65] = (byte)'.';  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (prependColor)  	bytesToInsert += 2;  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: bytesToInsert += 2;  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: if (ch < ' ') {  	switch (ch) {  	case 7:  	case 25:  		bytesToInsert += 3;  		// 2 spaces pad AND 1-char terminator  		break;  	case 9:  	case 22:  	case 24:  		bytesToInsert += 2;  		// 2 spaces pad OR 1-char terminator  		break;  	case 12:  	case 18:  	case 19:  		bytesToInsert += 2;  		// 2 spaces pad OR 2-char terminator  		break;  	default:  		bytesToInsert += 1;  		// 1-char terminator  		break;  	}  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 7:  case 25:  	bytesToInsert += 3;  	// 2 spaces pad AND 1-char terminator  	break;  case 9:  case 22:  case 24:  	bytesToInsert += 2;  	// 2 spaces pad OR 1-char terminator  	break;  case 12:  case 18:  case 19:  	bytesToInsert += 2;  	// 2 spaces pad OR 2-char terminator  	break;  default:  	bytesToInsert += 1;  	// 1-char terminator  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: bytesToInsert += 3;  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: bytesToInsert += 2;  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: bytesToInsert += 2;  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,Append,The following statement contains a magic number: switch (ch) {  case 9:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 12:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'`';  	endsWithSymbol = false;  	break;  case 18:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'.';  	endsWithSymbol = false;  	break;  case 19:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)'!';  	endsWithSymbol = false;  	break;  case 22:  	output [outputIndex++] = (byte)'.';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 24:  	output [outputIndex++] = (byte)'^';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = false;  	break;  case 7:  case 25:  	output [outputIndex++] = (byte)' ';  	output [outputIndex++] = (byte)' ';  	endsWithSymbol = true;  	break;  default:  	endsWithSymbol = (ch < ' ');  	break;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The following statement contains a magic number: if (ch >= (byte)'A' && ch <= (byte)'Z') {  	ch += 32;  }  
Magic Number,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The following statement contains a magic number: ch += 32;  
Magic Number,fCraft,IntKeyAttribute,F:\newReposMay17\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,Validate,The following statement contains a magic number: if (PowerOfTwo) {  	bool found = false;  	for (int i = 0; i < 31; i++) {  		if (parsedValue == (1 << i)) {  			found = true;  			break;  		}  	}  	if (!found && parsedValue != 0) {  		throw new FormatException (String.Format ("Value ({0}) is not a power of two."' parsedValue));  	}  }  
Magic Number,fCraft,IntKeyAttribute,F:\newReposMay17\GlennMR_800craft\fCraft\System\ConfigKey.Metadata.cs,Validate,The following statement contains a magic number: for (int i = 0; i < 31; i++) {  	if (parsedValue == (1 << i)) {  		found = true;  		break;  	}  }  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,GetHashCode,The following statement contains a magic number: return X + Z * 1625 + Y * 2642245;  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,GetHashCode,The following statement contains a magic number: return X + Z * 1625 + Y * 2642245;  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position (X * 32 + 16' Y * 32 + 16' Z * 32 + 16);  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position (X * 32 + 16' Y * 32 + 16' Z * 32 + 16);  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position (X * 32 + 16' Y * 32 + 16' Z * 32 + 16);  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position (X * 32 + 16' Y * 32 + 16' Z * 32 + 16);  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position (X * 32 + 16' Y * 32 + 16' Z * 32 + 16);  
Magic Number,fCraft,Vector3I,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Vector3I.cs,ToPlayerCoords,The following statement contains a magic number: return new Position (X * 32 + 16' Y * 32 + 16' Z * 32 + 16);  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,EnsureCapacity,The following statement contains a magic number: if (cacheStore.Length < min) {  	int num = cacheStore.Length;  	while (num < min) {  		if (num <= CacheLinearResizeThreshold) {  			num *= 2;  		} else {  			num += CacheLinearResizeThreshold;  		}  	}  	CacheCapacity = num;  }  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,EnsureCapacity,The following statement contains a magic number: while (num < min) {  	if (num <= CacheLinearResizeThreshold) {  		num *= 2;  	} else {  		num += CacheLinearResizeThreshold;  	}  }  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,EnsureCapacity,The following statement contains a magic number: if (num <= CacheLinearResizeThreshold) {  	num *= 2;  } else {  	num += CacheLinearResizeThreshold;  }  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,EnsureCapacity,The following statement contains a magic number: num *= 2;  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LimitCapacity,The following statement contains a magic number: if (cacheStore.Length > max) {  	int newCapacity = max;  	if (newCapacity < MinCacheSize) {  		// minimum capacity  		newCapacity = MinCacheSize;  	} else if (newCapacity < CacheLinearResizeThreshold) {  		// exponential resizing (x2 each time)  		newCapacity = 1 << (int)(1 + Math.Floor (Math.Log (newCapacity' 2)));  	} else {  		// linear resizing (in 1 MB increments)  		newCapacity = (newCapacity / CacheLinearResizeThreshold + 1) * CacheLinearResizeThreshold;  	}  	CacheCapacity = newCapacity;  	if (max < CacheSize) {  		Array.Copy (cacheStore' CacheSize - max' cacheStore' 0' max);  		LastFlushedIndex -= (CacheSize - max);  		CacheSize = max;  	}  }  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LimitCapacity,The following statement contains a magic number: if (newCapacity < MinCacheSize) {  	// minimum capacity  	newCapacity = MinCacheSize;  } else if (newCapacity < CacheLinearResizeThreshold) {  	// exponential resizing (x2 each time)  	newCapacity = 1 << (int)(1 + Math.Floor (Math.Log (newCapacity' 2)));  } else {  	// linear resizing (in 1 MB increments)  	newCapacity = (newCapacity / CacheLinearResizeThreshold + 1) * CacheLinearResizeThreshold;  }  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LimitCapacity,The following statement contains a magic number: if (newCapacity < CacheLinearResizeThreshold) {  	// exponential resizing (x2 each time)  	newCapacity = 1 << (int)(1 + Math.Floor (Math.Log (newCapacity' 2)));  } else {  	// linear resizing (in 1 MB increments)  	newCapacity = (newCapacity / CacheLinearResizeThreshold + 1) * CacheLinearResizeThreshold;  }  
Magic Number,fCraft,BlockDB,F:\newReposMay17\GlennMR_800craft\fCraft\World\BlockDB.cs,LimitCapacity,The following statement contains a magic number: newCapacity = 1 << (int)(1 + Math.Floor (Math.Log (newCapacity' 2)));  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,IsLAN,The following statement contains a magic number: return (bytes [0] == 192 && bytes [1] == 168) || (bytes [0] == 10);  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,IsLAN,The following statement contains a magic number: return (bytes [0] == 192 && bytes [1] == 168) || (bytes [0] == 10);  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,IsLAN,The following statement contains a magic number: return (bytes [0] == 192 && bytes [1] == 168) || (bytes [0] == 10);  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,RangeMin,The following statement contains a magic number: if (range > 32)  	throw new ArgumentOutOfRangeException ("range");  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,RangeMax,The following statement contains a magic number: if (range > 32)  	throw new ArgumentOutOfRangeException ("range");  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,NetMask,The following statement contains a magic number: if (range > 32)  	throw new ArgumentOutOfRangeException ("range");  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,NetMask,The following statement contains a magic number: if (range == 0) {  	return 0;  } else {  	return 0xffffffff << (32 - range);  }  
Magic Number,fCraft,IPAddressUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,NetMask,The following statement contains a magic number: return 0xffffffff << (32 - range);  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalSeconds < 60) {  	return String.Format ("{0}s"' span.Seconds);  } else if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalSeconds < 60) {  	return String.Format ("{0}s"' span.Seconds);  } else if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalSeconds < 60) {  	return String.Format ("{0}s"' span.Seconds);  } else if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalSeconds < 60) {  	return String.Format ("{0}s"' span.Seconds);  } else if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalSeconds < 60) {  	return String.Format ("{0}s"' span.Seconds);  } else if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalSeconds < 60) {  	return String.Format ("{0}s"' span.Seconds);  } else if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalMinutes < 60) {  	return String.Format ("{0}m{1}s"' span.Minutes' span.Seconds);  } else if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalHours < 48) {  	return String.Format ("{0}h{1}m"' (int)Math.Floor (span.TotalHours)' span.Minutes);  } else if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: if (span.TotalDays < 15) {  	return String.Format ("{0}d{1}h"' span.Days' span.Hours);  } else {  	return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ToMiniString,The following statement contains a magic number: return String.Format ("{0:0}w{1:0}d"' Math.Floor (span.TotalDays / 7)' Math.Floor (span.TotalDays) % 7);  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	if (expectingDigit) {  		if (text [i] < '0' || text [i] > '9') {  			throw new FormatException ();  		}  		expectingDigit = false;  	} else {  		if (text [i] >= '0' && text [i] <= '9') {  			continue;  		} else {  			string numberString = text.Substring (digitOffset' i - digitOffset);  			digitOffset = i + 1;  			int number = Int32.Parse (numberString);  			switch (Char.ToLower (text [i])) {  			case 's':  				result += TimeSpan.FromSeconds (number);  				break;  			case 'm':  				result += TimeSpan.FromMinutes (number);  				break;  			case 'h':  				result += TimeSpan.FromHours (number);  				break;  			case 'd':  				result += TimeSpan.FromDays (number);  				break;  			case 'w':  				result += TimeSpan.FromDays (number * 7);  				break;  			default:  				throw new FormatException ();  			}  		}  	}  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,The following statement contains a magic number: if (expectingDigit) {  	if (text [i] < '0' || text [i] > '9') {  		throw new FormatException ();  	}  	expectingDigit = false;  } else {  	if (text [i] >= '0' && text [i] <= '9') {  		continue;  	} else {  		string numberString = text.Substring (digitOffset' i - digitOffset);  		digitOffset = i + 1;  		int number = Int32.Parse (numberString);  		switch (Char.ToLower (text [i])) {  		case 's':  			result += TimeSpan.FromSeconds (number);  			break;  		case 'm':  			result += TimeSpan.FromMinutes (number);  			break;  		case 'h':  			result += TimeSpan.FromHours (number);  			break;  		case 'd':  			result += TimeSpan.FromDays (number);  			break;  		case 'w':  			result += TimeSpan.FromDays (number * 7);  			break;  		default:  			throw new FormatException ();  		}  	}  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,The following statement contains a magic number: if (text [i] >= '0' && text [i] <= '9') {  	continue;  } else {  	string numberString = text.Substring (digitOffset' i - digitOffset);  	digitOffset = i + 1;  	int number = Int32.Parse (numberString);  	switch (Char.ToLower (text [i])) {  	case 's':  		result += TimeSpan.FromSeconds (number);  		break;  	case 'm':  		result += TimeSpan.FromMinutes (number);  		break;  	case 'h':  		result += TimeSpan.FromHours (number);  		break;  	case 'd':  		result += TimeSpan.FromDays (number);  		break;  	case 'w':  		result += TimeSpan.FromDays (number * 7);  		break;  	default:  		throw new FormatException ();  	}  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,The following statement contains a magic number: switch (Char.ToLower (text [i])) {  case 's':  	result += TimeSpan.FromSeconds (number);  	break;  case 'm':  	result += TimeSpan.FromMinutes (number);  	break;  case 'h':  	result += TimeSpan.FromHours (number);  	break;  case 'd':  	result += TimeSpan.FromDays (number);  	break;  case 'w':  	result += TimeSpan.FromDays (number * 7);  	break;  default:  	throw new FormatException ();  }  
Magic Number,fCraft,DateTimeUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,ParseMiniTimespan,The following statement contains a magic number: result += TimeSpan.FromDays (number * 7);  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100000000 || number < 0) {  	// Use system ToString.  	builder.Append (number);  	return builder;  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000000) {  	// 8.  	copy = number % 100000000;  	digit = copy / 10000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000000) {  	// 8.  	copy = number % 100000000;  	digit = copy / 10000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000000) {  	// 8.  	copy = number % 100000000;  	digit = copy / 10000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000000) {  	// 8.  	copy = number % 100000000;  	digit = copy / 10000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 100000000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 10000000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000000) {  	// 7.  	copy = number % 10000000;  	digit = copy / 1000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000000) {  	// 7.  	copy = number % 10000000;  	digit = copy / 1000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000000) {  	// 7.  	copy = number % 10000000;  	digit = copy / 1000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000000) {  	// 7.  	copy = number % 10000000;  	digit = copy / 1000000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 10000000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 1000000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100000) {  	// 6.  	copy = number % 1000000;  	digit = copy / 100000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100000) {  	// 6.  	copy = number % 1000000;  	digit = copy / 100000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100000) {  	// 6.  	copy = number % 1000000;  	digit = copy / 100000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100000) {  	// 6.  	copy = number % 1000000;  	digit = copy / 100000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 1000000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 100000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000) {  	// 5.  	copy = number % 100000;  	digit = copy / 10000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000) {  	// 5.  	copy = number % 100000;  	digit = copy / 10000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000) {  	// 5.  	copy = number % 100000;  	digit = copy / 10000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10000) {  	// 5.  	copy = number % 100000;  	digit = copy / 10000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 100000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 10000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000) {  	// 4.  	copy = number % 10000;  	digit = copy / 1000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000) {  	// 4.  	copy = number % 10000;  	digit = copy / 1000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000) {  	// 4.  	copy = number % 10000;  	digit = copy / 1000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 1000) {  	// 4.  	copy = number % 10000;  	digit = copy / 1000;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 10000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 1000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100) {  	// 3.  	copy = number % 1000;  	digit = copy / 100;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100) {  	// 3.  	copy = number % 1000;  	digit = copy / 100;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100) {  	// 3.  	copy = number % 1000;  	digit = copy / 100;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 100) {  	// 3.  	copy = number % 1000;  	digit = copy / 100;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 1000;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 100;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10) {  	// 2.  	copy = number % 100;  	digit = copy / 10;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10) {  	// 2.  	copy = number % 100;  	digit = copy / 10;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10) {  	// 2.  	copy = number % 100;  	digit = copy / 10;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 10) {  	// 2.  	copy = number % 100;  	digit = copy / 10;  	builder.Append ((char)(digit + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 100;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: digit = copy / 10;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(digit + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 0) {  	// 1.  	copy = number % 10;  	builder.Append ((char)(copy + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: if (number >= 0) {  	// 1.  	copy = number % 10;  	builder.Append ((char)(copy + 48));  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: copy = number % 10;  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Digits,The following statement contains a magic number: builder.Append ((char)(copy + 48));  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: fixed (char* characters = stringToConvert) {  	for (int i = 0; i < length; ++i) {  		value = 10 * value + (characters [i] - 48);  	}  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: fixed (char* characters = stringToConvert) {  	for (int i = 0; i < length; ++i) {  		value = 10 * value + (characters [i] - 48);  	}  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: for (int i = 0; i < length; ++i) {  	value = 10 * value + (characters [i] - 48);  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: for (int i = 0; i < length; ++i) {  	value = 10 * value + (characters [i] - 48);  }  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: value = 10 * value + (characters [i] - 48);  
Magic Number,fCraft,FormatUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,Parse,The following statement contains a magic number: value = 10 * value + (characters [i] - 48);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: fixed (byte* ptr = array) {  	Int64* dest = (Int64*)ptr;  	int length = array.Length;  	while (length >= 8) {  		*dest = fillValue;  		dest++;  		length -= 8;  	}  	byte* bDest = (byte*)dest;  	for (byte i = 0; i < length; i++) {  		*bDest = value;  		bDest++;  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: fixed (byte* ptr = array) {  	Int64* dest = (Int64*)ptr;  	int length = array.Length;  	while (length >= 8) {  		*dest = fillValue;  		dest++;  		length -= 8;  	}  	byte* bDest = (byte*)dest;  	for (byte i = 0; i < length; i++) {  		*bDest = value;  		bDest++;  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: while (length >= 8) {  	*dest = fillValue;  	dest++;  	length -= 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: while (length >= 8) {  	*dest = fillValue;  	dest++;  	length -= 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: length -= 8;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: fixed (byte* ptr = &array [startIndex]) {  	Int64* dest = (Int64*)ptr;  	while (length >= 8) {  		*dest = fillValue;  		dest++;  		length -= 8;  	}  	byte* bDest = (byte*)dest;  	for (byte i = 0; i < length; i++) {  		*bDest = value;  		bDest++;  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: fixed (byte* ptr = &array [startIndex]) {  	Int64* dest = (Int64*)ptr;  	while (length >= 8) {  		*dest = fillValue;  		dest++;  		length -= 8;  	}  	byte* bDest = (byte*)dest;  	for (byte i = 0; i < length; i++) {  		*bDest = value;  		bDest++;  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: while (length >= 8) {  	*dest = fillValue;  	dest++;  	length -= 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: while (length >= 8) {  	*dest = fillValue;  	dest++;  	length -= 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemSet,The following statement contains a magic number: length -= 8;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len >= 0x10) {  	do {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		*((int*)(dest + 8)) = *((int*)(src + 8));  		*((int*)(dest + 12)) = *((int*)(src + 12));  		dest += 0x10;  		src += 0x10;  	} while ((len -= 0x10) >= 0x10);  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len >= 0x10) {  	do {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		*((int*)(dest + 8)) = *((int*)(src + 8));  		*((int*)(dest + 12)) = *((int*)(src + 12));  		dest += 0x10;  		src += 0x10;  	} while ((len -= 0x10) >= 0x10);  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len >= 0x10) {  	do {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		*((int*)(dest + 8)) = *((int*)(src + 8));  		*((int*)(dest + 12)) = *((int*)(src + 12));  		dest += 0x10;  		src += 0x10;  	} while ((len -= 0x10) >= 0x10);  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len >= 0x10) {  	do {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		*((int*)(dest + 8)) = *((int*)(src + 8));  		*((int*)(dest + 12)) = *((int*)(src + 12));  		dest += 0x10;  		src += 0x10;  	} while ((len -= 0x10) >= 0x10);  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len >= 0x10) {  	do {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		*((int*)(dest + 8)) = *((int*)(src + 8));  		*((int*)(dest + 12)) = *((int*)(src + 12));  		dest += 0x10;  		src += 0x10;  	} while ((len -= 0x10) >= 0x10);  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len >= 0x10) {  	do {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		*((int*)(dest + 8)) = *((int*)(src + 8));  		*((int*)(dest + 12)) = *((int*)(src + 12));  		dest += 0x10;  		src += 0x10;  	} while ((len -= 0x10) >= 0x10);  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: do {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	*((int*)(dest + 8)) = *((int*)(src + 8));  	*((int*)(dest + 12)) = *((int*)(src + 12));  	dest += 0x10;  	src += 0x10;  } while ((len -= 0x10) >= 0x10);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: do {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	*((int*)(dest + 8)) = *((int*)(src + 8));  	*((int*)(dest + 12)) = *((int*)(src + 12));  	dest += 0x10;  	src += 0x10;  } while ((len -= 0x10) >= 0x10);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: do {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	*((int*)(dest + 8)) = *((int*)(src + 8));  	*((int*)(dest + 12)) = *((int*)(src + 12));  	dest += 0x10;  	src += 0x10;  } while ((len -= 0x10) >= 0x10);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: do {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	*((int*)(dest + 8)) = *((int*)(src + 8));  	*((int*)(dest + 12)) = *((int*)(src + 12));  	dest += 0x10;  	src += 0x10;  } while ((len -= 0x10) >= 0x10);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: do {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	*((int*)(dest + 8)) = *((int*)(src + 8));  	*((int*)(dest + 12)) = *((int*)(src + 12));  	dest += 0x10;  	src += 0x10;  } while ((len -= 0x10) >= 0x10);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: do {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	*((int*)(dest + 8)) = *((int*)(src + 8));  	*((int*)(dest + 12)) = *((int*)(src + 12));  	dest += 0x10;  	src += 0x10;  } while ((len -= 0x10) >= 0x10);  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 4)) = *((int*)(src + 4));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 4)) = *((int*)(src + 4));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 8)) = *((int*)(src + 8));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 8)) = *((int*)(src + 8));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 12)) = *((int*)(src + 12));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 12)) = *((int*)(src + 12));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if (len > 0) {  	if ((len & 8) != 0) {  		*((int*)dest) = *((int*)src);  		*((int*)(dest + 4)) = *((int*)(src + 4));  		dest += 8;  		src += 8;  	}  	if ((len & 4) != 0) {  		*((int*)dest) = *((int*)src);  		dest += 4;  		src += 4;  	}  	if ((len & 2) != 0) {  		*((short*)dest) = *((short*)src);  		dest += 2;  		src += 2;  	}  	if ((len & 1) != 0) {  		dest++;  		src++;  		dest [0] = src [0];  	}  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 8) != 0) {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	dest += 8;  	src += 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 8) != 0) {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	dest += 8;  	src += 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 8) != 0) {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	dest += 8;  	src += 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 8) != 0) {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	dest += 8;  	src += 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 8) != 0) {  	*((int*)dest) = *((int*)src);  	*((int*)(dest + 4)) = *((int*)(src + 4));  	dest += 8;  	src += 8;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 4)) = *((int*)(src + 4));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: *((int*)(dest + 4)) = *((int*)(src + 4));  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: dest += 8;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: src += 8;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 4) != 0) {  	*((int*)dest) = *((int*)src);  	dest += 4;  	src += 4;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 4) != 0) {  	*((int*)dest) = *((int*)src);  	dest += 4;  	src += 4;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 4) != 0) {  	*((int*)dest) = *((int*)src);  	dest += 4;  	src += 4;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: dest += 4;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: src += 4;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 2) != 0) {  	*((short*)dest) = *((short*)src);  	dest += 2;  	src += 2;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 2) != 0) {  	*((short*)dest) = *((short*)src);  	dest += 2;  	src += 2;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: if ((len & 2) != 0) {  	*((short*)dest) = *((short*)src);  	dest += 2;  	src += 2;  }  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: dest += 2;  
Magic Number,fCraft,BufferUtil,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ExtensionMethods.cs,MemCpy,The following statement contains a magic number: src += 2;  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: permutation = new int[256];  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: p = new int[permutation.Length * 2];  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,PerlinNoise3D,The following statement contains a magic number: Octaves = 2;  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Compute,The following statement contains a magic number: for (int i = 0; i < Octaves; i++) {  	noise += Noise (x * freq' y * freq' z * freq) * amp;  	freq *= 2;  	// octave is the double of the previous frequency  	amp *= Persistence;  }  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Compute,The following statement contains a magic number: freq *= 2;  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Fade,The following statement contains a magic number: return (t * t * t * (t * (t * 6 - 15) + 10));  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Fade,The following statement contains a magic number: return (t * t * t * (t * (t * 6 - 15) + 10));  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Fade,The following statement contains a magic number: return (t * t * t * (t * (t * 6 - 15) + 10));  
Magic Number,fCraft,PerlinNoise3D,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\PerlinNoise3D.cs,Grad,The following statement contains a magic number: return (((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v));  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (File.Exists (Paths.WorldListFileName)) {  	try {  		XDocument doc = XDocument.Load (Paths.WorldListFileName);  		XElement root = doc.Root;  		if (root != null) {  			foreach (XElement el in root.Elements ("World")) {  				#if !DEBUG  				                            try { #endif  				LoadWorldListEntry (el);  				#if !DEBUG  				                            } catch ( Exception ex ) {                                 Logger.LogAndReportCrash( "An error occured while trying to parse one of the entries on the world list"'                                                           "800Craft"' ex' false );                             } #endif  			}  			XAttribute temp;  			if ((temp = root.Attribute ("main")) != null) {  				World suggestedMainWorld = FindWorldExact (temp.Value);  				if (suggestedMainWorld != null) {  					newMainWorld = suggestedMainWorld;  				} else if (firstWorld != null) {  					// if specified main world does not exist' use first-defined world  					Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name);  					newMainWorld = firstWorld;  				}  				// if firstWorld was also null' LoadWorldList() should try creating a new mainWorld  			} else if (firstWorld != null) {  				newMainWorld = firstWorld;  			}  		}  	} catch (Exception ex) {  		Logger.LogAndReportCrash ("Error occured while trying to load the world list."' "800Craft"' ex' true);  		return false;  	}  	if (newMainWorld == null) {  		Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  		newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  	}  } else {  	Logger.Log (LogType.SystemActivity' "Server.Start: No world list found. Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (File.Exists (Paths.WorldListFileName)) {  	try {  		XDocument doc = XDocument.Load (Paths.WorldListFileName);  		XElement root = doc.Root;  		if (root != null) {  			foreach (XElement el in root.Elements ("World")) {  				#if !DEBUG  				                            try { #endif  				LoadWorldListEntry (el);  				#if !DEBUG  				                            } catch ( Exception ex ) {                                 Logger.LogAndReportCrash( "An error occured while trying to parse one of the entries on the world list"'                                                           "800Craft"' ex' false );                             } #endif  			}  			XAttribute temp;  			if ((temp = root.Attribute ("main")) != null) {  				World suggestedMainWorld = FindWorldExact (temp.Value);  				if (suggestedMainWorld != null) {  					newMainWorld = suggestedMainWorld;  				} else if (firstWorld != null) {  					// if specified main world does not exist' use first-defined world  					Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name);  					newMainWorld = firstWorld;  				}  				// if firstWorld was also null' LoadWorldList() should try creating a new mainWorld  			} else if (firstWorld != null) {  				newMainWorld = firstWorld;  			}  		}  	} catch (Exception ex) {  		Logger.LogAndReportCrash ("Error occured while trying to load the world list."' "800Craft"' ex' true);  		return false;  	}  	if (newMainWorld == null) {  		Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  		newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  	}  } else {  	Logger.Log (LogType.SystemActivity' "Server.Start: No world list found. Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (File.Exists (Paths.WorldListFileName)) {  	try {  		XDocument doc = XDocument.Load (Paths.WorldListFileName);  		XElement root = doc.Root;  		if (root != null) {  			foreach (XElement el in root.Elements ("World")) {  				#if !DEBUG  				                            try { #endif  				LoadWorldListEntry (el);  				#if !DEBUG  				                            } catch ( Exception ex ) {                                 Logger.LogAndReportCrash( "An error occured while trying to parse one of the entries on the world list"'                                                           "800Craft"' ex' false );                             } #endif  			}  			XAttribute temp;  			if ((temp = root.Attribute ("main")) != null) {  				World suggestedMainWorld = FindWorldExact (temp.Value);  				if (suggestedMainWorld != null) {  					newMainWorld = suggestedMainWorld;  				} else if (firstWorld != null) {  					// if specified main world does not exist' use first-defined world  					Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name);  					newMainWorld = firstWorld;  				}  				// if firstWorld was also null' LoadWorldList() should try creating a new mainWorld  			} else if (firstWorld != null) {  				newMainWorld = firstWorld;  			}  		}  	} catch (Exception ex) {  		Logger.LogAndReportCrash ("Error occured while trying to load the world list."' "800Craft"' ex' true);  		return false;  	}  	if (newMainWorld == null) {  		Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  		newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  	}  } else {  	Logger.Log (LogType.SystemActivity' "Server.Start: No world list found. Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (File.Exists (Paths.WorldListFileName)) {  	try {  		XDocument doc = XDocument.Load (Paths.WorldListFileName);  		XElement root = doc.Root;  		if (root != null) {  			foreach (XElement el in root.Elements ("World")) {  				#if !DEBUG  				                            try { #endif  				LoadWorldListEntry (el);  				#if !DEBUG  				                            } catch ( Exception ex ) {                                 Logger.LogAndReportCrash( "An error occured while trying to parse one of the entries on the world list"'                                                           "800Craft"' ex' false );                             } #endif  			}  			XAttribute temp;  			if ((temp = root.Attribute ("main")) != null) {  				World suggestedMainWorld = FindWorldExact (temp.Value);  				if (suggestedMainWorld != null) {  					newMainWorld = suggestedMainWorld;  				} else if (firstWorld != null) {  					// if specified main world does not exist' use first-defined world  					Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name);  					newMainWorld = firstWorld;  				}  				// if firstWorld was also null' LoadWorldList() should try creating a new mainWorld  			} else if (firstWorld != null) {  				newMainWorld = firstWorld;  			}  		}  	} catch (Exception ex) {  		Logger.LogAndReportCrash ("Error occured while trying to load the world list."' "800Craft"' ex' true);  		return false;  	}  	if (newMainWorld == null) {  		Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  		newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  	}  } else {  	Logger.Log (LogType.SystemActivity' "Server.Start: No world list found. Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (File.Exists (Paths.WorldListFileName)) {  	try {  		XDocument doc = XDocument.Load (Paths.WorldListFileName);  		XElement root = doc.Root;  		if (root != null) {  			foreach (XElement el in root.Elements ("World")) {  				#if !DEBUG  				                            try { #endif  				LoadWorldListEntry (el);  				#if !DEBUG  				                            } catch ( Exception ex ) {                                 Logger.LogAndReportCrash( "An error occured while trying to parse one of the entries on the world list"'                                                           "800Craft"' ex' false );                             } #endif  			}  			XAttribute temp;  			if ((temp = root.Attribute ("main")) != null) {  				World suggestedMainWorld = FindWorldExact (temp.Value);  				if (suggestedMainWorld != null) {  					newMainWorld = suggestedMainWorld;  				} else if (firstWorld != null) {  					// if specified main world does not exist' use first-defined world  					Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name);  					newMainWorld = firstWorld;  				}  				// if firstWorld was also null' LoadWorldList() should try creating a new mainWorld  			} else if (firstWorld != null) {  				newMainWorld = firstWorld;  			}  		}  	} catch (Exception ex) {  		Logger.LogAndReportCrash ("Error occured while trying to load the world list."' "800Craft"' ex' true);  		return false;  	}  	if (newMainWorld == null) {  		Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  		newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  	}  } else {  	Logger.Log (LogType.SystemActivity' "Server.Start: No world list found. Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (File.Exists (Paths.WorldListFileName)) {  	try {  		XDocument doc = XDocument.Load (Paths.WorldListFileName);  		XElement root = doc.Root;  		if (root != null) {  			foreach (XElement el in root.Elements ("World")) {  				#if !DEBUG  				                            try { #endif  				LoadWorldListEntry (el);  				#if !DEBUG  				                            } catch ( Exception ex ) {                                 Logger.LogAndReportCrash( "An error occured while trying to parse one of the entries on the world list"'                                                           "800Craft"' ex' false );                             } #endif  			}  			XAttribute temp;  			if ((temp = root.Attribute ("main")) != null) {  				World suggestedMainWorld = FindWorldExact (temp.Value);  				if (suggestedMainWorld != null) {  					newMainWorld = suggestedMainWorld;  				} else if (firstWorld != null) {  					// if specified main world does not exist' use first-defined world  					Logger.Log (LogType.Warning' "The specified main world \"{0}\" does not exist. " + "\"{1}\" was designated main instead. You can use /WMain to change it."' temp.Value' firstWorld.Name);  					newMainWorld = firstWorld;  				}  				// if firstWorld was also null' LoadWorldList() should try creating a new mainWorld  			} else if (firstWorld != null) {  				newMainWorld = firstWorld;  			}  		}  	} catch (Exception ex) {  		Logger.LogAndReportCrash ("Error occured while trying to load the world list."' "800Craft"' ex' true);  		return false;  	}  	if (newMainWorld == null) {  		Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  		newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  	}  } else {  	Logger.Log (LogType.SystemActivity' "Server.Start: No world list found. Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (newMainWorld == null) {  	Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (newMainWorld == null) {  	Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: if (newMainWorld == null) {  	Logger.Log (LogType.Error' "Server.Start: Could not load any of the specified worlds' or no worlds were specified. " + "Creating default \"main\" world.");  	newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  }  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  
Magic Number,fCraft,WorldManager,F:\newReposMay17\GlennMR_800craft\fCraft\World\WorldManager.cs,LoadWorldList,The following statement contains a magic number: newMainWorld = AddWorld (null' "main"' MapGeneratorOld.GenerateFlatgrass (128' 128' 64)' true);  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (monoRuntimeType != null) {  	IsMono = true;  	MethodInfo getDisplayNameMethod = monoRuntimeType.GetMethod ("GetDisplayName"' MonoMethodFlags' null' Type.EmptyTypes' null);  	if (getDisplayNameMethod != null) {  		MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  		try {  			Match versionMatch = VersionRegex.Match (MonoVersionString);  			int major = Int32.Parse (versionMatch.Groups [1].Value);  			int minor = Int32.Parse (versionMatch.Groups [2].Value);  			int revision = Int32.Parse (versionMatch.Groups [3].Value);  			MonoVersion = new Version (major' minor' revision);  			IsSGenCapable = (major == 2 && minor >= 8);  		} catch (Exception ex) {  			throw new Exception (UnsupportedMessage' ex);  		}  		if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  			throw new Exception (UnsupportedMessage);  		}  	} else {  		throw new Exception (UnsupportedMessage);  	}  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (monoRuntimeType != null) {  	IsMono = true;  	MethodInfo getDisplayNameMethod = monoRuntimeType.GetMethod ("GetDisplayName"' MonoMethodFlags' null' Type.EmptyTypes' null);  	if (getDisplayNameMethod != null) {  		MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  		try {  			Match versionMatch = VersionRegex.Match (MonoVersionString);  			int major = Int32.Parse (versionMatch.Groups [1].Value);  			int minor = Int32.Parse (versionMatch.Groups [2].Value);  			int revision = Int32.Parse (versionMatch.Groups [3].Value);  			MonoVersion = new Version (major' minor' revision);  			IsSGenCapable = (major == 2 && minor >= 8);  		} catch (Exception ex) {  			throw new Exception (UnsupportedMessage' ex);  		}  		if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  			throw new Exception (UnsupportedMessage);  		}  	} else {  		throw new Exception (UnsupportedMessage);  	}  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (monoRuntimeType != null) {  	IsMono = true;  	MethodInfo getDisplayNameMethod = monoRuntimeType.GetMethod ("GetDisplayName"' MonoMethodFlags' null' Type.EmptyTypes' null);  	if (getDisplayNameMethod != null) {  		MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  		try {  			Match versionMatch = VersionRegex.Match (MonoVersionString);  			int major = Int32.Parse (versionMatch.Groups [1].Value);  			int minor = Int32.Parse (versionMatch.Groups [2].Value);  			int revision = Int32.Parse (versionMatch.Groups [3].Value);  			MonoVersion = new Version (major' minor' revision);  			IsSGenCapable = (major == 2 && minor >= 8);  		} catch (Exception ex) {  			throw new Exception (UnsupportedMessage' ex);  		}  		if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  			throw new Exception (UnsupportedMessage);  		}  	} else {  		throw new Exception (UnsupportedMessage);  	}  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (monoRuntimeType != null) {  	IsMono = true;  	MethodInfo getDisplayNameMethod = monoRuntimeType.GetMethod ("GetDisplayName"' MonoMethodFlags' null' Type.EmptyTypes' null);  	if (getDisplayNameMethod != null) {  		MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  		try {  			Match versionMatch = VersionRegex.Match (MonoVersionString);  			int major = Int32.Parse (versionMatch.Groups [1].Value);  			int minor = Int32.Parse (versionMatch.Groups [2].Value);  			int revision = Int32.Parse (versionMatch.Groups [3].Value);  			MonoVersion = new Version (major' minor' revision);  			IsSGenCapable = (major == 2 && minor >= 8);  		} catch (Exception ex) {  			throw new Exception (UnsupportedMessage' ex);  		}  		if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  			throw new Exception (UnsupportedMessage);  		}  	} else {  		throw new Exception (UnsupportedMessage);  	}  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (monoRuntimeType != null) {  	IsMono = true;  	MethodInfo getDisplayNameMethod = monoRuntimeType.GetMethod ("GetDisplayName"' MonoMethodFlags' null' Type.EmptyTypes' null);  	if (getDisplayNameMethod != null) {  		MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  		try {  			Match versionMatch = VersionRegex.Match (MonoVersionString);  			int major = Int32.Parse (versionMatch.Groups [1].Value);  			int minor = Int32.Parse (versionMatch.Groups [2].Value);  			int revision = Int32.Parse (versionMatch.Groups [3].Value);  			MonoVersion = new Version (major' minor' revision);  			IsSGenCapable = (major == 2 && minor >= 8);  		} catch (Exception ex) {  			throw new Exception (UnsupportedMessage' ex);  		}  		if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  			throw new Exception (UnsupportedMessage);  		}  	} else {  		throw new Exception (UnsupportedMessage);  	}  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (monoRuntimeType != null) {  	IsMono = true;  	MethodInfo getDisplayNameMethod = monoRuntimeType.GetMethod ("GetDisplayName"' MonoMethodFlags' null' Type.EmptyTypes' null);  	if (getDisplayNameMethod != null) {  		MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  		try {  			Match versionMatch = VersionRegex.Match (MonoVersionString);  			int major = Int32.Parse (versionMatch.Groups [1].Value);  			int minor = Int32.Parse (versionMatch.Groups [2].Value);  			int revision = Int32.Parse (versionMatch.Groups [3].Value);  			MonoVersion = new Version (major' minor' revision);  			IsSGenCapable = (major == 2 && minor >= 8);  		} catch (Exception ex) {  			throw new Exception (UnsupportedMessage' ex);  		}  		if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  			throw new Exception (UnsupportedMessage);  		}  	} else {  		throw new Exception (UnsupportedMessage);  	}  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (getDisplayNameMethod != null) {  	MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  	try {  		Match versionMatch = VersionRegex.Match (MonoVersionString);  		int major = Int32.Parse (versionMatch.Groups [1].Value);  		int minor = Int32.Parse (versionMatch.Groups [2].Value);  		int revision = Int32.Parse (versionMatch.Groups [3].Value);  		MonoVersion = new Version (major' minor' revision);  		IsSGenCapable = (major == 2 && minor >= 8);  	} catch (Exception ex) {  		throw new Exception (UnsupportedMessage' ex);  	}  	if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  		throw new Exception (UnsupportedMessage);  	}  } else {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (getDisplayNameMethod != null) {  	MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  	try {  		Match versionMatch = VersionRegex.Match (MonoVersionString);  		int major = Int32.Parse (versionMatch.Groups [1].Value);  		int minor = Int32.Parse (versionMatch.Groups [2].Value);  		int revision = Int32.Parse (versionMatch.Groups [3].Value);  		MonoVersion = new Version (major' minor' revision);  		IsSGenCapable = (major == 2 && minor >= 8);  	} catch (Exception ex) {  		throw new Exception (UnsupportedMessage' ex);  	}  	if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  		throw new Exception (UnsupportedMessage);  	}  } else {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (getDisplayNameMethod != null) {  	MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  	try {  		Match versionMatch = VersionRegex.Match (MonoVersionString);  		int major = Int32.Parse (versionMatch.Groups [1].Value);  		int minor = Int32.Parse (versionMatch.Groups [2].Value);  		int revision = Int32.Parse (versionMatch.Groups [3].Value);  		MonoVersion = new Version (major' minor' revision);  		IsSGenCapable = (major == 2 && minor >= 8);  	} catch (Exception ex) {  		throw new Exception (UnsupportedMessage' ex);  	}  	if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  		throw new Exception (UnsupportedMessage);  	}  } else {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (getDisplayNameMethod != null) {  	MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  	try {  		Match versionMatch = VersionRegex.Match (MonoVersionString);  		int major = Int32.Parse (versionMatch.Groups [1].Value);  		int minor = Int32.Parse (versionMatch.Groups [2].Value);  		int revision = Int32.Parse (versionMatch.Groups [3].Value);  		MonoVersion = new Version (major' minor' revision);  		IsSGenCapable = (major == 2 && minor >= 8);  	} catch (Exception ex) {  		throw new Exception (UnsupportedMessage' ex);  	}  	if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  		throw new Exception (UnsupportedMessage);  	}  } else {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (getDisplayNameMethod != null) {  	MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  	try {  		Match versionMatch = VersionRegex.Match (MonoVersionString);  		int major = Int32.Parse (versionMatch.Groups [1].Value);  		int minor = Int32.Parse (versionMatch.Groups [2].Value);  		int revision = Int32.Parse (versionMatch.Groups [3].Value);  		MonoVersion = new Version (major' minor' revision);  		IsSGenCapable = (major == 2 && minor >= 8);  	} catch (Exception ex) {  		throw new Exception (UnsupportedMessage' ex);  	}  	if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  		throw new Exception (UnsupportedMessage);  	}  } else {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (getDisplayNameMethod != null) {  	MonoVersionString = (string)getDisplayNameMethod.Invoke (null' null);  	try {  		Match versionMatch = VersionRegex.Match (MonoVersionString);  		int major = Int32.Parse (versionMatch.Groups [1].Value);  		int minor = Int32.Parse (versionMatch.Groups [2].Value);  		int revision = Int32.Parse (versionMatch.Groups [3].Value);  		MonoVersion = new Version (major' minor' revision);  		IsSGenCapable = (major == 2 && minor >= 8);  	} catch (Exception ex) {  		throw new Exception (UnsupportedMessage' ex);  	}  	if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  		throw new Exception (UnsupportedMessage);  	}  } else {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: try {  	Match versionMatch = VersionRegex.Match (MonoVersionString);  	int major = Int32.Parse (versionMatch.Groups [1].Value);  	int minor = Int32.Parse (versionMatch.Groups [2].Value);  	int revision = Int32.Parse (versionMatch.Groups [3].Value);  	MonoVersion = new Version (major' minor' revision);  	IsSGenCapable = (major == 2 && minor >= 8);  } catch (Exception ex) {  	throw new Exception (UnsupportedMessage' ex);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: try {  	Match versionMatch = VersionRegex.Match (MonoVersionString);  	int major = Int32.Parse (versionMatch.Groups [1].Value);  	int minor = Int32.Parse (versionMatch.Groups [2].Value);  	int revision = Int32.Parse (versionMatch.Groups [3].Value);  	MonoVersion = new Version (major' minor' revision);  	IsSGenCapable = (major == 2 && minor >= 8);  } catch (Exception ex) {  	throw new Exception (UnsupportedMessage' ex);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: try {  	Match versionMatch = VersionRegex.Match (MonoVersionString);  	int major = Int32.Parse (versionMatch.Groups [1].Value);  	int minor = Int32.Parse (versionMatch.Groups [2].Value);  	int revision = Int32.Parse (versionMatch.Groups [3].Value);  	MonoVersion = new Version (major' minor' revision);  	IsSGenCapable = (major == 2 && minor >= 8);  } catch (Exception ex) {  	throw new Exception (UnsupportedMessage' ex);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: try {  	Match versionMatch = VersionRegex.Match (MonoVersionString);  	int major = Int32.Parse (versionMatch.Groups [1].Value);  	int minor = Int32.Parse (versionMatch.Groups [2].Value);  	int revision = Int32.Parse (versionMatch.Groups [3].Value);  	MonoVersion = new Version (major' minor' revision);  	IsSGenCapable = (major == 2 && minor >= 8);  } catch (Exception ex) {  	throw new Exception (UnsupportedMessage' ex);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: IsSGenCapable = (major == 2 && minor >= 8);  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: IsSGenCapable = (major == 2 && minor >= 8);  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft,MonoCompat,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\MonoCompat.cs,MonoCompat,The following statement contains a magic number: if (MonoVersion.Major < 2 && MonoVersion.Major < 6) {  	throw new Exception (UnsupportedMessage);  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: if (!player.Info.IsWarned) {  	if (!player.Info.IsMuted) {  		if (!player.Info.IsFrozen) {  			try {  				if (namesRegistered < broNames.Count) {  					Random randomizer = new Random ();  					int index = randomizer.Next (0' broNames.Count);  					int attempts = 0;  					bool found = false;  					if (player.Info.DisplayedName == null) {  						player.Info.changedName = false;  						//fix for rank problems during  					} else  						player.Info.oldname = player.Info.DisplayedName;  					player.Info.changedName = true;  					//if name is changed' true  					while (!found) {  						Player output = null;  						registeredBroNames.TryGetValue (index' out output);  						if (output == null) {  							found = true;  							break;  						}  						attempts++;  						index = randomizer.Next (0' broNames.Count);  						output = null;  						if (attempts > 2000) {  							// Not good :D  							break;  						}  					}  					if (found) {  						player.Message ("Giving you name: " + broNames [index]);  						player.Info.DisplayedName = Color.ReplacePercentCodes (player.Info.Rank.Color + player.Info.Rank.Prefix + broNames [index]);  						namesRegistered++;  						registeredBroNames [index] = player;  					} else {  						player.Message ("Could not find a name for you.");  					}  				} else {  					player.Message ("All bro names have been assigned.");  				}  			} catch (Exception ex) {  				Logger.Log (LogType.Error' "BroMode.RegisterPlayer: " + ex);  			}  		}  	}  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: if (!player.Info.IsMuted) {  	if (!player.Info.IsFrozen) {  		try {  			if (namesRegistered < broNames.Count) {  				Random randomizer = new Random ();  				int index = randomizer.Next (0' broNames.Count);  				int attempts = 0;  				bool found = false;  				if (player.Info.DisplayedName == null) {  					player.Info.changedName = false;  					//fix for rank problems during  				} else  					player.Info.oldname = player.Info.DisplayedName;  				player.Info.changedName = true;  				//if name is changed' true  				while (!found) {  					Player output = null;  					registeredBroNames.TryGetValue (index' out output);  					if (output == null) {  						found = true;  						break;  					}  					attempts++;  					index = randomizer.Next (0' broNames.Count);  					output = null;  					if (attempts > 2000) {  						// Not good :D  						break;  					}  				}  				if (found) {  					player.Message ("Giving you name: " + broNames [index]);  					player.Info.DisplayedName = Color.ReplacePercentCodes (player.Info.Rank.Color + player.Info.Rank.Prefix + broNames [index]);  					namesRegistered++;  					registeredBroNames [index] = player;  				} else {  					player.Message ("Could not find a name for you.");  				}  			} else {  				player.Message ("All bro names have been assigned.");  			}  		} catch (Exception ex) {  			Logger.Log (LogType.Error' "BroMode.RegisterPlayer: " + ex);  		}  	}  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: if (!player.Info.IsFrozen) {  	try {  		if (namesRegistered < broNames.Count) {  			Random randomizer = new Random ();  			int index = randomizer.Next (0' broNames.Count);  			int attempts = 0;  			bool found = false;  			if (player.Info.DisplayedName == null) {  				player.Info.changedName = false;  				//fix for rank problems during  			} else  				player.Info.oldname = player.Info.DisplayedName;  			player.Info.changedName = true;  			//if name is changed' true  			while (!found) {  				Player output = null;  				registeredBroNames.TryGetValue (index' out output);  				if (output == null) {  					found = true;  					break;  				}  				attempts++;  				index = randomizer.Next (0' broNames.Count);  				output = null;  				if (attempts > 2000) {  					// Not good :D  					break;  				}  			}  			if (found) {  				player.Message ("Giving you name: " + broNames [index]);  				player.Info.DisplayedName = Color.ReplacePercentCodes (player.Info.Rank.Color + player.Info.Rank.Prefix + broNames [index]);  				namesRegistered++;  				registeredBroNames [index] = player;  			} else {  				player.Message ("Could not find a name for you.");  			}  		} else {  			player.Message ("All bro names have been assigned.");  		}  	} catch (Exception ex) {  		Logger.Log (LogType.Error' "BroMode.RegisterPlayer: " + ex);  	}  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: try {  	if (namesRegistered < broNames.Count) {  		Random randomizer = new Random ();  		int index = randomizer.Next (0' broNames.Count);  		int attempts = 0;  		bool found = false;  		if (player.Info.DisplayedName == null) {  			player.Info.changedName = false;  			//fix for rank problems during  		} else  			player.Info.oldname = player.Info.DisplayedName;  		player.Info.changedName = true;  		//if name is changed' true  		while (!found) {  			Player output = null;  			registeredBroNames.TryGetValue (index' out output);  			if (output == null) {  				found = true;  				break;  			}  			attempts++;  			index = randomizer.Next (0' broNames.Count);  			output = null;  			if (attempts > 2000) {  				// Not good :D  				break;  			}  		}  		if (found) {  			player.Message ("Giving you name: " + broNames [index]);  			player.Info.DisplayedName = Color.ReplacePercentCodes (player.Info.Rank.Color + player.Info.Rank.Prefix + broNames [index]);  			namesRegistered++;  			registeredBroNames [index] = player;  		} else {  			player.Message ("Could not find a name for you.");  		}  	} else {  		player.Message ("All bro names have been assigned.");  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "BroMode.RegisterPlayer: " + ex);  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: if (namesRegistered < broNames.Count) {  	Random randomizer = new Random ();  	int index = randomizer.Next (0' broNames.Count);  	int attempts = 0;  	bool found = false;  	if (player.Info.DisplayedName == null) {  		player.Info.changedName = false;  		//fix for rank problems during  	} else  		player.Info.oldname = player.Info.DisplayedName;  	player.Info.changedName = true;  	//if name is changed' true  	while (!found) {  		Player output = null;  		registeredBroNames.TryGetValue (index' out output);  		if (output == null) {  			found = true;  			break;  		}  		attempts++;  		index = randomizer.Next (0' broNames.Count);  		output = null;  		if (attempts > 2000) {  			// Not good :D  			break;  		}  	}  	if (found) {  		player.Message ("Giving you name: " + broNames [index]);  		player.Info.DisplayedName = Color.ReplacePercentCodes (player.Info.Rank.Color + player.Info.Rank.Prefix + broNames [index]);  		namesRegistered++;  		registeredBroNames [index] = player;  	} else {  		player.Message ("Could not find a name for you.");  	}  } else {  	player.Message ("All bro names have been assigned.");  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: while (!found) {  	Player output = null;  	registeredBroNames.TryGetValue (index' out output);  	if (output == null) {  		found = true;  		break;  	}  	attempts++;  	index = randomizer.Next (0' broNames.Count);  	output = null;  	if (attempts > 2000) {  		// Not good :D  		break;  	}  }  
Magic Number,fCraft.Utils,BroMode,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\BroModeHandler.cs,RegisterPlayer,The following statement contains a magic number: if (attempts > 2000) {  	// Not good :D  	break;  }  
Magic Number,fCraft.Utils,FlyHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: if (!(x >= -1 && x <= 1) || !(y >= -1 && y <= 1) || !(z >= -3 && z <= 4)) {  	return true;  }  
Magic Number,fCraft.Utils,FlyHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: if (!(x >= -1 && x <= 1) || !(y >= -1 && y <= 1) || !(z >= -3 && z <= 4)) {  	return true;  }  
Magic Number,fCraft.Utils,FlyHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: if (!(x >= -1 && x <= 1) || !(y >= -1 && y <= 1) || !(z >= -3 && z <= 4)) {  	return true;  }  
Magic Number,fCraft.Utils,FlyHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FlyHandler.cs,CanRemoveBlock,The following statement contains a magic number: if (!(x >= -1 && x <= 1) || !(y >= -1 && y <= 1) || !(z >= -3 && z <= 4)) {  	return true;  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  	return true;  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,IsInRange,The following statement contains a magic number: if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  	return true;  }  
Magic Number,fCraft.Doors,Door,F:\newReposMay17\GlennMR_800craft\fCraft\Doors\Door.cs,Remove,The following statement contains a magic number: this.AffectedBlocks = new Vector3I[2];  
Magic Number,fCraft.Drawing,DiagonalBrushFactory,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\DiagonalBrush.cs,MakeBrush,The following statement contains a magic number: if (!cmd.HasNext) {  	if (player.LastUsedBlockType != (Block)255)  		return new DiagonalBrush (new[] {  			player.LastUsedBlockType  		});  	else  		return new DiagonalBrush (new[] {  			Block.Stone  		});  }  
Magic Number,fCraft.Drawing,DiagonalBrushFactory,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\DiagonalBrush.cs,MakeBrush,The following statement contains a magic number: if (player.LastUsedBlockType != (Block)255)  	return new DiagonalBrush (new[] {  		player.LastUsedBlockType  	});  else  	return new DiagonalBrush (new[] {  		Block.Stone  	});  
Magic Number,fCraft.Drawing,BlockDBDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\BlockDBDrawOperation.cs,Prepare,The following statement contains a magic number: if (marks.Length != 2) {  	Bounds = FindBounds ();  }  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,FindBestMatch,The following statement contains a magic number: if (color.A < TransparencyThreshold * 255) {  	return transparent;  }  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,ColorDifference,The following statement contains a magic number: return Math.Sqrt ((color2.L - color1.L) * (color2.L - color1.L) * 1.2 + (color2.a - color1.a) * (color2.a - color1.a) + (color2.b - color1.b) * (color2.b - color1.b));  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: if (adjustContrast) {  	result.L *= .75;  }  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,RgbToLab,The following statement contains a magic number: result.L *= .75;  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLight,The following statement contains a magic number: return new BlockPalette ("Light"' 1) {  	{  		RgbColor.FromArgb (109' 80' 57)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (176' 170' 130)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (111' 104' 104)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 44)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (179' 111' 44)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 44)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (109' 179' 44)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 44)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 111)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (44' 179' 179)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (86' 132' 179)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (99' 99' 180)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (111' 44' 180)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (141' 62' 179)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (180' 44' 180)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (179' 44' 111)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDark,The following statement contains a magic number: return new BlockPalette ("Dark"' 1) {  	{  		RgbColor.FromArgb (67' 50' 37)'  		new[] {  			Block.Dirt  		}  	}'  	{  		RgbColor.FromArgb (108' 104' 80)'  		new[] {  			Block.Sand  		}  	}'  	{  		RgbColor.FromArgb (68' 64' 64)'  		new[] {  			Block.Gravel  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 28)'  		new[] {  			Block.Red  		}  	}'  	{  		RgbColor.FromArgb (110' 70' 31)'  		new[] {  			Block.Orange  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 29)'  		new[] {  			Block.Yellow  		}  	}'  	{  		RgbColor.FromArgb (68' 109' 29)'  		new[] {  			Block.Lime  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 31)'  		new[] {  			Block.Green  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 69)'  		new[] {  			Block.Teal  		}  	}'  	{  		RgbColor.FromArgb (28' 109' 108)'  		new[] {  			Block.Aqua  		}  	}'  	{  		RgbColor.FromArgb (53' 81' 109)'  		new[] {  			Block.Cyan  		}  	}'  	{  		RgbColor.FromArgb (61' 61' 109)'  		new[] {  			Block.Blue  		}  	}'  	{  		RgbColor.FromArgb (68' 28' 109)'  		new[] {  			Block.Indigo  		}  	}'  	{  		RgbColor.FromArgb (87' 40' 110)'  		new[] {  			Block.Violet  		}  	}'  	{  		RgbColor.FromArgb (109' 28' 110)'  		new[] {  			Block.Magenta  		}  	}'  	{  		RgbColor.FromArgb (109' 29' 69)'  		new[] {  			Block.Pink  		}  	}'  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (61' 74' 167)' new[] {  	Block.White'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (61' 74' 167)' new[] {  	Block.White'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (61' 74' 167)' new[] {  	Block.White'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (47' 59' 152)' new[] {  	Block.Gray'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (47' 59' 152)' new[] {  	Block.Gray'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (47' 59' 152)' new[] {  	Block.Gray'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (34' 47' 140)' new[] {  	Block.Black'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (34' 47' 140)' new[] {  	Block.Black'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineLayered,The following statement contains a magic number: palette.Add (RgbColor.FromArgb (34' 47' 140)' new[] {  	Block.Black'  	Block.StillWater  });  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineGray,The following statement contains a magic number: return new BlockPalette ("Gray"' 1) {  	{  		RgbColor.FromArgb (64' 64' 64)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (118' 118' 118)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineDarkGray,The following statement contains a magic number: return new BlockPalette ("DarkGray"' 1) {  	{  		RgbColor.FromArgb (41' 41' 41)'  		new[] {  			Block.Black  		}  	}'  	{  		RgbColor.FromArgb (72' 72' 72)'  		new[] {  			Block.Gray  		}  	}'  	{  		RgbColor.FromArgb (109' 109' 109)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (15' 14' 20)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette ("BW"' 1) {  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette ("BW"' 1) {  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette ("BW"' 1) {  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette ("BW"' 1) {  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette ("BW"' 1) {  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,BlockPalette,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\BlockPalette.cs,DefineBW,The following statement contains a magic number: return new BlockPalette ("BW"' 1) {  	{  		RgbColor.FromArgb (179' 179' 179)'  		new[] {  			Block.White  		}  	}'  	{  		RgbColor.FromArgb (21' 19' 29)'  		new[] {  			Block.Obsidian  		}  	}  };  
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator2 = LineEnumerator (Marks [1]' Marks [2]).GetEnumerator ();  
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator3 = LineEnumerator (Marks [2]' Marks [3]).GetEnumerator ();  
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator3 = LineEnumerator (Marks [2]' Marks [3]).GetEnumerator ();  
Magic Number,fCraft.Drawing,PlaneWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator4 = LineEnumerator (Marks [3]' Marks [0]).GetEnumerator ();  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,Prepare,The following statement contains a magic number: if (marks.Length == 2) {  	Bounds = new BoundingBox (Marks [0]' Marks [1]);  }  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: if ((d.X >= d.Y) && (d.X >= d.Z)) {  	x = 0;  	y = 1;  	z = 2;  } else if ((d.Y >= d.X) && (d.Y >= d.Z)) {  	x = 1;  	y = 2;  	z = 0;  } else {  	x = 2;  	y = 0;  	z = 1;  }  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: if ((d.X >= d.Y) && (d.X >= d.Z)) {  	x = 0;  	y = 1;  	z = 2;  } else if ((d.Y >= d.X) && (d.Y >= d.Z)) {  	x = 1;  	y = 2;  	z = 0;  } else {  	x = 2;  	y = 0;  	z = 1;  }  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: if ((d.X >= d.Y) && (d.X >= d.Z)) {  	x = 0;  	y = 1;  	z = 2;  } else if ((d.Y >= d.X) && (d.Y >= d.Z)) {  	x = 1;  	y = 2;  	z = 0;  } else {  	x = 2;  	y = 0;  	z = 1;  }  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: z = 2;  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: if ((d.Y >= d.X) && (d.Y >= d.Z)) {  	x = 1;  	y = 2;  	z = 0;  } else {  	x = 2;  	y = 0;  	z = 1;  }  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: if ((d.Y >= d.X) && (d.Y >= d.Z)) {  	x = 1;  	y = 2;  	z = 0;  } else {  	x = 2;  	y = 0;  	z = 1;  }  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: y = 2;  
Magic Number,fCraft.Drawing,DrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOperation.cs,LineEnumerator,The following statement contains a magic number: x = 2;  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,Prepare,The following statement contains a magic number: b = marks [2];  
Magic Number,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,GetBlockTotalEstimate,The following statement contains a magic number: return Math.Max (Math.Max (nabs.X' nabs.Y)' nabs.Z) / 2;  
Magic Number,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;  
Magic Number,fCraft.Drawing,PlaneDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PlaneDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,ReadParams,The following statement contains a magic number: if (urlString.StartsWith ("++")) {  	urlString = "http://i.imgur.com/" + urlString.Substring (2);  }  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,ReadParams,The following statement contains a magic number: urlString = "http://i.imgur.com/" + urlString.Substring (2);  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,Prepare,The following statement contains a magic number: if (marks.Length != 2)  	throw new ArgumentException ("DrawImage: Exactly 2 marks needed."' "marks");  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,resizeImage,The following statement contains a magic number: if (nPercentH < nPercentW) {  	nPercent = nPercentH;  	destX = Convert.ToInt16 ((Width - (sourceWidth * nPercent)) / 2);  } else {  	nPercent = nPercentW;  	destY = Convert.ToInt16 ((Height - (sourceHeight * nPercent)) / 2);  }  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,resizeImage,The following statement contains a magic number: if (nPercentH < nPercentW) {  	nPercent = nPercentH;  	destX = Convert.ToInt16 ((Width - (sourceWidth * nPercent)) / 2);  } else {  	nPercent = nPercentW;  	destY = Convert.ToInt16 ((Height - (sourceHeight * nPercent)) / 2);  }  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,resizeImage,The following statement contains a magic number: destX = Convert.ToInt16 ((Width - (sourceWidth * nPercent)) / 2);  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,resizeImage,The following statement contains a magic number: destY = Convert.ToInt16 ((Height - (sourceHeight * nPercent)) / 2);  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,The following statement contains a magic number: if (Math.Abs (delta.X) > Math.Abs (delta.Y)) {  	// drawing along the X-axis  	bool faceTowardsOrigin = delta.Y < 0 || delta.Y == 0 && Marks [0].Y < Map.Length / 2;  	coordOffsets.Y = Marks [0].Y;  	if (delta.X > 0) {  		// X+  		actualImageWidth = Math.Min (Marks [0].X + ImageBitmap.Width' Map.Width) - Marks [0].X;  		if (faceTowardsOrigin) {  			// X+y+  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.X = Marks [0].X + (actualImageWidth - 1);  			coordMultiplierX = -1;  			layerVector.Y = -1;  		} else {  			// X+y-  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.X = Marks [0].X;  			coordMultiplierX = 1;  			layerVector.Y = 1;  		}  	} else {  		// X-  		actualImageWidth = Math.Min (Marks [0].X + 1' ImageBitmap.Width);  		if (faceTowardsOrigin) {  			// X-y+  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.X = Marks [0].X;  			coordMultiplierX = -1;  			layerVector.Y = -1;  		} else {  			// X-y-  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.X = Marks [0].X - (actualImageWidth - 1);  			coordMultiplierX = 1;  			layerVector.Y = 1;  		}  	}  } else {  	// drawing along the Y-axis  	bool faceTowardsOrigin = delta.X < 0 || delta.X == 0 && Marks [0].X < Map.Width / 2;  	coordOffsets.X = Marks [0].X;  	if (delta.Y > 0) {  		// Y+  		actualImageWidth = Math.Min (Marks [0].Y + ImageBitmap.Width' Map.Length) - Marks [0].Y;  		if (faceTowardsOrigin) {  			// Y+x+  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.Y = Marks [0].Y;  			coordMultiplierY = 1;  			layerVector.X = -1;  		} else {  			// Y+x-  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.Y = Marks [0].Y + (actualImageWidth - 1);  			coordMultiplierY = -1;  			layerVector.X = 1;  		}  	} else {  		// Y-  		actualImageWidth = Math.Min (Marks [0].Y + 1' ImageBitmap.Width);  		if (faceTowardsOrigin) {  			// Y-x+  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.Y = Marks [0].Y - (actualImageWidth - 1);  			coordMultiplierY = 1;  			layerVector.X = -1;  		} else {  			// Y-x-  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.Y = Marks [0].Y;  			coordMultiplierY = -1;  			layerVector.X = 1;  		}  	}  }  
Magic Number,fCraft.Drawing,ImageDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\ImageDrawOperation.cs,CalculateCoordConversion,The following statement contains a magic number: if (Math.Abs (delta.X) > Math.Abs (delta.Y)) {  	// drawing along the X-axis  	bool faceTowardsOrigin = delta.Y < 0 || delta.Y == 0 && Marks [0].Y < Map.Length / 2;  	coordOffsets.Y = Marks [0].Y;  	if (delta.X > 0) {  		// X+  		actualImageWidth = Math.Min (Marks [0].X + ImageBitmap.Width' Map.Width) - Marks [0].X;  		if (faceTowardsOrigin) {  			// X+y+  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.X = Marks [0].X + (actualImageWidth - 1);  			coordMultiplierX = -1;  			layerVector.Y = -1;  		} else {  			// X+y-  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.X = Marks [0].X;  			coordMultiplierX = 1;  			layerVector.Y = 1;  		}  	} else {  		// X-  		actualImageWidth = Math.Min (Marks [0].X + 1' ImageBitmap.Width);  		if (faceTowardsOrigin) {  			// X-y+  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.X = Marks [0].X;  			coordMultiplierX = -1;  			layerVector.Y = -1;  		} else {  			// X-y-  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.X = Marks [0].X - (actualImageWidth - 1);  			coordMultiplierX = 1;  			layerVector.Y = 1;  		}  	}  } else {  	// drawing along the Y-axis  	bool faceTowardsOrigin = delta.X < 0 || delta.X == 0 && Marks [0].X < Map.Width / 2;  	coordOffsets.X = Marks [0].X;  	if (delta.Y > 0) {  		// Y+  		actualImageWidth = Math.Min (Marks [0].Y + ImageBitmap.Width' Map.Length) - Marks [0].Y;  		if (faceTowardsOrigin) {  			// Y+x+  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.Y = Marks [0].Y;  			coordMultiplierY = 1;  			layerVector.X = -1;  		} else {  			// Y+x-  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.Y = Marks [0].Y + (actualImageWidth - 1);  			coordMultiplierY = -1;  			layerVector.X = 1;  		}  	} else {  		// Y-  		actualImageWidth = Math.Min (Marks [0].Y + 1' ImageBitmap.Width);  		if (faceTowardsOrigin) {  			// Y-x+  			minX = ImageBitmap.Width - actualImageWidth;  			maxX = ImageBitmap.Width - 1;  			coordOffsets.Y = Marks [0].Y - (actualImageWidth - 1);  			coordMultiplierY = 1;  			layerVector.X = -1;  		} else {  			// Y-x-  			minX = 0;  			maxX = actualImageWidth - 1;  			coordOffsets.Y = Marks [0].Y;  			coordMultiplierY = -1;  			layerVector.X = 1;  		}  	}  }  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: if (!fillInner) {  	BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  }  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: if (!fillInner) {  	BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  }  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: if (!fillInner) {  	BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  }  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  
Magic Number,fCraft.Drawing,WallsDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\WallsDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  
Magic Number,fCraft.Drawing,TriangleDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,Prepare,The following statement contains a magic number: c = marks [2];  
Magic Number,fCraft.Drawing,TriangleDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,GetBlockTotalEstimate,The following statement contains a magic number: return Math.Max (Math.Max (nabs.X' nabs.Y)' nabs.Z) / 2;  
Magic Number,fCraft.Drawing,TriangleDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;  
Magic Number,fCraft.Drawing,TriangleDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleDrawOperation.cs,TestAxis,The following statement contains a magic number: return distance > -0.5 && distance <= 0.5;  
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator2 = LineEnumerator (Marks [1]' Marks [2]).GetEnumerator ();  
Magic Number,fCraft.Drawing,TriangleWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TriangleWireframeDrawOperation.cs,Prepare,The following statement contains a magic number: coordEnumerator3 = LineEnumerator (Marks [2]' Marks [0]).GetEnumerator ();  
Magic Number,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,The following statement contains a magic number: if (maxFillExtent < 1 || maxFillExtent > 2048)  	maxFillExtent = 2048;  
Magic Number,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,The following statement contains a magic number: if (maxFillExtent < 1 || maxFillExtent > 2048)  	maxFillExtent = 2048;  
Magic Number,fCraft.Drawing,Fill2DDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Fill2DDrawOperation.cs,Prepare,The following statement contains a magic number: maxFillExtent = 2048;  
Magic Number,fCraft.Drawing,PasteDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\PasteDrawOperation.cs,Prepare,The following statement contains a magic number: if (marks.Length < 2)  	throw new ArgumentException ("At least two marks needed."' "marks");  
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,AbstractPerlinNoiseBrush,The following statement contains a magic number: Octaves = 3;  
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,The following statement contains a magic number: if (op.Bounds.Volume > 32 * 32 * 32) {  	player.Message ("{0} brush: Preparing' please wait..."' Brush.Factory.Name);  }  
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,The following statement contains a magic number: if (op.Bounds.Volume > 32 * 32 * 32) {  	player.Message ("{0} brush: Preparing' please wait..."' Brush.Factory.Name);  }  
Magic Number,fCraft.Drawing,AbstractPerlinNoiseBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\AbstractPerlinNoiseBrush.cs,Begin,The following statement contains a magic number: if (op.Bounds.Volume > 32 * 32 * 32) {  	player.Message ("{0} brush: Preparing' please wait..."' Brush.Factory.Name);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (fillInner) {  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  } else {  	// rougher estimation than the non-hollow form' a voxelized surface is a bit funky  	BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  }  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * rx * ry * rz);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(4 / 3d * Math.PI * ((rx + .5) * (ry + .5) * (rz + .5) - (rx - .5) * (ry - .5) * (rz - .5)) * 0.85);  
Magic Number,fCraft.Drawing,EllipsoidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)Math.Ceiling (4 / 3d * Math.PI * rx * ry * rz);  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: fillInner = Brush.HasAlternateBlock && Bounds.Width > 2 && Bounds.Length > 2 && Bounds.Height > 2;  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (!fillInner) {  	BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  }  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (!fillInner) {  	BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  }  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: if (!fillInner) {  	BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  }  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate -= Math.Max (0' Bounds.Width - 2) * Math.Max (0' Bounds.Length - 2) * Math.Max (0' Bounds.Height - 2);  
Magic Number,fCraft.Drawing,CuboidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidHollowDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: if (Bounds.Height > 2) {  	for (int x = Bounds.XMin; x <= Bounds.XMax; x++) {  		for (int z = Bounds.ZMin + 1; z < Bounds.ZMax; z++) {  			yield return new Vector3I (x' Bounds.YMin' z);  			if (Bounds.YMin != Bounds.YMax) {  				yield return new Vector3I (x' Bounds.YMax' z);  			}  		}  	}  	for (int y = Bounds.YMin + 1; y < Bounds.YMax; y++) {  		for (int z = Bounds.ZMin + 1; z < Bounds.ZMax; z++) {  			yield return new Vector3I (Bounds.XMin' y' z);  			if (Bounds.XMin != Bounds.XMax) {  				yield return new Vector3I (Bounds.XMax' y' z);  			}  		}  	}  }  
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: if (Bounds.Width > 2) {  	for (int x = Bounds.XMin + 1; x < Bounds.XMax; x++) {  		yield return new Vector3I (x' Bounds.YMin' Bounds.ZMin);  		if (Bounds.ZMin != Bounds.ZMax)  			yield return new Vector3I (x' Bounds.YMin' Bounds.ZMax);  		if (Bounds.YMin != Bounds.YMax) {  			yield return new Vector3I (x' Bounds.YMax' Bounds.ZMin);  			if (Bounds.ZMin != Bounds.ZMax)  				yield return new Vector3I (x' Bounds.YMax' Bounds.ZMax);  		}  	}  }  
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: if (Bounds.Length > 2) {  	for (int y = Bounds.YMin + 1; y < Bounds.YMax; y++) {  		yield return new Vector3I (Bounds.XMin' y' Bounds.ZMin);  		if (Bounds.ZMin != Bounds.ZMax)  			yield return new Vector3I (Bounds.XMin' y' Bounds.ZMax);  		if (Bounds.XMin != Bounds.XMax) {  			yield return new Vector3I (Bounds.XMax' y' Bounds.ZMin);  			if (Bounds.ZMin != Bounds.ZMax)  				yield return new Vector3I (Bounds.XMax' y' Bounds.ZMax);  		}  	}  }  
Magic Number,fCraft.Drawing,CuboidWireframeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CuboidWireframeDrawOperation.cs,BlockEnumerator,The following statement contains a magic number: if (Bounds.Height > 2) {  	for (int z = Bounds.ZMin + 1; z < Bounds.ZMax; z++) {  		yield return new Vector3I (Bounds.XMin' Bounds.YMin' z);  		if (Bounds.YMin != Bounds.YMax)  			yield return new Vector3I (Bounds.XMin' Bounds.YMax' z);  		if (Bounds.XMin != Bounds.XMax) {  			yield return new Vector3I (Bounds.XMax' Bounds.YMax' z);  			if (Bounds.YMin != Bounds.YMax)  				yield return new Vector3I (Bounds.XMax' Bounds.YMin' z);  		}  	}  }  
Magic Number,fCraft.Drawing,MarbledBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MapValue,The following statement contains a magic number: return Math.Abs (rawValue * 2 - 1);  
Magic Number,fCraft.Drawing,MarbledBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MapAllValues,The following statement contains a magic number: fixed (float* ptr = rawValues) {  	for (int i = 0; i < rawValues.Length; i++) {  		ptr [i] = Math.Abs (ptr [i] * 2 - 1);  	}  }  
Magic Number,fCraft.Drawing,MarbledBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MapAllValues,The following statement contains a magic number: for (int i = 0; i < rawValues.Length; i++) {  	ptr [i] = Math.Abs (ptr [i] * 2 - 1);  }  
Magic Number,fCraft.Drawing,MarbledBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\MarbledBrush.cs,MapAllValues,The following statement contains a magic number: ptr [i] = Math.Abs (ptr [i] * 2 - 1);  
Magic Number,fCraft.Drawing,RainbowBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\RainbowBrush.cs,NextBlock,The following statement contains a magic number: return Rainbow [(state.Coords.X + state.Coords.Y + state.Coords.Z) % 7];  
Magic Number,fCraft.Drawing,RandomBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = (n << 13) ^ n;  
Magic Number,fCraft.Drawing,RandomBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = (n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF;  
Magic Number,fCraft.Drawing,RandomBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = (n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF;  
Magic Number,fCraft.Drawing,RandomBrush,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\Brushes\RandomBrush.cs,NextBlock,The following statement contains a magic number: n = (n * (n * n * 15731 + 789221) + 1376312589) & 0x7FFFFFFF;  
Magic Number,fCraft.Drawing,TorusDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TorusDrawOperation.cs,Prepare,The following statement contains a magic number: bigR = Math.Sqrt (radiusVector.X * radiusVector.X + radiusVector.Y * radiusVector.Y + .5);  
Magic Number,fCraft.Drawing,TorusDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\TorusDrawOperation.cs,Prepare,The following statement contains a magic number: BlocksTotalEstimate = (int)(2 * Math.PI * Math.PI * bigR * (tubeR * tubeR + Bias));  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction () {  	_d = (_d + 2) % 4  } : new Direction () {  	_d = 9 - _d  };  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction () {  	_d = (_d + 2) % 4  } : new Direction () {  	_d = 9 - _d  };  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction () {  	_d = (_d + 2) % 4  } : new Direction () {  	_d = 9 - _d  };  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Invert,The following statement contains a magic number: return _d < 4 ? new Direction () {  	_d = (_d + 2) % 4  } : new Direction () {  	_d = 9 - _d  };  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  	x = xFrom + cellSize;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 1:  	y = yFrom + cellSize;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 2:  	x = xFrom - 1;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 3:  	y = yFrom - 1;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 4:  	z = zFrom - 1;  	fun (ref x' ref y' xFrom' yFrom);  	break;  case 5:  	z = zFrom + cellSize;  	fun (ref x' ref y' xFrom' yFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  	x = xFrom + cellSize;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 1:  	y = yFrom + cellSize;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 2:  	x = xFrom - 1;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 3:  	y = yFrom - 1;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 4:  	z = zFrom - 1;  	fun (ref x' ref y' xFrom' yFrom);  	break;  case 5:  	z = zFrom + cellSize;  	fun (ref x' ref y' xFrom' yFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  	x = xFrom + cellSize;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 1:  	y = yFrom + cellSize;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 2:  	x = xFrom - 1;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 3:  	y = yFrom - 1;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 4:  	z = zFrom - 1;  	fun (ref x' ref y' xFrom' yFrom);  	break;  case 5:  	z = zFrom + cellSize;  	fun (ref x' ref y' xFrom' yFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  	x = xFrom + cellSize;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 1:  	y = yFrom + cellSize;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 2:  	x = xFrom - 1;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 3:  	y = yFrom - 1;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 4:  	z = zFrom - 1;  	fun (ref x' ref y' xFrom' yFrom);  	break;  case 5:  	z = zFrom + cellSize;  	fun (ref x' ref y' xFrom' yFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  case 2:  	y = yFrom - 1;  	z = zFrom - 1;  	fun (ref x' xFrom);  	break;  case 1:  case 3:  	x = xFrom - 1;  	z = zFrom - 1;  	fun (ref y' yFrom);  	break;  case 4:  case 5:  	x = xFrom - 1;  	y = yFrom - 1;  	fun (ref z' zFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  case 2:  	y = yFrom - 1;  	z = zFrom - 1;  	fun (ref x' xFrom);  	break;  case 1:  case 3:  	x = xFrom - 1;  	z = zFrom - 1;  	fun (ref y' yFrom);  	break;  case 4:  case 5:  	x = xFrom - 1;  	y = yFrom - 1;  	fun (ref z' zFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  case 2:  	y = yFrom - 1;  	z = zFrom - 1;  	fun (ref x' xFrom);  	break;  case 1:  case 3:  	x = xFrom - 1;  	z = zFrom - 1;  	fun (ref y' yFrom);  	break;  case 4:  case 5:  	x = xFrom - 1;  	y = yFrom - 1;  	fun (ref z' zFrom);  	break;  }  
Magic Number,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following statement contains a magic number: switch (_d) {  case 0:  case 2:  	y = yFrom - 1;  	z = zFrom - 1;  	fun (ref x' xFrom);  	break;  case 1:  case 3:  	x = xFrom - 1;  	z = zFrom - 1;  	fun (ref y' yFrom);  	break;  case 4:  case 5:  	x = xFrom - 1;  	y = yFrom - 1;  	fun (ref z' zFrom);  	break;  }  
Magic Number,RandomMaze,Path,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryFork,The following statement contains a magic number: for (int j = _cells.Count - 2; j >= 0; --j)//try fork from the before the last to the very beginning   {  	Cell cell = _cells [j];  	Direction[] dir = Direction.GetRndPermutation ();  	for (int i = 0; i < dir.Length; ++i) {  		Cell next = _maze.GetCell (dir [i].MoveX (cell.X)' dir [i].MoveY (cell.Y)' dir [i].MoveZ (cell.Z));  		if (null == next)  			//outside  			continue;  		if (next.Used ())  			//taken already  			continue;  		ConnectCells (cell' next' dir [i]);  		return new Path (_maze' next) {  			_parent = this'  			_forkedAtParents = j  		};  	}  }  
Magic Number,RandomMaze,Path,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: if (_wallAtEndRemoved || _cells.Count < 5)  	//did already or too short  	return false;  
Magic Number,RandomMaze,Path,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: for (int i = 0; i < dir.Length; ++i) {  	if (!last.Wall (dir [i]))  		continue;  	Cell next = _maze.GetCell (dir [i].MoveX (last.X)' dir [i].MoveY (last.Y)' dir [i].MoveY (last.Z));  	if (null == next)  		//outside  		continue;  	if (ReferenceEquals (next.Path' this) && Math.Abs (last.IndexInPath - next.IndexInPath) < 10)  		//same path only if distance >=10  		continue;  	if (next.IndexInPath + (null == next.Path._parent ? 0 : next.Path._forkedAtParents) < 5)  		//only take long paths' consider the immediate parent too  		continue;  	ConnectCells (last' next' dir [i]);  	_wallAtEndRemoved = true;  	return true;  }  
Magic Number,RandomMaze,Path,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: for (int i = 0; i < dir.Length; ++i) {  	if (!last.Wall (dir [i]))  		continue;  	Cell next = _maze.GetCell (dir [i].MoveX (last.X)' dir [i].MoveY (last.Y)' dir [i].MoveY (last.Z));  	if (null == next)  		//outside  		continue;  	if (ReferenceEquals (next.Path' this) && Math.Abs (last.IndexInPath - next.IndexInPath) < 10)  		//same path only if distance >=10  		continue;  	if (next.IndexInPath + (null == next.Path._parent ? 0 : next.Path._forkedAtParents) < 5)  		//only take long paths' consider the immediate parent too  		continue;  	ConnectCells (last' next' dir [i]);  	_wallAtEndRemoved = true;  	return true;  }  
Magic Number,RandomMaze,Path,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: if (ReferenceEquals (next.Path' this) && Math.Abs (last.IndexInPath - next.IndexInPath) < 10)  	//same path only if distance >=10  	continue;  
Magic Number,RandomMaze,Path,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,TryRemoveWallAtEnd,The following statement contains a magic number: if (next.IndexInPath + (null == next.Path._parent ? 0 : next.Path._forkedAtParents) < 5)  	//only take long paths' consider the immediate parent too  	continue;  
Magic Number,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Maze,The following statement contains a magic number: _cells [0] [0] [0].RemoveWall (Direction.All [3]);  
Magic Number,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,Mazefy,The following statement contains a magic number: if (XSize * YSize * ZSize > 90)  	AddCycles ();  
Magic Number,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,AddCycles,The following statement contains a magic number: for (int i = 0; i < Math.Sqrt (XSize * YSize * ZSize) / 10.0 + 1; ++i) {  	for (int tries = 0; tries < 5; ++tries)//try some times to remove a wall somewhere' it may fail though  	 {  		Path p = _allPaths [r.Next (_allPaths.Count)];  		if (p.TryRemoveWallAtEnd ())  			break;  	}  }  
Magic Number,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,AddCycles,The following statement contains a magic number: for (int i = 0; i < Math.Sqrt (XSize * YSize * ZSize) / 10.0 + 1; ++i) {  	for (int tries = 0; tries < 5; ++tries)//try some times to remove a wall somewhere' it may fail though  	 {  		Path p = _allPaths [r.Next (_allPaths.Count)];  		if (p.TryRemoveWallAtEnd ())  			break;  	}  }  
Magic Number,RandomMaze,Maze,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,AddCycles,The following statement contains a magic number: for (int tries = 0; tries < 5; ++tries)//try some times to remove a wall somewhere' it may fail though   {  	Path p = _allPaths [r.Next (_allPaths.Count)];  	if (p.TryRemoveWallAtEnd ())  		break;  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: if (Bounds.Width < 3 || Bounds.Length < 3) {  	Player.Message ("Too small area marked (at least 3x3 blocks by X and Y)");  	return false;  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: if (Bounds.Width < 3 || Bounds.Length < 3) {  	Player.Message ("Too small area marked (at least 3x3 blocks by X and Y)");  	return false;  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: if (Bounds.Width % 2 != 1 || Bounds.Length % 2 != 1) {  	Player.Message ("Warning: bounding box X and Y dimensions must be uneven' current bounding box will be cropped!");  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: if (Bounds.Width % 2 != 1 || Bounds.Length % 2 != 1) {  	Player.Message ("Warning: bounding box X and Y dimensions must be uneven' current bounding box will be cropped!");  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: _maze = new Maze ((Bounds.Width - 1) / 2' (Bounds.Length - 1) / 2' 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,Prepare,The following statement contains a magic number: _maze = new Maze ((Bounds.Width - 1) / 2' (Bounds.Length - 1) / 2' 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int j = 0; j < _maze.YSize; ++j) {  	for (int i = 0; i < _maze.XSize; ++i) {  		DrawAtXY (i * 2' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  			DrawAtXY (i * 2 + 1' j * 2);  		if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  			DrawAtXY (i * 2' j * 2 + 1);  	}  	DrawAtXY (_maze.XSize * 2' j * 2);  	if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  		DrawAtXY (_maze.XSize * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  		DrawAtXY (i * 2 + 1' j * 2);  	if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  		DrawAtXY (i * 2' j * 2 + 1);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  	DrawAtXY (i * 2 + 1' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  	DrawAtXY (i * 2 + 1' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' j' 0).Wall (Direction.All [3]))  	DrawAtXY (i * 2 + 1' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2 + 1' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2 + 1' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  	DrawAtXY (i * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  	DrawAtXY (i * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' j' 0).Wall (Direction.All [2]))  	DrawAtXY (i * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (_maze.XSize * 2' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (_maze.XSize * 2' j * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  	DrawAtXY (_maze.XSize * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (_maze.XSize - 1' j' 0).Wall (Direction.All [0]))  	DrawAtXY (_maze.XSize * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (_maze.XSize * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (_maze.XSize * 2' j * 2 + 1);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' _maze.YSize * 2);  	if (_maze.GetCell (i' _maze.YSize - 1' 0).Wall (Direction.All [1]))  		DrawAtXY (i * 2 + 1' _maze.YSize * 2);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' _maze.YSize * 2);  	if (_maze.GetCell (i' _maze.YSize - 1' 0).Wall (Direction.All [1]))  		DrawAtXY (i * 2 + 1' _maze.YSize * 2);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' _maze.YSize * 2);  	if (_maze.GetCell (i' _maze.YSize - 1' 0).Wall (Direction.All [1]))  		DrawAtXY (i * 2 + 1' _maze.YSize * 2);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int i = 0; i < _maze.XSize; ++i) {  	DrawAtXY (i * 2' _maze.YSize * 2);  	if (_maze.GetCell (i' _maze.YSize - 1' 0).Wall (Direction.All [1]))  		DrawAtXY (i * 2 + 1' _maze.YSize * 2);  }  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' _maze.YSize - 1' 0).Wall (Direction.All [1]))  	DrawAtXY (i * 2 + 1' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: if (_maze.GetCell (i' _maze.YSize - 1' 0).Wall (Direction.All [1]))  	DrawAtXY (i * 2 + 1' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2 + 1' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (i * 2 + 1' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (_maze.XSize * 2' _maze.YSize * 2);  
Magic Number,RandomMaze,MazeCuboidDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\MazeCuboidDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawAtXY (_maze.XSize * 2' _maze.YSize * 2);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int zCell = 0; zCell < _maze.ZSize; ++zCell) {  	for (int yCell = 0; yCell < _maze.YSize; ++yCell) {  		for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  			DrawCell (xCell' yCell' zCell);  		}  		//last cell in raw  		DrawWall (_maze.XSize - 1' yCell' zCell' Direction.All [0]);  		DrawColumn (_maze.XSize' yCell' zCell' Direction.All [4]);  		DrawColumn (_maze.XSize' yCell' zCell' Direction.All [1]);  	}  	//side walls for the last raw  	for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  		DrawWall (xCell' _maze.YSize - 1' zCell' Direction.All [1]);  		DrawColumn (xCell' _maze.YSize' zCell' Direction.All [4]);  		DrawColumn (xCell' _maze.YSize' zCell' Direction.All [0]);  	}  	DrawColumn (_maze.XSize' _maze.YSize' zCell' Direction.All [4]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int zCell = 0; zCell < _maze.ZSize; ++zCell) {  	for (int yCell = 0; yCell < _maze.YSize; ++yCell) {  		for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  			DrawCell (xCell' yCell' zCell);  		}  		//last cell in raw  		DrawWall (_maze.XSize - 1' yCell' zCell' Direction.All [0]);  		DrawColumn (_maze.XSize' yCell' zCell' Direction.All [4]);  		DrawColumn (_maze.XSize' yCell' zCell' Direction.All [1]);  	}  	//side walls for the last raw  	for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  		DrawWall (xCell' _maze.YSize - 1' zCell' Direction.All [1]);  		DrawColumn (xCell' _maze.YSize' zCell' Direction.All [4]);  		DrawColumn (xCell' _maze.YSize' zCell' Direction.All [0]);  	}  	DrawColumn (_maze.XSize' _maze.YSize' zCell' Direction.All [4]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int zCell = 0; zCell < _maze.ZSize; ++zCell) {  	for (int yCell = 0; yCell < _maze.YSize; ++yCell) {  		for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  			DrawCell (xCell' yCell' zCell);  		}  		//last cell in raw  		DrawWall (_maze.XSize - 1' yCell' zCell' Direction.All [0]);  		DrawColumn (_maze.XSize' yCell' zCell' Direction.All [4]);  		DrawColumn (_maze.XSize' yCell' zCell' Direction.All [1]);  	}  	//side walls for the last raw  	for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  		DrawWall (xCell' _maze.YSize - 1' zCell' Direction.All [1]);  		DrawColumn (xCell' _maze.YSize' zCell' Direction.All [4]);  		DrawColumn (xCell' _maze.YSize' zCell' Direction.All [0]);  	}  	DrawColumn (_maze.XSize' _maze.YSize' zCell' Direction.All [4]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int yCell = 0; yCell < _maze.YSize; ++yCell) {  	for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  		DrawCell (xCell' yCell' zCell);  	}  	//last cell in raw  	DrawWall (_maze.XSize - 1' yCell' zCell' Direction.All [0]);  	DrawColumn (_maze.XSize' yCell' zCell' Direction.All [4]);  	DrawColumn (_maze.XSize' yCell' zCell' Direction.All [1]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawColumn (_maze.XSize' yCell' zCell' Direction.All [4]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  	DrawWall (xCell' _maze.YSize - 1' zCell' Direction.All [1]);  	DrawColumn (xCell' _maze.YSize' zCell' Direction.All [4]);  	DrawColumn (xCell' _maze.YSize' zCell' Direction.All [0]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawColumn (xCell' _maze.YSize' zCell' Direction.All [4]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawColumn (_maze.XSize' _maze.YSize' zCell' Direction.All [4]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int yCell = 0; yCell < _maze.YSize; ++yCell) {  	for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  		DrawWall (xCell' yCell' _maze.ZSize - 1' Direction.All [5]);  		DrawColumn (xCell' yCell' _maze.ZSize' Direction.All [0]);  		DrawColumn (xCell' yCell' _maze.ZSize' Direction.All [1]);  	}  	//last cell in raw  	DrawColumn (_maze.XSize' yCell' _maze.ZSize' Direction.All [1]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: for (int xCell = 0; xCell < _maze.XSize; ++xCell) {  	DrawWall (xCell' yCell' _maze.ZSize - 1' Direction.All [5]);  	DrawColumn (xCell' yCell' _maze.ZSize' Direction.All [0]);  	DrawColumn (xCell' yCell' _maze.ZSize' Direction.All [1]);  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawBatch,The following statement contains a magic number: DrawWall (xCell' yCell' _maze.ZSize - 1' Direction.All [5]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawWall (xCell' yCell' zCell' Direction.All [2]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawWall (xCell' yCell' zCell' Direction.All [3]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawWall (xCell' yCell' zCell' Direction.All [4]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: DrawColumn (xCell' yCell' zCell' Direction.All [4]);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawCell,The following statement contains a magic number: if (_drawElevators && !_maze.GetCell (xCell' yCell' zCell).Wall (Direction.All [5]))  	DrawElevator (xCell' yCell' zCell);  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.X = xCell * (_cellSize + 1) + 1 + _cellSize / 2 + Marks [0].X;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.Y = yCell * (_cellSize + 1) + 1 + _cellSize / 2 + Marks [0].Y;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.Y = yCell * (_cellSize + 1) + 1 + _cellSize / 2 + Marks [0].Y;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: _wallPatternCoordY = _cellSize / 2;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: Coords.X = xCell * (_cellSize + 1) + 1 + _cellSize / 2 + Marks [0].X;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawElevator,The following statement contains a magic number: _wallPatternCoordX = _cellSize / 2;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawPartOfPartialWall,The following statement contains a magic number: for (coord = coordFrom; coord < coordFrom + _cellSize; ++coord) {  	patternCoord = coord - coordFrom;  	if (patternCoord == _cellSize / 2)  		continue;  	if (DrawOneBlock ())  		++_count;  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,DrawPartOfPartialWall,The following statement contains a magic number: if (patternCoord == _cellSize / 2)  	continue;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,ChoosePattern,The following statement contains a magic number: _patternIdx = _r.NextDouble () < 0.24 ? _r.Next (_patterns.Length) : -1;  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,NextBlock,The following statement contains a magic number: if (_patternIdx < 0) {  	if (_needHint) {  		_needHint = false;  		return HintBlock;  	}  	return _r.NextDouble () < 0.2 ? Block.Wood /*_playersBrush.NextBlock(this)*/: _randomBlocks [_r.Next (_randomBlocks.Length)];  }  
Magic Number,RandomMaze,RandomMazeDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\RandomMazeDrawOperation.cs,NextBlock,The following statement contains a magic number: return _r.NextDouble () < 0.2 ? Block.Wood /*_playersBrush.NextBlock(this)*/: _randomBlocks [_r.Next (_randomBlocks.Length)];  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math1,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math1,The following statement contains a magic number: Thread.Sleep (15000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math2,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,math2,The following statement contains a magic number: Thread.Sleep (15000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: wait (6000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: foreach (Player p in world.Players) {  	if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  		p.Message ("&8Thanks.");  		if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  			world.blueScore++;  			completed.Add (p);  		} else {  			world.redScore++;  			completed.Add (p);  		}  	} else {  		p.Message ("&8I told you to stay off the grass...");  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: foreach (Player p in world.Players) {  	if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  		p.Message ("&8Thanks.");  		if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  			world.blueScore++;  			completed.Add (p);  		} else {  			world.redScore++;  			completed.Add (p);  		}  	} else {  		p.Message ("&8I told you to stay off the grass...");  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: foreach (Player p in world.Players) {  	if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  		p.Message ("&8Thanks.");  		if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  			world.blueScore++;  			completed.Add (p);  		} else {  			world.redScore++;  			completed.Add (p);  		}  	} else {  		p.Message ("&8I told you to stay off the grass...");  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: foreach (Player p in world.Players) {  	if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  		p.Message ("&8Thanks.");  		if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  			world.blueScore++;  			completed.Add (p);  		} else {  			world.redScore++;  			completed.Add (p);  		}  	} else {  		p.Message ("&8I told you to stay off the grass...");  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  	p.Message ("&8Thanks.");  	if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  		world.blueScore++;  		completed.Add (p);  	} else {  		world.redScore++;  		completed.Add (p);  	}  } else {  	p.Message ("&8I told you to stay off the grass...");  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  	p.Message ("&8Thanks.");  	if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  		world.blueScore++;  		completed.Add (p);  	} else {  		world.redScore++;  		completed.Add (p);  	}  } else {  	p.Message ("&8I told you to stay off the grass...");  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  	p.Message ("&8Thanks.");  	if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  		world.blueScore++;  		completed.Add (p);  	} else {  		world.redScore++;  		completed.Add (p);  	}  } else {  	p.Message ("&8I told you to stay off the grass...");  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,getOffGrass,The following statement contains a magic number: if (world.Map.GetBlock (p.Position.X / 32' p.Position.Y / 32' (short)(p.Position.Z / 32 - 1.59375)) != Block.Grass) {  	p.Message ("&8Thanks.");  	if (world.blueTeam.Contains (p) && !completed.Contains (p)) {  		world.blueScore++;  		completed.Add (p);  	} else {  		world.redScore++;  		completed.Add (p);  	}  } else {  	p.Message ("&8I told you to stay off the grass...");  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: for (int x = startX; x <= startX + 5; x++) {  	for (int y = startY; y <= startY + 5; y++) {  		for (int z = startZ; z <= startZ + 1; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Pink));  			platform.TryAdd (new Vector3I (x' y' z).ToString ()' new Vector3I (x' y' z));  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: for (int x = startX; x <= startX + 5; x++) {  	for (int y = startY; y <= startY + 5; y++) {  		for (int z = startZ; z <= startZ + 1; z++) {  			world.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Pink));  			platform.TryAdd (new Vector3I (x' y' z).ToString ()' new Vector3I (x' y' z));  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: for (int y = startY; y <= startY + 5; y++) {  	for (int z = startZ; z <= startZ + 1; z++) {  		world.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)y' (short)z' Block.Pink));  		platform.TryAdd (new Vector3I (x' y' z).ToString ()' new Vector3I (x' y' z));  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: wait (20000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,pinkPlatform,The following statement contains a magic number: wait (10000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: foreach (Player p in world.Players) {  	Vector3I block = new Vector3I (p.Position.X / 32' p.Position.Y / 32' (p.Position.Z / 32) + 8);  	if (world.Map.InBounds (block)) {  		randomBlocks.TryAdd (block.ToString ()' block);  		world.Map.QueueUpdate (new BlockUpdate (null' block' Block.Black));  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: foreach (Player p in world.Players) {  	Vector3I block = new Vector3I (p.Position.X / 32' p.Position.Y / 32' (p.Position.Z / 32) + 8);  	if (world.Map.InBounds (block)) {  		randomBlocks.TryAdd (block.ToString ()' block);  		world.Map.QueueUpdate (new BlockUpdate (null' block' Block.Black));  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: foreach (Player p in world.Players) {  	Vector3I block = new Vector3I (p.Position.X / 32' p.Position.Y / 32' (p.Position.Z / 32) + 8);  	if (world.Map.InBounds (block)) {  		randomBlocks.TryAdd (block.ToString ()' block);  		world.Map.QueueUpdate (new BlockUpdate (null' block' Block.Black));  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: foreach (Player p in world.Players) {  	Vector3I block = new Vector3I (p.Position.X / 32' p.Position.Y / 32' (p.Position.Z / 32) + 8);  	if (world.Map.InBounds (block)) {  		randomBlocks.TryAdd (block.ToString ()' block);  		world.Map.QueueUpdate (new BlockUpdate (null' block' Block.Black));  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: wait (10000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,shootBlack,The following statement contains a magic number: wait (10000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Player player in world.Players) {  	foreach (Vector3I platBlock in platform.Values) {  		if ((player.Position.X / 32) == platBlock.X) {  			if ((player.Position.Y / 32) == platBlock.Y) {  				if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  					player.Message ("&8You did it!");  					if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  						world.blueScore++;  						completed.Add (player);  					} else {  						world.redScore++;  						completed.Add (player);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Player player in world.Players) {  	foreach (Vector3I platBlock in platform.Values) {  		if ((player.Position.X / 32) == platBlock.X) {  			if ((player.Position.Y / 32) == platBlock.Y) {  				if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  					player.Message ("&8You did it!");  					if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  						world.blueScore++;  						completed.Add (player);  					} else {  						world.redScore++;  						completed.Add (player);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Player player in world.Players) {  	foreach (Vector3I platBlock in platform.Values) {  		if ((player.Position.X / 32) == platBlock.X) {  			if ((player.Position.Y / 32) == platBlock.Y) {  				if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  					player.Message ("&8You did it!");  					if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  						world.blueScore++;  						completed.Add (player);  					} else {  						world.redScore++;  						completed.Add (player);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Player player in world.Players) {  	foreach (Vector3I platBlock in platform.Values) {  		if ((player.Position.X / 32) == platBlock.X) {  			if ((player.Position.Y / 32) == platBlock.Y) {  				if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  					player.Message ("&8You did it!");  					if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  						world.blueScore++;  						completed.Add (player);  					} else {  						world.redScore++;  						completed.Add (player);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Player player in world.Players) {  	foreach (Vector3I platBlock in platform.Values) {  		if ((player.Position.X / 32) == platBlock.X) {  			if ((player.Position.Y / 32) == platBlock.Y) {  				if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  					player.Message ("&8You did it!");  					if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  						world.blueScore++;  						completed.Add (player);  					} else {  						world.redScore++;  						completed.Add (player);  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Vector3I platBlock in platform.Values) {  	if ((player.Position.X / 32) == platBlock.X) {  		if ((player.Position.Y / 32) == platBlock.Y) {  			if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  				player.Message ("&8You did it!");  				if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  					world.blueScore++;  					completed.Add (player);  				} else {  					world.redScore++;  					completed.Add (player);  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Vector3I platBlock in platform.Values) {  	if ((player.Position.X / 32) == platBlock.X) {  		if ((player.Position.Y / 32) == platBlock.Y) {  			if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  				player.Message ("&8You did it!");  				if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  					world.blueScore++;  					completed.Add (player);  				} else {  					world.redScore++;  					completed.Add (player);  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Vector3I platBlock in platform.Values) {  	if ((player.Position.X / 32) == platBlock.X) {  		if ((player.Position.Y / 32) == platBlock.Y) {  			if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  				player.Message ("&8You did it!");  				if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  					world.blueScore++;  					completed.Add (player);  				} else {  					world.redScore++;  					completed.Add (player);  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Vector3I platBlock in platform.Values) {  	if ((player.Position.X / 32) == platBlock.X) {  		if ((player.Position.Y / 32) == platBlock.Y) {  			if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  				player.Message ("&8You did it!");  				if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  					world.blueScore++;  					completed.Add (player);  				} else {  					world.redScore++;  					completed.Add (player);  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: foreach (Vector3I platBlock in platform.Values) {  	if ((player.Position.X / 32) == platBlock.X) {  		if ((player.Position.Y / 32) == platBlock.Y) {  			if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  				player.Message ("&8You did it!");  				if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  					world.blueScore++;  					completed.Add (player);  				} else {  					world.redScore++;  					completed.Add (player);  				}  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.X / 32) == platBlock.X) {  	if ((player.Position.Y / 32) == platBlock.Y) {  		if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  			player.Message ("&8You did it!");  			if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  				world.blueScore++;  				completed.Add (player);  			} else {  				world.redScore++;  				completed.Add (player);  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.X / 32) == platBlock.X) {  	if ((player.Position.Y / 32) == platBlock.Y) {  		if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  			player.Message ("&8You did it!");  			if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  				world.blueScore++;  				completed.Add (player);  			} else {  				world.redScore++;  				completed.Add (player);  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.X / 32) == platBlock.X) {  	if ((player.Position.Y / 32) == platBlock.Y) {  		if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  			player.Message ("&8You did it!");  			if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  				world.blueScore++;  				completed.Add (player);  			} else {  				world.redScore++;  				completed.Add (player);  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.X / 32) == platBlock.X) {  	if ((player.Position.Y / 32) == platBlock.Y) {  		if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  			player.Message ("&8You did it!");  			if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  				world.blueScore++;  				completed.Add (player);  			} else {  				world.redScore++;  				completed.Add (player);  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.X / 32) == platBlock.X) {  	if ((player.Position.Y / 32) == platBlock.Y) {  		if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  			player.Message ("&8You did it!");  			if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  				world.blueScore++;  				completed.Add (player);  			} else {  				world.redScore++;  				completed.Add (player);  			}  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Y / 32) == platBlock.Y) {  	if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  		player.Message ("&8You did it!");  		if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  			world.blueScore++;  			completed.Add (player);  		} else {  			world.redScore++;  			completed.Add (player);  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Y / 32) == platBlock.Y) {  	if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  		player.Message ("&8You did it!");  		if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  			world.blueScore++;  			completed.Add (player);  		} else {  			world.redScore++;  			completed.Add (player);  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Y / 32) == platBlock.Y) {  	if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  		player.Message ("&8You did it!");  		if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  			world.blueScore++;  			completed.Add (player);  		} else {  			world.redScore++;  			completed.Add (player);  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Y / 32) == platBlock.Y) {  	if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  		player.Message ("&8You did it!");  		if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  			world.blueScore++;  			completed.Add (player);  		} else {  			world.redScore++;  			completed.Add (player);  		}  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  	player.Message ("&8You did it!");  	if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  		world.blueScore++;  		completed.Add (player);  	} else {  		world.redScore++;  		completed.Add (player);  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  	player.Message ("&8You did it!");  	if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  		world.blueScore++;  		completed.Add (player);  	} else {  		world.redScore++;  		completed.Add (player);  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,PositionCheck,The following statement contains a magic number: if ((player.Position.Z / 32 - 2) == platBlock.Z || (player.Position.Z / 32 - 1) == platBlock.Z) {  	player.Message ("&8You did it!");  	if (world.blueTeam.Contains (player) && !completed.Contains (player)) {  		world.blueScore++;  		completed.Add (player);  	} else {  		world.redScore++;  		completed.Add (player);  	}  }  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,interval,The following statement contains a magic number: wait (5000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,interval,The following statement contains a magic number: wait (5000);  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,Start,The following statement contains a magic number: GameThread = new Thread (new ThreadStart (delegate {  	Init (world);  	world.GameOn = true;  	Server.Players.Message ("{0}&S Started a game of MineChallenge on world {1}"' player.ClassyName' world.ClassyName);  	foreach (Player p in world.Players) {  		TeamChooser (p' world);  	}  	Server.Players.Message ("&SThe game will start in 60 Seconds.");  	GameAdder (world);  	// wait(60000);  	world.Players.Message ("&SThe game has started!.");  	wait (2000);  	gamePicker ();  	Scheduler.NewTask (t => PositionCheck ()).RunForever (TimeSpan.FromSeconds (1));  }));  
Magic Number,fCraft.Games,MineChallenge,F:\newReposMay17\GlennMR_800craft\fCraft\Games\MineChallenge.cs,Start,The following statement contains a magic number: wait (2000);  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeader,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	BinaryReader reader = new BinaryReader (mapStream);  	Map map = LoadHeaderInternal (reader);  	// skip the index  	int layerCount = reader.ReadByte ();  	mapStream.Seek (25 * layerCount' SeekOrigin.Current);  	// read metadata  	int metaCount = reader.ReadInt32 ();  	using (var ds = new DeflateStream (mapStream' CompressionMode.Decompress)) {  		var br = new BinaryReader (ds);  		for (int i = 0; i < metaCount; i++) {  			string group = ReadLengthPrefixedString (br).ToLowerInvariant ();  			string key = ReadLengthPrefixedString (br).ToLowerInvariant ();  			string newValue = ReadLengthPrefixedString (br);  			IConverterExtension ex;  			if (_extensions.TryGetValue (group' out ex)) {  				ex.Deserialize (group' key' newValue' map);  			} else {  				string oldValue;  				if (map.Metadata.TryGetValue (key' group' out oldValue) && oldValue != newValue) {  					Logger.Log (LogType.Warning' "MapFCMv3.LoadHeader: Duplicate metadata entry found for [{0}].[{1}]. " + "Old value (overwritten): \"{2}\". New value: \"{3}\""' group' key' oldValue' newValue);  				}  				map.Metadata [group' key] = newValue;  			}  		}  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeader,The following statement contains a magic number: mapStream.Seek (25 * layerCount' SeekOrigin.Current);  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	BinaryReader reader = new BinaryReader (mapStream);  	Map map = LoadHeaderInternal (reader);  	// read the layer index  	int layerCount = reader.ReadByte ();  	if (layerCount < 1) {  		throw new MapFormatException ("No data layers found.");  	}  	mapStream.Seek (25 * layerCount' SeekOrigin.Current);  	// read metadata  	int metaSize = reader.ReadInt32 ();  	using (var ds = new DeflateStream (mapStream' CompressionMode.Decompress)) {  		var br = new BinaryReader (ds);  		for (int i = 0; i < metaSize; i++) {  			string group = ReadLengthPrefixedString (br).ToLowerInvariant ();  			string key = ReadLengthPrefixedString (br).ToLowerInvariant ();  			string newValue = ReadLengthPrefixedString (br);  			IConverterExtension ex;  			if (_extensions.TryGetValue (group' out ex)) {  				ex.Deserialize (group' key' newValue' map);  			} else {  				string oldValue;  				if (map.Metadata.TryGetValue (key' group' out oldValue) && oldValue != newValue) {  					Logger.Log (LogType.Warning' "MapFCMv3.LoadHeader: Duplicate metadata entry found for [{0}].[{1}]. " + "Old value (overwritten): \"{2}\". New value: \"{3}\""' group' key' oldValue' newValue);  				}  				map.Metadata [group' key] = newValue;  			}  		}  		map.Blocks = new byte[map.Volume];  		ds.Read (map.Blocks' 0' map.Blocks.Length);  		map.RemoveUnknownBlocktypes ();  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Load,The following statement contains a magic number: mapStream.Seek (25 * layerCount' SeekOrigin.Current);  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,LoadHeaderInternal,The following statement contains a magic number: map.Guid = new Guid (reader.ReadBytes (16));  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	BinaryWriter writer = new BinaryWriter (mapStream);  	writer.Write (Identifier);  	writer.Write (Revision);  	writer.Write ((short)mapToSave.Width);  	writer.Write ((short)mapToSave.Height);  	writer.Write ((short)mapToSave.Length);  	writer.Write ((int)mapToSave.Spawn.X);  	writer.Write ((int)mapToSave.Spawn.Z);  	writer.Write ((int)mapToSave.Spawn.Y);  	writer.Write (mapToSave.Spawn.R);  	writer.Write (mapToSave.Spawn.L);  	mapToSave.DateModified = DateTime.UtcNow;  	writer.Write ((uint)mapToSave.DateModified.ToUnixTimeLegacy ());  	writer.Write ((uint)mapToSave.DateCreated.ToUnixTimeLegacy ());  	writer.Write (mapToSave.Guid.ToByteArray ());  	writer.Write ((byte)1);  	// layer count  	// skip over index and metacount  	long indexOffset = mapStream.Position;  	writer.Seek (29' SeekOrigin.Current);  	byte[] blocksCache = mapToSave.Blocks;  	int metaCount' compressedLength;  	long offset;  	using (DeflateStream ds = new DeflateStream (mapStream' CompressionMode.Compress' true)) {  		using (BufferedStream bs = new BufferedStream (ds)) {  			// write metadata  			metaCount = WriteMetadata (bs' mapToSave);  			offset = mapStream.Position;  			// inaccurate' but who cares  			bs.Write (blocksCache' 0' blocksCache.Length);  			compressedLength = (int)(mapStream.Position - offset);  		}  	}  	// come back to write the index  	writer.BaseStream.Seek (indexOffset' SeekOrigin.Begin);  	writer.Write ((byte)0);  	// data layer type (Blocks)  	writer.Write (offset);  	// offset' in bytes' from start of stream  	writer.Write (compressedLength);  	// compressed length' in bytes  	writer.Write (0);  	// general purpose field  	writer.Write (1);  	// element size  	writer.Write (blocksCache.Length);  	// element count  	writer.Write (metaCount);  	return true;  }  
Magic Number,fCraft.MapConversion,MapFCMv3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv3.cs,Save,The following statement contains a magic number: writer.Seek (29' SeekOrigin.Current);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [50] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [51] = (byte)Block.StillLava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [52] = (byte)Block.Blue;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [53] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [54] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [55] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [56] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [57] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [58] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [59] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [60] = (byte)Block.Obsidian;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [61] = (byte)Block.Cobblestone;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [62] = (byte)Block.StillLava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [200] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [201] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [203] = (byte)Block.Stair;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [206] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [207] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [209] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [210] = (byte)Block.Sand;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [211] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [212] = (byte)Block.RedFlower;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [213] = (byte)Block.Gravel;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [215] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [216] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [217] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [219] = (byte)Block.Sponge;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [220] = (byte)Block.Sponge;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [221] = (byte)Block.Gold;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [222] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [223] = (byte)Block.Gold;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [224] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [225] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [226] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [227] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [228] = (byte)Block.Iron;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [229] = (byte)Block.Iron;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [230] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [231] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [232] = (byte)Block.Black;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [235] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [236] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [244] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [245] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [247] = (byte)Block.Iron;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,MapD3,The following statement contains a magic number: Mapping [248] = (byte)Block.Obsidian;  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  			return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  			return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  			return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  			return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  			return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  			return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  		return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  		return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  		return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  		return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  		return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  		return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Claims,The following statement contains a magic number: return (formatVersion == 1000 || formatVersion == 1010 || formatVersion == 1020 || formatVersion == 1030 || formatVersion == 1040 || formatVersion == 1050);  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress' true)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	// Read in the map dimesions  	int width = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	int length = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	int height = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	Map map = new Map (null' width' length' height' false);  	Position spawn = new Position ();  	switch (formatVersion) {  	case 1000:  	case 1010:  		break;  	case 1020:  		spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		map.Spawn = spawn;  		break;  	//case 1030:  	//case 1040:  	//case 1050:  	default:  		spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.R = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.L = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		map.Spawn = spawn;  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress' true)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	// Read in the map dimesions  	int width = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	int length = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	int height = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	Map map = new Map (null' width' length' height' false);  	Position spawn = new Position ();  	switch (formatVersion) {  	case 1000:  	case 1010:  		break;  	case 1020:  		spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		map.Spawn = spawn;  		break;  	//case 1030:  	//case 1040:  	//case 1050:  	default:  		spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.R = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.L = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		map.Spawn = spawn;  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress' true)) {  	BinaryReader bs = new BinaryReader (gs);  	int formatVersion = IPAddress.NetworkToHostOrder (bs.ReadInt32 ());  	// Read in the map dimesions  	int width = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	int length = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	int height = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	Map map = new Map (null' width' length' height' false);  	Position spawn = new Position ();  	switch (formatVersion) {  	case 1000:  	case 1010:  		break;  	case 1020:  		spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		map.Spawn = spawn;  		break;  	//case 1030:  	//case 1040:  	//case 1050:  	default:  		spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.R = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		spawn.L = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  		map.Spawn = spawn;  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: switch (formatVersion) {  case 1000:  case 1010:  	break;  case 1020:  	spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	map.Spawn = spawn;  	break;  //case 1030:  //case 1040:  //case 1050:  default:  	spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.R = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.L = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	map.Spawn = spawn;  	break;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: switch (formatVersion) {  case 1000:  case 1010:  	break;  case 1020:  	spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	map.Spawn = spawn;  	break;  //case 1030:  //case 1040:  //case 1050:  default:  	spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.R = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.L = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	map.Spawn = spawn;  	break;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,LoadHeaderInternal,The following statement contains a magic number: switch (formatVersion) {  case 1000:  case 1010:  	break;  case 1020:  	spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	map.Spawn = spawn;  	break;  //case 1030:  //case 1040:  //case 1050:  default:  	spawn.X = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Y = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.Z = IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.R = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	spawn.L = (byte)IPAddress.NetworkToHostOrder (bs.ReadInt16 ());  	map.Spawn = spawn;  	break;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write (IPAddress.HostToNetworkOrder (1050));  		bs.Write ((byte)0);  		bs.Write ((byte)0);  		// Write the map dimensions  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  		bs.Close ();  		return true;  	}  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write (IPAddress.HostToNetworkOrder (1050));  	bs.Write ((byte)0);  	bs.Write ((byte)0);  	// Write the map dimensions  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	bs.Close ();  	return true;  }  
Magic Number,fCraft.MapConversion,MapD3,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapD3.cs,Save,The following statement contains a magic number: bs.Write (IPAddress.HostToNetworkOrder (1050));  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: if (metaFile.Contains ("spawn"' "x"' "y"' "z"' "h")) {  	map.Spawn = new Position {  		X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  		Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  		Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  		R = Byte.Parse (metaFile ["spawn"' "h"])'  		L = 0  	};  }  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: if (metaFile.Contains ("spawn"' "x"' "y"' "z"' "h")) {  	map.Spawn = new Position {  		X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  		Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  		Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  		R = Byte.Parse (metaFile ["spawn"' "h"])'  		L = 0  	};  }  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: if (metaFile.Contains ("spawn"' "x"' "y"' "z"' "h")) {  	map.Spawn = new Position {  		X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  		Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  		Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  		R = Byte.Parse (metaFile ["spawn"' "h"])'  		L = 0  	};  }  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: if (metaFile.Contains ("spawn"' "x"' "y"' "z"' "h")) {  	map.Spawn = new Position {  		X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  		Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  		Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  		R = Byte.Parse (metaFile ["spawn"' "h"])'  		L = 0  	};  }  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: if (metaFile.Contains ("spawn"' "x"' "y"' "z"' "h")) {  	map.Spawn = new Position {  		X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  		Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  		Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  		R = Byte.Parse (metaFile ["spawn"' "h"])'  		L = 0  	};  }  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: if (metaFile.Contains ("spawn"' "x"' "y"' "z"' "h")) {  	map.Spawn = new Position {  		X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  		Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  		Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  		R = Byte.Parse (metaFile ["spawn"' "h"])'  		L = 0  	};  }  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  	Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  	Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  	R = Byte.Parse (metaFile ["spawn"' "h"])'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  	Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  	Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  	R = Byte.Parse (metaFile ["spawn"' "h"])'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  	Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  	Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  	R = Byte.Parse (metaFile ["spawn"' "h"])'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  	Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  	Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  	R = Byte.Parse (metaFile ["spawn"' "h"])'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  	Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  	Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  	R = Byte.Parse (metaFile ["spawn"' "h"])'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapMyne,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMyne.cs,LoadMeta,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(Int16.Parse (metaFile ["spawn"' "x"]) * 32 + 16)'  	Y = (short)(Int16.Parse (metaFile ["spawn"' "z"]) * 32 + 16)'  	Z = (short)(Int16.Parse (metaFile ["spawn"' "y"]) * 32 + 16)'  	R = Byte.Parse (metaFile ["spawn"' "h"])'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [255] = (byte)Block.Sponge;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [254] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [253] = (byte)Block.Sponge;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [252] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [251] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [250] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [249] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [248] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [247] = (byte)Block.Black;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [246] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [245] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [244] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [243] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [242] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [241] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [240] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [239] = (byte)Block.Admincrete;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [238] = (byte)Block.Admincrete;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [237] = (byte)Block.Green;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [236] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,MapJTE,The following statement contains a magic number: Mapping [235] = (byte)Block.Sponge;  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  			BinaryReader bs = new BinaryReader (gs);  			byte version = bs.ReadByte ();  			return (version == 1 || version == 2);  		}  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  		BinaryReader bs = new BinaryReader (gs);  		byte version = bs.ReadByte ();  		return (version == 1 || version == 2);  	}  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Claims,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress)) {  	BinaryReader bs = new BinaryReader (gs);  	byte version = bs.ReadByte ();  	return (version == 1 || version == 2);  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Claims,The following statement contains a magic number: return (version == 1 || version == 2);  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,LoadHeaderInternal,The following statement contains a magic number: if (version != 1 && version != 2)  	throw new MapFormatException ();  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write ((byte)0x01);  		// Write the spawn location  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  		//Write the spawn orientation  		bs.Write (mapToSave.Spawn.R);  		bs.Write (mapToSave.Spawn.L);  		// Write the map dimensions  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	}  	return true;  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write ((byte)0x01);  		// Write the spawn location  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  		//Write the spawn orientation  		bs.Write (mapToSave.Spawn.R);  		bs.Write (mapToSave.Spawn.L);  		// Write the map dimensions  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	}  	return true;  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write ((byte)0x01);  		// Write the spawn location  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  		bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  		//Write the spawn orientation  		bs.Write (mapToSave.Spawn.R);  		bs.Write (mapToSave.Spawn.L);  		// Write the map dimensions  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  		bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	}  	return true;  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write ((byte)0x01);  	// Write the spawn location  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  	//Write the spawn orientation  	bs.Write (mapToSave.Spawn.R);  	bs.Write (mapToSave.Spawn.L);  	// Write the map dimensions  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write ((byte)0x01);  	// Write the spawn location  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  	//Write the spawn orientation  	bs.Write (mapToSave.Spawn.R);  	bs.Write (mapToSave.Spawn.L);  	// Write the map dimensions  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write ((byte)0x01);  	// Write the spawn location  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  	bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  	//Write the spawn orientation  	bs.Write (mapToSave.Spawn.R);  	bs.Write (mapToSave.Spawn.L);  	// Write the map dimensions  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Width));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Length));  	bs.Write (IPAddress.NetworkToHostOrder (mapToSave.Height));  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  }  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.X / 32)));  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Z / 32)));  
Magic Number,fCraft.MapConversion,MapJTE,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapJTE.cs,Save,The following statement contains a magic number: bs.Write (IPAddress.NetworkToHostOrder ((short)(mapToSave.Spawn.Y / 32)));  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [50] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [51] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [52] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [53] = (byte)Block.Stair;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [54] = (byte)Block.Wood;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [55] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [56] = (byte)Block.IronOre;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [57] = (byte)Block.Aqua;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [58] = (byte)Block.Log;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [59] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [60] = (byte)Block.Dirt;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [61] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [62] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [63] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [64] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [65] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [66] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [67] = (byte)Block.Stair;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [68] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [69] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [70] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [71] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [72] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [73] = (byte)Block.IronOre;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [74] = (byte)Block.IronOre;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [75] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [76] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [77] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [78] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [79] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [80] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [81] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [82] = (byte)Block.Gray;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [83] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [84] = (byte)Block.Log;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [85] = (byte)Block.Wood;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [86] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [87] = (byte)Block.Dirt;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [88] = (byte)Block.Gravel;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [89] = (byte)Block.Sand;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [90] = (byte)Block.Violet;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,MapDat,The following statement contains a magic number: Mapping [91] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		byte[] temp = new byte[8];  		mapStream.Seek (-4' SeekOrigin.End);  		mapStream.Read (temp' 0' 4);  		mapStream.Seek (0' SeekOrigin.Begin);  		int length = BitConverter.ToInt32 (temp' 0);  		byte[] data = new byte[length];  		using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  			reader.Read (data' 0' length);  		}  		for (int i = 0; i < length - 1; i++) {  			if (data [i] == 0xAC && data [i + 1] == 0xED) {  				return true;  			}  		}  		return false;  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		byte[] temp = new byte[8];  		mapStream.Seek (-4' SeekOrigin.End);  		mapStream.Read (temp' 0' 4);  		mapStream.Seek (0' SeekOrigin.Begin);  		int length = BitConverter.ToInt32 (temp' 0);  		byte[] data = new byte[length];  		using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  			reader.Read (data' 0' length);  		}  		for (int i = 0; i < length - 1; i++) {  			if (data [i] == 0xAC && data [i + 1] == 0xED) {  				return true;  			}  		}  		return false;  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		byte[] temp = new byte[8];  		mapStream.Seek (-4' SeekOrigin.End);  		mapStream.Read (temp' 0' 4);  		mapStream.Seek (0' SeekOrigin.Begin);  		int length = BitConverter.ToInt32 (temp' 0);  		byte[] data = new byte[length];  		using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  			reader.Read (data' 0' length);  		}  		for (int i = 0; i < length - 1; i++) {  			if (data [i] == 0xAC && data [i + 1] == 0xED) {  				return true;  			}  		}  		return false;  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int length = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[length];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' length);  	}  	for (int i = 0; i < length - 1; i++) {  		if (data [i] == 0xAC && data [i + 1] == 0xED) {  			return true;  		}  	}  	return false;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int length = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[length];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' length);  	}  	for (int i = 0; i < length - 1; i++) {  		if (data [i] == 0xAC && data [i + 1] == 0xED) {  			return true;  		}  	}  	return false;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int length = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[length];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' length);  	}  	for (int i = 0; i < length - 1; i++) {  		if (data [i] == 0xAC && data [i + 1] == 0xED) {  			return true;  		}  	}  	return false;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: mapStream.Seek (-4' SeekOrigin.End);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Claims,The following statement contains a magic number: mapStream.Read (temp' 0' 4);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	byte[] temp = new byte[8];  	Map map = null;  	mapStream.Seek (-4' SeekOrigin.End);  	mapStream.Read (temp' 0' 4);  	mapStream.Seek (0' SeekOrigin.Begin);  	int uncompressedLength = BitConverter.ToInt32 (temp' 0);  	byte[] data = new byte[uncompressedLength];  	using (GZipStream reader = new GZipStream (mapStream' CompressionMode.Decompress' true)) {  		reader.Read (data' 0' uncompressedLength);  	}  	for (int i = 0; i < uncompressedLength - 1; i++) {  		if (data [i] != 0xAC || data [i + 1] != 0xED)  			continue;  		// bypassing the header crap  		int pointer = i + 6;  		Array.Copy (data' pointer' temp' 0' 2);  		pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 13;  		int headerEnd;  		// find the end of serialization listing  		for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  			if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  				headerEnd += 2;  				break;  			}  		}  		// start parsing serialization listing  		int offset = 0;  		int width = 0' length = 0' height = 0;  		Position spawn = new Position ();  		while (pointer < headerEnd) {  			switch ((char)data [pointer]) {  			case 'Z':  				offset++;  				break;  			case 'F':  			case 'I':  				offset += 4;  				break;  			case 'J':  				offset += 8;  				break;  			}  			pointer += 1;  			Array.Copy (data' pointer' temp' 0' 2);  			short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  			pointer += 2;  			// look for relevant variables  			Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  			if (MemCmp (data' pointer' "width")) {  				width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "depth")) {  				height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "height")) {  				length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  			} else if (MemCmp (data' pointer' "xSpawn")) {  				spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "ySpawn")) {  				spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			} else if (MemCmp (data' pointer' "zSpawn")) {  				spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  			}  			pointer += skip;  		}  		map = new Map (null' width' length' height' false) {  			Spawn = spawn  		};  		if (!map.ValidateHeader ()) {  			throw new MapFormatException ("One or more of the map dimensions are invalid.");  		}  		// find the start of the block array  		bool foundBlockArray = false;  		offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  		while (offset != -1 && offset < data.Length - 2) {  			if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  				foundBlockArray = true;  				pointer = offset + 7;  			}  			offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  		}  		// copy the block array... or fail  		if (foundBlockArray) {  			map.Blocks = new byte[map.Volume];  			Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  			map.ConvertBlockTypes (Mapping);  		} else {  			throw new MapFormatException ("Could not locate block array.");  		}  		break;  	}  	return map;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: mapStream.Seek (-4' SeekOrigin.End);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: mapStream.Read (temp' 0' 4);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (int i = 0; i < uncompressedLength - 1; i++) {  	if (data [i] != 0xAC || data [i + 1] != 0xED)  		continue;  	// bypassing the header crap  	int pointer = i + 6;  	Array.Copy (data' pointer' temp' 0' 2);  	pointer += IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 13;  	int headerEnd;  	// find the end of serialization listing  	for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  		if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  			headerEnd += 2;  			break;  		}  	}  	// start parsing serialization listing  	int offset = 0;  	int width = 0' length = 0' height = 0;  	Position spawn = new Position ();  	while (pointer < headerEnd) {  		switch ((char)data [pointer]) {  		case 'Z':  			offset++;  			break;  		case 'F':  		case 'I':  			offset += 4;  			break;  		case 'J':  			offset += 8;  			break;  		}  		pointer += 1;  		Array.Copy (data' pointer' temp' 0' 2);  		short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  		pointer += 2;  		// look for relevant variables  		Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  		if (MemCmp (data' pointer' "width")) {  			width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "depth")) {  			height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "height")) {  			length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  		} else if (MemCmp (data' pointer' "xSpawn")) {  			spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "ySpawn")) {  			spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		} else if (MemCmp (data' pointer' "zSpawn")) {  			spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  		}  		pointer += skip;  	}  	map = new Map (null' width' length' height' false) {  		Spawn = spawn  	};  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	// find the start of the block array  	bool foundBlockArray = false;  	offset = Array.IndexOf<byte> (data' 0x00' headerEnd);  	while (offset != -1 && offset < data.Length - 2) {  		if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  			foundBlockArray = true;  			pointer = offset + 7;  		}  		offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  	}  	// copy the block array... or fail  	if (foundBlockArray) {  		map.Blocks = new byte[map.Volume];  		Array.Copy (data' pointer' map.Blocks' 0' map.Blocks.Length);  		map.ConvertBlockTypes (Mapping);  	} else {  		throw new MapFormatException ("Could not locate block array.");  	}  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy (data' pointer' temp' 0' 2);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: pointer += 13;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: for (headerEnd = pointer; headerEnd < data.Length - 1; headerEnd++) {  	if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  		headerEnd += 2;  		break;  	}  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (data [headerEnd] == 0x78 && data [headerEnd + 1] == 0x70) {  	headerEnd += 2;  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: headerEnd += 2;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (pointer < headerEnd) {  	switch ((char)data [pointer]) {  	case 'Z':  		offset++;  		break;  	case 'F':  	case 'I':  		offset += 4;  		break;  	case 'J':  		offset += 8;  		break;  	}  	pointer += 1;  	Array.Copy (data' pointer' temp' 0' 2);  	short skip = IPAddress.HostToNetworkOrder (BitConverter.ToInt16 (temp' 0));  	pointer += 2;  	// look for relevant variables  	Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  	if (MemCmp (data' pointer' "width")) {  		width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "depth")) {  		height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "height")) {  		length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  	} else if (MemCmp (data' pointer' "xSpawn")) {  		spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "ySpawn")) {  		spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	} else if (MemCmp (data' pointer' "zSpawn")) {  		spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  	}  	pointer += skip;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: switch ((char)data [pointer]) {  case 'Z':  	offset++;  	break;  case 'F':  case 'I':  	offset += 4;  	break;  case 'J':  	offset += 8;  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: switch ((char)data [pointer]) {  case 'Z':  	offset++;  	break;  case 'F':  case 'I':  	offset += 4;  	break;  case 'J':  	offset += 8;  	break;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: offset += 4;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: offset += 8;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy (data' pointer' temp' 0' 2);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: pointer += 2;  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: Array.Copy (data' headerEnd + offset - 4' temp' 0' 4);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "width")) {  	width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "width")) {  	width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "width")) {  	width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "width")) {  	width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "width")) {  	width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "width")) {  	width = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "depth")) {  	height = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "height")) {  	length = (ushort)IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0));  } else if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "xSpawn")) {  	spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: spawn.X = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "ySpawn")) {  	spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  } else if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: spawn.Z = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (MemCmp (data' pointer' "zSpawn")) {  	spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: spawn.Y = (short)(IPAddress.HostToNetworkOrder (BitConverter.ToInt32 (temp' 0)) * 32 + 16);  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (offset != -1 && offset < data.Length - 2) {  	if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  		foundBlockArray = true;  		pointer = offset + 7;  	}  	offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (offset != -1 && offset < data.Length - 2) {  	if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  		foundBlockArray = true;  		pointer = offset + 7;  	}  	offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: while (offset != -1 && offset < data.Length - 2) {  	if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  		foundBlockArray = true;  		pointer = offset + 7;  	}  	offset = Array.IndexOf<byte> (data' 0x00' offset + 1);  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  	foundBlockArray = true;  	pointer = offset + 7;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: if (data [offset] == 0x00 && data [offset + 1] == 0x78 && data [offset + 2] == 0x70) {  	foundBlockArray = true;  	pointer = offset + 7;  }  
Magic Number,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following statement contains a magic number: pointer = offset + 7;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [100] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [101] = (byte)Block.Obsidian;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [102] = (byte)Block.Brick;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [103] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [104] = (byte)Block.Cobblestone;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [106] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [110] = (byte)Block.Wood;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [111] = (byte)Block.Log;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [112] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [113] = (byte)Block.Obsidian;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [114] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [115] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [116] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [117] = (byte)Block.Sand;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [118] = (byte)Block.Wood;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [119] = (byte)Block.Green;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [120] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [121] = (byte)Block.Stair;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [122] = (byte)Block.Log;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [123] = (byte)Block.Obsidian;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [124] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [125] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [126] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [127] = (byte)Block.Sand;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [128] = (byte)Block.Wood;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [129] = (byte)Block.Green;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [130] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [131] = (byte)Block.Black;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [132] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [133] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [134] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [135] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [136] = (byte)Block.Stair;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [137] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [138] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [139] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [140] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [141] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [143] = (byte)Block.Aqua;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [144] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [145] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [146] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [147] = (byte)Block.Cyan;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [148] = (byte)Block.Log;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [149] = (byte)Block.Obsidian;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [150] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [151] = (byte)Block.Stone;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [152] = (byte)Block.Leaves;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [153] = (byte)Block.Sand;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [154] = (byte)Block.Wood;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [155] = (byte)Block.Green;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [156] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [157] = (byte)Block.Stair;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [158] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [159] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [160] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [161] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [162] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [164] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [165] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [166] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [167] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [175] = (byte)Block.Cyan;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [176] = (byte)Block.Orange;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [182] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [183] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [184] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [185] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [187] = (byte)Block.Glass;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [188] = (byte)Block.Gold;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [189] = (byte)Block.Iron;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [190] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [191] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [192] = (byte)Block.Air;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [193] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [194] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [195] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [196] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [211] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [212] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [230] = (byte)Block.Aqua;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [231] = (byte)Block.TNT;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [232] = (byte)Block.MossyRocks;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [233] = (byte)Block.Lime;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [235] = (byte)Block.White;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [236] = (byte)Block.Black;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [237] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [238] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [239] = (byte)Block.Water;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [240] = (byte)Block.Blue;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [242] = (byte)Block.Lava;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [245] = (byte)Block.Gold;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [246] = (byte)Block.Sponge;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [247] = (byte)Block.Gray;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [248] = (byte)Block.Red;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,MapMCSharp,The following statement contains a magic number: Mapping [249] = (byte)Block.Blue;  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,LoadHeaderInternal,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(bs.ReadInt16 () * 32)'  	Z = (short)(bs.ReadInt16 () * 32)'  	Y = (short)(bs.ReadInt16 () * 32)'  	R = bs.ReadByte ()'  	L = bs.ReadByte ()'  };  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,LoadHeaderInternal,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(bs.ReadInt16 () * 32)'  	Z = (short)(bs.ReadInt16 () * 32)'  	Y = (short)(bs.ReadInt16 () * 32)'  	R = bs.ReadByte ()'  	L = bs.ReadByte ()'  };  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,LoadHeaderInternal,The following statement contains a magic number: map.Spawn = new Position {  	X = (short)(bs.ReadInt16 () * 32)'  	Z = (short)(bs.ReadInt16 () * 32)'  	Y = (short)(bs.ReadInt16 () * 32)'  	R = bs.ReadByte ()'  	L = bs.ReadByte ()'  };  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write ((ushort)0x752);  		// Write the map dimensions  		bs.Write (mapToSave.Width);  		bs.Write (mapToSave.Length);  		bs.Write (mapToSave.Height);  		// Write the spawn location  		bs.Write (mapToSave.Spawn.X / 32);  		bs.Write (mapToSave.Spawn.Z / 32);  		bs.Write (mapToSave.Spawn.Y / 32);  		//Write the spawn orientation  		bs.Write (mapToSave.Spawn.R);  		bs.Write (mapToSave.Spawn.L);  		// Write the VistPermission and BuildPermission bytes  		bs.Write ((byte)0);  		bs.Write ((byte)0);  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  		bs.Close ();  	}  	return true;  }  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write ((ushort)0x752);  		// Write the map dimensions  		bs.Write (mapToSave.Width);  		bs.Write (mapToSave.Length);  		bs.Write (mapToSave.Height);  		// Write the spawn location  		bs.Write (mapToSave.Spawn.X / 32);  		bs.Write (mapToSave.Spawn.Z / 32);  		bs.Write (mapToSave.Spawn.Y / 32);  		//Write the spawn orientation  		bs.Write (mapToSave.Spawn.R);  		bs.Write (mapToSave.Spawn.L);  		// Write the VistPermission and BuildPermission bytes  		bs.Write ((byte)0);  		bs.Write ((byte)0);  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  		bs.Close ();  	}  	return true;  }  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: using (FileStream mapStream = File.Create (fileName)) {  	using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  		BinaryWriter bs = new BinaryWriter (gs);  		// Write the magic number  		bs.Write ((ushort)0x752);  		// Write the map dimensions  		bs.Write (mapToSave.Width);  		bs.Write (mapToSave.Length);  		bs.Write (mapToSave.Height);  		// Write the spawn location  		bs.Write (mapToSave.Spawn.X / 32);  		bs.Write (mapToSave.Spawn.Z / 32);  		bs.Write (mapToSave.Spawn.Y / 32);  		//Write the spawn orientation  		bs.Write (mapToSave.Spawn.R);  		bs.Write (mapToSave.Spawn.L);  		// Write the VistPermission and BuildPermission bytes  		bs.Write ((byte)0);  		bs.Write ((byte)0);  		// Write the map data  		bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  		bs.Close ();  	}  	return true;  }  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write ((ushort)0x752);  	// Write the map dimensions  	bs.Write (mapToSave.Width);  	bs.Write (mapToSave.Length);  	bs.Write (mapToSave.Height);  	// Write the spawn location  	bs.Write (mapToSave.Spawn.X / 32);  	bs.Write (mapToSave.Spawn.Z / 32);  	bs.Write (mapToSave.Spawn.Y / 32);  	//Write the spawn orientation  	bs.Write (mapToSave.Spawn.R);  	bs.Write (mapToSave.Spawn.L);  	// Write the VistPermission and BuildPermission bytes  	bs.Write ((byte)0);  	bs.Write ((byte)0);  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	bs.Close ();  }  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write ((ushort)0x752);  	// Write the map dimensions  	bs.Write (mapToSave.Width);  	bs.Write (mapToSave.Length);  	bs.Write (mapToSave.Height);  	// Write the spawn location  	bs.Write (mapToSave.Spawn.X / 32);  	bs.Write (mapToSave.Spawn.Z / 32);  	bs.Write (mapToSave.Spawn.Y / 32);  	//Write the spawn orientation  	bs.Write (mapToSave.Spawn.R);  	bs.Write (mapToSave.Spawn.L);  	// Write the VistPermission and BuildPermission bytes  	bs.Write ((byte)0);  	bs.Write ((byte)0);  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	bs.Close ();  }  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: using (GZipStream gs = new GZipStream (mapStream' CompressionMode.Compress)) {  	BinaryWriter bs = new BinaryWriter (gs);  	// Write the magic number  	bs.Write ((ushort)0x752);  	// Write the map dimensions  	bs.Write (mapToSave.Width);  	bs.Write (mapToSave.Length);  	bs.Write (mapToSave.Height);  	// Write the spawn location  	bs.Write (mapToSave.Spawn.X / 32);  	bs.Write (mapToSave.Spawn.Z / 32);  	bs.Write (mapToSave.Spawn.Y / 32);  	//Write the spawn orientation  	bs.Write (mapToSave.Spawn.R);  	bs.Write (mapToSave.Spawn.L);  	// Write the VistPermission and BuildPermission bytes  	bs.Write ((byte)0);  	bs.Write ((byte)0);  	// Write the map data  	bs.Write (mapToSave.Blocks' 0' mapToSave.Blocks.Length);  	bs.Close ();  }  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: bs.Write (mapToSave.Spawn.X / 32);  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: bs.Write (mapToSave.Spawn.Z / 32);  
Magic Number,fCraft.MapConversion,MapMCSharp,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapMCSharp.cs,Save,The following statement contains a magic number: bs.Write (mapToSave.Spawn.Y / 32);  
Magic Number,fCraft.MapConversion,MapNBT,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Claims,The following statement contains a magic number: try {  	using (FileStream mapStream = File.OpenRead (fileName)) {  		GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress' true);  		BinaryReader bs = new BinaryReader (gs);  		return (bs.ReadByte () == 10 && NBTag.ReadString (bs) == "MinecraftLevel");  	}  } catch (Exception) {  	return false;  }  
Magic Number,fCraft.MapConversion,MapNBT,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Claims,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress' true);  	BinaryReader bs = new BinaryReader (gs);  	return (bs.ReadByte () == 10 && NBTag.ReadString (bs) == "MinecraftLevel");  }  
Magic Number,fCraft.MapConversion,MapNBT,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Claims,The following statement contains a magic number: return (bs.ReadByte () == 10 && NBTag.ReadString (bs) == "MinecraftLevel");  
Magic Number,fCraft.MapConversion,MapNBT,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Load,The following statement contains a magic number: using (FileStream mapStream = File.OpenRead (fileName)) {  	GZipStream gs = new GZipStream (mapStream' CompressionMode.Decompress' true);  	NBTag tag = NBTag.ReadStream (gs);  	NBTag mapTag = tag ["Map"];  	// ReSharper disable UseObjectOrCollectionInitializer  	Map map = new Map (null' mapTag ["Width"].GetShort ()' mapTag ["Length"].GetShort ()' mapTag ["Height"].GetShort ()' false);  	map.Spawn = new Position {  		X = mapTag ["Spawn"] [0].GetShort ()'  		Z = mapTag ["Spawn"] [1].GetShort ()'  		Y = mapTag ["Spawn"] [2].GetShort ()'  		R = 0'  		L = 0  	};  	// ReSharper restore UseObjectOrCollectionInitializer  	if (!map.ValidateHeader ()) {  		throw new MapFormatException ("One or more of the map dimensions are invalid.");  	}  	map.Blocks = mapTag ["Blocks"].GetBytes ();  	map.RemoveUnknownBlocktypes ();  	return map;  }  
Magic Number,fCraft.MapConversion,MapNBT,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapNBT.cs,Load,The following statement contains a magic number: map.Spawn = new Position {  	X = mapTag ["Spawn"] [0].GetShort ()'  	Z = mapTag ["Spawn"] [1].GetShort ()'  	Y = mapTag ["Spawn"] [2].GetShort ()'  	R = 0'  	L = 0  };  
Magic Number,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The following statement contains a magic number: if (readLayers) {  	for (int l = 0; l < layerCount; l++) {  		string layerName = ReadString (bs);  		int layerSize = bs.ReadInt32 ();  		if (layerSize < 0)  			throw new MapFormatException ("Invalid layer size.");  		switch (layerName) {  		case BlockLayerName:  			//long blockStart = stream.Position;  			map.Blocks = new byte[map.Volume];  			using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  				gs.Read (map.Blocks' 0' 4);  				// skip the 4-byte header  				gs.Read (map.Blocks' 0' layerSize);  			}  			// TODO: get a cached compressed copy  			//int blockSize = (int)(stream.Position - blockStart);  			//stream.Seek( blockStart' SeekOrigin.Begin );  			//map.CachedCompressedMap = new byte[blockSize];  			//stream.Read( map.CachedCompressedMap' 0' blockSize );  			break;  		default:  			if (layerSize > 0) {  				byte[] layerData = new byte[layerSize];  				using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  					gs.Read (layerData' 0' layerSize);  				}  			}  			Logger.Log (LogType.Warning' "MapFCMv4: Unsupported layer \"{0}\" discarded."' layerName);  			break;  		}  	}  }  
Magic Number,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The following statement contains a magic number: for (int l = 0; l < layerCount; l++) {  	string layerName = ReadString (bs);  	int layerSize = bs.ReadInt32 ();  	if (layerSize < 0)  		throw new MapFormatException ("Invalid layer size.");  	switch (layerName) {  	case BlockLayerName:  		//long blockStart = stream.Position;  		map.Blocks = new byte[map.Volume];  		using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  			gs.Read (map.Blocks' 0' 4);  			// skip the 4-byte header  			gs.Read (map.Blocks' 0' layerSize);  		}  		// TODO: get a cached compressed copy  		//int blockSize = (int)(stream.Position - blockStart);  		//stream.Seek( blockStart' SeekOrigin.Begin );  		//map.CachedCompressedMap = new byte[blockSize];  		//stream.Read( map.CachedCompressedMap' 0' blockSize );  		break;  	default:  		if (layerSize > 0) {  			byte[] layerData = new byte[layerSize];  			using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  				gs.Read (layerData' 0' layerSize);  			}  		}  		Logger.Log (LogType.Warning' "MapFCMv4: Unsupported layer \"{0}\" discarded."' layerName);  		break;  	}  }  
Magic Number,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The following statement contains a magic number: switch (layerName) {  case BlockLayerName:  	//long blockStart = stream.Position;  	map.Blocks = new byte[map.Volume];  	using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  		gs.Read (map.Blocks' 0' 4);  		// skip the 4-byte header  		gs.Read (map.Blocks' 0' layerSize);  	}  	// TODO: get a cached compressed copy  	//int blockSize = (int)(stream.Position - blockStart);  	//stream.Seek( blockStart' SeekOrigin.Begin );  	//map.CachedCompressedMap = new byte[blockSize];  	//stream.Read( map.CachedCompressedMap' 0' blockSize );  	break;  default:  	if (layerSize > 0) {  		byte[] layerData = new byte[layerSize];  		using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  			gs.Read (layerData' 0' layerSize);  		}  	}  	Logger.Log (LogType.Warning' "MapFCMv4: Unsupported layer \"{0}\" discarded."' layerName);  	break;  }  
Magic Number,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The following statement contains a magic number: using (GZipStream gs = new GZipStream (stream' CompressionMode.Decompress)) {  	gs.Read (map.Blocks' 0' 4);  	// skip the 4-byte header  	gs.Read (map.Blocks' 0' layerSize);  }  
Magic Number,fCraft.MapConversion,MapFCMv4,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapFCMv4.cs,LoadInternal,The following statement contains a magic number: gs.Read (map.Blocks' 0' 4);  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.X / 32) <= Range.Xmax && (player.Position.X / 32) >= Range.Xmin) {  	if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  		if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if ((player.Position.Y / 32) <= Range.Ymax && (player.Position.Y / 32) >= Range.Ymin) {  	if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  		return true;  	}  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  	return true;  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,IsInRange,The following statement contains a magic number: if (((player.Position.Z / 32) - 1) <= Range.Zmax && ((player.Position.Z / 32) - 1) >= Range.Zmin) {  	return true;  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,Remove,The following statement contains a magic number: if (this.AffectedBlocks == null) {  	this.AffectedBlocks = new Vector3I[2];  	this.AffectedBlocks [0] = new Vector3I (Range.Xmin' Range.Ymin' Range.Zmin);  	this.AffectedBlocks [1] = new Vector3I (Range.Xmax' Range.Ymax' Range.Zmax);  }  
Magic Number,fCraft.Portals,Portal,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\Portal.cs,Remove,The following statement contains a magic number: this.AffectedBlocks = new Vector3I[2];  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: try {  	if (e.Player.World.Map.Portals != null && e.Player.World.Map.Portals.Count > 0 && e.Context != BlockChangeContext.Portal) {  		lock (e.Player.World.Map.Portals.SyncRoot) {  			foreach (Portal portal in e.Player.World.Map.Portals) {  				if (portal.IsInRange (e.Coords)) {  					e.Result = CanPlaceResult.Revert;  					e.Player.Message ("You can not place a block inside portal: " + portal.Name);  					return;  				}  			}  		}  	}  	if (e.NewBlock == Block.Red) {  		if (e.Context == BlockChangeContext.Manual) {  			if (e.Player.PortalCache.Name != null) {  				if (e.Player.PortalCache.AffectedBlocks != null) {  					if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  						//stop output being inside the unfinished portal  						e.Result = CanPlaceResult.Revert;  						e.Player.Message ("You can not place a block inside a portal");  						return;  					}  					e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  					e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  					e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  					e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  					e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  					e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  					string oldWorld = e.Player.PortalCache.World;  					e.Player.PortalCache.World = e.Player.World.Name;  					PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  					e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  					e.Player.PortalCache = new Portal ();  					e.Result = CanPlaceResult.Revert;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.Player_PlacedBlock: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: try {  	if (e.Player.World.Map.Portals != null && e.Player.World.Map.Portals.Count > 0 && e.Context != BlockChangeContext.Portal) {  		lock (e.Player.World.Map.Portals.SyncRoot) {  			foreach (Portal portal in e.Player.World.Map.Portals) {  				if (portal.IsInRange (e.Coords)) {  					e.Result = CanPlaceResult.Revert;  					e.Player.Message ("You can not place a block inside portal: " + portal.Name);  					return;  				}  			}  		}  	}  	if (e.NewBlock == Block.Red) {  		if (e.Context == BlockChangeContext.Manual) {  			if (e.Player.PortalCache.Name != null) {  				if (e.Player.PortalCache.AffectedBlocks != null) {  					if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  						//stop output being inside the unfinished portal  						e.Result = CanPlaceResult.Revert;  						e.Player.Message ("You can not place a block inside a portal");  						return;  					}  					e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  					e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  					e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  					e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  					e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  					e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  					string oldWorld = e.Player.PortalCache.World;  					e.Player.PortalCache.World = e.Player.World.Name;  					PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  					e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  					e.Player.PortalCache = new Portal ();  					e.Result = CanPlaceResult.Revert;  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.Player_PlacedBlock: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.NewBlock == Block.Red) {  	if (e.Context == BlockChangeContext.Manual) {  		if (e.Player.PortalCache.Name != null) {  			if (e.Player.PortalCache.AffectedBlocks != null) {  				if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  					//stop output being inside the unfinished portal  					e.Result = CanPlaceResult.Revert;  					e.Player.Message ("You can not place a block inside a portal");  					return;  				}  				e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  				e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  				e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  				e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  				e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  				e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  				string oldWorld = e.Player.PortalCache.World;  				e.Player.PortalCache.World = e.Player.World.Name;  				PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  				e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  				e.Player.PortalCache = new Portal ();  				e.Result = CanPlaceResult.Revert;  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.NewBlock == Block.Red) {  	if (e.Context == BlockChangeContext.Manual) {  		if (e.Player.PortalCache.Name != null) {  			if (e.Player.PortalCache.AffectedBlocks != null) {  				if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  					//stop output being inside the unfinished portal  					e.Result = CanPlaceResult.Revert;  					e.Player.Message ("You can not place a block inside a portal");  					return;  				}  				e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  				e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  				e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  				e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  				e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  				e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  				string oldWorld = e.Player.PortalCache.World;  				e.Player.PortalCache.World = e.Player.World.Name;  				PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  				e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  				e.Player.PortalCache = new Portal ();  				e.Result = CanPlaceResult.Revert;  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (e.Player.PortalCache.Name != null) {  		if (e.Player.PortalCache.AffectedBlocks != null) {  			if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  				//stop output being inside the unfinished portal  				e.Result = CanPlaceResult.Revert;  				e.Player.Message ("You can not place a block inside a portal");  				return;  			}  			e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  			e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  			e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  			e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  			e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  			e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  			string oldWorld = e.Player.PortalCache.World;  			e.Player.PortalCache.World = e.Player.World.Name;  			PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  			e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  			e.Player.PortalCache = new Portal ();  			e.Result = CanPlaceResult.Revert;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Context == BlockChangeContext.Manual) {  	if (e.Player.PortalCache.Name != null) {  		if (e.Player.PortalCache.AffectedBlocks != null) {  			if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  				//stop output being inside the unfinished portal  				e.Result = CanPlaceResult.Revert;  				e.Player.Message ("You can not place a block inside a portal");  				return;  			}  			e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  			e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  			e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  			e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  			e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  			e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  			string oldWorld = e.Player.PortalCache.World;  			e.Player.PortalCache.World = e.Player.World.Name;  			PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  			e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  			e.Player.PortalCache = new Portal ();  			e.Result = CanPlaceResult.Revert;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Player.PortalCache.Name != null) {  	if (e.Player.PortalCache.AffectedBlocks != null) {  		if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  			//stop output being inside the unfinished portal  			e.Result = CanPlaceResult.Revert;  			e.Player.Message ("You can not place a block inside a portal");  			return;  		}  		e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  		e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  		e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  		e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  		e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  		e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  		string oldWorld = e.Player.PortalCache.World;  		e.Player.PortalCache.World = e.Player.World.Name;  		PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  		e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  		e.Player.PortalCache = new Portal ();  		e.Result = CanPlaceResult.Revert;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Player.PortalCache.Name != null) {  	if (e.Player.PortalCache.AffectedBlocks != null) {  		if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  			//stop output being inside the unfinished portal  			e.Result = CanPlaceResult.Revert;  			e.Player.Message ("You can not place a block inside a portal");  			return;  		}  		e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  		e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  		e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  		e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  		e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  		e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  		string oldWorld = e.Player.PortalCache.World;  		e.Player.PortalCache.World = e.Player.World.Name;  		PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  		e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  		e.Player.PortalCache = new Portal ();  		e.Result = CanPlaceResult.Revert;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Player.PortalCache.AffectedBlocks != null) {  	if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  		//stop output being inside the unfinished portal  		e.Result = CanPlaceResult.Revert;  		e.Player.Message ("You can not place a block inside a portal");  		return;  	}  	e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  	e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  	e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  	e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  	e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  	e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  	string oldWorld = e.Player.PortalCache.World;  	e.Player.PortalCache.World = e.Player.World.Name;  	PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  	e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  	e.Player.PortalCache = new Portal ();  	e.Result = CanPlaceResult.Revert;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: if (e.Player.PortalCache.AffectedBlocks != null) {  	if (e.Player.PortalCache.AffectedBlocks.Contains (e.Coords)) {  		//stop output being inside the unfinished portal  		e.Result = CanPlaceResult.Revert;  		e.Player.Message ("You can not place a block inside a portal");  		return;  	}  	e.Player.PortalCache.DesiredOutputX = e.Coords.ToPlayerCoords ().X;  	e.Player.PortalCache.DesiredOutputY = e.Coords.ToPlayerCoords ().Y;  	e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  	e.Player.PortalCache.DesiredOutputR = e.Player.Position.R;  	e.Player.PortalCache.DesiredOutputL = e.Player.Position.L;  	e.Player.PortalCache.Name = Portal.GenerateName (e.Player.PortalCache.World' true);  	string oldWorld = e.Player.PortalCache.World;  	e.Player.PortalCache.World = e.Player.World.Name;  	PortalHandler.CreatePortal (e.Player.PortalCache' WorldManager.FindWorldExact (oldWorld)' true);  	e.Player.Message (" Portal finalized: Exit point at {0} on world {1}"' e.Coords.ToString ()' e.Player.World.ClassyName);  	e.Player.PortalCache = new Portal ();  	e.Result = CanPlaceResult.Revert;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_PlacingBlock,The following statement contains a magic number: e.Player.PortalCache.DesiredOutputZ = (e.Coords.Z + 2) * 32;  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: try {  	if (e.Player.PortalsEnabled) {  		lock (e.Player.PortalLock) {  			if (e.Player.CanUsePortal) {  				if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  					if (e.Player.Can (Permission.UsePortal)) {  						if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  							if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  								// To prevent portal loops  								if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  									e.Player.LastWarnedPortal = DateTime.UtcNow;  									e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  								}  								return;  							}  							// Make sure this method isn't called twice  							e.Player.CanUsePortal = false;  							e.Player.StandingInPortal = true;  							Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  							World world = WorldManager.FindWorldExact (portal.World);  							if (world == null)  								return;  							// Teleport player' portal protection  							switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  							case SecurityCheckResult.Allowed:  							case SecurityCheckResult.WhiteListed:  								if (world.IsFull) {  									e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  									return;  								}  								e.Player.StopSpectating ();  								if (portal.World == e.Player.World.Name) {  									if (!portal.HasDesiredOutput) {  										e.Player.TeleportTo (e.Player.World.Map.Spawn);  									} else {  										e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  									}  									e.Player.LastWarnedPortal = DateTime.UtcNow;  									e.Player.StandingInPortal = false;  									e.Player.CanUsePortal = true;  									e.Player.LastUsedPortal = DateTime.UtcNow;  								} else {  									if (!portal.HasDesiredOutput) {  										e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  									} else {  										e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  									}  								}  								e.Player.Message ("You used portal: " + portal.Name);  								break;  							case SecurityCheckResult.BlackListed:  								e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  								break;  							case SecurityCheckResult.RankTooLow:  								e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  								break;  							}  						} else {  							e.Player.StandingInPortal = false;  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.Player_Moved: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: try {  	if (e.Player.PortalsEnabled) {  		lock (e.Player.PortalLock) {  			if (e.Player.CanUsePortal) {  				if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  					if (e.Player.Can (Permission.UsePortal)) {  						if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  							if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  								// To prevent portal loops  								if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  									e.Player.LastWarnedPortal = DateTime.UtcNow;  									e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  								}  								return;  							}  							// Make sure this method isn't called twice  							e.Player.CanUsePortal = false;  							e.Player.StandingInPortal = true;  							Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  							World world = WorldManager.FindWorldExact (portal.World);  							if (world == null)  								return;  							// Teleport player' portal protection  							switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  							case SecurityCheckResult.Allowed:  							case SecurityCheckResult.WhiteListed:  								if (world.IsFull) {  									e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  									return;  								}  								e.Player.StopSpectating ();  								if (portal.World == e.Player.World.Name) {  									if (!portal.HasDesiredOutput) {  										e.Player.TeleportTo (e.Player.World.Map.Spawn);  									} else {  										e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  									}  									e.Player.LastWarnedPortal = DateTime.UtcNow;  									e.Player.StandingInPortal = false;  									e.Player.CanUsePortal = true;  									e.Player.LastUsedPortal = DateTime.UtcNow;  								} else {  									if (!portal.HasDesiredOutput) {  										e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  									} else {  										e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  									}  								}  								e.Player.Message ("You used portal: " + portal.Name);  								break;  							case SecurityCheckResult.BlackListed:  								e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  								break;  							case SecurityCheckResult.RankTooLow:  								e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  								break;  							}  						} else {  							e.Player.StandingInPortal = false;  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.Player_Moved: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: try {  	if (e.Player.PortalsEnabled) {  		lock (e.Player.PortalLock) {  			if (e.Player.CanUsePortal) {  				if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  					if (e.Player.Can (Permission.UsePortal)) {  						if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  							if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  								// To prevent portal loops  								if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  									e.Player.LastWarnedPortal = DateTime.UtcNow;  									e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  								}  								return;  							}  							// Make sure this method isn't called twice  							e.Player.CanUsePortal = false;  							e.Player.StandingInPortal = true;  							Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  							World world = WorldManager.FindWorldExact (portal.World);  							if (world == null)  								return;  							// Teleport player' portal protection  							switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  							case SecurityCheckResult.Allowed:  							case SecurityCheckResult.WhiteListed:  								if (world.IsFull) {  									e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  									return;  								}  								e.Player.StopSpectating ();  								if (portal.World == e.Player.World.Name) {  									if (!portal.HasDesiredOutput) {  										e.Player.TeleportTo (e.Player.World.Map.Spawn);  									} else {  										e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  									}  									e.Player.LastWarnedPortal = DateTime.UtcNow;  									e.Player.StandingInPortal = false;  									e.Player.CanUsePortal = true;  									e.Player.LastUsedPortal = DateTime.UtcNow;  								} else {  									if (!portal.HasDesiredOutput) {  										e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  									} else {  										e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  									}  								}  								e.Player.Message ("You used portal: " + portal.Name);  								break;  							case SecurityCheckResult.BlackListed:  								e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  								break;  							case SecurityCheckResult.RankTooLow:  								e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  								break;  							}  						} else {  							e.Player.StandingInPortal = false;  						}  					}  				}  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.Player_Moved: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.PortalsEnabled) {  	lock (e.Player.PortalLock) {  		if (e.Player.CanUsePortal) {  			if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  				if (e.Player.Can (Permission.UsePortal)) {  					if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  						if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  							// To prevent portal loops  							if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  								e.Player.LastWarnedPortal = DateTime.UtcNow;  								e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  							}  							return;  						}  						// Make sure this method isn't called twice  						e.Player.CanUsePortal = false;  						e.Player.StandingInPortal = true;  						Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  						World world = WorldManager.FindWorldExact (portal.World);  						if (world == null)  							return;  						// Teleport player' portal protection  						switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  						case SecurityCheckResult.Allowed:  						case SecurityCheckResult.WhiteListed:  							if (world.IsFull) {  								e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  								return;  							}  							e.Player.StopSpectating ();  							if (portal.World == e.Player.World.Name) {  								if (!portal.HasDesiredOutput) {  									e.Player.TeleportTo (e.Player.World.Map.Spawn);  								} else {  									e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  								}  								e.Player.LastWarnedPortal = DateTime.UtcNow;  								e.Player.StandingInPortal = false;  								e.Player.CanUsePortal = true;  								e.Player.LastUsedPortal = DateTime.UtcNow;  							} else {  								if (!portal.HasDesiredOutput) {  									e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  								} else {  									e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  								}  							}  							e.Player.Message ("You used portal: " + portal.Name);  							break;  						case SecurityCheckResult.BlackListed:  							e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  							break;  						case SecurityCheckResult.RankTooLow:  							e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  							break;  						}  					} else {  						e.Player.StandingInPortal = false;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.PortalsEnabled) {  	lock (e.Player.PortalLock) {  		if (e.Player.CanUsePortal) {  			if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  				if (e.Player.Can (Permission.UsePortal)) {  					if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  						if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  							// To prevent portal loops  							if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  								e.Player.LastWarnedPortal = DateTime.UtcNow;  								e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  							}  							return;  						}  						// Make sure this method isn't called twice  						e.Player.CanUsePortal = false;  						e.Player.StandingInPortal = true;  						Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  						World world = WorldManager.FindWorldExact (portal.World);  						if (world == null)  							return;  						// Teleport player' portal protection  						switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  						case SecurityCheckResult.Allowed:  						case SecurityCheckResult.WhiteListed:  							if (world.IsFull) {  								e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  								return;  							}  							e.Player.StopSpectating ();  							if (portal.World == e.Player.World.Name) {  								if (!portal.HasDesiredOutput) {  									e.Player.TeleportTo (e.Player.World.Map.Spawn);  								} else {  									e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  								}  								e.Player.LastWarnedPortal = DateTime.UtcNow;  								e.Player.StandingInPortal = false;  								e.Player.CanUsePortal = true;  								e.Player.LastUsedPortal = DateTime.UtcNow;  							} else {  								if (!portal.HasDesiredOutput) {  									e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  								} else {  									e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  								}  							}  							e.Player.Message ("You used portal: " + portal.Name);  							break;  						case SecurityCheckResult.BlackListed:  							e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  							break;  						case SecurityCheckResult.RankTooLow:  							e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  							break;  						}  					} else {  						e.Player.StandingInPortal = false;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.PortalsEnabled) {  	lock (e.Player.PortalLock) {  		if (e.Player.CanUsePortal) {  			if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  				if (e.Player.Can (Permission.UsePortal)) {  					if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  						if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  							// To prevent portal loops  							if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  								e.Player.LastWarnedPortal = DateTime.UtcNow;  								e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  							}  							return;  						}  						// Make sure this method isn't called twice  						e.Player.CanUsePortal = false;  						e.Player.StandingInPortal = true;  						Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  						World world = WorldManager.FindWorldExact (portal.World);  						if (world == null)  							return;  						// Teleport player' portal protection  						switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  						case SecurityCheckResult.Allowed:  						case SecurityCheckResult.WhiteListed:  							if (world.IsFull) {  								e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  								return;  							}  							e.Player.StopSpectating ();  							if (portal.World == e.Player.World.Name) {  								if (!portal.HasDesiredOutput) {  									e.Player.TeleportTo (e.Player.World.Map.Spawn);  								} else {  									e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  								}  								e.Player.LastWarnedPortal = DateTime.UtcNow;  								e.Player.StandingInPortal = false;  								e.Player.CanUsePortal = true;  								e.Player.LastUsedPortal = DateTime.UtcNow;  							} else {  								if (!portal.HasDesiredOutput) {  									e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  								} else {  									e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  								}  							}  							e.Player.Message ("You used portal: " + portal.Name);  							break;  						case SecurityCheckResult.BlackListed:  							e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  							break;  						case SecurityCheckResult.RankTooLow:  							e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  							break;  						}  					} else {  						e.Player.StandingInPortal = false;  					}  				}  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: lock (e.Player.PortalLock) {  	if (e.Player.CanUsePortal) {  		if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  			if (e.Player.Can (Permission.UsePortal)) {  				if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  					if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  						// To prevent portal loops  						if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  							e.Player.LastWarnedPortal = DateTime.UtcNow;  							e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  						}  						return;  					}  					// Make sure this method isn't called twice  					e.Player.CanUsePortal = false;  					e.Player.StandingInPortal = true;  					Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  					World world = WorldManager.FindWorldExact (portal.World);  					if (world == null)  						return;  					// Teleport player' portal protection  					switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  					case SecurityCheckResult.Allowed:  					case SecurityCheckResult.WhiteListed:  						if (world.IsFull) {  							e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  							return;  						}  						e.Player.StopSpectating ();  						if (portal.World == e.Player.World.Name) {  							if (!portal.HasDesiredOutput) {  								e.Player.TeleportTo (e.Player.World.Map.Spawn);  							} else {  								e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  							}  							e.Player.LastWarnedPortal = DateTime.UtcNow;  							e.Player.StandingInPortal = false;  							e.Player.CanUsePortal = true;  							e.Player.LastUsedPortal = DateTime.UtcNow;  						} else {  							if (!portal.HasDesiredOutput) {  								e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  							} else {  								e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  							}  						}  						e.Player.Message ("You used portal: " + portal.Name);  						break;  					case SecurityCheckResult.BlackListed:  						e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  						break;  					case SecurityCheckResult.RankTooLow:  						e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  						break;  					}  				} else {  					e.Player.StandingInPortal = false;  				}  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: lock (e.Player.PortalLock) {  	if (e.Player.CanUsePortal) {  		if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  			if (e.Player.Can (Permission.UsePortal)) {  				if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  					if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  						// To prevent portal loops  						if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  							e.Player.LastWarnedPortal = DateTime.UtcNow;  							e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  						}  						return;  					}  					// Make sure this method isn't called twice  					e.Player.CanUsePortal = false;  					e.Player.StandingInPortal = true;  					Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  					World world = WorldManager.FindWorldExact (portal.World);  					if (world == null)  						return;  					// Teleport player' portal protection  					switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  					case SecurityCheckResult.Allowed:  					case SecurityCheckResult.WhiteListed:  						if (world.IsFull) {  							e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  							return;  						}  						e.Player.StopSpectating ();  						if (portal.World == e.Player.World.Name) {  							if (!portal.HasDesiredOutput) {  								e.Player.TeleportTo (e.Player.World.Map.Spawn);  							} else {  								e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  							}  							e.Player.LastWarnedPortal = DateTime.UtcNow;  							e.Player.StandingInPortal = false;  							e.Player.CanUsePortal = true;  							e.Player.LastUsedPortal = DateTime.UtcNow;  						} else {  							if (!portal.HasDesiredOutput) {  								e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  							} else {  								e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  							}  						}  						e.Player.Message ("You used portal: " + portal.Name);  						break;  					case SecurityCheckResult.BlackListed:  						e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  						break;  					case SecurityCheckResult.RankTooLow:  						e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  						break;  					}  				} else {  					e.Player.StandingInPortal = false;  				}  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: lock (e.Player.PortalLock) {  	if (e.Player.CanUsePortal) {  		if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  			if (e.Player.Can (Permission.UsePortal)) {  				if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  					if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  						// To prevent portal loops  						if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  							e.Player.LastWarnedPortal = DateTime.UtcNow;  							e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  						}  						return;  					}  					// Make sure this method isn't called twice  					e.Player.CanUsePortal = false;  					e.Player.StandingInPortal = true;  					Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  					World world = WorldManager.FindWorldExact (portal.World);  					if (world == null)  						return;  					// Teleport player' portal protection  					switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  					case SecurityCheckResult.Allowed:  					case SecurityCheckResult.WhiteListed:  						if (world.IsFull) {  							e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  							return;  						}  						e.Player.StopSpectating ();  						if (portal.World == e.Player.World.Name) {  							if (!portal.HasDesiredOutput) {  								e.Player.TeleportTo (e.Player.World.Map.Spawn);  							} else {  								e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  							}  							e.Player.LastWarnedPortal = DateTime.UtcNow;  							e.Player.StandingInPortal = false;  							e.Player.CanUsePortal = true;  							e.Player.LastUsedPortal = DateTime.UtcNow;  						} else {  							if (!portal.HasDesiredOutput) {  								e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  							} else {  								e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  							}  						}  						e.Player.Message ("You used portal: " + portal.Name);  						break;  					case SecurityCheckResult.BlackListed:  						e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  						break;  					case SecurityCheckResult.RankTooLow:  						e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  						break;  					}  				} else {  					e.Player.StandingInPortal = false;  				}  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.CanUsePortal) {  	if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  		if (e.Player.Can (Permission.UsePortal)) {  			if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  				if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  					// To prevent portal loops  					if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  						e.Player.LastWarnedPortal = DateTime.UtcNow;  						e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  					}  					return;  				}  				// Make sure this method isn't called twice  				e.Player.CanUsePortal = false;  				e.Player.StandingInPortal = true;  				Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  				World world = WorldManager.FindWorldExact (portal.World);  				if (world == null)  					return;  				// Teleport player' portal protection  				switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  				case SecurityCheckResult.Allowed:  				case SecurityCheckResult.WhiteListed:  					if (world.IsFull) {  						e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  						return;  					}  					e.Player.StopSpectating ();  					if (portal.World == e.Player.World.Name) {  						if (!portal.HasDesiredOutput) {  							e.Player.TeleportTo (e.Player.World.Map.Spawn);  						} else {  							e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  						}  						e.Player.LastWarnedPortal = DateTime.UtcNow;  						e.Player.StandingInPortal = false;  						e.Player.CanUsePortal = true;  						e.Player.LastUsedPortal = DateTime.UtcNow;  					} else {  						if (!portal.HasDesiredOutput) {  							e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  						} else {  							e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  						}  					}  					e.Player.Message ("You used portal: " + portal.Name);  					break;  				case SecurityCheckResult.BlackListed:  					e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  					break;  				case SecurityCheckResult.RankTooLow:  					e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  					break;  				}  			} else {  				e.Player.StandingInPortal = false;  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.CanUsePortal) {  	if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  		if (e.Player.Can (Permission.UsePortal)) {  			if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  				if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  					// To prevent portal loops  					if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  						e.Player.LastWarnedPortal = DateTime.UtcNow;  						e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  					}  					return;  				}  				// Make sure this method isn't called twice  				e.Player.CanUsePortal = false;  				e.Player.StandingInPortal = true;  				Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  				World world = WorldManager.FindWorldExact (portal.World);  				if (world == null)  					return;  				// Teleport player' portal protection  				switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  				case SecurityCheckResult.Allowed:  				case SecurityCheckResult.WhiteListed:  					if (world.IsFull) {  						e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  						return;  					}  					e.Player.StopSpectating ();  					if (portal.World == e.Player.World.Name) {  						if (!portal.HasDesiredOutput) {  							e.Player.TeleportTo (e.Player.World.Map.Spawn);  						} else {  							e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  						}  						e.Player.LastWarnedPortal = DateTime.UtcNow;  						e.Player.StandingInPortal = false;  						e.Player.CanUsePortal = true;  						e.Player.LastUsedPortal = DateTime.UtcNow;  					} else {  						if (!portal.HasDesiredOutput) {  							e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  						} else {  							e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  						}  					}  					e.Player.Message ("You used portal: " + portal.Name);  					break;  				case SecurityCheckResult.BlackListed:  					e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  					break;  				case SecurityCheckResult.RankTooLow:  					e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  					break;  				}  			} else {  				e.Player.StandingInPortal = false;  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.CanUsePortal) {  	if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  		if (e.Player.Can (Permission.UsePortal)) {  			if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  				if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  					// To prevent portal loops  					if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  						e.Player.LastWarnedPortal = DateTime.UtcNow;  						e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  					}  					return;  				}  				// Make sure this method isn't called twice  				e.Player.CanUsePortal = false;  				e.Player.StandingInPortal = true;  				Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  				World world = WorldManager.FindWorldExact (portal.World);  				if (world == null)  					return;  				// Teleport player' portal protection  				switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  				case SecurityCheckResult.Allowed:  				case SecurityCheckResult.WhiteListed:  					if (world.IsFull) {  						e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  						return;  					}  					e.Player.StopSpectating ();  					if (portal.World == e.Player.World.Name) {  						if (!portal.HasDesiredOutput) {  							e.Player.TeleportTo (e.Player.World.Map.Spawn);  						} else {  							e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  						}  						e.Player.LastWarnedPortal = DateTime.UtcNow;  						e.Player.StandingInPortal = false;  						e.Player.CanUsePortal = true;  						e.Player.LastUsedPortal = DateTime.UtcNow;  					} else {  						if (!portal.HasDesiredOutput) {  							e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  						} else {  							e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  						}  					}  					e.Player.Message ("You used portal: " + portal.Name);  					break;  				case SecurityCheckResult.BlackListed:  					e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  					break;  				case SecurityCheckResult.RankTooLow:  					e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  					break;  				}  			} else {  				e.Player.StandingInPortal = false;  			}  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  	if (e.Player.Can (Permission.UsePortal)) {  		if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  			if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  				// To prevent portal loops  				if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  					e.Player.LastWarnedPortal = DateTime.UtcNow;  					e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  				}  				return;  			}  			// Make sure this method isn't called twice  			e.Player.CanUsePortal = false;  			e.Player.StandingInPortal = true;  			Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  			World world = WorldManager.FindWorldExact (portal.World);  			if (world == null)  				return;  			// Teleport player' portal protection  			switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (world.IsFull) {  					e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  					return;  				}  				e.Player.StopSpectating ();  				if (portal.World == e.Player.World.Name) {  					if (!portal.HasDesiredOutput) {  						e.Player.TeleportTo (e.Player.World.Map.Spawn);  					} else {  						e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  					}  					e.Player.LastWarnedPortal = DateTime.UtcNow;  					e.Player.StandingInPortal = false;  					e.Player.CanUsePortal = true;  					e.Player.LastUsedPortal = DateTime.UtcNow;  				} else {  					if (!portal.HasDesiredOutput) {  						e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  					} else {  						e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  					}  				}  				e.Player.Message ("You used portal: " + portal.Name);  				break;  			case SecurityCheckResult.BlackListed:  				e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  				break;  			}  		} else {  			e.Player.StandingInPortal = false;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  	if (e.Player.Can (Permission.UsePortal)) {  		if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  			if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  				// To prevent portal loops  				if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  					e.Player.LastWarnedPortal = DateTime.UtcNow;  					e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  				}  				return;  			}  			// Make sure this method isn't called twice  			e.Player.CanUsePortal = false;  			e.Player.StandingInPortal = true;  			Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  			World world = WorldManager.FindWorldExact (portal.World);  			if (world == null)  				return;  			// Teleport player' portal protection  			switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (world.IsFull) {  					e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  					return;  				}  				e.Player.StopSpectating ();  				if (portal.World == e.Player.World.Name) {  					if (!portal.HasDesiredOutput) {  						e.Player.TeleportTo (e.Player.World.Map.Spawn);  					} else {  						e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  					}  					e.Player.LastWarnedPortal = DateTime.UtcNow;  					e.Player.StandingInPortal = false;  					e.Player.CanUsePortal = true;  					e.Player.LastUsedPortal = DateTime.UtcNow;  				} else {  					if (!portal.HasDesiredOutput) {  						e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  					} else {  						e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  					}  				}  				e.Player.Message ("You used portal: " + portal.Name);  				break;  			case SecurityCheckResult.BlackListed:  				e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  				break;  			}  		} else {  			e.Player.StandingInPortal = false;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if ((e.OldPosition.X != e.NewPosition.X) || (e.OldPosition.Y != e.NewPosition.Y) || (e.OldPosition.Z != (e.NewPosition.Z))) {  	if (e.Player.Can (Permission.UsePortal)) {  		if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  			if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  				// To prevent portal loops  				if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  					e.Player.LastWarnedPortal = DateTime.UtcNow;  					e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  				}  				return;  			}  			// Make sure this method isn't called twice  			e.Player.CanUsePortal = false;  			e.Player.StandingInPortal = true;  			Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  			World world = WorldManager.FindWorldExact (portal.World);  			if (world == null)  				return;  			// Teleport player' portal protection  			switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  			case SecurityCheckResult.Allowed:  			case SecurityCheckResult.WhiteListed:  				if (world.IsFull) {  					e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  					return;  				}  				e.Player.StopSpectating ();  				if (portal.World == e.Player.World.Name) {  					if (!portal.HasDesiredOutput) {  						e.Player.TeleportTo (e.Player.World.Map.Spawn);  					} else {  						e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  					}  					e.Player.LastWarnedPortal = DateTime.UtcNow;  					e.Player.StandingInPortal = false;  					e.Player.CanUsePortal = true;  					e.Player.LastUsedPortal = DateTime.UtcNow;  				} else {  					if (!portal.HasDesiredOutput) {  						e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  					} else {  						e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  					}  				}  				e.Player.Message ("You used portal: " + portal.Name);  				break;  			case SecurityCheckResult.BlackListed:  				e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  				break;  			case SecurityCheckResult.RankTooLow:  				e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  				break;  			}  		} else {  			e.Player.StandingInPortal = false;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.Can (Permission.UsePortal)) {  	if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  		if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  			// To prevent portal loops  			if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  				e.Player.LastWarnedPortal = DateTime.UtcNow;  				e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  			}  			return;  		}  		// Make sure this method isn't called twice  		e.Player.CanUsePortal = false;  		e.Player.StandingInPortal = true;  		Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  		World world = WorldManager.FindWorldExact (portal.World);  		if (world == null)  			return;  		// Teleport player' portal protection  		switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  		case SecurityCheckResult.Allowed:  		case SecurityCheckResult.WhiteListed:  			if (world.IsFull) {  				e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  				return;  			}  			e.Player.StopSpectating ();  			if (portal.World == e.Player.World.Name) {  				if (!portal.HasDesiredOutput) {  					e.Player.TeleportTo (e.Player.World.Map.Spawn);  				} else {  					e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  				}  				e.Player.LastWarnedPortal = DateTime.UtcNow;  				e.Player.StandingInPortal = false;  				e.Player.CanUsePortal = true;  				e.Player.LastUsedPortal = DateTime.UtcNow;  			} else {  				if (!portal.HasDesiredOutput) {  					e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  				} else {  					e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  				}  			}  			e.Player.Message ("You used portal: " + portal.Name);  			break;  		case SecurityCheckResult.BlackListed:  			e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  			break;  		case SecurityCheckResult.RankTooLow:  			e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  			break;  		}  	} else {  		e.Player.StandingInPortal = false;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.Can (Permission.UsePortal)) {  	if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  		if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  			// To prevent portal loops  			if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  				e.Player.LastWarnedPortal = DateTime.UtcNow;  				e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  			}  			return;  		}  		// Make sure this method isn't called twice  		e.Player.CanUsePortal = false;  		e.Player.StandingInPortal = true;  		Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  		World world = WorldManager.FindWorldExact (portal.World);  		if (world == null)  			return;  		// Teleport player' portal protection  		switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  		case SecurityCheckResult.Allowed:  		case SecurityCheckResult.WhiteListed:  			if (world.IsFull) {  				e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  				return;  			}  			e.Player.StopSpectating ();  			if (portal.World == e.Player.World.Name) {  				if (!portal.HasDesiredOutput) {  					e.Player.TeleportTo (e.Player.World.Map.Spawn);  				} else {  					e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  				}  				e.Player.LastWarnedPortal = DateTime.UtcNow;  				e.Player.StandingInPortal = false;  				e.Player.CanUsePortal = true;  				e.Player.LastUsedPortal = DateTime.UtcNow;  			} else {  				if (!portal.HasDesiredOutput) {  					e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  				} else {  					e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  				}  			}  			e.Player.Message ("You used portal: " + portal.Name);  			break;  		case SecurityCheckResult.BlackListed:  			e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  			break;  		case SecurityCheckResult.RankTooLow:  			e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  			break;  		}  	} else {  		e.Player.StandingInPortal = false;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.Can (Permission.UsePortal)) {  	if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  		if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  			// To prevent portal loops  			if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  				e.Player.LastWarnedPortal = DateTime.UtcNow;  				e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  			}  			return;  		}  		// Make sure this method isn't called twice  		e.Player.CanUsePortal = false;  		e.Player.StandingInPortal = true;  		Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  		World world = WorldManager.FindWorldExact (portal.World);  		if (world == null)  			return;  		// Teleport player' portal protection  		switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  		case SecurityCheckResult.Allowed:  		case SecurityCheckResult.WhiteListed:  			if (world.IsFull) {  				e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  				return;  			}  			e.Player.StopSpectating ();  			if (portal.World == e.Player.World.Name) {  				if (!portal.HasDesiredOutput) {  					e.Player.TeleportTo (e.Player.World.Map.Spawn);  				} else {  					e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  				}  				e.Player.LastWarnedPortal = DateTime.UtcNow;  				e.Player.StandingInPortal = false;  				e.Player.CanUsePortal = true;  				e.Player.LastUsedPortal = DateTime.UtcNow;  			} else {  				if (!portal.HasDesiredOutput) {  					e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  				} else {  					e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  				}  			}  			e.Player.Message ("You used portal: " + portal.Name);  			break;  		case SecurityCheckResult.BlackListed:  			e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  			break;  		case SecurityCheckResult.RankTooLow:  			e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  			break;  		}  	} else {  		e.Player.StandingInPortal = false;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		// To prevent portal loops  		if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  			e.Player.LastWarnedPortal = DateTime.UtcNow;  			e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  		}  		return;  	}  	// Make sure this method isn't called twice  	e.Player.CanUsePortal = false;  	e.Player.StandingInPortal = true;  	Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  	World world = WorldManager.FindWorldExact (portal.World);  	if (world == null)  		return;  	// Teleport player' portal protection  	switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  	case SecurityCheckResult.Allowed:  	case SecurityCheckResult.WhiteListed:  		if (world.IsFull) {  			e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  			return;  		}  		e.Player.StopSpectating ();  		if (portal.World == e.Player.World.Name) {  			if (!portal.HasDesiredOutput) {  				e.Player.TeleportTo (e.Player.World.Map.Spawn);  			} else {  				e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  			}  			e.Player.LastWarnedPortal = DateTime.UtcNow;  			e.Player.StandingInPortal = false;  			e.Player.CanUsePortal = true;  			e.Player.LastUsedPortal = DateTime.UtcNow;  		} else {  			if (!portal.HasDesiredOutput) {  				e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  			} else {  				e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  			}  		}  		e.Player.Message ("You used portal: " + portal.Name);  		break;  	case SecurityCheckResult.BlackListed:  		e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  		break;  	case SecurityCheckResult.RankTooLow:  		e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  		break;  	}  } else {  	e.Player.StandingInPortal = false;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		// To prevent portal loops  		if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  			e.Player.LastWarnedPortal = DateTime.UtcNow;  			e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  		}  		return;  	}  	// Make sure this method isn't called twice  	e.Player.CanUsePortal = false;  	e.Player.StandingInPortal = true;  	Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  	World world = WorldManager.FindWorldExact (portal.World);  	if (world == null)  		return;  	// Teleport player' portal protection  	switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  	case SecurityCheckResult.Allowed:  	case SecurityCheckResult.WhiteListed:  		if (world.IsFull) {  			e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  			return;  		}  		e.Player.StopSpectating ();  		if (portal.World == e.Player.World.Name) {  			if (!portal.HasDesiredOutput) {  				e.Player.TeleportTo (e.Player.World.Map.Spawn);  			} else {  				e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  			}  			e.Player.LastWarnedPortal = DateTime.UtcNow;  			e.Player.StandingInPortal = false;  			e.Player.CanUsePortal = true;  			e.Player.LastUsedPortal = DateTime.UtcNow;  		} else {  			if (!portal.HasDesiredOutput) {  				e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  			} else {  				e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  			}  		}  		e.Player.Message ("You used portal: " + portal.Name);  		break;  	case SecurityCheckResult.BlackListed:  		e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  		break;  	case SecurityCheckResult.RankTooLow:  		e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  		break;  	}  } else {  	e.Player.StandingInPortal = false;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (PortalHandler.GetInstance ().GetPortal (e.Player) != null && !e.Player.StandingInPortal) {  	if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  		// To prevent portal loops  		if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  			e.Player.LastWarnedPortal = DateTime.UtcNow;  			e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  		}  		return;  	}  	// Make sure this method isn't called twice  	e.Player.CanUsePortal = false;  	e.Player.StandingInPortal = true;  	Portal portal = PortalHandler.GetInstance ().GetPortal (e.Player);  	World world = WorldManager.FindWorldExact (portal.World);  	if (world == null)  		return;  	// Teleport player' portal protection  	switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  	case SecurityCheckResult.Allowed:  	case SecurityCheckResult.WhiteListed:  		if (world.IsFull) {  			e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  			return;  		}  		e.Player.StopSpectating ();  		if (portal.World == e.Player.World.Name) {  			if (!portal.HasDesiredOutput) {  				e.Player.TeleportTo (e.Player.World.Map.Spawn);  			} else {  				e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  			}  			e.Player.LastWarnedPortal = DateTime.UtcNow;  			e.Player.StandingInPortal = false;  			e.Player.CanUsePortal = true;  			e.Player.LastUsedPortal = DateTime.UtcNow;  		} else {  			if (!portal.HasDesiredOutput) {  				e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  			} else {  				e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  			}  		}  		e.Player.Message ("You used portal: " + portal.Name);  		break;  	case SecurityCheckResult.BlackListed:  		e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  		break;  	case SecurityCheckResult.RankTooLow:  		e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  		break;  	}  } else {  	e.Player.StandingInPortal = false;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  	// To prevent portal loops  	if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  		e.Player.LastWarnedPortal = DateTime.UtcNow;  		e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  	}  	return;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  	// To prevent portal loops  	if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  		e.Player.LastWarnedPortal = DateTime.UtcNow;  		e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  	}  	return;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.LastUsedPortal != null && (DateTime.UtcNow - e.Player.LastUsedPortal).TotalSeconds < 4) {  	// To prevent portal loops  	if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  		e.Player.LastWarnedPortal = DateTime.UtcNow;  		e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  	}  	return;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  	e.Player.LastWarnedPortal = DateTime.UtcNow;  	e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: if (e.Player.LastWarnedPortal == null || (DateTime.UtcNow - e.Player.LastWarnedPortal).TotalSeconds > 2) {  	e.Player.LastWarnedPortal = DateTime.UtcNow;  	e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following statement contains a magic number: e.Player.Message ("You cannot use portals for another {0} seconds."' 4 - (DateTime.UtcNow - e.Player.LastUsedPortal).Seconds);  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: try {  	int Xdistance = (world.Map.Spawn.X / 32) - block.X;  	int Ydistance = (world.Map.Spawn.Y / 32) - block.Y;  	int Zdistance = (world.Map.Spawn.Z / 32) - block.Z;  	if (Xdistance <= 10 && Xdistance >= -10) {  		if (Ydistance <= 10 && Ydistance >= -10) {  			if (Zdistance <= 10 && Zdistance >= -10) {  				return true;  			}  		}  	}  } catch (Exception ex) {  	Logger.Log (LogType.Error' "PortalHandler.IsInRangeOfSpawnpoint: " + ex);  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Xdistance <= 10 && Xdistance >= -10) {  	if (Ydistance <= 10 && Ydistance >= -10) {  		if (Zdistance <= 10 && Zdistance >= -10) {  			return true;  		}  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Ydistance <= 10 && Ydistance >= -10) {  	if (Zdistance <= 10 && Zdistance >= -10) {  		return true;  	}  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Zdistance <= 10 && Zdistance >= -10) {  	return true;  }  
Magic Number,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,IsInRangeOfSpawnpoint,The following statement contains a magic number: if (Zdistance <= 10 && Zdistance >= -10) {  	return true;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: CrcTable = new UInt32[256];  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int i = 0; i < CrcTable.Length; i++) {  	UInt32 c = (UInt32)i;  	for (int j = 0; j < 8; j++) {  		if ((c & 1) != 0)  			c = 3988292384 ^ (c >> 1);  		else  			c >>= 1;  	}  	CrcTable [i] = c;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int i = 0; i < CrcTable.Length; i++) {  	UInt32 c = (UInt32)i;  	for (int j = 0; j < 8; j++) {  		if ((c & 1) != 0)  			c = 3988292384 ^ (c >> 1);  		else  			c >>= 1;  	}  	CrcTable [i] = c;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	if ((c & 1) != 0)  		c = 3988292384 ^ (c >> 1);  	else  		c >>= 1;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	if ((c & 1) != 0)  		c = 3988292384 ^ (c >> 1);  	else  		c >>= 1;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: if ((c & 1) != 0)  	c = 3988292384 ^ (c >> 1);  else  	c >>= 1;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ZipStorer,The following statement contains a magic number: c = 3988292384 ^ (c >> 1);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: if (commentSize > 0)  	zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: pointer += (46 + filenameSize + extraSize + commentSize);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ExtractFile,The following statement contains a magic number: zipFileStream.Read (signature' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Seek (headerOffset + 26' SeekOrigin.Begin);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Read (buffer' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Read (buffer' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: return (uint)(30 + filenameSize + extraSize + headerOffset);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)(zfe.EncodeUTF8 ? 0x0800 : 0))' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)zfe.Method)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (DateTimeToDosTime (zfe.ModifyTime))' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0  }' 0' 12);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedFilename.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)(zfe.EncodeUTF8 ? 0x0800 : 0))' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)zfe.Method)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (DateTimeToDosTime (zfe.ModifyTime))' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.Crc32)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.CompressedSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.FileSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedFilename.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedComment.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0x8100)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.HeaderOffset)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)files.Count + existingFiles)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)files.Count + existingFiles)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (size)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (offset)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedComment.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The following statement contains a magic number: do {  	bytesRead = source.Read (buffer' 0' buffer.Length);  	totalRead += (uint)bytesRead;  	if (bytesRead > 0) {  		outStream.Write (buffer' 0' bytesRead);  		for (uint i = 0; i < bytesRead; i++) {  			zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  		}  	}  } while (bytesRead == buffer.Length);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The following statement contains a magic number: if (bytesRead > 0) {  	outStream.Write (buffer' 0' bytesRead);  	for (uint i = 0; i < bytesRead; i++) {  		zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  	}  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The following statement contains a magic number: for (uint i = 0; i < bytesRead; i++) {  	zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,Store,The following statement contains a magic number: zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Position = zfe.HeaderOffset + 8;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)zfe.Method)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Position = zfe.HeaderOffset + 14;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.Crc32)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.CompressedSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.FileSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: if (zipFileStream.Length < 22)  	return false;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: try {  	zipFileStream.Seek (-17' SeekOrigin.End);  	BinaryReader br = new BinaryReader (zipFileStream);  	do {  		zipFileStream.Seek (-5' SeekOrigin.Current);  		UInt32 sig = br.ReadUInt32 ();  		if (sig != 0x06054b50)  			continue;  		zipFileStream.Seek (6' SeekOrigin.Current);  		UInt16 entries = br.ReadUInt16 ();  		Int32 centralSize = br.ReadInt32 ();  		UInt32 centralDirOffset = br.ReadUInt32 ();  		UInt16 commentSize = br.ReadUInt16 ();  		// check if comment field is the very last data in file  		if (zipFileStream.Position + commentSize != zipFileStream.Length)  			return false;  		// Copy entire central directory to a memory buffer  		existingFiles = entries;  		centralDirImage = new byte[centralSize];  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		zipFileStream.Read (centralDirImage' 0' centralSize);  		// Leave the pointer at the begining of central dir' to append new files  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		return true;  	} while (zipFileStream.Position > 0);  	// ReSharper disable EmptyGeneralCatchClause  } catch {  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: try {  	zipFileStream.Seek (-17' SeekOrigin.End);  	BinaryReader br = new BinaryReader (zipFileStream);  	do {  		zipFileStream.Seek (-5' SeekOrigin.Current);  		UInt32 sig = br.ReadUInt32 ();  		if (sig != 0x06054b50)  			continue;  		zipFileStream.Seek (6' SeekOrigin.Current);  		UInt16 entries = br.ReadUInt16 ();  		Int32 centralSize = br.ReadInt32 ();  		UInt32 centralDirOffset = br.ReadUInt32 ();  		UInt16 commentSize = br.ReadUInt16 ();  		// check if comment field is the very last data in file  		if (zipFileStream.Position + commentSize != zipFileStream.Length)  			return false;  		// Copy entire central directory to a memory buffer  		existingFiles = entries;  		centralDirImage = new byte[centralSize];  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		zipFileStream.Read (centralDirImage' 0' centralSize);  		// Leave the pointer at the begining of central dir' to append new files  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		return true;  	} while (zipFileStream.Position > 0);  	// ReSharper disable EmptyGeneralCatchClause  } catch {  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: try {  	zipFileStream.Seek (-17' SeekOrigin.End);  	BinaryReader br = new BinaryReader (zipFileStream);  	do {  		zipFileStream.Seek (-5' SeekOrigin.Current);  		UInt32 sig = br.ReadUInt32 ();  		if (sig != 0x06054b50)  			continue;  		zipFileStream.Seek (6' SeekOrigin.Current);  		UInt16 entries = br.ReadUInt16 ();  		Int32 centralSize = br.ReadInt32 ();  		UInt32 centralDirOffset = br.ReadUInt32 ();  		UInt16 commentSize = br.ReadUInt16 ();  		// check if comment field is the very last data in file  		if (zipFileStream.Position + commentSize != zipFileStream.Length)  			return false;  		// Copy entire central directory to a memory buffer  		existingFiles = entries;  		centralDirImage = new byte[centralSize];  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		zipFileStream.Read (centralDirImage' 0' centralSize);  		// Leave the pointer at the begining of central dir' to append new files  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		return true;  	} while (zipFileStream.Position > 0);  	// ReSharper disable EmptyGeneralCatchClause  } catch {  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek (-17' SeekOrigin.End);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: do {  	zipFileStream.Seek (-5' SeekOrigin.Current);  	UInt32 sig = br.ReadUInt32 ();  	if (sig != 0x06054b50)  		continue;  	zipFileStream.Seek (6' SeekOrigin.Current);  	UInt16 entries = br.ReadUInt16 ();  	Int32 centralSize = br.ReadInt32 ();  	UInt32 centralDirOffset = br.ReadUInt32 ();  	UInt16 commentSize = br.ReadUInt16 ();  	// check if comment field is the very last data in file  	if (zipFileStream.Position + commentSize != zipFileStream.Length)  		return false;  	// Copy entire central directory to a memory buffer  	existingFiles = entries;  	centralDirImage = new byte[centralSize];  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	zipFileStream.Read (centralDirImage' 0' centralSize);  	// Leave the pointer at the begining of central dir' to append new files  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	return true;  } while (zipFileStream.Position > 0);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: do {  	zipFileStream.Seek (-5' SeekOrigin.Current);  	UInt32 sig = br.ReadUInt32 ();  	if (sig != 0x06054b50)  		continue;  	zipFileStream.Seek (6' SeekOrigin.Current);  	UInt16 entries = br.ReadUInt16 ();  	Int32 centralSize = br.ReadInt32 ();  	UInt32 centralDirOffset = br.ReadUInt32 ();  	UInt16 commentSize = br.ReadUInt16 ();  	// check if comment field is the very last data in file  	if (zipFileStream.Position + commentSize != zipFileStream.Length)  		return false;  	// Copy entire central directory to a memory buffer  	existingFiles = entries;  	centralDirImage = new byte[centralSize];  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	zipFileStream.Read (centralDirImage' 0' centralSize);  	// Leave the pointer at the begining of central dir' to append new files  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	return true;  } while (zipFileStream.Position > 0);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek (-5' SeekOrigin.Current);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek (6' SeekOrigin.Current);  
Missing Default,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,DoorAdd,The following switch statement is missing a default case: switch (buildCheck) {  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot add a door to world {0}&S: You are barred from building here."' player.World.ClassyName);  	return;  case SecurityCheckResult.RankTooLow:  	player.Message ("Cannot add a door to world {0}&S: You are not allowed to build here."' player.World.ClassyName);  	return;  //case SecurityCheckResult.RankTooHigh:  }  
Missing Default,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,BindHandler,The following switch statement is missing a default case: switch (replacementBlock) {  case Block.Grass:  	permission = Permission.PlaceGrass;  	break;  case Block.Admincrete:  	permission = Permission.PlaceAdmincrete;  	break;  case Block.Water:  	permission = Permission.PlaceWater;  	break;  case Block.Lava:  	permission = Permission.PlaceLava;  	break;  }  
Missing Default,fCraft,BuildingCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\BuildingCommands.cs,RotateHandler,The following switch statement is missing a default case: switch (degrees) {  case 90:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = -1;  	matrix [b' a] = 1;  	break;  case 180:  	matrix [a' a] = -1;  	matrix [b' b] = -1;  	break;  case -90:  case 270:  	matrix [a' a] = 0;  	matrix [b' b] = 0;  	matrix [a' b] = 1;  	matrix [b' a] = -1;  	break;  }  
Missing Default,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following switch statement is missing a default case: switch (direction) {  case Direction.one:  case Direction.two:  	EndPos.X = FinishPos.X;  	break;  case Direction.three:  case Direction.four:  	EndPos.Y = FinishPos.Y;  	break;  }  
Missing Default,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,StartFeed,The following switch statement is missing a default case: switch (direction) {  case Direction.one:  	EndPos.X -= 7;  	break;  case Direction.two:  	EndPos.X += 7;  	break;  case Direction.three:  	EndPos.Y -= 7;  	break;  case Direction.four:  	EndPos.Y += 7;  	break;  }  
Missing Default,fCraft,FeedData,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\FeedData.cs,SendWorldBlock,The following switch statement is missing a default case: switch (direction) {  case Direction.one:  	x = (int)(index / 8) + EndPos.X;  	y = StartPos.Y;  	z = StartPos.Z + (index % 8);  	if (world.map.InBounds (x' y' z)) {  		if (x >= StartPos.X && x <= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.two:  	x = (short)(EndPos.X - (index / 8));  	y = (short)StartPos.Y;  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (x <= StartPos.X && x >= FinishPos.X) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.three:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y + (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y >= StartPos.Y && y <= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  case Direction.four:  	x = (short)StartPos.X;  	y = (short)(EndPos.Y - (index / 8));  	z = (short)(StartPos.Z + (index % 8));  	if (world.map.InBounds (x' y' z)) {  		if (y <= StartPos.Y && y >= FinishPos.Y) {  			if ((Block)type != Block.Air) {  				var Pos = new Vector3I (x' y' z);  				world.map.QueueUpdate (new BlockUpdate (null' Pos' (Block)type));  				Blocks.TryAdd (Pos.ToString ()' Pos);  			}  		}  	}  	break;  }  
Missing Default,fCraft,LifeHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\LifeHandler.cs,CheckWorldPermissions,The following switch statement is missing a default case: switch (buildCheck) {  case SecurityCheckResult.BlackListed:  	p.Message ("Cannot add life to world {0}&S: You are barred from building here."' p.ClassyName);  	return false;  case SecurityCheckResult.RankTooLow:  	p.Message ("Cannot add life to world {0}&S: You are not allowed to build here."' p.ClassyName);  	return false;  }  
Missing Default,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,GetVarArray,The following switch statement is missing a default case: switch (axis) {  case ValueAxis.Z:  	return new string[] {  		"x"'  		"y"  	};  case ValueAxis.Y:  	return new string[] {  		"x"'  		"z"  	};  case ValueAxis.X:  	return new string[] {  		"y"'  		"z"  	};  }  
Missing Default,fCraft,FuncDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\FuncDrawOperation.cs,GetAxis,The following switch statement is missing a default case: switch (varName [0]) {  case 'x':  	return ValueAxis.X;  case 'y':  	return ValueAxis.Y;  case 'z':  	return ValueAxis.Z;  }  
Missing Default,fCraft,SimpleParser,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\Math Handlers\SimpleParser.cs,Parse,The following switch statement is missing a default case: switch (fd.SpecialKind) {  case SpecialOperandKind.LeftParenthesis:  	tmpStack.Push (fd);  	noBOperatorExpected = true;  	break;  case SpecialOperandKind.RightParenthesis:  	noBOperatorExpected = false;  	ProcessRightParenth (e' tmpStack' pos);  	break;  case SpecialOperandKind.Comma:  	noBOperatorExpected = true;  	ProcessComma (e' tmpStack' pos);  	break;  }  
Missing Default,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following switch statement is missing a default case: switch (realm.AccessSecurity.Include (info)) {  case PermissionOverride.Deny:  	if (realm.AccessSecurity.Check (info)) {  		player.Message ("{0}&S is unbanned from Realm {1}"' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("You are now unbanned from Realm {0}&S (removed from blacklist by {1}&S)."' realm.ClassyName' player.ClassyName);  		}  	} else {  		player.Message ("{0}&S was unbanned from Realm {1}&S. " + "Player is still NOT allowed to join (by rank)."' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("You were Unbanned from Realm {0}&S by {1}&S. " + "You are still NOT allowed to join (by rank)."' player.ClassyName' realm.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the access blacklist of {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now allowed to access {1}"' info.ClassyName' realm.ClassyName);  	if (target != null) {  		target.Message ("You can now access realm {0}&S (whitelisted by {1}&S)."' realm.ClassyName' player.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the access whitelist on realm {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	player.Message ("{0}&S is already on the access whitelist of {1}"' info.ClassyName' realm.ClassyName);  	break;  }  
Missing Default,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmAccess,The following switch statement is missing a default case: switch (realm.AccessSecurity.Exclude (info)) {  case PermissionOverride.Deny:  	player.Message ("{0}&S is already banned from Realm {1}"' info.ClassyName' realm.ClassyName);  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now banned from accessing {1}"' info.ClassyName' realm.ClassyName);  	if (target != null) {  		target.Message ("&WYou were banned by {0}&W from accessing realm {1}"' player.ClassyName' realm.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the access blacklist on realm {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	if (realm.AccessSecurity.Check (info)) {  		player.Message ("{0}&S is no longer on the access whitelist of {1}&S. " + "Player is still allowed to join (by rank)."' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("You were banned from Realm {0}&S by {1}&S. " + "You are still allowed to join (by rank)."' player.ClassyName' realm.ClassyName);  		}  	} else {  		player.Message ("{0}&S is no longer allowed to access {1}"' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("&WYou were banned from Realm {0}&W (Banned by {1}&W)."' realm.ClassyName' player.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the access whitelist on realm {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  }  
Missing Default,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following switch statement is missing a default case: switch (realm.BuildSecurity.Include (info)) {  case PermissionOverride.Deny:  	if (realm.BuildSecurity.Check (info)) {  		player.Message ("{0}&S is no longer barred from building in {1}"' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("You can now build in realm {0}&S (removed from blacklist by {1}&S)."' realm.ClassyName' player.ClassyName);  		}  	} else {  		player.Message ("{0}&S was removed from the build blacklist of {1}&S. " + "Player is still NOT allowed to build (by rank)."' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("You were removed from the build blacklist of realm {0}&S by {1}&S. " + "You are still NOT allowed to build (by rank)."' player.ClassyName' realm.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the build blacklist of {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now allowed to build in {1}"' info.ClassyName' realm.ClassyName);  	if (target != null) {  		target.Message ("You can now build in realm {0}&S (whitelisted by {1}&S)."' realm.ClassyName' player.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the build whitelist on realm {2}"' player.Name' info.Name' realm.Name);  	break;  case PermissionOverride.Allow:  	player.Message ("{0}&S is already on the build whitelist of {1}"' info.ClassyName' realm.ClassyName);  	break;  }  
Missing Default,fCraft,RealmHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\Command Handlers\RealmHandler.cs,RealmBuild,The following switch statement is missing a default case: switch (realm.BuildSecurity.Exclude (info)) {  case PermissionOverride.Deny:  	player.Message ("{0}&S is already on build blacklist of {1}"' info.ClassyName' realm.ClassyName);  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now barred from building in {1}"' info.ClassyName' realm.ClassyName);  	if (target != null) {  		target.Message ("&WYou were barred by {0}&W from building in realm {1}"' player.ClassyName' realm.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the build blacklist on realm {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	if (realm.BuildSecurity.Check (info)) {  		player.Message ("{0}&S is no longer on the build whitelist of {1}&S. " + "Player is still allowed to build (by rank)."' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("You were removed from the build whitelist of realm {0}&S by {1}&S. " + "You are still allowed to build (by rank)."' player.ClassyName' realm.ClassyName);  		}  	} else {  		player.Message ("{0}&S is no longer allowed to build in {1}"' info.ClassyName' realm.ClassyName);  		if (target != null) {  			target.Message ("&WYou can no longer build in realm {0}&W (removed from whitelist by {1}&W)."' realm.ClassyName' player.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the build whitelist on realm {2}"' player.Name' info.Name' realm.Name);  	changesWereMade = true;  	break;  }  
Missing Default,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,PrintPlayerInfo,The following switch statement is missing a default case: switch (info.BanStatus) {  case BanStatus.Banned:  	if (ipBan != null) {  		player.Message ("  Account and IP are &CBANNED&S. See &H/BanInfo");  	} else {  		player.Message ("  Account is &CBANNED&S. See &H/BanInfo");  	}  	break;  case BanStatus.IPBanExempt:  	if (ipBan != null) {  		player.Message ("  IP is &CBANNED&S' but account is exempt. See &H/BanInfo");  	} else {  		player.Message ("  IP is not banned' and account is exempt. See &H/BanInfo");  	}  	break;  case BanStatus.NotBanned:  	if (ipBan != null) {  		player.Message ("  IP is &CBANNED&S. See &H/BanInfo");  	}  	break;  }  
Missing Default,fCraft,InfoCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\InfoCommands.cs,BanInfoHandler,The following switch statement is missing a default case: switch (info.BanStatus) {  case BanStatus.Banned:  	if (ipBan != null) {  		player.Message ("Player {0}&S and their IP are &CBANNED"' info.ClassyName);  	} else {  		player.Message ("Player {0}&S is &CBANNED&S (but their IP is not)."' info.ClassyName);  	}  	break;  case BanStatus.IPBanExempt:  	if (ipBan != null) {  		player.Message ("Player {0}&S is exempt from an existing IP ban."' info.ClassyName);  	} else {  		player.Message ("Player {0}&S is exempt from IP bans."' info.ClassyName);  	}  	break;  case BanStatus.NotBanned:  	if (ipBan != null) {  		player.Message ("Player {0}&s is not banned' but their IP is."' info.ClassyName);  	} else {  		player.Message ("Player {0}&s is not banned."' info.ClassyName);  	}  	break;  }  
Missing Default,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BanExHandler,The following switch statement is missing a default case: switch (target.BanStatus) {  case BanStatus.Banned:  	if (addExemption) {  		player.Message ("Player {0}&S is currently banned. Unban before adding an exemption."' target.ClassyName);  	} else {  		player.Message ("Player {0}&S is already banned. There is no exemption to remove."' target.ClassyName);  	}  	break;  case BanStatus.IPBanExempt:  	if (addExemption) {  		player.Message ("IP-Ban exemption already exists for player {0}"' target.ClassyName);  	} else {  		player.Message ("IP-Ban exemption removed for player {0}"' target.ClassyName);  		target.BanStatus = BanStatus.NotBanned;  	}  	break;  case BanStatus.NotBanned:  	if (addExemption) {  		player.Message ("IP-Ban exemption added for player {0}"' target.ClassyName);  		target.BanStatus = BanStatus.IPBanExempt;  	} else {  		player.Message ("No IP-Ban exemption exists for player {0}"' target.ClassyName);  	}  	break;  }  
Missing Default,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,TPHandler,The following switch statement is missing a default case: switch (targetWorld.AccessSecurity.CheckDetailed (player.Info)) {  case SecurityCheckResult.Allowed:  case SecurityCheckResult.WhiteListed:  	if (targetWorld.IsFull) {  		player.Message ("Cannot teleport to {0}&S because world {1}&S is full."' target.ClassyName' targetWorld.ClassyName);  		return;  	}  	player.StopSpectating ();  	player.JoinWorld (targetWorld' WorldChangeReason.Tp' target.Position);  	break;  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot teleport to {0}&S because you are blacklisted on world {1}"' target.ClassyName' targetWorld.ClassyName);  	break;  case SecurityCheckResult.RankTooLow:  	player.Message ("Cannot teleport to {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' targetWorld.ClassyName' targetWorld.AccessSecurity.MinRank.ClassyName);  	break;  // TODO: case PermissionType.RankTooHigh:  }  
Missing Default,fCraft,ModerationCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ModerationCommands.cs,BringPlayerToWorld,The following switch statement is missing a default case: switch (world.AccessSecurity.CheckDetailed (target.Info)) {  case SecurityCheckResult.Allowed:  case SecurityCheckResult.WhiteListed:  	if (world.IsFull) {  		player.Message ("Cannot bring {0}&S because world {1}&S is full."' target.ClassyName' world.ClassyName);  		return;  	}  	target.StopSpectating ();  	if (usePlayerPosition) {  		target.JoinWorld (world' WorldChangeReason.Bring' player.Position);  	} else {  		target.JoinWorld (world' WorldChangeReason.Bring);  	}  	break;  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot bring {0}&S because he/she is blacklisted on world {1}"' target.ClassyName' world.ClassyName);  	break;  case SecurityCheckResult.RankTooLow:  	if (overridePermissions) {  		target.StopSpectating ();  		if (usePlayerPosition) {  			target.JoinWorld (world' WorldChangeReason.Bring' player.Position);  		} else {  			target.JoinWorld (world' WorldChangeReason.Bring);  		}  	} else {  		player.Message ("Cannot bring {0}&S because world {1}&S requires {2}+&S to join."' target.ClassyName' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  	}  	break;  // TODO: case PermissionType.RankTooHigh:  }  
Missing Default,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following switch statement is missing a default case: switch (orientation) {  case RectOrientations.RemoveLeft:  	new RectangleF ((float)x' (float)y' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveTop:  	new RectangleF ((float)(x - wid)' (float)y' (float)(2 * wid)' (float)(2 * wid));  	break;  case RectOrientations.RemoveRight:  	new RectangleF ((float)(x + wid - 2 * hgt)' (float)(y - hgt)' (float)(2 * hgt)' (float)(2 * hgt));  	break;  case RectOrientations.RemoveBottom:  	new RectangleF ((float)x' (float)(y + hgt - 2 * wid)' (float)(2 * wid)' (float)(2 * wid));  	break;  }  
Missing Default,fCraft,ShapesLib,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\System.Drawing\ShapesLib.cs,DrawPhiRectanglesOnGraphics,The following switch statement is missing a default case: switch (orientation) {  case RectOrientations.RemoveLeft:  	points.Add (new PointF ((float)x' (float)(y + hgt)));  	x += hgt;  	wid -= hgt;  	orientation = RectOrientations.RemoveTop;  	break;  case RectOrientations.RemoveTop:  	points.Add (new PointF ((float)x' (float)y));  	y += wid;  	hgt -= wid;  	orientation = RectOrientations.RemoveRight;  	break;  case RectOrientations.RemoveRight:  	points.Add (new PointF ((float)(x + wid)' (float)y));  	wid -= hgt;  	orientation = RectOrientations.RemoveBottom;  	break;  case RectOrientations.RemoveBottom:  	points.Add (new PointF ((float)(x + wid)' (float)(y + hgt)));  	hgt -= wid;  	orientation = RectOrientations.RemoveLeft;  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,FeedCallback,The following switch statement is missing a default case: switch (direction) {  case Direction.one:  	for (int x = data.StartPos.X; x < data.StartPos.X + 60; x++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.two:  	for (int x = data.StartPos.X; x > data.StartPos.X - 60; x--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)x' (short)data.StartPos.Y' (short)z' Block.Black));  			x1 = x;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (x1' marks [0].Y' z1);  	data.FinishPos = new Vector3I (x1' marks [0].Y' z1);  	break;  case Direction.three:  	for (int y = data.StartPos.Y; y < data.StartPos.Y + 60; y++) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  case Direction.four:  	for (int y = data.StartPos.Y; y > data.StartPos.Y - 60; y--) {  		for (int z = data.StartPos.Z; z < data.StartPos.Z + 9; z++) {  			player.World.Map.QueueUpdate (new BlockUpdate (null' (short)data.StartPos.X' (short)y' (short)z' Block.Black));  			y1 = y;  			z1 = z;  		}  	}  	data.EndPos = new Vector3I (marks [0].X' y1' z1);  	data.FinishPos = new Vector3I (marks [0].X' y1' z1);  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,PhysicsHandler,The following switch statement is missing a default case: switch (NextOp.ToLower ()) {  case "on":  	if (!world.tntPhysics) {  		world.EnableTNTPhysics (player' false);  	}  	if (!world.sandPhysics) {  		world.EnableSandPhysics (player' false);  	}  	if (!world.fireworkPhysics) {  		world.EnableFireworkPhysics (player' false);  	}  	if (!world.waterPhysics) {  		world.EnableWaterPhysics (player' false);  	}  	if (!world.plantPhysics) {  		world.EnablePlantPhysics (player' false);  	}  	if (!world.gunPhysics) {  		world.EnableGunPhysics (player' false);  	}  	Server.Players.Message ("{0}&S turned ALL Physics on for {1}"' player.ClassyName' world.ClassyName);  	Logger.Log (LogType.SystemActivity' "{0} turned ALL Physics on for {1}"' player.Name' world.Name);  	break;  case "off":  	if (world.tntPhysics) {  		world.DisableTNTPhysics (player' false);  	}  	if (world.sandPhysics) {  		world.DisableSandPhysics (player' false);  	}  	if (world.fireworkPhysics) {  		world.DisableFireworkPhysics (player' false);  	}  	if (world.waterPhysics) {  		world.DisableWaterPhysics (player' false);  	}  	if (world.plantPhysics) {  		world.DisablePlantPhysics (player' false);  	}  	if (world.gunPhysics) {  		world.DisableGunPhysics (player' false);  	}  	Server.Players.Message ("{0}&S turned ALL Physics off for {1}"' player.ClassyName' world.ClassyName);  	Logger.Log (LogType.SystemActivity' "{0} turned ALL Physics off for {1}"' player.Name' world.Name);  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,MessageBlockAdd,The following switch statement is missing a default case: switch (buildCheck) {  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot add a MessageBlock to world {0}&S: You are barred from building here."' player.World.ClassyName);  	return;  case SecurityCheckResult.RankTooLow:  	player.Message ("Cannot add a MessageBlock to world {0}&S: You are not allowed to build here."' player.World.ClassyName);  	return;  //case SecurityCheckResult.RankTooHigh:  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,EnvHandler,The following switch statement is missing a default case: switch (valueText.ToLower ()) {  case "on":  	if (world.SideBlock != Block.Admincrete) {  		world.SideBlock = Block.Admincrete;  		player.Message ("The sides of the world have been restored");  	}  	break;  case "off":  	world.SideBlock = Block.Air;  	player.Message ("The sides of the world have been removed");  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,JoinHandler,The following switch statement is missing a default case: switch (world.AccessSecurity.CheckDetailed (player.Info)) {  case SecurityCheckResult.Allowed:  case SecurityCheckResult.WhiteListed:  	if (world.IsFull) {  		player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  		return;  	}  	player.StopSpectating ();  	if (!player.JoinWorldNow (world' true' WorldChangeReason.ManualJoin)) {  		player.Message ("ERROR: Failed to join world. See log for details.");  	}  	break;  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  	break;  case SecurityCheckResult.RankTooLow:  	player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The following switch statement is missing a default case: switch (world.AccessSecurity.CheckDetailed (player.Info)) {  case SecurityCheckResult.RankTooLow:  	player.Message ("&WYou must be {0}&W+ to add yourself to the access whitelist of {1}"' world.AccessSecurity.MinRank.ClassyName' world.ClassyName);  	continue;  // TODO: RankTooHigh  case SecurityCheckResult.BlackListed:  	player.Message ("&WYou cannot remove yourself from the access blacklist of {0}"' world.ClassyName);  	continue;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The following switch statement is missing a default case: switch (world.AccessSecurity.Include (info)) {  case PermissionOverride.Deny:  	if (world.AccessSecurity.Check (info)) {  		player.Message ("{0}&S is no longer barred from accessing {1}"' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("You can now access world {0}&S (removed from blacklist by {1}&S)."' world.ClassyName' player.ClassyName);  		}  	} else {  		player.Message ("{0}&S was removed from the access blacklist of {1}&S. " + "Player is still NOT allowed to join (by rank)."' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("You were removed from the access blacklist of world {0}&S by {1}&S. " + "You are still NOT allowed to join (by rank)."' world.ClassyName' player.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the access blacklist of {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now allowed to access {1}"' info.ClassyName' world.ClassyName);  	if (target != null) {  		target.Message ("You can now access world {0}&S (whitelisted by {1}&S)."' world.ClassyName' player.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the access whitelist on world {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	player.Message ("{0}&S is already on the access whitelist of {1}"' info.ClassyName' world.ClassyName);  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldAccessHandler,The following switch statement is missing a default case: switch (world.AccessSecurity.Exclude (info)) {  case PermissionOverride.Deny:  	player.Message ("{0}&S is already on access blacklist of {1}"' info.ClassyName' world.ClassyName);  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now barred from accessing {1}"' info.ClassyName' world.ClassyName);  	if (target != null) {  		target.Message ("&WYou were barred by {0}&W from accessing world {1}"' player.ClassyName' world.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the access blacklist on world {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	if (world.AccessSecurity.Check (info)) {  		player.Message ("{0}&S is no longer on the access whitelist of {1}&S. " + "Player is still allowed to join (by rank)."' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("You were removed from the access whitelist of world {0}&S by {1}&S. " + "You are still allowed to join (by rank)."' world.ClassyName' player.ClassyName);  		}  	} else {  		player.Message ("{0}&S is no longer allowed to access {1}"' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("&WYou can no longer access world {0}&W (removed from whitelist by {1}&W)."' world.ClassyName' player.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the access whitelist on world {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The following switch statement is missing a default case: switch (world.BuildSecurity.CheckDetailed (player.Info)) {  case SecurityCheckResult.RankTooLow:  	player.Message ("&WYou must be {0}&W+ to add yourself to the build whitelist of {1}"' world.BuildSecurity.MinRank.ClassyName' world.ClassyName);  	continue;  // TODO: RankTooHigh  case SecurityCheckResult.BlackListed:  	player.Message ("&WYou cannot remove yourself from the build blacklist of {0}"' world.ClassyName);  	continue;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The following switch statement is missing a default case: switch (world.BuildSecurity.Include (info)) {  case PermissionOverride.Deny:  	if (world.BuildSecurity.Check (info)) {  		player.Message ("{0}&S is no longer barred from building in {1}"' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("You can now build in world {0}&S (removed from blacklist by {1}&S)."' world.ClassyName' player.ClassyName);  		}  	} else {  		player.Message ("{0}&S was removed from the build blacklist of {1}&S. " + "Player is still NOT allowed to build (by rank)."' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("You were removed from the build blacklist of world {0}&S by {1}&S. " + "You are still NOT allowed to build (by rank)."' world.ClassyName' player.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the build blacklist of {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now allowed to build in {1}"' info.ClassyName' world.ClassyName);  	if (target != null) {  		target.Message ("You can now build in world {0}&S (whitelisted by {1}&S)."' world.ClassyName' player.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the build whitelist on world {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	player.Message ("{0}&S is already on the build whitelist of {1}"' info.ClassyName' world.ClassyName);  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,WorldBuildHandler,The following switch statement is missing a default case: switch (world.BuildSecurity.Exclude (info)) {  case PermissionOverride.Deny:  	player.Message ("{0}&S is already on build blacklist of {1}"' info.ClassyName' world.ClassyName);  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now barred from building in {1}"' info.ClassyName' world.ClassyName);  	if (target != null) {  		target.Message ("&WYou were barred by {0}&W from building in world {1}"' player.ClassyName' world.ClassyName);  	}  	Logger.Log (LogType.UserActivity' "{0} added {1} to the build blacklist on world {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	if (world.BuildSecurity.Check (info)) {  		player.Message ("{0}&S is no longer on the build whitelist of {1}&S. " + "Player is still allowed to build (by rank)."' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("You were removed from the build whitelist of world {0}&S by {1}&S. " + "You are still allowed to build (by rank)."' world.ClassyName' player.ClassyName);  		}  	} else {  		player.Message ("{0}&S is no longer allowed to build in {1}"' info.ClassyName' world.ClassyName);  		if (target != null) {  			target.Message ("&WYou can no longer build in world {0}&W (removed from whitelist by {1}&W)."' world.ClassyName' player.ClassyName);  		}  	}  	Logger.Log (LogType.UserActivity' "{0} removed {1} from the build whitelist on world {2}"' player.Name' info.Name' world.Name);  	changesWereMade = true;  	break;  }  
Missing Default,fCraft,WorldCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\WorldCommands.cs,SetMainWorld,The following switch statement is missing a default case: switch (world.AccessSecurity.CheckDetailed (player.Info)) {  case SecurityCheckResult.RankTooHigh:  case SecurityCheckResult.RankTooLow:  	player.Message ("You are not allowed to set {0}&S as the main world (by rank)."' world.ClassyName);  	return;  case SecurityCheckResult.BlackListed:  	player.Message ("You are not allowed to set {0}&S as the main world (blacklisted)."' world.ClassyName);  	return;  }  
Missing Default,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddHandler,The following switch statement is missing a default case: switch (buildCheck) {  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot add zones to world {0}&S: You are barred from building here."' playerWorld.ClassyName);  	return;  case SecurityCheckResult.RankTooLow:  	player.Message ("Cannot add zones to world {0}&S: You are not allowed to build here."' playerWorld.ClassyName);  	return;  //case SecurityCheckResult.RankTooHigh:  }  
Missing Default,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneAddCallback,The following switch statement is missing a default case: switch (buildCheck) {  case SecurityCheckResult.BlackListed:  	player.Message ("Cannot add zones to world {0}&S: You are barred from building here."' playerWorld.ClassyName);  	return;  case SecurityCheckResult.RankTooLow:  	player.Message ("Cannot add zones to world {0}&S: You are not allowed to build here."' playerWorld.ClassyName);  	return;  //case SecurityCheckResult.RankTooHigh:  }  
Missing Default,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following switch statement is missing a default case: switch (zone.Controller.Include (info)) {  case PermissionOverride.Deny:  	player.Message ("{0}&S is no longer excluded from zone {1}"' info.ClassyName' zone.ClassyName);  	changesWereMade = true;  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now included in zone {1}"' info.ClassyName' zone.ClassyName);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	player.Message ("{0}&S is already included in zone {1}"' info.ClassyName' zone.ClassyName);  	break;  }  
Missing Default,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneEditHandler,The following switch statement is missing a default case: switch (zone.Controller.Exclude (info)) {  case PermissionOverride.Deny:  	player.Message ("{0}&S is already excluded from zone {1}"' info.ClassyName' zone.ClassyName);  	break;  case PermissionOverride.None:  	player.Message ("{0}&S is now excluded from zone {1}"' info.ClassyName' zone.ClassyName);  	changesWereMade = true;  	break;  case PermissionOverride.Allow:  	player.Message ("{0}&S is no longer included in zone {1}"' info.ClassyName' zone.ClassyName);  	changesWereMade = true;  	break;  }  
Missing Default,fCraft,ZoneCommands,F:\newReposMay17\GlennMR_800craft\fCraft\Commands\ZoneCommands.cs,ZoneRemoveHandler,The following switch statement is missing a default case: switch (zone.Controller.CheckDetailed (player.Info)) {  case SecurityCheckResult.BlackListed:  	player.Message ("You are not allowed to remove zone {0}: you are blacklisted."' zone.ClassyName);  	return;  case SecurityCheckResult.RankTooLow:  	player.Message ("You are not allowed to remove zone {0}."' zone.ClassyName);  	return;  }  
Missing Default,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,ParseMessage,The following switch statement is missing a default case: switch (Chat.GetRawMessageType (rawMessage)) {  case RawMessageType.Chat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		// Escaped slash removed AFTER logging' to avoid confusion with real commands  		if (rawMessage.StartsWith ("//")) {  			rawMessage = rawMessage.Substring (1);  		}  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Chat.SendGlobal (this' rawMessage);  	}  	break;  case RawMessageType.Command:  	{  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Command cmd = new Command (rawMessage);  		CommandDescriptor commandDescriptor = CommandManager.GetDescriptor (cmd.Name' true);  		if (commandDescriptor == null) {  			MessageNow ("Unknown command \"{0}\". See &H/Commands"' cmd.Name);  		} else if (Info.IsFrozen && !commandDescriptor.UsableByFrozenPlayers) {  			MessageNow ("&WYou cannot use this command while frozen.");  		} else {  			if (!commandDescriptor.DisableLogging) {  				Logger.Log (LogType.UserCommand' "{0}: {1}"' Name' rawMessage);  			}  			if (commandDescriptor.RepeatableSelection) {  				selectionRepeatCommand = cmd;  			}  			SendToSpectators (cmd.RawMessage);  			CommandManager.ParseCommand (this' cmd' fromConsole);  			if (!commandDescriptor.NotRepeatable) {  				LastCommand = cmd;  			}  		}  	}  	break;  case RawMessageType.RepeatCommand:  	{  		if (LastCommand == null) {  			Message ("No command to repeat.");  		} else {  			if (Info.IsFrozen && !LastCommand.Descriptor.UsableByFrozenPlayers) {  				MessageNow ("&WYou cannot use this command while frozen.");  				return;  			}  			LastCommand.Rewind ();  			Logger.Log (LogType.UserCommand' "{0} repeated: {1}"' Name' LastCommand.RawMessage);  			Message ("Repeat: {0}"' LastCommand.RawMessage);  			SendToSpectators (LastCommand.RawMessage);  			CommandManager.ParseCommand (this' LastCommand' fromConsole);  		}  	}  	break;  case RawMessageType.PrivateChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		string otherPlayerName' messageText;  		if (rawMessage [1] == ' ') {  			otherPlayerName = rawMessage.Substring (2' rawMessage.IndexOf (' '' 2) - 2);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' '' 2) + 1);  		} else {  			otherPlayerName = rawMessage.Substring (1' rawMessage.IndexOf (' ') - 1);  			messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		}  		if (otherPlayerName == "-") {  			if (LastUsedPlayerName != null) {  				otherPlayerName = LastUsedPlayerName;  			} else {  				Message ("Cannot repeat player name: you haven't used any names yet.");  				return;  			}  		}  		// first' find ALL players (visible and hidden)  		Player[] allPlayers = Server.FindPlayers (otherPlayerName' true);  		// if there is more than 1 target player' exclude hidden players  		if (allPlayers.Length > 1) {  			allPlayers = Server.FindPlayers (this' otherPlayerName' true);  		}  		if (allPlayers.Length == 1) {  			Player target = allPlayers [0];  			if (target == this) {  				MessageNow ("Trying to talk to yourself?");  				return;  			}  			if (!target.IsIgnoring (Info) && !target.IsDeaf) {  				Chat.SendPM (this' target' messageText);  				SendToSpectators ("to {0}&F: {1}"' target.ClassyName' messageText);  			}  			if (!CanSee (target)) {  				// message was sent to a hidden player  				MessageNoPlayer (otherPlayerName);  			} else {  				// message was sent normally  				LastUsedPlayerName = target.Name;  				if (target.IsIgnoring (Info)) {  					if (CanSee (target)) {  						MessageNow ("&WCannot PM {0}&W: you are ignored."' target.ClassyName);  					}  				} else if (target.IsDeaf) {  					MessageNow ("&SCannot PM {0}&S: they are currently deaf."' target.ClassyName);  				} else {  					MessageNow ("&Pto {0}: {1}"' target.Name' messageText);  				}  			}  		} else if (allPlayers.Length == 0) {  			MessageNoPlayer (otherPlayerName);  		} else {  			MessageManyMatches ("player"' allPlayers);  		}  	}  	break;  case RawMessageType.RankChat:  	{  		if (!Can (Permission.Chat))  			return;  		if (Info.IsMuted) {  			MessageMuted ();  			return;  		}  		if (DetectChatSpam ())  			return;  		if (rawMessage.EndsWith ("//")) {  			rawMessage = rawMessage.Substring (0' rawMessage.Length - 1);  		}  		Rank rank;  		if (rawMessage [2] == ' ') {  			rank = Info.Rank;  		} else {  			string rankName = rawMessage.Substring (2' rawMessage.IndexOf (' ') - 2);  			rank = RankManager.FindRank (rankName);  			if (rank == null) {  				MessageNoRank (rankName);  				break;  			}  		}  		string messageText = rawMessage.Substring (rawMessage.IndexOf (' ') + 1);  		Player[] spectators = Server.Players.NotRanked (Info.Rank).Where (p => p.spectatedPlayer == this).ToArray ();  		if (spectators.Length > 0) {  			spectators.Message ("[Spectate]: &Fto rank {0}&F: {1}"' rank.ClassyName' messageText);  		}  		Chat.SendRank (this' rank' messageText);  	}  	break;  case RawMessageType.Confirmation:  	{  		if (Info.IsFrozen) {  			MessageNow ("&WYou cannot use any commands while frozen.");  			return;  		}  		if (ConfirmCallback != null) {  			if (DateTime.UtcNow.Subtract (ConfirmRequestTime) < ConfirmationTimeout) {  				SendToSpectators ("/ok");  				ConfirmCallback (this' ConfirmArgument' fromConsole);  				ConfirmCallback = null;  				ConfirmArgument = null;  			} else {  				MessageNow ("Confirmation timed out. Enter the command again.");  			}  		} else {  			MessageNow ("There is no command to confirm.");  		}  	}  	break;  case RawMessageType.PartialMessage:  	partialMessage = rawMessage.Substring (0' rawMessage.Length - 1);  	MessageNow ("Partial: &F{0}"' partialMessage);  	break;  case RawMessageType.Invalid:  	MessageNow ("Could not parse message.");  	break;  }  
Missing Default,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following switch statement is missing a default case: switch (canPlaceResult) {  case CanPlaceResult.Allowed:  	BlockUpdate blockUpdate;  	if (type == Block.Stair && coord.Z > 0 && map.GetBlock (coordBelow) == Block.Stair) {  		// handle stair stacking  		blockUpdate = new BlockUpdate (this' coordBelow' Block.DoubleStair);  		Info.ProcessBlockPlaced ((byte)Block.DoubleStair);  		map.QueueUpdate (blockUpdate);  		RaisePlayerPlacedBlockEvent (this' World.Map' coordBelow' Block.Stair' Block.DoubleStair' context);  		SendNow (PacketWriter.MakeSetBlock (coordBelow' Block.DoubleStair));  		RevertBlockNow (coord);  		break;  	} else {  		// handle normal blocks  		blockUpdate = new BlockUpdate (this' coord' type);  		Info.ProcessBlockPlaced ((byte)type);  		Block old = map.GetBlock (coord);  		map.QueueUpdate (blockUpdate);  		RaisePlayerPlacedBlockEvent (this' World.Map' coord' old' type' context);  		if (requiresUpdate || RelayAllUpdates) {  			SendNow (PacketWriter.MakeSetBlock (coord' type));  		}  	}  	break;  case CanPlaceResult.BlocktypeDenied:  	Message ("&WYou are not permitted to affect this block type.");  	RevertBlockNow (coord);  	break;  case CanPlaceResult.RankDenied:  	Message ("&WYour rank is not allowed to build.");  	RevertBlockNow (coord);  	break;  case CanPlaceResult.Revert:  	RevertBlockNow (coord);  	break;  case CanPlaceResult.WorldDenied:  	switch (World.BuildSecurity.CheckDetailed (Info)) {  	case SecurityCheckResult.RankTooLow:  	case SecurityCheckResult.RankTooHigh:  		Message ("&WYour rank is not allowed to build in this world.");  		break;  	case SecurityCheckResult.BlackListed:  		Message ("&WYou are not allowed to build in this world.");  		break;  	}  	RevertBlockNow (coord);  	break;  case CanPlaceResult.ZoneDenied:  	Zone deniedZone = WorldMap.Zones.FindDenied (coord' this);  	if (deniedZone != null) {  		Message (deniedZone.Message ?? string.Format ("&WYou are not allowed to build in zone \"{0}\"."' deniedZone.Name));  	} else {  		Message ("&WYou are not allowed to build here.");  	}  	RevertBlockNow (coord);  	break;  case CanPlaceResult.PluginDenied:  	RevertBlockNow (coord);  	break;  //case CanPlaceResult.PluginDeniedNoUpdate:  //    break;  }  
Missing Default,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,PlaceBlock,The following switch statement is missing a default case: switch (World.BuildSecurity.CheckDetailed (Info)) {  case SecurityCheckResult.RankTooLow:  case SecurityCheckResult.RankTooHigh:  	Message ("&WYour rank is not allowed to build in this world.");  	break;  case SecurityCheckResult.BlackListed:  	Message ("&WYou are not allowed to build in this world.");  	break;  }  
Missing Default,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following switch statement is missing a default case: switch (nameVerificationMode) {  case NameVerificationMode.Always:  	Info.ProcessFailedLogin (this);  	Logger.Log (LogType.SuspiciousActivity' "{0} IP matched previous records for that name. " + "Player was kicked anyway because VerifyNames is set to Always."' standardMessage);  	KickNow ("Could not verify player name!"' LeaveReason.UnverifiedName);  	return false;  case NameVerificationMode.Balanced:  case NameVerificationMode.Never:  	Logger.Log (LogType.SuspiciousActivity' "{0} IP matched previous records for that name. Player was allowed in."' standardMessage);  	IsVerified = true;  	break;  }  
Missing Default,fCraft,Player,F:\newReposMay17\GlennMR_800craft\fCraft\Network\CPE.cs,LoginSequence,The following switch statement is missing a default case: switch (nameVerificationMode) {  case NameVerificationMode.Always:  case NameVerificationMode.Balanced:  	Info.ProcessFailedLogin (this);  	Logger.Log (LogType.SuspiciousActivity' "{0} IP did not match. Player was kicked."' standardMessage);  	KickNow ("Could not verify player name!"' LeaveReason.UnverifiedName);  	return false;  case NameVerificationMode.Never:  	Logger.Log (LogType.SuspiciousActivity' "{0} IP did not match. Player was allowed in anyway because VerifyNames is set to Never."' standardMessage);  	Message ("&WYour name could not be verified.");  	break;  }  
Missing Default,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Draw,The following switch statement is missing a default case: switch (_life2d.Get (i - minI' j - minJ)) {  case Life2d.Nothing:  	SetBlock (_empty);  	break;  case Life2d.Normal:  	SetBlock (_normal);  	break;  case Life2d.Newborn:  	SetBlock (_newborn);  	break;  case Life2d.Dead:  	SetBlock (_dead);  	break;  }  
Missing Default,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,ReadToArrayByOrientation,The following switch statement is missing a default case: switch (_orientation) {  case Orientation.X:  	ReadToArray (ref _coords.Y' ref _coords.Z' _bounds.YMin' _bounds.YMax' _bounds.ZMin' _bounds.ZMax);  	return;  case Orientation.Y:  	ReadToArray (ref _coords.X' ref _coords.Z' _bounds.XMin' _bounds.XMax' _bounds.ZMin' _bounds.ZMax);  	return;  case Orientation.Z:  	ReadToArray (ref _coords.X' ref _coords.Y' _bounds.XMin' _bounds.XMax' _bounds.YMin' _bounds.YMax);  	return;  }  
Missing Default,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,DrawByOrientation,The following switch statement is missing a default case: switch (_orientation) {  case Orientation.X:  	Draw (ref _coords.Y' ref _coords.Z' _bounds.YMin' _bounds.YMax' _bounds.ZMin' _bounds.ZMax);  	return;  case Orientation.Y:  	Draw (ref _coords.X' ref _coords.Z' _bounds.XMin' _bounds.XMax' _bounds.ZMin' _bounds.ZMax);  	return;  case Orientation.Z:  	Draw (ref _coords.X' ref _coords.Y' _bounds.XMin' _bounds.XMax' _bounds.YMin' _bounds.YMax);  	return;  }  
Missing Default,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,PerformInternal,The following switch statement is missing a default case: switch (_state) {  case State.Stopped:  	return 0;  case State.Starting:  	ReadToArrayByOrientation ();  	_initialState = _life2d.GetArrayCopy ();  	_stateHashes.Clear ();  	_state = State.HalfStep;  	goto case State.HalfStep;  //fall through c# stile  case State.HalfStep:  	_life2d.HalfStep ();  	_state = State.FinalizedStep;  	if (_halfStepDelay > 0) {  		DrawByOrientation ();  		return _halfStepDelay;  	}  	goto case State.FinalizedStep;  //fall through c# stile  case State.FinalizedStep:  	_state = _life2d.FinalizeStep () ? State.HalfStep : (_autoReset != AutoResetMethod.None ? State.Resetting : State.Stopped);  	if (_autoReset != AutoResetMethod.None && State.HalfStep == _state) {  		//check short periodical repetition  		if (_stateHashes.Contains (_life2d.Hash))  			_state = State.Resetting;  		else  			_stateHashes.Add (_life2d.Hash);  	}  	DrawByOrientation ();  	return _delay;  case State.Resetting:  	if (_autoReset == AutoResetMethod.None)//has been just changed?  	 {  		_state = State.Stopped;  		return 0;  	}  	_life2d.Clear ();  	_stateHashes.Clear ();  	DrawByOrientation ();  	_state = State.Reinit;  	return LongDelay;  case State.Reinit:  	if (_autoReset == AutoResetMethod.None)//has been just changed?  	 {  		_state = State.Stopped;  		return 0;  	}  	Reinit ();  	_state = State.HalfStep;  	DrawByOrientation ();  	return _delay;  }  
Missing Default,fCraft,Life2DZone,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Life\Life2DZone.cs,Reinit,The following switch statement is missing a default case: switch (_autoReset) {  case AutoResetMethod.ToInitial:  	if (null == _initialState)  		goto case AutoResetMethod.ToRandom;  	_life2d.SetState (_initialState);  	return;  case AutoResetMethod.ToRandom:  	_life2d.SetStateToRandom ();  	return;  }  
Missing Default,fCraft,Physics,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\Physics.cs,CanSquash,The following switch statement is missing a default case: switch (block) {  case Block.BrownMushroom:  case Block.Plant:  case Block.RedFlower:  case Block.RedMushroom:  case Block.YellowFlower:  	return true;  }  
Missing Default,fCraft,PlantTask,F:\newReposMay17\GlennMR_800craft\fCraft\Physics\PlantPhysics.cs,TypeByBlock,The following switch statement is missing a default case: switch (b) {  case Block.Grass:  case Block.Dirt:  	return TreeType.Normal;  case Block.Sand:  	return TreeType.Palm;  }  
Missing Default,fCraft,Chat,F:\newReposMay17\GlennMR_800craft\fCraft\Player\Chat.cs,GetRawMessageType,The following switch statement is missing a default case: switch (message [0]) {  case '/':  	if (message.Length < 2) {  		// message too short to be a command  		return RawMessageType.Invalid;  	}  	if (message [1] == '/') {  		// escaped slash in the beginning: "//blah"  		return RawMessageType.Chat;  	}  	if (message [1] != ' ') {  		// normal command: "/cmd"  		return RawMessageType.Command;  	}  	return RawMessageType.Invalid;  case '@':  	if (message.Length < 4 || message.IndexOf (' ') == -1) {  		// message too short to be a PM or rank chat  		return RawMessageType.Invalid;  	}  	if (message [1] == '@') {  		return RawMessageType.RankChat;  	}  	if (message [1] == '-' && message [2] == ' ') {  		// name shortcut: "@- blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] == ' ' && message.IndexOf (' '' 2) != -1) {  		// alternative PM notation: "@ name blah"  		return RawMessageType.PrivateChat;  	}  	if (message [1] != ' ') {  		// primary PM notation: "@name blah"  		return RawMessageType.PrivateChat;  	}  	return RawMessageType.Invalid;  }  
Missing Default,fCraft,PlayerInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Player\PlayerInfo.Actions.cs,Serialize,The following switch statement is missing a default case: switch (BanStatus) {  case BanStatus.Banned:  	sb.Append ('b');  	break;  case BanStatus.IPBanExempt:  	sb.Append ('x');  	break;  }  
Missing Default,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,ChatSentHandler,The following switch statement is missing a default case: switch (args.MessageType) {  case ChatMessageType.Global:  	if (enabled) {  		string formattedMessage = String.Format ("{0}{1}: {2}"' args.Player.ClassyName' ResetCode' args.Message);  		SendChannelMessage (formattedMessage);  	} else if (args.Message.StartsWith ("#")) {  		string formattedMessage = String.Format ("{0}{1}: {2}"' args.Player.ClassyName' ResetCode' args.Message.Substring (1));  		SendChannelMessage (formattedMessage);  	}  	break;  case ChatMessageType.Me:  case ChatMessageType.Say:  	if (enabled) {  		SendAction (args.FormattedMessage);  	}  	break;  }  
Missing Default,fCraft,IRC,F:\newReposMay17\GlennMR_800craft\fCraft\Network\IRC.cs,MessageParser,The following switch statement is missing a default case: switch (type) {  case IRCMessageType.Join:  case IRCMessageType.Kick:  case IRCMessageType.Part:  case IRCMessageType.TopicChange:  case IRCMessageType.ChannelModeChange:  case IRCMessageType.ChannelMessage:  case IRCMessageType.ChannelAction:  case IRCMessageType.ChannelNotice:  	channel = linear [2];  	break;  case IRCMessageType.Who:  case IRCMessageType.Topic:  case IRCMessageType.Invite:  case IRCMessageType.BanList:  case IRCMessageType.ChannelMode:  	channel = linear [3];  	break;  case IRCMessageType.Name:  	channel = linear [4];  	break;  }  
Missing Default,fCraft,ReleaseInfo,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Updater.cs,StringToReleaseFlags,The following switch statement is missing a default case: switch (Char.ToUpper (str [i])) {  case 'A':  	flags |= ReleaseFlags.APIChange;  	break;  case 'B':  	flags |= ReleaseFlags.Bugfix;  	break;  case 'C':  	flags |= ReleaseFlags.ConfigFormatChange;  	break;  case 'D':  	flags |= ReleaseFlags.Dev;  	break;  case 'F':  	flags |= ReleaseFlags.Feature;  	break;  case 'M':  	flags |= ReleaseFlags.MapFormatChange;  	break;  case 'P':  	flags |= ReleaseFlags.PlayerDBFormatChange;  	break;  case 'S':  	flags |= ReleaseFlags.Security;  	break;  case 'U':  	flags |= ReleaseFlags.Unstable;  	break;  case 'O':  	flags |= ReleaseFlags.Optimized;  	break;  }  
Missing Default,fCraft,Color,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\Color.cs,Parse,The following switch statement is missing a default case: switch (color.Length) {  case 2:  	if (color [0] == '&' && IsValidColorCode (color [1])) {  		return color;  	}  	break;  case 1:  	return Parse (color [0]);  case 0:  	return "";  }  
Missing Default,fCraft,Config,F:\newReposMay17\GlennMR_800craft\fCraft\System\Config.cs,ApplyKeyChange,The following switch statement is missing a default case: switch (key) {  case ConfigKey.AnnouncementColor:  	Color.Announcement = Color.Parse (key.GetString ());  	break;  case ConfigKey.AntispamInterval:  	Player.AntispamInterval = key.GetInt ();  	break;  case ConfigKey.AntispamMessageCount:  	Player.AntispamMessageCount = key.GetInt ();  	break;  case ConfigKey.DefaultBuildRank:  	RankManager.DefaultBuildRank = Rank.Parse (key.GetString ());  	break;  case ConfigKey.DefaultRank:  	RankManager.DefaultRank = Rank.Parse (key.GetString ());  	break;  case ConfigKey.BandwidthUseMode:  	Player[] playerListCache = Server.Players;  	if (playerListCache != null) {  		foreach (Player p in playerListCache) {  			if (p.BandwidthUseMode == BandwidthUseMode.Default) {  				// resets the use tweaks  				p.BandwidthUseMode = BandwidthUseMode.Default;  			}  		}  	}  	break;  case ConfigKey.BlockDBAutoEnableRank:  	RankManager.BlockDBAutoEnableRank = Rank.Parse (key.GetString ());  	if (BlockDB.IsEnabledGlobally) {  		World[] worldListCache = WorldManager.Worlds;  		foreach (World world in worldListCache) {  			if (world.BlockDB.AutoToggleIfNeeded ()) {  				if (world.BlockDB.IsEnabled) {  					Logger.Log (LogType.SystemActivity' "BlockDB is now auto-enabled on world {0}"' world.Name);  				} else {  					Logger.Log (LogType.SystemActivity' "BlockDB is now auto-disabled on world {0}"' world.Name);  				}  			}  		}  	}  	break;  case ConfigKey.BlockUpdateThrottling:  	Server.BlockUpdateThrottling = key.GetInt ();  	break;  case ConfigKey.ConsoleName:  	if (Player.Console != null) {  		Player.Console.Info.Name = key.GetString ();  	}  	break;  case ConfigKey.DefaultBackupInterval:  	// TODO: update SchedulerTasks  	WorldManager.DefaultBackupInterval = new TimeSpan (TimeSpan.TicksPerSecond * key.GetInt ());  	break;  case ConfigKey.HelpColor:  	Color.Help = Color.Parse (key.GetString ());  	break;  case ConfigKey.IRCDelay:  	IRC.SendDelay = key.GetInt ();  	break;  case ConfigKey.IRCMessageColor:  	Color.IRC = Color.Parse (key.GetString ());  	break;  case ConfigKey.LogMode:  	Logger.SplittingType = key.GetEnum<LogSplittingType> ();  	break;  case ConfigKey.MapPath:  	if (!Paths.IgnoreMapPathConfigKey && GetString (ConfigKey.MapPath).Length > 0) {  		if (Paths.TestDirectory ("MapPath"' GetString (ConfigKey.MapPath)' true)) {  			Paths.MapPath = Path.GetFullPath (GetString (ConfigKey.MapPath));  		}  	}  	break;  case ConfigKey.MaxUndo:  	BuildingCommands.MaxUndoCount = key.GetInt ();  	break;  case ConfigKey.MeColor:  	Color.Me = Color.Parse (key.GetString ());  	break;  case ConfigKey.NoPartialPositionUpdates:  	if (key.Enabled ()) {  		Player.FullPositionUpdateInterval = 0;  	} else {  		Player.FullPositionUpdateInterval = Player.FullPositionUpdateIntervalDefault;  	}  	break;  case ConfigKey.PatrolledRank:  	RankManager.PatrolledRank = Rank.Parse (key.GetString ());  	break;  case ConfigKey.PrivateMessageColor:  	Color.PM = Color.Parse (key.GetString ());  	break;  case ConfigKey.RelayAllBlockUpdates:  	Player.RelayAllUpdates = key.Enabled ();  	break;  case ConfigKey.SayColor:  	Color.Say = Color.Parse (key.GetString ());  	break;  case ConfigKey.SystemMessageColor:  	Color.Sys = Color.Parse (key.GetString ());  	break;  case ConfigKey.CustomChatColor:  	Color.Custom = Color.Parse (key.GetString ());  	break;  case ConfigKey.TickInterval:  	Server.TicksPerSecond = 1000 / (float)key.GetInt ();  	break;  case ConfigKey.UploadBandwidth:  	Server.MaxUploadSpeed = key.GetInt ();  	break;  case ConfigKey.WarningColor:  	Color.Warning = Color.Parse (key.GetString ());  	break;  }  
Missing Default,fCraft,MapGeneratorOld,F:\newReposMay17\GlennMR_800craft\fCraft\World\MapGenerator.cs,ApplyTheme,The following switch statement is missing a default case: switch (theme) {  case MapGenTheme.Arctic:  	bWaterSurface = Block.Glass;  	bDeepWaterSurface = Block.Water;  	bGroundSurface = Block.White;  	bWater = Block.Water;  	bGround = Block.White;  	bSeaFloor = Block.White;  	bBedrock = Block.Stone;  	bCliff = Block.Stone;  	groundThickness = 1;  	break;  case MapGenTheme.Desert:  	bWaterSurface = Block.Water;  	bDeepWaterSurface = Block.Water;  	bGroundSurface = Block.Sand;  	bWater = Block.Water;  	bGround = Block.Sand;  	bSeaFloor = Block.Sand;  	bBedrock = Block.Stone;  	bCliff = Block.Gravel;  	break;  case MapGenTheme.Hell:  	bWaterSurface = Block.Lava;  	bDeepWaterSurface = Block.Lava;  	bGroundSurface = Block.Obsidian;  	bWater = Block.Lava;  	bGround = Block.Stone;  	bSeaFloor = Block.Obsidian;  	bBedrock = Block.Stone;  	bCliff = Block.Stone;  	break;  case MapGenTheme.Forest:  	bWaterSurface = Block.Water;  	bDeepWaterSurface = Block.Water;  	bGroundSurface = Block.Grass;  	bWater = Block.Water;  	bGround = Block.Dirt;  	bSeaFloor = Block.Sand;  	bBedrock = Block.Stone;  	bCliff = Block.Stone;  	break;  case MapGenTheme.Swamp:  	bWaterSurface = Block.Water;  	bDeepWaterSurface = Block.Water;  	bGroundSurface = Block.Dirt;  	bWater = Block.Water;  	bGround = Block.Dirt;  	bSeaFloor = Block.Leaves;  	bBedrock = Block.Stone;  	bCliff = Block.Stone;  	break;  }  
Missing Default,fCraft,LineWrapper,F:\newReposMay17\GlennMR_800craft\fCraft\Network\LineWrapper.cs,ProcessColor,The following switch statement is missing a default case: switch (ch) {  case (byte)'s':  	ch = (byte)Color.Sys [1];  	return true;  case (byte)'y':  	ch = (byte)Color.Say [1];  	return true;  case (byte)'p':  	ch = (byte)Color.PM [1];  	return true;  case (byte)'r':  	ch = (byte)Color.Announcement [1];  	return true;  case (byte)'h':  	ch = (byte)Color.Help [1];  	return true;  case (byte)'w':  	ch = (byte)Color.Warning [1];  	return true;  case (byte)'m':  	ch = (byte)Color.Me [1];  	return true;  case (byte)'i':  	ch = (byte)Color.IRC [1];  	return true;  }  
Missing Default,fCraft,LogRecorder,F:\newReposMay17\GlennMR_800craft\fCraft\Utils\LogRecorder.cs,HandleLog,The following switch statement is missing a default case: switch (e.MessageType) {  case LogType.SeriousError:  case LogType.Error:  	HasErrors = true;  	break;  case LogType.Warning:  	HasWarnings = true;  	break;  }  
Missing Default,fCraft.Drawing,CylinderDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\CylinderDrawOperation.cs,DrawBatch,The following switch statement is missing a default case: switch (state) {  case State.BeforeBlock:  	state = State.BeforeBlock;  	delta.X = (Coords.X - center.X);  	delta.Y = (Coords.Y - center.Y);  	delta.Z = (Coords.Z - center.Z);  	if (delta.X2 * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1)  		continue;  	goto case State.OuterBlock1;  case State.OuterBlock1:  	state = State.OuterBlock1;  	firstZ = Coords.Z;  	if (DrawOneBlock ()) {  		blocksDone++;  	}  	goto case State.OuterBlock2;  case State.OuterBlock2:  	state = State.OuterBlock2;  	if (blocksDone >= maxBlocksToDraw)  		return blocksDone;  	int secondZ = (int)(center.Z - delta.Z);  	if (secondZ != firstZ) {  		int oldZ = Coords.Z;  		Coords.Z = secondZ;  		if (DrawOneBlock ()) {  			blocksDone++;  		}  		Coords.Z = oldZ;  	}  	goto case State.AfterOuterBlock;  case State.AfterOuterBlock:  	state = State.AfterOuterBlock;  	if (blocksDone >= maxBlocksToDraw || TimeToEndBatch)  		return blocksDone;  	delta.Z = (++Coords.Z - center.Z);  	if (Coords.Z <= (int)center.Z && ((delta.X + 1) * (delta.X + 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || (delta.X - 1) * (delta.X - 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y + 1) * (delta.Y + 1) * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y - 1) * (delta.Y - 1) * radius.Y + delta.Z2 * radius.Z > 1)) {  		goto case State.OuterBlock1;  	}  	if (!fillInner) {  		state = State.BeforeBlock;  		break;  	}  	UseAlternateBlock = true;  	goto case State.InnerBlock;  case State.InnerBlock:  	state = State.InnerBlock;  	if (Coords.Z > (int)(center.Z - delta.Z)) {  		UseAlternateBlock = false;  		state = State.BeforeBlock;  		break;  	}  	if (DrawOneBlock ()) {  		blocksDone++;  		Coords.Z++;  		if (blocksDone >= maxBlocksToDraw || TimeToEndBatch) {  			return blocksDone;  		}  	} else {  		Coords.Z++;  	}  	goto case State.InnerBlock;  }  
Missing Default,fCraft.Drawing,EllipsoidHollowDrawOperation,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\EllipsoidHollowDrawOperation.cs,DrawBatch,The following switch statement is missing a default case: switch (state) {  case State.BeforeBlock:  	state = State.BeforeBlock;  	delta.X = (Coords.X - center.X);  	delta.Y = (Coords.Y - center.Y);  	delta.Z = (Coords.Z - center.Z);  	if (delta.X2 * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1)  		continue;  	goto case State.OuterBlock1;  case State.OuterBlock1:  	state = State.OuterBlock1;  	firstZ = Coords.Z;  	if (DrawOneBlock ()) {  		blocksDone++;  	}  	goto case State.OuterBlock2;  case State.OuterBlock2:  	state = State.OuterBlock2;  	if (blocksDone >= maxBlocksToDraw)  		return blocksDone;  	int secondZ = (int)(center.Z - delta.Z);  	if (secondZ != firstZ) {  		int oldZ = Coords.Z;  		Coords.Z = secondZ;  		if (DrawOneBlock ()) {  			blocksDone++;  		}  		Coords.Z = oldZ;  	}  	goto case State.AfterOuterBlock;  case State.AfterOuterBlock:  	state = State.AfterOuterBlock;  	if (blocksDone >= maxBlocksToDraw || TimeToEndBatch)  		return blocksDone;  	delta.Z = (++Coords.Z - center.Z);  	if (Coords.Z <= (int)center.Z && ((delta.X + 1) * (delta.X + 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || (delta.X - 1) * (delta.X - 1) * radius.X + delta.Y2 * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y + 1) * (delta.Y + 1) * radius.Y + delta.Z2 * radius.Z > 1 || delta.X2 * radius.X + (delta.Y - 1) * (delta.Y - 1) * radius.Y + delta.Z2 * radius.Z > 1)) {  		goto case State.OuterBlock1;  	}  	if (!fillInner) {  		state = State.BeforeBlock;  		break;  	}  	UseAlternateBlock = true;  	goto case State.InnerBlock;  case State.InnerBlock:  	state = State.InnerBlock;  	if (Coords.Z > (int)(center.Z - delta.Z)) {  		UseAlternateBlock = false;  		state = State.BeforeBlock;  		break;  	}  	if (DrawOneBlock ()) {  		blocksDone++;  		Coords.Z++;  		if (blocksDone >= maxBlocksToDraw || TimeToEndBatch) {  			return blocksDone;  		}  	} else {  		Coords.Z++;  	}  	goto case State.InnerBlock;  }  
Missing Default,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following switch statement is missing a default case: switch (_d) {  case 0:  	x = xFrom + cellSize;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 1:  	y = yFrom + cellSize;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 2:  	x = xFrom - 1;  	fun (ref y' ref z' yFrom' zFrom);  	break;  case 3:  	y = yFrom - 1;  	fun (ref x' ref z' xFrom' zFrom);  	break;  case 4:  	z = zFrom - 1;  	fun (ref x' ref y' xFrom' yFrom);  	break;  case 5:  	z = zFrom + cellSize;  	fun (ref x' ref y' xFrom' yFrom);  	break;  }  
Missing Default,RandomMaze,Direction,F:\newReposMay17\GlennMR_800craft\fCraft\Drawing\DrawOps\Maze.cs,ArrangeCoords,The following switch statement is missing a default case: switch (_d) {  case 0:  case 2:  	y = yFrom - 1;  	z = zFrom - 1;  	fun (ref x' xFrom);  	break;  case 1:  case 3:  	x = xFrom - 1;  	z = zFrom - 1;  	fun (ref y' yFrom);  	break;  case 4:  case 5:  	x = xFrom - 1;  	y = yFrom - 1;  	fun (ref z' zFrom);  	break;  }  
Missing Default,fCraft.MapConversion,MapDat,F:\newReposMay17\GlennMR_800craft\fCraft\MapConversion\MapDAT.cs,Load,The following switch statement is missing a default case: switch ((char)data [pointer]) {  case 'Z':  	offset++;  	break;  case 'F':  case 'I':  	offset += 4;  	break;  case 'J':  	offset += 8;  	break;  }  
Missing Default,fCraft.Portals,PortalHandler,F:\newReposMay17\GlennMR_800craft\fCraft\Portals\PortalHandler.cs,Player_Moved,The following switch statement is missing a default case: switch (world.AccessSecurity.CheckDetailed (e.Player.Info)) {  case SecurityCheckResult.Allowed:  case SecurityCheckResult.WhiteListed:  	if (world.IsFull) {  		e.Player.Message ("Cannot join {0}&S: world is full."' world.ClassyName);  		return;  	}  	e.Player.StopSpectating ();  	if (portal.World == e.Player.World.Name) {  		if (!portal.HasDesiredOutput) {  			e.Player.TeleportTo (e.Player.World.Map.Spawn);  		} else {  			e.Player.TeleportTo (new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  		}  		e.Player.LastWarnedPortal = DateTime.UtcNow;  		e.Player.StandingInPortal = false;  		e.Player.CanUsePortal = true;  		e.Player.LastUsedPortal = DateTime.UtcNow;  	} else {  		if (!portal.HasDesiredOutput) {  			e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal);  		} else {  			e.Player.JoinWorld (WorldManager.FindWorldExact (portal.World)' WorldChangeReason.Portal' new Position ((short)portal.DesiredOutputX' (short)portal.DesiredOutputY' (short)portal.DesiredOutputZ' portal.DesiredOutputR' portal.DesiredOutputL));  		}  	}  	e.Player.Message ("You used portal: " + portal.Name);  	break;  case SecurityCheckResult.BlackListed:  	e.Player.Message ("Cannot join world {0}&S: you are blacklisted."' world.ClassyName);  	break;  case SecurityCheckResult.RankTooLow:  	e.Player.Message ("Cannot join world {0}&S: must be {1}+"' world.ClassyName' world.AccessSecurity.MinRank.ClassyName);  	break;  }  
