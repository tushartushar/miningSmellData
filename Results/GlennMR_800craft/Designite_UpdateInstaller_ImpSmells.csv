Implementation smell,Namespace,Class,File,Method,Description
Long Method,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The method has 148 lines of code.
Complex Method,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,Cyclomatic complexity of the method is 46
Complex Method,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,DoBackup,Cyclomatic complexity of the method is 8
Complex Method,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Store,Cyclomatic complexity of the method is 8
Long Parameter List,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,AddStream,The method has 5 parameters.
Long Statement,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Open,The length of the statement  "	Stream stream = new FileStream (filename' FileMode.Open' fileAccess == FileAccess.Read ? FileAccess.Read : FileAccess.ReadWrite); " is 129.
Long Statement,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The length of the statement  "	return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25)); " is 131.
Long Statement,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The length of the statement  "	return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2); " is 152.
Complex Conditional,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Store,The conditional expression  "zfe.Method == Compression.Deflate && !ForceDeflating && source.CanSeek && zfe.CompressedSize > zfe.FileSize"  is complex.
Empty Catch Block,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The method has an empty catch block.
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (Resources.Payload)) {  	using (ZipStorer zs = ZipStorer.Open (ms' FileAccess.Read)) {  		var allFiles = zs.ReadCentralDir ().Select (entry => entry.FilenameInZip).Union (LegacyFiles);  		// ensure that fcraft files are writable  		bool allPassed;  		do {  			allPassed = true;  			foreach (var fileName in allFiles) {  				try {  					FileInfo fi = new FileInfo (fileName);  					if (!fi.Exists)  						continue;  					using (fi.OpenWrite ()) {  					}  				} catch (Exception ex) {  					if (ex is IOException) {  						Console.WriteLine ("Waiting for fCraft-related applications to close...");  					} else {  						Console.Error.WriteLine ("ERROR: could not write to {0}: {1} - {2}"' fileName' ex.GetType ().Name' ex.Message);  						Console.WriteLine ();  					}  					allPassed = false;  					Thread.Sleep (1000);  					break;  				}  			}  		} while (!allPassed);  		// delete legacy files  		foreach (var legacyFile in LegacyFiles) {  			try {  				File.Delete (legacyFile);  			} catch (Exception ex) {  				Console.Error.WriteLine ("    ERROR: {0} {1}"' ex.GetType ().Name' ex.Message);  			}  		}  		// extract files  		foreach (var entry in zs.ReadCentralDir ()) {  			Console.WriteLine ("Extracting {0}"' entry.FilenameInZip);  			try {  				using (FileStream fs = File.Create (entry.FilenameInZip)) {  					zs.ExtractFile (entry' fs);  				}  			} catch (Exception ex) {  				Console.Error.WriteLine ("    ERROR: {0} {1}"' ex.GetType ().Name' ex.Message);  			}  		}  	}  }  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The following statement contains a magic number: using (ZipStorer zs = ZipStorer.Open (ms' FileAccess.Read)) {  	var allFiles = zs.ReadCentralDir ().Select (entry => entry.FilenameInZip).Union (LegacyFiles);  	// ensure that fcraft files are writable  	bool allPassed;  	do {  		allPassed = true;  		foreach (var fileName in allFiles) {  			try {  				FileInfo fi = new FileInfo (fileName);  				if (!fi.Exists)  					continue;  				using (fi.OpenWrite ()) {  				}  			} catch (Exception ex) {  				if (ex is IOException) {  					Console.WriteLine ("Waiting for fCraft-related applications to close...");  				} else {  					Console.Error.WriteLine ("ERROR: could not write to {0}: {1} - {2}"' fileName' ex.GetType ().Name' ex.Message);  					Console.WriteLine ();  				}  				allPassed = false;  				Thread.Sleep (1000);  				break;  			}  		}  	} while (!allPassed);  	// delete legacy files  	foreach (var legacyFile in LegacyFiles) {  		try {  			File.Delete (legacyFile);  		} catch (Exception ex) {  			Console.Error.WriteLine ("    ERROR: {0} {1}"' ex.GetType ().Name' ex.Message);  		}  	}  	// extract files  	foreach (var entry in zs.ReadCentralDir ()) {  		Console.WriteLine ("Extracting {0}"' entry.FilenameInZip);  		try {  			using (FileStream fs = File.Create (entry.FilenameInZip)) {  				zs.ExtractFile (entry' fs);  			}  		} catch (Exception ex) {  			Console.Error.WriteLine ("    ERROR: {0} {1}"' ex.GetType ().Name' ex.Message);  		}  	}  }  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The following statement contains a magic number: do {  	allPassed = true;  	foreach (var fileName in allFiles) {  		try {  			FileInfo fi = new FileInfo (fileName);  			if (!fi.Exists)  				continue;  			using (fi.OpenWrite ()) {  			}  		} catch (Exception ex) {  			if (ex is IOException) {  				Console.WriteLine ("Waiting for fCraft-related applications to close...");  			} else {  				Console.Error.WriteLine ("ERROR: could not write to {0}: {1} - {2}"' fileName' ex.GetType ().Name' ex.Message);  				Console.WriteLine ();  			}  			allPassed = false;  			Thread.Sleep (1000);  			break;  		}  	}  } while (!allPassed);  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The following statement contains a magic number: foreach (var fileName in allFiles) {  	try {  		FileInfo fi = new FileInfo (fileName);  		if (!fi.Exists)  			continue;  		using (fi.OpenWrite ()) {  		}  	} catch (Exception ex) {  		if (ex is IOException) {  			Console.WriteLine ("Waiting for fCraft-related applications to close...");  		} else {  			Console.Error.WriteLine ("ERROR: could not write to {0}: {1} - {2}"' fileName' ex.GetType ().Name' ex.Message);  			Console.WriteLine ();  		}  		allPassed = false;  		Thread.Sleep (1000);  		break;  	}  }  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The following statement contains a magic number: try {  	FileInfo fi = new FileInfo (fileName);  	if (!fi.Exists)  		continue;  	using (fi.OpenWrite ()) {  	}  } catch (Exception ex) {  	if (ex is IOException) {  		Console.WriteLine ("Waiting for fCraft-related applications to close...");  	} else {  		Console.Error.WriteLine ("ERROR: could not write to {0}: {1} - {2}"' fileName' ex.GetType ().Name' ex.Message);  		Console.WriteLine ();  	}  	allPassed = false;  	Thread.Sleep (1000);  	break;  }  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,TrimQuotes,The following statement contains a magic number: if (str.StartsWith ("\"") && str.EndsWith ("\"")) {  	return str.Substring (1' str.Length - 2);  } else {  	return str;  }  
Magic Number,fCraft.UpdateInstaller,Program,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\Program.cs,TrimQuotes,The following statement contains a magic number: return str.Substring (1' str.Length - 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: CrcTable = new UInt32[256];  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int i = 0; i < CrcTable.Length; i++) {  	UInt32 c = (UInt32)i;  	for (int j = 0; j < 8; j++) {  		if ((c & 1) != 0)  			c = 3988292384 ^ (c >> 1);  		else  			c >>= 1;  	}  	CrcTable [i] = c;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int i = 0; i < CrcTable.Length; i++) {  	UInt32 c = (UInt32)i;  	for (int j = 0; j < 8; j++) {  		if ((c & 1) != 0)  			c = 3988292384 ^ (c >> 1);  		else  			c >>= 1;  	}  	CrcTable [i] = c;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	if ((c & 1) != 0)  		c = 3988292384 ^ (c >> 1);  	else  		c >>= 1;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	if ((c & 1) != 0)  		c = 3988292384 ^ (c >> 1);  	else  		c >>= 1;  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: if ((c & 1) != 0)  	c = 3988292384 ^ (c >> 1);  else  	c >>= 1;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ZipStorer,The following statement contains a magic number: c = 3988292384 ^ (c >> 1);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: for (int pointer = 0; pointer < centralDirImage.Length;) {  	uint signature = BitConverter.ToUInt32 (centralDirImage' pointer);  	if (signature != 0x02014b50)  		break;  	bool encodeUTF8 = (BitConverter.ToUInt16 (centralDirImage' pointer + 8) & 0x0800) != 0;  	ushort method = BitConverter.ToUInt16 (centralDirImage' pointer + 10);  	uint modifyTime = BitConverter.ToUInt32 (centralDirImage' pointer + 12);  	uint crc32 = BitConverter.ToUInt32 (centralDirImage' pointer + 16);  	uint comprSize = BitConverter.ToUInt32 (centralDirImage' pointer + 20);  	uint fileSize = BitConverter.ToUInt32 (centralDirImage' pointer + 24);  	ushort filenameSize = BitConverter.ToUInt16 (centralDirImage' pointer + 28);  	ushort extraSize = BitConverter.ToUInt16 (centralDirImage' pointer + 30);  	ushort commentSize = BitConverter.ToUInt16 (centralDirImage' pointer + 32);  	uint headerOffset = BitConverter.ToUInt32 (centralDirImage' pointer + 42);  	uint headerSize = (uint)(46 + filenameSize + extraSize + commentSize);  	Encoding encoder = encodeUTF8 ? Encoding.UTF8 : DefaultEncoding;  	ZipFileEntry zfe = new ZipFileEntry {  		Method = (Compression)method'  		FilenameInZip = encoder.GetString (centralDirImage' pointer + 46' filenameSize)'  		FileOffset = GetFileOffset (headerOffset)'  		FileSize = fileSize'  		CompressedSize = comprSize'  		HeaderOffset = headerOffset'  		HeaderSize = headerSize'  		Crc32 = crc32'  		ModifyTime = DosTimeToDateTime (modifyTime)  	};  	if (commentSize > 0)  		zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  	result.Add (zfe);  	pointer += (46 + filenameSize + extraSize + commentSize);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: if (commentSize > 0)  	zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: zfe.Comment = encoder.GetString (centralDirImage' pointer + 46 + filenameSize + extraSize' commentSize);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadCentralDir,The following statement contains a magic number: pointer += (46 + filenameSize + extraSize + commentSize);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ExtractFile,The following statement contains a magic number: zipFileStream.Read (signature' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Seek (headerOffset + 26' SeekOrigin.Begin);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Read (buffer' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: zipFileStream.Read (buffer' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,GetFileOffset,The following statement contains a magic number: return (uint)(30 + filenameSize + extraSize + headerOffset);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	3'  	4'  	20'  	0  }' 0' 6);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)(zfe.EncodeUTF8 ? 0x0800 : 0))' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)zfe.Method)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (DateTimeToDosTime (zfe.ModifyTime))' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0  }' 0' 12);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedFilename.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteLocalHeader,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	1'  	2'  	23'  	0xB'  	20'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)(zfe.EncodeUTF8 ? 0x0800 : 0))' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)zfe.Method)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (DateTimeToDosTime (zfe.ModifyTime))' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.Crc32)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.CompressedSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.FileSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedFilename.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedComment.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)0x8100)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteCentralDirRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.HeaderOffset)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (new byte[] {  	80'  	75'  	5'  	6'  	0'  	0'  	0'  	0  }' 0' 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)files.Count + existingFiles)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)files.Count + existingFiles)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (size)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (offset)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,WriteEndRecord,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)encodedComment.Length)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Store,The following statement contains a magic number: do {  	bytesRead = source.Read (buffer' 0' buffer.Length);  	totalRead += (uint)bytesRead;  	if (bytesRead > 0) {  		outStream.Write (buffer' 0' bytesRead);  		for (uint i = 0; i < bytesRead; i++) {  			zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  		}  	}  } while (bytesRead == buffer.Length);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Store,The following statement contains a magic number: if (bytesRead > 0) {  	outStream.Write (buffer' 0' bytesRead);  	for (uint i = 0; i < bytesRead; i++) {  		zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  	}  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Store,The following statement contains a magic number: for (uint i = 0; i < bytesRead; i++) {  	zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,Store,The following statement contains a magic number: zfe.Crc32 = CrcTable [(zfe.Crc32 ^ buffer [i]) & 0xFF] ^ (zfe.Crc32 >> 8);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DateTimeToDosTime,The following statement contains a magic number: return (uint)((dt.Second / 2) | (dt.Minute << 5) | (dt.Hour << 11) | (dt.Day << 16) | (dt.Month << 21) | ((dt.Year - 1980) << 25));  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,DosTimeToDateTime,The following statement contains a magic number: return new DateTime ((int)(dt >> 25) + 1980' (int)(dt >> 21) & 15' (int)(dt >> 16) & 31' (int)(dt >> 11) & 31' (int)(dt >> 5) & 63' (int)(dt & 31) * 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Position = zfe.HeaderOffset + 8;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes ((ushort)zfe.Method)' 0' 2);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Position = zfe.HeaderOffset + 14;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.Crc32)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.CompressedSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,UpdateCrcAndSizes,The following statement contains a magic number: zipFileStream.Write (BitConverter.GetBytes (zfe.FileSize)' 0' 4);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: if (zipFileStream.Length < 22)  	return false;  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: try {  	zipFileStream.Seek (-17' SeekOrigin.End);  	BinaryReader br = new BinaryReader (zipFileStream);  	do {  		zipFileStream.Seek (-5' SeekOrigin.Current);  		UInt32 sig = br.ReadUInt32 ();  		if (sig != 0x06054b50)  			continue;  		zipFileStream.Seek (6' SeekOrigin.Current);  		UInt16 entries = br.ReadUInt16 ();  		Int32 centralSize = br.ReadInt32 ();  		UInt32 centralDirOffset = br.ReadUInt32 ();  		UInt16 commentSize = br.ReadUInt16 ();  		// check if comment field is the very last data in file  		if (zipFileStream.Position + commentSize != zipFileStream.Length)  			return false;  		// Copy entire central directory to a memory buffer  		existingFiles = entries;  		centralDirImage = new byte[centralSize];  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		zipFileStream.Read (centralDirImage' 0' centralSize);  		// Leave the pointer at the begining of central dir' to append new files  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		return true;  	} while (zipFileStream.Position > 0);  } catch {  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: try {  	zipFileStream.Seek (-17' SeekOrigin.End);  	BinaryReader br = new BinaryReader (zipFileStream);  	do {  		zipFileStream.Seek (-5' SeekOrigin.Current);  		UInt32 sig = br.ReadUInt32 ();  		if (sig != 0x06054b50)  			continue;  		zipFileStream.Seek (6' SeekOrigin.Current);  		UInt16 entries = br.ReadUInt16 ();  		Int32 centralSize = br.ReadInt32 ();  		UInt32 centralDirOffset = br.ReadUInt32 ();  		UInt16 commentSize = br.ReadUInt16 ();  		// check if comment field is the very last data in file  		if (zipFileStream.Position + commentSize != zipFileStream.Length)  			return false;  		// Copy entire central directory to a memory buffer  		existingFiles = entries;  		centralDirImage = new byte[centralSize];  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		zipFileStream.Read (centralDirImage' 0' centralSize);  		// Leave the pointer at the begining of central dir' to append new files  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		return true;  	} while (zipFileStream.Position > 0);  } catch {  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: try {  	zipFileStream.Seek (-17' SeekOrigin.End);  	BinaryReader br = new BinaryReader (zipFileStream);  	do {  		zipFileStream.Seek (-5' SeekOrigin.Current);  		UInt32 sig = br.ReadUInt32 ();  		if (sig != 0x06054b50)  			continue;  		zipFileStream.Seek (6' SeekOrigin.Current);  		UInt16 entries = br.ReadUInt16 ();  		Int32 centralSize = br.ReadInt32 ();  		UInt32 centralDirOffset = br.ReadUInt32 ();  		UInt16 commentSize = br.ReadUInt16 ();  		// check if comment field is the very last data in file  		if (zipFileStream.Position + commentSize != zipFileStream.Length)  			return false;  		// Copy entire central directory to a memory buffer  		existingFiles = entries;  		centralDirImage = new byte[centralSize];  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		zipFileStream.Read (centralDirImage' 0' centralSize);  		// Leave the pointer at the begining of central dir' to append new files  		zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  		return true;  	} while (zipFileStream.Position > 0);  } catch {  }  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek (-17' SeekOrigin.End);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: do {  	zipFileStream.Seek (-5' SeekOrigin.Current);  	UInt32 sig = br.ReadUInt32 ();  	if (sig != 0x06054b50)  		continue;  	zipFileStream.Seek (6' SeekOrigin.Current);  	UInt16 entries = br.ReadUInt16 ();  	Int32 centralSize = br.ReadInt32 ();  	UInt32 centralDirOffset = br.ReadUInt32 ();  	UInt16 commentSize = br.ReadUInt16 ();  	// check if comment field is the very last data in file  	if (zipFileStream.Position + commentSize != zipFileStream.Length)  		return false;  	// Copy entire central directory to a memory buffer  	existingFiles = entries;  	centralDirImage = new byte[centralSize];  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	zipFileStream.Read (centralDirImage' 0' centralSize);  	// Leave the pointer at the begining of central dir' to append new files  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	return true;  } while (zipFileStream.Position > 0);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: do {  	zipFileStream.Seek (-5' SeekOrigin.Current);  	UInt32 sig = br.ReadUInt32 ();  	if (sig != 0x06054b50)  		continue;  	zipFileStream.Seek (6' SeekOrigin.Current);  	UInt16 entries = br.ReadUInt16 ();  	Int32 centralSize = br.ReadInt32 ();  	UInt32 centralDirOffset = br.ReadUInt32 ();  	UInt16 commentSize = br.ReadUInt16 ();  	// check if comment field is the very last data in file  	if (zipFileStream.Position + commentSize != zipFileStream.Length)  		return false;  	// Copy entire central directory to a memory buffer  	existingFiles = entries;  	centralDirImage = new byte[centralSize];  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	zipFileStream.Read (centralDirImage' 0' centralSize);  	// Leave the pointer at the begining of central dir' to append new files  	zipFileStream.Seek (centralDirOffset' SeekOrigin.Begin);  	return true;  } while (zipFileStream.Position > 0);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek (-5' SeekOrigin.Current);  
Magic Number,System.IO.Compression,ZipStorer,F:\newReposMay17\GlennMR_800craft\UpdateInstaller\ZipStorer.cs,ReadFileInfo,The following statement contains a magic number: zipFileStream.Seek (6' SeekOrigin.Current);  
