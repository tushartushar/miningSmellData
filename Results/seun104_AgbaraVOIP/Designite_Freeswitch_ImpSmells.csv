Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,play_and_get_digits,Cyclomatic complexity of the method is 9
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,ProtocolSendMsg,The method has 6 parameters.
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,playback,The method has 5 parameters.
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,record,The method has 8 parameters.
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,play_and_get_digits,The method has 12 parameters.
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,EventSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\EventSocket.cs,_sendmsg,The method has 6 parameters.
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,EventSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\EventSocket.cs,ProtocolSendMsg,The method has 6 parameters.
Long Parameter List,Emmanuel.AgbaraVOIP.Freeswitch,InboundSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\InboundSocket.cs,InboundSocket,The method has 6 parameters.
Long Statement,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,myevents,The length of the statement  "	/*   """For Inbound connection' please refer to http;//wiki.freeswitch.org/wiki/Event_Socket#Special_Case_-_.27myevents.27" is 122.
Long Statement,Emmanuel.AgbaraVOIP.Freeswitch,Commands,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Commands.cs,play_and_get_digits,The length of the statement  "	string args = string.Format ("{0} {1} {2} {3} '{4}' {5} {6} {7} {8} {9}"' min_digits' max_digits' max_tries' timeout' terminators' play_str' invalid_file' var_name' @"\d+"' digit_timeout); " is 188.
Long Statement,Emmanuel.AgbaraVOIP.Freeswitch,APIResponse,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Event.cs,ToString,The length of the statement  "	return string.Format ("{0} headers ={1} ' body ={2}"' "APIResponse"' base._headers.ToString ()' base._raw_body.ToString ()); " is 124.
Long Statement,Emmanuel.AgbaraVOIP.Freeswitch,BgApiResponse,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Event.cs,ToString,The length of the statement  "	return string.Format ("{0} headers ={1} ' body ={2}"' "BgApiResponse"' base._headers.ToString ()' base._raw_body.ToString ()); " is 126.
Long Statement,Emmanuel.AgbaraVOIP.Freeswitch,CommandResponse,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Event.cs,ToString,The length of the statement  "	return string.Format ("{0} headers ={1} ' body ={2}"' "CommandResponse"' base._headers.ToString ()' base._raw_body.ToString ()); " is 128.
Empty Catch Block,Emmanuel.AgbaraVOIP.Freeswitch,JsonEvent,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Event.cs,JsonEvent,The method has an empty catch block.
Empty Catch Block,Emmanuel.AgbaraVOIP.Freeswitch,OutboundServer,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\OutboundSocket.cs,finish_request,The method has an empty catch block.
Empty Catch Block,Emmanuel.AgbaraVOIP.Freeswitch,OutboundServer,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\OutboundSocket.cs,finish_request,The method has an empty catch block.
Empty Catch Block,Emmanuel.AgbaraVOIP.Freeswitch,InboundTransport,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Transport.cs,close,The method has an empty catch block.
Empty Catch Block,Emmanuel.AgbaraVOIP.Freeswitch,OutboundTransport,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\Transport.cs,close,The method has an empty catch block.
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,EventSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\EventSocket.cs,handle_events,The following statement contains a magic number: while (true) {  	try {  		//   # Gets event and dispatches to handler.  		get_event ();  		Thread.Sleep (10);  	}  	catch (Exception ex) {  		throw ex;  	}  	finally {  		connected = false;  	}  }  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,EventSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\EventSocket.cs,handle_events,The following statement contains a magic number: try {  	//   # Gets event and dispatches to handler.  	get_event ();  	Thread.Sleep (10);  }  catch (Exception ex) {  	throw ex;  }  finally {  	connected = false;  }  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,EventSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\EventSocket.cs,handle_events,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,InboundSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\InboundSocket.cs,serve_forever,The following statement contains a magic number: while (is_connected ()) {  	Thread.Sleep (100);  }  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,InboundSocket,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\InboundSocket.cs,serve_forever,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,OutboundClient,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\OutboundSocket.cs,Run,The following statement contains a magic number: while (true) {  	start_event_handler ();  	Thread.Sleep (10);  }  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,OutboundClient,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\OutboundSocket.cs,Run,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,OutboundServer,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\OutboundSocket.cs,serve_forever,The following statement contains a magic number: while (isRunning) {  	Socket sckClient = listener.AcceptSocket ();  	Task.Factory.StartNew (() => do_handle (sckClient));  	Thread.Sleep (10);  }  
Magic Number,Emmanuel.AgbaraVOIP.Freeswitch,OutboundServer,C:\repos\seun104_AgbaraVOIP\src\Freeswitch\OutboundSocket.cs,serve_forever,The following statement contains a magic number: Thread.Sleep (10);  
