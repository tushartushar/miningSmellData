Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,Cyclomatic complexity of the method is 10
Long Statement,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The length of the statement  "			if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) { " is 255.
Magic Number,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The following statement contains a magic number: if (excludeOrigColumns) {  	var collectionFieldsToRemove = new List<DataColumn> ();  	foreach (var collectionField in table.Columns.Cast<DataColumn> ().Where (x => x.ColumnName.EndsWith ("_ORIG"))) {  		if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) {  			collectionFieldsToRemove.Add (collectionField);  		}  	}  	foreach (var dataColumn in collectionFieldsToRemove) {  		table.Columns.Remove (dataColumn);  	}  }  
Magic Number,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The following statement contains a magic number: if (excludeOrigColumns) {  	var collectionFieldsToRemove = new List<DataColumn> ();  	foreach (var collectionField in table.Columns.Cast<DataColumn> ().Where (x => x.ColumnName.EndsWith ("_ORIG"))) {  		if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) {  			collectionFieldsToRemove.Add (collectionField);  		}  	}  	foreach (var dataColumn in collectionFieldsToRemove) {  		table.Columns.Remove (dataColumn);  	}  }  
Magic Number,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The following statement contains a magic number: foreach (var collectionField in table.Columns.Cast<DataColumn> ().Where (x => x.ColumnName.EndsWith ("_ORIG"))) {  	if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) {  		collectionFieldsToRemove.Add (collectionField);  	}  }  
Magic Number,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The following statement contains a magic number: foreach (var collectionField in table.Columns.Cast<DataColumn> ().Where (x => x.ColumnName.EndsWith ("_ORIG"))) {  	if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) {  		collectionFieldsToRemove.Add (collectionField);  	}  }  
Magic Number,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The following statement contains a magic number: if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) {  	collectionFieldsToRemove.Add (collectionField);  }  
Magic Number,Gx.CLI,RecordSetTransformer,F:\newReposMay17\FamilySearch_gedcomx-csharp\Gedcomx.CLI\RecordSetTransformer.cs,WriteCSV,The following statement contains a magic number: if (table.Columns.Cast<DataColumn> ().Any (x => x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5) + "_STD" || x.ColumnName == collectionField.ColumnName.Substring (0' collectionField.ColumnName.Length - 5))) {  	collectionFieldsToRemove.Add (collectionField);  }  
