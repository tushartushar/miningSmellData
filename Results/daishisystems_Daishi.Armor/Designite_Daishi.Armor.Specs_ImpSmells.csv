Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorTokenSteps.cs,,The length of the parameter armorTokenValidationStepResult is 30.
Long Statement,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorToken.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "ArmorTokenConstructorConstructsStandardSecureArmorToken"' "In order to prove that an ArmorTokenConstructor constructs a standard' secure Arm" + " is 243.
Long Statement,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorToken.feature.cs,ConstructAStandardSecureArmorToken,The length of the statement  "            testRunner.Given("I have supplied a StandardArmorTokenConstructor"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 133.
Long Statement,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorToken.feature.cs,ConstructAStandardSecureArmorToken,The length of the statement  "            testRunner.When("I invoke the StandardArmorTokenConstructor"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "When "); " is 126.
Long Statement,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorToken.feature.cs,ConstructAStandardSecureArmorToken,The length of the statement  "            testRunner.Then("The result should yield a valid' standard' secure ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 144.
Long Statement,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorTokenSteps.cs,ThenTheResultShouldYieldAValidStandardSecureArmorToken,The length of the statement  "            var step4 = new ClaimsArmorTokenValidationStep(new EmptyEncryptedArmorTokenValidationStep()' new UserIdClaimValidatorFactory("user.name@company.com")' new TimeStampClaimValidatorFactory(300000)); " is 195.
Long Statement,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorTokenSteps.cs,ThenTheResultShouldYieldAValidStandardSecureArmorToken,The length of the statement  "            var step1 = new HashedArmorTokenValidationStep(step2' new HashedArmorTokenParser(HashingMode.HMACSHA512)' new HMACSHA512ArmorTokenHasherFactory(hashingKey)); " is 157.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsDeserialisedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsDeserialised.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "ArmorTokenIsDeserialised"' "In order to prove that an ArmorToken is deserialised\r\nAs an ArmorTokenDeserialise" + " is 214.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsDeserialisedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsDeserialised.feature.cs,DeserialiseAnArmorToken,The length of the statement  "            testRunner.Given("I have supplied a serialised ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 125.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsDeserialisedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsDeserialised.feature.cs,DeserialiseAnArmorToken,The length of the statement  "            testRunner.Then("the result should match the original ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 131.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndael.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "ArmorTokenIsEncryptedUsingRijndael"' "In order to prove that a given ArmorToken is encrypted using Rijndael encryption\r" + " is 223.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndael.feature.cs,EncryptAnArmorTokenUsingRijndaelEncryption,The length of the statement  "            testRunner.Given("I have supplied an ArmorToken for encryption"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 130.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndael.feature.cs,EncryptAnArmorTokenUsingRijndaelEncryption,The length of the statement  "            testRunner.And("I have encrypted the token using Rijndael encryption"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "And "); " is 134.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndael.feature.cs,EncryptAnArmorTokenUsingRijndaelEncryption,The length of the statement  "            testRunner.When("I decrypt the token using Rijndael encryption"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "When "); " is 129.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndael.feature.cs,EncryptAnArmorTokenUsingRijndaelEncryption,The length of the statement  "            testRunner.Then("the parsed token should equal the original"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 126.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndaelSteps.cs,GivenIHaveEncryptedTheTokenUsingRijndaelEncryption,The length of the statement  "            var encryptionMechanismFactory = new RijndaelEncryptionMechanismFactory(key' Encoding.UTF8.GetBytes(serialisedArmorToken)); " is 123.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsEncryptedUsingRijndaelSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsEncryptedUsingRijndaelSteps.cs,WhenIDecryptTheTokenUsingRijndaelEncryption,The length of the statement  "            var encryptionMechanismFactory = new RijndaelDecryptionMechanismFactory(key' Convert.FromBase64String(encryptedArmorToken)); " is 124.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsGeneratedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGenerated.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "ArmorTokenIsGenerated"' "In order to prove that an ArmorToken is generated\r\nAs an ArmorTokenGenerator\r\nI w" + " is 213.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsGeneratedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGenerated.feature.cs,GenerateAnArmorToken,The length of the statement  "            testRunner.Given("I have supplied a raw ArmorToken for generation"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 133.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsGeneratedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGenerated.feature.cs,GenerateAnArmorToken,The length of the statement  "            testRunner.Then("I should be able to successfully validate the generated ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 150.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsGeneratedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGeneratedSteps.cs,WhenIHaveGeneratedTheArmorToken,The length of the statement  "            var step3 = new HashArmorTokenGenerationStep(new HMACSHA512HashingMechanismFactory(hashingKey)' new EmptyArmorTokenGenerationStep()); " is 133.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsGeneratedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGeneratedSteps.cs,ThenIShouldBeAbleToSuccessfullyValidateTheGeneratedArmorToken,The length of the statement  "            var step4 = new ClaimsArmorTokenValidationStep(new EmptyEncryptedArmorTokenValidationStep()' new UserIdClaimValidatorFactory("user.name@company.com")' new TimeStampClaimValidatorFactory(300000)); " is 195.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsGeneratedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGeneratedSteps.cs,ThenIShouldBeAbleToSuccessfullyValidateTheGeneratedArmorToken,The length of the statement  "            var step1 = new HashedArmorTokenValidationStep(step2' new HashedArmorTokenParser(HashingMode.HMACSHA512)' new HMACSHA512ArmorTokenHasherFactory(hashingKey)); " is 157.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsSerialisedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsSerialised.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "ArmorTokenIsSerialised"' "In order to prove that a given ArmorToken is serialised\r\nAs an ArmorTokenSerialis" + " is 212.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsSerialisedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsSerialised.feature.cs,SerialiseAnArmorToken,The length of the statement  "            testRunner.Then("ArmorTokenSerialisor creates a JSON representation of the ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 152.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsValidatedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidated.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "ArmorTokenIsValidated"' "In order to prove that an ArmorToken is validated\r\nAs an ArmorTokenValidator\r\nI w" + " is 213.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsValidatedFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidated.feature.cs,ValidateAnArmorToken,The length of the statement  "            testRunner.Given("I have supplied a valid ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 120.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsValidatedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidatedSteps.cs,GivenIHaveEncryptedTheValidArmorToken,The length of the statement  "            var encryptionMechanismFactory = new RijndaelEncryptionMechanismFactory(encryptionKey' Encoding.UTF8.GetBytes(serialisedArmorToken)); " is 133.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsValidatedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidatedSteps.cs,GivenIHaveHashedTheValidArmorToken,The length of the statement  "            var hashingMechanismFactory = new HMACSHA512HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken)); " is 127.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsValidatedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidatedSteps.cs,WhenIValidateTheValidArmorToken,The length of the statement  "            var step4 = new ClaimsArmorTokenValidationStep(new EmptyEncryptedArmorTokenValidationStep()' new UserIdClaimValidatorFactory("user.name@company.com")' new TimeStampClaimValidatorFactory(300000)); " is 195.
Long Statement,Daishi.Armor.Specs,ArmorTokenIsValidatedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidatedSteps.cs,WhenIValidateTheValidArmorToken,The length of the statement  "            var step1 = new HashedArmorTokenValidationStep(step2' new HashedArmorTokenParser(HashingMode.HMACSHA512)' new HMACSHA512ArmorTokenHasherFactory(hashingKey)); " is 157.
Long Statement,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorToken.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "SecureArmorTokenValidatorValidatesSecureArmorToken"' "In order to prove that an SecureArmorTokenValidator validates a secure ArmorToken" + " is 238.
Long Statement,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorToken.feature.cs,FeatureSetup,The length of the statement  "                                                                                                                                                                     "\r\nAs a SecureArmorTokenValidator\r\nI want to validate a secure ArmorToken"' ProgrammingLanguage.CSharp' ((string[]) (null))); " is 129.
Long Statement,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorToken.feature.cs,ValidateASecureArmorToken,The length of the statement  "            testRunner.Given("I have provided a secure ArmorToken"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 121.
Long Statement,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorToken.feature.cs,ValidateASecureArmorToken,The length of the statement  "            testRunner.Then("The validated ArmorToken should be valid."' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 125.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA256Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA256.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "EncryptedArmorTokenIsHashedUsingHMACSHA256"' "In order to prove that an encrypted ArmorToken is hashed using HMACSHA256\r\nAs an " + " is 232.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA256Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA256.feature.cs,FeatureSetup,The length of the statement  "                                                                                                                                                             "ArmorTokenHasher\r\nI want to hash an encryptedArmotToken using HMACSHA256"' ProgrammingLanguage.CSharp' ((string[]) (null))); " is 127.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA256Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA256.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA256,The length of the statement  "            testRunner.Given("I have supplied an encrypted ArmorToken for hash using HMACSHA256"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 151.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA256Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA256.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA256,The length of the statement  "            testRunner.And("I have hashed the encrypted ArmorToken using HMACSHA256"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "And "); " is 137.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA256Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA256.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA256,The length of the statement  "            testRunner.When("I verify the hashed ArmorToken\'s HMACSHA256 signature"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "When "); " is 138.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA256Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA256.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA256,The length of the statement  "            testRunner.Then("The HMACSHA256 hash signature will be valid"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 127.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA512Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA512.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "EncryptedArmorTokenIsHashedUsingHMACSHA512"' "In order to prove that an encrypted ArmorToken is hashed using HMACSHA512\r\nAs an " + " is 232.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA512Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA512.feature.cs,FeatureSetup,The length of the statement  "                                                                                                                                                             "ArmorTokenHasher\r\nI want to hash an encryptedArmotToken using HMACSHA512"' ProgrammingLanguage.CSharp' ((string[]) (null))); " is 127.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA512Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA512.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA512,The length of the statement  "            testRunner.Given("I have supplied an encrypted ArmorToken for hash using HMACSHA512"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 151.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA512Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA512.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA512,The length of the statement  "            testRunner.And("I have hashed the encrypted ArmorToken using HMACSHA512"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "And "); " is 137.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA512Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA512.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA512,The length of the statement  "            testRunner.When("I verify the hashed ArmorToken\'s HMACSHA512 signature"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "When "); " is 138.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHA512Feature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHA512.feature.cs,HashAnEncryptedArmorTokenUsingHMACSHA512,The length of the statement  "            testRunner.Then("The HMACSHA512 hash signature will be valid"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Then "); " is 127.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,GivenIHaveSuppliedAnEncryptedArmorTokenForHashUsingHMACSHA,The length of the statement  "            var encryptionMechanismFactory = new RijndaelEncryptionMechanismFactory(encryptionKey' Encoding.UTF8.GetBytes(armorTokenSerialisor.SerialisedArmorToken)); " is 154.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,GivenIHaveHashedTheEncryptedArmorTokenUsingHMACSHA,The length of the statement  "                    hashingMechanismFactory = new HMACSHA256HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken)); " is 123.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,GivenIHaveHashedTheEncryptedArmorTokenUsingHMACSHA,The length of the statement  "                    hashingMechanismFactory = new HMACSHA512HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken)); " is 123.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The length of the statement  "                    using (var hmac = new HMACSHA256(hashingKey)) hash = hmac.ComputeHash(hashedArmorTokenParser.ParsedArmorToken.ArmorToken); " is 122.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The length of the statement  "                    using (var hmac = new HMACSHA512(hashingKey)) hash = hmac.ComputeHash(hashedArmorTokenParser.ParsedArmorToken.ArmorToken); " is 122.
Long Statement,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The length of the statement  "            var encryptionMechanismFactory = new RijndaelDecryptionMechanismFactory(encryptionKey' hashedArmorTokenParser.ParsedArmorToken.ArmorToken); " is 139.
Long Statement,Daishi.Armor.Specs,NonceGeneratorCreatesRandomNumberFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\NonceGeneratorCreatesRandomNumber.feature.cs,FeatureSetup,The length of the statement  "            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "NonceGeneratorCreatesRandomNumber"' "In order to prove to a degree that the same number is never generated twice\r\nAs a" + " is 223.
Long Statement,Daishi.Armor.Specs,NonceGeneratorCreatesRandomNumberFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\NonceGeneratorCreatesRandomNumber.feature.cs,FeatureSetup,The length of the statement  "                                                                                                                                                    " NonceGenerator\r\nI want to generate 10'000'000 random' unique numbers"' ProgrammingLanguage.CSharp' ((string[]) (null))); " is 124.
Long Statement,Daishi.Armor.Specs,NonceGeneratorCreatesRandomNumberFeature,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\NonceGeneratorCreatesRandomNumber.feature.cs,Generate10000000RandomNumbers,The length of the statement  "            testRunner.Given("I have generated 10000000 random numbers"' ((string) (null))' ((TechTalk.SpecFlow.Table) (null))' "Given "); " is 126.
Long Statement,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorTokenSteps.cs,WhenIValidateTheSecureArmorToken,The length of the statement  "            var standardArmorTokenValidator = new SecureArmorTokenValidator(secureArmorToken' encryptionKey' hashingKey' "user.name@company.com"' 300000); " is 142.
Magic Number,Daishi.Armor.Specs,ArmorTokenConstructorConstructsStandardSecureArmorTokenSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenConstructorConstructsStandardSecureArmorTokenSteps.cs,ThenTheResultShouldYieldAValidStandardSecureArmorToken,The following statement contains a magic number: var step4 = new ClaimsArmorTokenValidationStep(new EmptyEncryptedArmorTokenValidationStep()' new UserIdClaimValidatorFactory("user.name@company.com")' new TimeStampClaimValidatorFactory(300000));
Magic Number,Daishi.Armor.Specs,ArmorTokenIsGeneratedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsGeneratedSteps.cs,ThenIShouldBeAbleToSuccessfullyValidateTheGeneratedArmorToken,The following statement contains a magic number: var step4 = new ClaimsArmorTokenValidationStep(new EmptyEncryptedArmorTokenValidationStep()' new UserIdClaimValidatorFactory("user.name@company.com")' new TimeStampClaimValidatorFactory(300000));
Magic Number,Daishi.Armor.Specs,ArmorTokenIsValidatedSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\ArmorTokenIsValidatedSteps.cs,WhenIValidateTheValidArmorToken,The following statement contains a magic number: var step4 = new ClaimsArmorTokenValidationStep(new EmptyEncryptedArmorTokenValidationStep()' new UserIdClaimValidatorFactory("user.name@company.com")' new TimeStampClaimValidatorFactory(300000));
Magic Number,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,GivenIHaveHashedTheEncryptedArmorTokenUsingHMACSHA,The following statement contains a magic number: switch (p0) {                  case 256:                      hashingMechanismFactory = new HMACSHA256HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken));                      break;                  case 512:                      hashingMechanismFactory = new HMACSHA512HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken));                      break;                  default:                      throw new NotImplementedException("Invalid Hashing Mode.");              }
Magic Number,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,GivenIHaveHashedTheEncryptedArmorTokenUsingHMACSHA,The following statement contains a magic number: switch (p0) {                  case 256:                      hashingMechanismFactory = new HMACSHA256HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken));                      break;                  case 512:                      hashingMechanismFactory = new HMACSHA512HashingMechanismFactory(hashingKey' Convert.FromBase64String(encryptedArmorToken));                      break;                  default:                      throw new NotImplementedException("Invalid Hashing Mode.");              }
Magic Number,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The following statement contains a magic number: switch (p0) {                  case 256:                      hashingMode = HashingMode.HMACSHA256;                      break;                  case 512:                      hashingMode = HashingMode.HMACSHA512;                      break;                  default:                      throw new NotImplementedException("Invalid Hashing Mode.");              }
Magic Number,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The following statement contains a magic number: switch (p0) {                  case 256:                      hashingMode = HashingMode.HMACSHA256;                      break;                  case 512:                      hashingMode = HashingMode.HMACSHA512;                      break;                  default:                      throw new NotImplementedException("Invalid Hashing Mode.");              }
Magic Number,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The following statement contains a magic number: switch (p0) {                  case 256:                      using (var hmac = new HMACSHA256(hashingKey)) hash = hmac.ComputeHash(hashedArmorTokenParser.ParsedArmorToken.ArmorToken);                      break;                  case 512:                      using (var hmac = new HMACSHA512(hashingKey)) hash = hmac.ComputeHash(hashedArmorTokenParser.ParsedArmorToken.ArmorToken);                      break;                  default:                      throw new NotImplementedException("Invalid Hashing Mode.");              }
Magic Number,Daishi.Armor.Specs,EncryptedArmorTokenIsHashedUsingHMACSHASteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\EncryptedArmorTokenIsHashedUsingHMACSHASteps.cs,WhenIVerifyTheHashedArmorTokenSHMACSHASignature,The following statement contains a magic number: switch (p0) {                  case 256:                      using (var hmac = new HMACSHA256(hashingKey)) hash = hmac.ComputeHash(hashedArmorTokenParser.ParsedArmorToken.ArmorToken);                      break;                  case 512:                      using (var hmac = new HMACSHA512(hashingKey)) hash = hmac.ComputeHash(hashedArmorTokenParser.ParsedArmorToken.ArmorToken);                      break;                  default:                      throw new NotImplementedException("Invalid Hashing Mode.");              }
Magic Number,Daishi.Armor.Specs,SecureArmorTokenValidatorValidatesSecureArmorTokenSteps,C:\repos\daishisystems_Daishi.Armor\Daishi.Armor.Specs\SecureArmorTokenValidatorValidatesSecureArmorTokenSteps.cs,WhenIValidateTheSecureArmorToken,The following statement contains a magic number: var standardArmorTokenValidator = new SecureArmorTokenValidator(secureArmorToken' encryptionKey' hashingKey' "user.name@company.com"' 300000);
