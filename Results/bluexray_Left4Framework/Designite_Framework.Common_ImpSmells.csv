Implementation smell,Namespace,Class,File,Method,Description
Long Method,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The method has 127 lines of code.
Long Method,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The method has 105 lines of code.
Complex Method,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,Cyclomatic complexity of the method is 12
Complex Method,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadArgument,Cyclomatic complexity of the method is 15
Complex Method,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,Cyclomatic complexity of the method is 34
Complex Method,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadLocal,Cyclomatic complexity of the method is 16
Complex Method,Framework.Common,HttpHeader,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,Add,Cyclomatic complexity of the method is 19
Complex Method,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,InternalHttp,Cyclomatic complexity of the method is 14
Complex Method,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,InternalSslSocketHttp,Cyclomatic complexity of the method is 9
Complex Method,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,ReadResponse,Cyclomatic complexity of the method is 8
Complex Method,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,Cyclomatic complexity of the method is 32
Complex Method,Framework.Common,JsonHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\JsonHelper.cs,StringToJson,Cyclomatic complexity of the method is 28
Complex Method,Framework.Common,JsonHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\JsonHelper.cs,ObjectToJson,Cyclomatic complexity of the method is 8
Complex Method,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,Cyclomatic complexity of the method is 10
Complex Method,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,Cyclomatic complexity of the method is 10
Complex Method,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,PostDataToServer,Cyclomatic complexity of the method is 16
Long Parameter List,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,EmitHelper,The method has 6 parameters.
Long Parameter List,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,Post,The method has 5 parameters.
Long Parameter List,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,InternalHttp,The method has 6 parameters.
Long Parameter List,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The method has 7 parameters.
Long Parameter List,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The method has 5 parameters.
Long Parameter List,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The method has 5 parameters.
Long Parameter List,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The method has 5 parameters.
Long Identifier,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,EncryptTripleDES,The length of the parameter tripleDESCryptoServiceProvider is 30.
Long Identifier,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,DecryptTripleDES,The length of the parameter tripleDESCryptoServiceProvider is 30.
Long Statement,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,Encrypt,The length of the statement  "	CryptoStream cryptoStream = new CryptoStream (memoryStream' dESCryptoServiceProvider.CreateEncryptor ()' CryptoStreamMode.Write); " is 129.
Long Statement,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,Decrypt,The length of the statement  "	CryptoStream cryptoStream = new CryptoStream (memoryStream' dESCryptoServiceProvider.CreateDecryptor ()' CryptoStreamMode.Write); " is 129.
Long Statement,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,EncryptTripleDES,The length of the statement  "	CryptoStream cryptoStream = new CryptoStream (memoryStream' tripleDESCryptoServiceProvider.CreateEncryptor ()' CryptoStreamMode.Write); " is 135.
Long Statement,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,DecryptTripleDES,The length of the statement  "	CryptoStream cryptoStream = new CryptoStream (memoryStream' tripleDESCryptoServiceProvider.CreateDecryptor ()' CryptoStreamMode.Write); " is 135.
Long Statement,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,InternalSslSocketHttp,The length of the statement  "				using (SslStream ssl = new SslStream (tcp.GetStream ()' false' new RemoteCertificateValidationCallback (ValidateServerCertificate)' null)) { " is 140.
Long Statement,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,ReadResponse,The length of the statement  "	Task<string> myTask = Task.Factory.StartNew<string> (new Func<object' string> (ReadHeaderProcess)' new TaskArguments (cancelSource' sm)' cancelSource.Token); " is 157.
Long Statement,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The length of the statement  "		g.DrawImage (originalImage' new Rectangle (0' 0' toWidth' toHeight)' new Rectangle (x' y' width' height)' GraphicsUnit.Pixel); " is 126.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "		il.Emit (OpCodes.Newobj' type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null)); " is 146.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "				if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)) " is 470.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "				il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null); " is 159.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "					if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)) " is 470.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "					il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null); " is 159.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "			il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (arraytype)' null); " is 153.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The length of the statement  "	return (Func<object' Dictionary<Identity' object>' object>)dm.CreateDelegate (typeof(Func<object' Dictionary<Identity' object>' object>)); " is 138.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The length of the statement  "				if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)) " is 470.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The length of the statement  "				il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null); " is 159.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The length of the statement  "					if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)) " is 470.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The length of the statement  "					il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null); " is 159.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The length of the statement  "			il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (arraytype)' null); " is 153.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The length of the statement  "	return (Action<object' Dictionary<Identity' object>' object>)dm.CreateDelegate (typeof(Action<object' Dictionary<Identity' object>' object>)); " is 142.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod3,The length of the statement  "				il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl2"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (prop.Type)' null); " is 153.
Long Statement,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod3,The length of the statement  "	return (Action<object' Dictionary<Identity' object>' object>)dm.CreateDelegate (typeof(Action<object' Dictionary<Identity' object>' object>)); " is 142.
Long Statement,Framework.Common,Types,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Types.cs,GetDefaultValue,The length of the statement  "	return type.IsValueType && !(type.IsGenericType && type.GetGenericTypeDefinition ().Equals (Types.Nullable)) ? Activator.CreateInstance (type) : null; " is 150.
Long Statement,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,GetCookie,The length of the statement  "	if (HttpContext.Current.Request.Cookies != null && HttpContext.Current.Request.Cookies [strName] != null && HttpContext.Current.Request.Cookies [strName] [key] != null) " is 168.
Long Statement,Framework.Common.IO,FileSystemStorageProvider,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\IO\FileSystemStorageProvider.cs,Fix,The length of the statement  "	return string.IsNullOrEmpty (path) ? "" : Path.DirectorySeparatorChar != '/' ? path.Replace ('/'' Path.DirectorySeparatorChar) : path; " is 134.
Long Statement,Framework.Common.IO,FileSystemStorageProvider,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\IO\FileSystemStorageProvider.cs,ListFiles,The length of the statement  "	return new DirectoryInfo (Map (path)).GetFiles ().Where (fi => !IsHidden (fi)).Select<FileInfo' IStorageFile> (fi => new FileSystemStorageFile (Path.Combine (Fix (path)' fi.Name)' fi)).ToList (); " is 195.
Long Statement,Framework.Common.IO,FileSystemStorageProvider,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\IO\FileSystemStorageProvider.cs,ListFolders,The length of the statement  "	return new DirectoryInfo (Map (path)).GetDirectories ().Where (di => !IsHidden (di)).Select<DirectoryInfo' IStorageFolder> (di => new FileSystemStorageFolder (Path.Combine (Fix (path)' di.Name)' di)).ToList (); " is 210.
Complex Conditional,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The conditional expression  "(field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)"  is complex.
Complex Conditional,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The conditional expression  "(field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)"  is complex.
Complex Conditional,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The conditional expression  "(field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)"  is complex.
Complex Conditional,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod2,The conditional expression  "(field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)"  is complex.
Complex Conditional,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,TwistImage,The conditional expression  "nOldX >= 0 && nOldX < destBmp.Width && nOldY >= 0 && nOldY < destBmp.Height"  is complex.
Empty Catch Block,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,ParseDecimal,The method has an empty catch block.
Empty Catch Block,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,ParseDateTime,The method has an empty catch block.
Empty Catch Block,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,ParseBool,The method has an empty catch block.
Empty Catch Block,Framework.Common,CookieHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CookieHelper.cs,GetCookie,The method has an empty catch block.
Empty Catch Block,Framework.Common,SerializeHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\SerializeHelper.cs,SerializeObject,The method has an empty catch block.
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,addVector,The following statement contains a magic number: return new double[] {  	a [0] + b [0]'  	a [1] + b [1]'  	a [2] + b [2]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,addVector,The following statement contains a magic number: return new double[] {  	a [0] + b [0]'  	a [1] + b [1]'  	a [2] + b [2]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,scalarProduct,The following statement contains a magic number: return new double[] {  	vector [0] * scalar'  	vector [1] * scalar'  	vector [2] * scalar  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,dotProduct,The following statement contains a magic number: return a [0] * b [0] + a [1] * b [1] + a [2] * b [2];  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,dotProduct,The following statement contains a magic number: return a [0] * b [0] + a [1] * b [1] + a [2] * b [2];  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,crossProduct,The following statement contains a magic number: return new double[] {  	(a [1] * b [2] - a [2] * b [1])'  	(a [2] * b [0] - a [0] * b [2])'  	(a [0] * b [1] - a [1] * b [0])  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,crossProduct,The following statement contains a magic number: return new double[] {  	(a [1] * b [2] - a [2] * b [1])'  	(a [2] * b [0] - a [0] * b [2])'  	(a [0] * b [1] - a [1] * b [0])  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,crossProduct,The following statement contains a magic number: return new double[] {  	(a [1] * b [2] - a [2] * b [1])'  	(a [2] * b [0] - a [0] * b [2])'  	(a [0] * b [1] - a [1] * b [0])  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,crossProduct,The following statement contains a magic number: return new double[] {  	(a [1] * b [2] - a [2] * b [1])'  	(a [2] * b [0] - a [0] * b [2])'  	(a [0] * b [1] - a [1] * b [0])  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,vectorProductIndexed,The following statement contains a magic number: return new double[] {  	v [i + 0] * m [0] + v [i + 1] * m [4] + v [i + 2] * m [8] + v [i + 3] * m [12]'  	v [i + 0] * m [1] + v [i + 1] * m [5] + v [i + 2] * m [9] + v [i + 3] * m [13]'  	v [i + 0] * m [2] + v [i + 1] * m [6] + v [i + 2] * m [10] + v [i + 3] * m [14]'  	v [i + 0] * m [3] + v [i + 1] * m [7] + v [i + 2] * m [11] + v [i + 3] * m [15]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,matrixProduct,The following statement contains a magic number: return new double[] {  	o1 [0]'  	o1 [1]'  	o1 [2]'  	o1 [3]'  	o2 [0]'  	o2 [1]'  	o2 [2]'  	o2 [3]'  	o3 [0]'  	o3 [1]'  	o3 [2]'  	o3 [3]'  	o4 [0]'  	o4 [1]'  	o4 [2]'  	o4 [3]  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,cameraTransform,The following statement contains a magic number: return new double[] {  	u [0]'  	v [0]'  	w [0]'  	0'  	u [1]'  	v [1]'  	w [1]'  	0'  	u [2]'  	v [2]'  	w [2]'  	0'  	dotProduct (u' t)'  	dotProduct (v' t)'  	dotProduct (w' t)'  	1  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,cameraTransform,The following statement contains a magic number: return new double[] {  	u [0]'  	v [0]'  	w [0]'  	0'  	u [1]'  	v [1]'  	w [1]'  	0'  	u [2]'  	v [2]'  	w [2]'  	0'  	dotProduct (u' t)'  	dotProduct (v' t)'  	dotProduct (w' t)'  	1  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,cameraTransform,The following statement contains a magic number: return new double[] {  	u [0]'  	v [0]'  	w [0]'  	0'  	u [1]'  	v [1]'  	w [1]'  	0'  	u [2]'  	v [2]'  	w [2]'  	0'  	dotProduct (u' t)'  	dotProduct (v' t)'  	dotProduct (w' t)'  	1  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,viewingTransform,The following statement contains a magic number: fov *= (Math.PI / 180);  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,viewingTransform,The following statement contains a magic number: return new double[] {  	cot'  	0'  	0'  	0'  	0'  	cot'  	0'  	0'  	0'  	0'  	(f + n) / (f - n)'  	-1'  	0'  	0'  	2 * f * n / (f - n)'  	0  };  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: T = matrixProduct (T' viewingTransform (60' 300' 3000));  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: T = matrixProduct (T' viewingTransform (60' 300' 3000));  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: T = matrixProduct (T' viewingTransform (60' 300' 3000));  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		int xc = x - image2d_x / 2;  		int zc = y - image2d_y / 2;  		double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  		double[] xyz = new double[] {  			xc'  			yc'  			zc'  			1  		};  		xyz = vectorProduct (xyz' T);  		coord [count] = xyz;  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		int xc = x - image2d_x / 2;  		int zc = y - image2d_y / 2;  		double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  		double[] xyz = new double[] {  			xc'  			yc'  			zc'  			1  		};  		xyz = vectorProduct (xyz' T);  		coord [count] = xyz;  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		int xc = x - image2d_x / 2;  		int zc = y - image2d_y / 2;  		double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  		double[] xyz = new double[] {  			xc'  			yc'  			zc'  			1  		};  		xyz = vectorProduct (xyz' T);  		coord [count] = xyz;  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		int xc = x - image2d_x / 2;  		int zc = y - image2d_y / 2;  		double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  		double[] xyz = new double[] {  			xc'  			yc'  			zc'  			1  		};  		xyz = vectorProduct (xyz' T);  		coord [count] = xyz;  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		int xc = x - image2d_x / 2;  		int zc = y - image2d_y / 2;  		double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  		double[] xyz = new double[] {  			xc'  			yc'  			zc'  			1  		};  		xyz = vectorProduct (xyz' T);  		coord [count] = xyz;  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: y += 2
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	int xc = x - image2d_x / 2;  	int zc = y - image2d_y / 2;  	double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  	double[] xyz = new double[] {  		xc'  		yc'  		zc'  		1  	};  	xyz = vectorProduct (xyz' T);  	coord [count] = xyz;  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	int xc = x - image2d_x / 2;  	int zc = y - image2d_y / 2;  	double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  	double[] xyz = new double[] {  		xc'  		yc'  		zc'  		1  	};  	xyz = vectorProduct (xyz' T);  	coord [count] = xyz;  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	int xc = x - image2d_x / 2;  	int zc = y - image2d_y / 2;  	double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  	double[] xyz = new double[] {  		xc'  		yc'  		zc'  		1  	};  	xyz = vectorProduct (xyz' T);  	coord [count] = xyz;  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	int xc = x - image2d_x / 2;  	int zc = y - image2d_y / 2;  	double yc = -(double)(image2d.GetPixel (x' y).ToArgb () & 0xff) / 256 * 4;  	double[] xyz = new double[] {  		xc'  		yc'  		zc'  		1  	};  	xyz = vectorProduct (xyz' T);  	coord [count] = xyz;  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (image3d)) {  	g.Clear (bgcolor);  	count = 0;  	double scale = 1.75 - (double)image2d_x / 400;  	for (int y = 0; y < image2d_y; y += 2) {  		for (int x = 0; x < image2d_x; x++) {  			if (x > 0) {  				double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  				double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  				double x1 = coord [count] [0] * scale + image3d_x / 2;  				double y1 = coord [count] [1] * scale + image3d_y / 2;  				g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  			}  			count++;  		}  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		if (x > 0) {  			double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  			double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  			double x1 = coord [count] [0] * scale + image3d_x / 2;  			double y1 = coord [count] [1] * scale + image3d_y / 2;  			g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  		}  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		if (x > 0) {  			double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  			double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  			double x1 = coord [count] [0] * scale + image3d_x / 2;  			double y1 = coord [count] [1] * scale + image3d_y / 2;  			g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  		}  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		if (x > 0) {  			double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  			double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  			double x1 = coord [count] [0] * scale + image3d_x / 2;  			double y1 = coord [count] [1] * scale + image3d_y / 2;  			g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  		}  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		if (x > 0) {  			double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  			double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  			double x1 = coord [count] [0] * scale + image3d_x / 2;  			double y1 = coord [count] [1] * scale + image3d_y / 2;  			g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  		}  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int y = 0; y < image2d_y; y += 2) {  	for (int x = 0; x < image2d_x; x++) {  		if (x > 0) {  			double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  			double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  			double x1 = coord [count] [0] * scale + image3d_x / 2;  			double y1 = coord [count] [1] * scale + image3d_y / 2;  			g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  		}  		count++;  	}  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: y += 2
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	if (x > 0) {  		double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  		double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  		double x1 = coord [count] [0] * scale + image3d_x / 2;  		double y1 = coord [count] [1] * scale + image3d_y / 2;  		g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  	}  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	if (x > 0) {  		double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  		double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  		double x1 = coord [count] [0] * scale + image3d_x / 2;  		double y1 = coord [count] [1] * scale + image3d_y / 2;  		g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  	}  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	if (x > 0) {  		double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  		double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  		double x1 = coord [count] [0] * scale + image3d_x / 2;  		double y1 = coord [count] [1] * scale + image3d_y / 2;  		g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  	}  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: for (int x = 0; x < image2d_x; x++) {  	if (x > 0) {  		double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  		double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  		double x1 = coord [count] [0] * scale + image3d_x / 2;  		double y1 = coord [count] [1] * scale + image3d_y / 2;  		g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  	}  	count++;  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: if (x > 0) {  	double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  	double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  	double x1 = coord [count] [0] * scale + image3d_x / 2;  	double y1 = coord [count] [1] * scale + image3d_y / 2;  	g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: if (x > 0) {  	double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  	double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  	double x1 = coord [count] [0] * scale + image3d_x / 2;  	double y1 = coord [count] [1] * scale + image3d_y / 2;  	g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: if (x > 0) {  	double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  	double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  	double x1 = coord [count] [0] * scale + image3d_x / 2;  	double y1 = coord [count] [1] * scale + image3d_y / 2;  	g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  }  
Magic Number,Framework.Common,CaptchaHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\CaptchaHelper.cs,Generate,The following statement contains a magic number: if (x > 0) {  	double x0 = coord [count - 1] [0] * scale + image3d_x / 2;  	double y0 = coord [count - 1] [1] * scale + image3d_y / 2;  	double x1 = coord [count] [0] * scale + image3d_x / 2;  	double y1 = coord [count] [1] * scale + image3d_y / 2;  	g.DrawLine (new Pen (fgcolor)' (float)x0' (float)y0' (float)x1' (float)y1);  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: if (!string.IsNullOrEmpty (ip) && ip.IndexOf ('.') > 0) {  	string[] ips = ip.Split ('.');  	if (ips.Length < 4) {  		for (int i = 0; i < 4 - ips.Length; i++) {  			ip += ".0";  		}  		ips = ip.Split ('.');  	}  	for (int i = 0; i < ips.Length; i++) {  		result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  	}  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: if (!string.IsNullOrEmpty (ip) && ip.IndexOf ('.') > 0) {  	string[] ips = ip.Split ('.');  	if (ips.Length < 4) {  		for (int i = 0; i < 4 - ips.Length; i++) {  			ip += ".0";  		}  		ips = ip.Split ('.');  	}  	for (int i = 0; i < ips.Length; i++) {  		result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  	}  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: if (!string.IsNullOrEmpty (ip) && ip.IndexOf ('.') > 0) {  	string[] ips = ip.Split ('.');  	if (ips.Length < 4) {  		for (int i = 0; i < 4 - ips.Length; i++) {  			ip += ".0";  		}  		ips = ip.Split ('.');  	}  	for (int i = 0; i < ips.Length; i++) {  		result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  	}  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: if (!string.IsNullOrEmpty (ip) && ip.IndexOf ('.') > 0) {  	string[] ips = ip.Split ('.');  	if (ips.Length < 4) {  		for (int i = 0; i < 4 - ips.Length; i++) {  			ip += ".0";  		}  		ips = ip.Split ('.');  	}  	for (int i = 0; i < ips.Length; i++) {  		result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  	}  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: if (ips.Length < 4) {  	for (int i = 0; i < 4 - ips.Length; i++) {  		ip += ".0";  	}  	ips = ip.Split ('.');  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: if (ips.Length < 4) {  	for (int i = 0; i < 4 - ips.Length; i++) {  		ip += ".0";  	}  	ips = ip.Split ('.');  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: for (int i = 0; i < 4 - ips.Length; i++) {  	ip += ".0";  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: for (int i = 0; i < ips.Length; i++) {  	result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: for (int i = 0; i < ips.Length; i++) {  	result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  }  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  
Magic Number,Framework.Common,ConverterHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ConverterHelper.cs,SIP2IIP,The following statement contains a magic number: result = result * 256 + ConverterHelper.ParseDecimal (ips [i]' new decimal (0)) * 256;  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,EmitHelper,The following statement contains a magic number: s_Converts = new Dictionary<Type' OpCode> (13);  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadArgument,The following statement contains a magic number: switch (argumentIndex) {  case 0:  	this._ILGenerator.Emit (OpCodes.Ldarg_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldarg_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldarg_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldarg_3);  	break;  default:  	this.LoadArgumentAddress (argumentIndex);  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadArgument,The following statement contains a magic number: switch (argumentIndex) {  case 0:  	this._ILGenerator.Emit (OpCodes.Ldarg_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldarg_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldarg_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldarg_3);  	break;  default:  	this.LoadArgumentAddress (argumentIndex);  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadArgumentAddress,The following statement contains a magic number: if (argumentIndex < 256) {  	this._ILGenerator.Emit (OpCodes.Ldarga_S' (byte)argumentIndex);  }  else {  	this._ILGenerator.Emit (OpCodes.Ldarga' argumentIndex);  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: switch (value) {  case -1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	this._ILGenerator.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value > -129 && value < 128) {  		this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  	}  	else {  		this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  	}  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: if (value > -129 && value < 128) {  	this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  }  else {  	this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadConstant,The following statement contains a magic number: if (value > -129 && value < 128) {  	this._ILGenerator.Emit (OpCodes.Ldc_I4_S' (SByte)value);  }  else {  	this._ILGenerator.Emit (OpCodes.Ldc_I4' value);  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadLocal,The following statement contains a magic number: switch (index) {  case 0:  	this._ILGenerator.Emit (OpCodes.Ldloc_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldloc_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldloc_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldloc_3);  	break;  default:  	if (index < 256)  		this._ILGenerator.Emit (OpCodes.Ldloc_S' (byte)index);  	else  		this._ILGenerator.Emit (OpCodes.Ldloc' index);  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadLocal,The following statement contains a magic number: switch (index) {  case 0:  	this._ILGenerator.Emit (OpCodes.Ldloc_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldloc_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldloc_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldloc_3);  	break;  default:  	if (index < 256)  		this._ILGenerator.Emit (OpCodes.Ldloc_S' (byte)index);  	else  		this._ILGenerator.Emit (OpCodes.Ldloc' index);  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadLocal,The following statement contains a magic number: switch (index) {  case 0:  	this._ILGenerator.Emit (OpCodes.Ldloc_0);  	break;  case 1:  	this._ILGenerator.Emit (OpCodes.Ldloc_1);  	break;  case 2:  	this._ILGenerator.Emit (OpCodes.Ldloc_2);  	break;  case 3:  	this._ILGenerator.Emit (OpCodes.Ldloc_3);  	break;  default:  	if (index < 256)  		this._ILGenerator.Emit (OpCodes.Ldloc_S' (byte)index);  	else  		this._ILGenerator.Emit (OpCodes.Ldloc' index);  	break;  }  
Magic Number,Framework.Common,EmitHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\EmitHelper.cs,LoadLocal,The following statement contains a magic number: if (index < 256)  	this._ILGenerator.Emit (OpCodes.Ldloc_S' (byte)index);  else  	this._ILGenerator.Emit (OpCodes.Ldloc' index);  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,Decrypt,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,DecryptTripleDES,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,DecryptTripleDES,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,DecryptTripleDES,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,Encryption,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\Encryption.cs,DecryptTripleDES,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	int num = Convert.ToInt32 (str.Substring (i * 2' 2)' 16);  	array [i] = (byte)num;  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,ReadResponse,The following statement contains a magic number: if (myTask.Wait (3 * 1000))//尝试3秒时间读取协议头   {  	string header = myTask.Result;  	if (!string.IsNullOrEmpty (header)) {  		if (header.StartsWith ("HTTP/1.1 100")) {  			return ReadResponse (sm);  		}  		byte[] buff = null;  		int start = header.ToUpper ().IndexOf ("CONTENT-LENGTH");  		int content_length = -1;  		//fix bug  		if (start > 0) {  			string temp = header.Substring (start' header.Length - start);  			string[] sArry = Regex.Split (temp' "\r\n");  			content_length = Convert.ToInt32 (sArry [0].Split (':') [1]);  			if (content_length > 0) {  				buff = new byte[content_length];  				int inread = sm.Read (buff' 0' buff.Length);  				while (inread < buff.Length) {  					inread += sm.Read (buff' inread' buff.Length - inread);  				}  			}  		}  		else {  			start = header.ToUpper ().IndexOf ("TRANSFER-ENCODING: CHUNKED");  			if (start > 0) {  				buff = ChunkedReadResponse (sm);  			}  			else {  				buff = SpecialReadResponse (sm);  				//例外  			}  		}  		response = new HttpResponse (header' buff);  	}  }  else {  	cancelSource.Cancel ();  	//超时的话，别忘记取消任务哦  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,ReadResponse,The following statement contains a magic number: if (myTask.Wait (3 * 1000))//尝试3秒时间读取协议头   {  	string header = myTask.Result;  	if (!string.IsNullOrEmpty (header)) {  		if (header.StartsWith ("HTTP/1.1 100")) {  			return ReadResponse (sm);  		}  		byte[] buff = null;  		int start = header.ToUpper ().IndexOf ("CONTENT-LENGTH");  		int content_length = -1;  		//fix bug  		if (start > 0) {  			string temp = header.Substring (start' header.Length - start);  			string[] sArry = Regex.Split (temp' "\r\n");  			content_length = Convert.ToInt32 (sArry [0].Split (':') [1]);  			if (content_length > 0) {  				buff = new byte[content_length];  				int inread = sm.Read (buff' 0' buff.Length);  				while (inread < buff.Length) {  					inread += sm.Read (buff' inread' buff.Length - inread);  				}  			}  		}  		else {  			start = header.ToUpper ().IndexOf ("TRANSFER-ENCODING: CHUNKED");  			if (start > 0) {  				buff = ChunkedReadResponse (sm);  			}  			else {  				buff = SpecialReadResponse (sm);  				//例外  			}  		}  		response = new HttpResponse (header' buff);  	}  }  else {  	cancelSource.Cancel ();  	//超时的话，别忘记取消任务哦  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetChunked,The following statement contains a magic number: while (true) {  	try {  		int read = sm.ReadByte ();  		if (read != -1) {  			byte b = (byte)read;  			bulider.Append ((char)b);  			string temp = bulider.ToString ();  			if (temp.EndsWith ("\r\n")) {  				chunked = Convert.ToInt32 (temp.Trim ()' 16);  				break;  			}  		}  		else {  			break;  		}  	}  	catch (Exception ex) {  		Debug.WriteLine (ex.Message);  		break;  	}  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetChunked,The following statement contains a magic number: try {  	int read = sm.ReadByte ();  	if (read != -1) {  		byte b = (byte)read;  		bulider.Append ((char)b);  		string temp = bulider.ToString ();  		if (temp.EndsWith ("\r\n")) {  			chunked = Convert.ToInt32 (temp.Trim ()' 16);  			break;  		}  	}  	else {  		break;  	}  }  catch (Exception ex) {  	Debug.WriteLine (ex.Message);  	break;  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetChunked,The following statement contains a magic number: if (read != -1) {  	byte b = (byte)read;  	bulider.Append ((char)b);  	string temp = bulider.ToString ();  	if (temp.EndsWith ("\r\n")) {  		chunked = Convert.ToInt32 (temp.Trim ()' 16);  		break;  	}  }  else {  	break;  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetChunked,The following statement contains a magic number: if (temp.EndsWith ("\r\n")) {  	chunked = Convert.ToInt32 (temp.Trim ()' 16);  	break;  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetChunked,The following statement contains a magic number: chunked = Convert.ToInt32 (temp.Trim ()' 16);  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,SpecialReadResponse,The following statement contains a magic number: while (true) {  	byte[] buff = new byte[1024 * 10];  	int len = sm.Read (buff' 0' buff.Length);  	if (len > 0) {  		length += len;  		byte[] reads = new byte[len];  		Array.Copy (buff' 0' reads' 0' len);  		array.Add (reads);  		bulider.Append (Encoding.Default.GetString (reads));  	}  	string temp = bulider.ToString ();  	if (temp.ToUpper ().Contains ("</HTML>")) {  		break;  	}  	if (DateTime.Now.Subtract (now).TotalSeconds >= 30) {  		break;  		//超时30秒则跳出  	}  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,SpecialReadResponse,The following statement contains a magic number: while (true) {  	byte[] buff = new byte[1024 * 10];  	int len = sm.Read (buff' 0' buff.Length);  	if (len > 0) {  		length += len;  		byte[] reads = new byte[len];  		Array.Copy (buff' 0' reads' 0' len);  		array.Add (reads);  		bulider.Append (Encoding.Default.GetString (reads));  	}  	string temp = bulider.ToString ();  	if (temp.ToUpper ().Contains ("</HTML>")) {  		break;  	}  	if (DateTime.Now.Subtract (now).TotalSeconds >= 30) {  		break;  		//超时30秒则跳出  	}  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,SpecialReadResponse,The following statement contains a magic number: while (true) {  	byte[] buff = new byte[1024 * 10];  	int len = sm.Read (buff' 0' buff.Length);  	if (len > 0) {  		length += len;  		byte[] reads = new byte[len];  		Array.Copy (buff' 0' reads' 0' len);  		array.Add (reads);  		bulider.Append (Encoding.Default.GetString (reads));  	}  	string temp = bulider.ToString ();  	if (temp.ToUpper ().Contains ("</HTML>")) {  		break;  	}  	if (DateTime.Now.Subtract (now).TotalSeconds >= 30) {  		break;  		//超时30秒则跳出  	}  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,SpecialReadResponse,The following statement contains a magic number: if (DateTime.Now.Subtract (now).TotalSeconds >= 30) {  	break;  	//超时30秒则跳出  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetCookies,The following statement contains a magic number: using (StringReader reader = new StringReader (responseHeader)) {  	string strLine = reader.ReadLine ();  	while (strLine != null) {  		if (strLine.StartsWith ("Set-Cookie:")) {  			string temp = strLine.Remove (0' 12);  			if (!temp.EndsWith (";")) {  				temp = temp + ";";  			}  			cookies.Append (temp);  		}  		strLine = reader.ReadLine ();  	}  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetCookies,The following statement contains a magic number: while (strLine != null) {  	if (strLine.StartsWith ("Set-Cookie:")) {  		string temp = strLine.Remove (0' 12);  		if (!temp.EndsWith (";")) {  			temp = temp + ";";  		}  		cookies.Append (temp);  	}  	strLine = reader.ReadLine ();  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetCookies,The following statement contains a magic number: if (strLine.StartsWith ("Set-Cookie:")) {  	string temp = strLine.Remove (0' 12);  	if (!temp.EndsWith (";")) {  		temp = temp + ";";  	}  	cookies.Append (temp);  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetLocation,The following statement contains a magic number: using (StringReader reader = new StringReader (responseHeader)) {  	string strLine = reader.ReadLine ();  	while (strLine != null) {  		if (strLine.StartsWith ("Location:")) {  			result = strLine.Remove (0' 10);  		}  		strLine = reader.ReadLine ();  	}  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetLocation,The following statement contains a magic number: while (strLine != null) {  	if (strLine.StartsWith ("Location:")) {  		result = strLine.Remove (0' 10);  	}  	strLine = reader.ReadLine ();  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetLocation,The following statement contains a magic number: if (strLine.StartsWith ("Location:")) {  	result = strLine.Remove (0' 10);  }  
Magic Number,Framework.Common,HttpHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\HttpHelper.cs,GetLocation,The following statement contains a magic number: result = strLine.Remove (0' 10);  
Magic Number,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The following statement contains a magic number: switch (mode) {  case "HW":  	//指定高宽缩放（可能变形）  	break;  case "HWO":  	//指定高宽缩放（可能变形）（过小则不变）  	if (originalImage.Width <= width && originalImage.Height <= height) {  		return originalImage;  	}  	if (originalImage.Width < width) {  		toWidth = originalImage.Width;  	}  	if (originalImage.Height < height) {  		toHeight = originalImage.Height;  	}  	break;  case "W":  	//指定宽，高按比例  	toHeight = originalImage.Height * width / originalImage.Width;  	break;  case "WO":  	//指定宽（过小则不变），高按比例  	if (originalImage.Width <= width) {  		return originalImage;  	}  	toHeight = originalImage.Height * width / originalImage.Width;  	break;  case "H":  	//指定高，宽按比例  	toWidth = originalImage.Width * height / originalImage.Height;  	break;  case "HO":  	//指定高（过小则不变），宽按比例  	if (originalImage.Height <= height) {  		return originalImage;  	}  	toWidth = originalImage.Width * height / originalImage.Height;  	break;  case "CUT":  	//指定高宽裁减（不变形）  	if ((double)originalImage.Width / (double)originalImage.Height > (double)toWidth / (double)toHeight) {  		originalHeight = originalImage.Height;  		originalWidth = originalImage.Height * toWidth / toHeight;  		y = 0;  		x = (originalImage.Width - originalWidth) / 2;  	}  	else {  		originalWidth = originalImage.Width;  		originalHeight = originalImage.Width * height / toWidth;  		x = 0;  		y = (originalImage.Height - originalHeight) / 2;  	}  	break;  default:  	break;  }  
Magic Number,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The following statement contains a magic number: switch (mode) {  case "HW":  	//指定高宽缩放（可能变形）  	break;  case "HWO":  	//指定高宽缩放（可能变形）（过小则不变）  	if (originalImage.Width <= width && originalImage.Height <= height) {  		return originalImage;  	}  	if (originalImage.Width < width) {  		toWidth = originalImage.Width;  	}  	if (originalImage.Height < height) {  		toHeight = originalImage.Height;  	}  	break;  case "W":  	//指定宽，高按比例  	toHeight = originalImage.Height * width / originalImage.Width;  	break;  case "WO":  	//指定宽（过小则不变），高按比例  	if (originalImage.Width <= width) {  		return originalImage;  	}  	toHeight = originalImage.Height * width / originalImage.Width;  	break;  case "H":  	//指定高，宽按比例  	toWidth = originalImage.Width * height / originalImage.Height;  	break;  case "HO":  	//指定高（过小则不变），宽按比例  	if (originalImage.Height <= height) {  		return originalImage;  	}  	toWidth = originalImage.Width * height / originalImage.Height;  	break;  case "CUT":  	//指定高宽裁减（不变形）  	if ((double)originalImage.Width / (double)originalImage.Height > (double)toWidth / (double)toHeight) {  		originalHeight = originalImage.Height;  		originalWidth = originalImage.Height * toWidth / toHeight;  		y = 0;  		x = (originalImage.Width - originalWidth) / 2;  	}  	else {  		originalWidth = originalImage.Width;  		originalHeight = originalImage.Width * height / toWidth;  		x = 0;  		y = (originalImage.Height - originalHeight) / 2;  	}  	break;  default:  	break;  }  
Magic Number,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The following statement contains a magic number: if ((double)originalImage.Width / (double)originalImage.Height > (double)toWidth / (double)toHeight) {  	originalHeight = originalImage.Height;  	originalWidth = originalImage.Height * toWidth / toHeight;  	y = 0;  	x = (originalImage.Width - originalWidth) / 2;  }  else {  	originalWidth = originalImage.Width;  	originalHeight = originalImage.Width * height / toWidth;  	x = 0;  	y = (originalImage.Height - originalHeight) / 2;  }  
Magic Number,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The following statement contains a magic number: if ((double)originalImage.Width / (double)originalImage.Height > (double)toWidth / (double)toHeight) {  	originalHeight = originalImage.Height;  	originalWidth = originalImage.Height * toWidth / toHeight;  	y = 0;  	x = (originalImage.Width - originalWidth) / 2;  }  else {  	originalWidth = originalImage.Width;  	originalHeight = originalImage.Width * height / toWidth;  	x = 0;  	y = (originalImage.Height - originalHeight) / 2;  }  
Magic Number,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The following statement contains a magic number: x = (originalImage.Width - originalWidth) / 2;  
Magic Number,Framework.Common,ImageHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ImageHelper.cs,MakeThumbnail,The following statement contains a magic number: y = (originalImage.Height - originalHeight) / 2;  
Magic Number,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The following statement contains a magic number: if (!type.IsArray) {  	il.Emit (OpCodes.Newobj' type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null));  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_1);  	il.Emit (OpCodes.Ldloca_S' 2);  	il.Emit (OpCodes.Ldarg_0);  	il.Emit (OpCodes.Castclass' type);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_0);  	il.Emit (OpCodes.Callvirt' typeof(object).GetMethod ("GetHashCode"));  	il.Emit (OpCodes.Ldtoken' type);  	il.Emit (OpCodes.Call' typeof(Identity).GetConstructor (BindingFlags.Instance | BindingFlags.Public' null' new[] {  		typeof(int)'  		typeof(RuntimeTypeHandle)  	}' null));  	il.Emit (OpCodes.Ldarg_1);  	il.Emit (OpCodes.Ldloc_2);  	il.Emit (OpCodes.Ldloc_1);  	il.Emit (OpCodes.Callvirt' typeof(Dictionary<Identity' object>).GetMethod ("Add"));  	foreach (var field in fields) {  		if (!field.FieldType.IsValueType && field.FieldType != typeof(String)) {  			//不符合条件的字段，直接忽略，避免报错。  			if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))  				break;  			il.Emit (OpCodes.Ldloc_1);  			il.Emit (OpCodes.Ldloc_0);  			il.Emit (OpCodes.Ldfld' field);  			il.Emit (OpCodes.Ldarg_1);  			il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null);  			il.Emit (OpCodes.Stfld' field);  		}  		else {  			il.Emit (OpCodes.Ldloc_1);  			il.Emit (OpCodes.Ldloc_0);  			il.Emit (OpCodes.Ldfld' field);  			il.Emit (OpCodes.Stfld' field);  		}  	}  	for (type = type.BaseType; type != null && type != typeof(object); type = type.BaseType) {  		//只需要查找基类的私有成员，共有或受保护的在派生类中直接被复制过了。  		fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Instance).ToList ();  		foreach (var field in fields) {  			if (!field.FieldType.IsValueType && field.FieldType != typeof(String)) {  				//不符合条件的字段，直接忽略，避免报错。  				if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))  					break;  				il.Emit (OpCodes.Ldloc_1);  				il.Emit (OpCodes.Ldloc_0);  				il.Emit (OpCodes.Ldfld' field);  				il.Emit (OpCodes.Ldarg_1);  				il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null);  				il.Emit (OpCodes.Stfld' field);  			}  			else {  				il.Emit (OpCodes.Ldloc_1);  				il.Emit (OpCodes.Ldloc_0);  				il.Emit (OpCodes.Ldfld' field);  				il.Emit (OpCodes.Stfld' field);  			}  		}  	}  }  else {  	Type arraytype = type.GetElementType ();  	var i = il.DeclareLocal (typeof(int));  	var lb1 = il.DefineLabel ();  	var lb2 = il.DefineLabel ();  	il.Emit (OpCodes.Ldarg_0);  	il.Emit (OpCodes.Castclass' type);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_0);  	il.Emit (OpCodes.Ldlen);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Ldc_I4_1);  	il.Emit (OpCodes.Sub);  	il.Emit (OpCodes.Stloc' i);  	il.Emit (OpCodes.Newarr' arraytype);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_1);  	il.Emit (OpCodes.Ldloca_S' 2);  	il.Emit (OpCodes.Ldloc_0);  	il.Emit (OpCodes.Callvirt' typeof(object).GetMethod ("GetHashCode"));  	il.Emit (OpCodes.Ldtoken' type);  	il.Emit (OpCodes.Call' typeof(Identity).GetConstructor (BindingFlags.Instance | BindingFlags.Public' null' new[] {  		typeof(int)'  		typeof(RuntimeTypeHandle)  	}' null));  	il.Emit (OpCodes.Ldarg_1);  	il.Emit (OpCodes.Ldloc_2);  	il.Emit (OpCodes.Ldloc_1);  	il.Emit (OpCodes.Callvirt' typeof(Dictionary<Identity' object>).GetMethod ("Add"));  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Br' lb1);  	il.MarkLabel (lb2);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Ldloc_0);  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Ldelem' arraytype);  	if (!arraytype.IsValueType && arraytype != typeof(String)) {  		il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (arraytype)' null);  	}  	il.Emit (OpCodes.Stelem' arraytype);  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Ldc_I4_1);  	il.Emit (OpCodes.Sub);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc' i);  	il.MarkLabel (lb1);  	il.Emit (OpCodes.Ldc_I4_0);  	il.Emit (OpCodes.Clt);  	il.Emit (OpCodes.Brfalse' lb2);  }  
Magic Number,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The following statement contains a magic number: if (!type.IsArray) {  	il.Emit (OpCodes.Newobj' type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null));  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_1);  	il.Emit (OpCodes.Ldloca_S' 2);  	il.Emit (OpCodes.Ldarg_0);  	il.Emit (OpCodes.Castclass' type);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_0);  	il.Emit (OpCodes.Callvirt' typeof(object).GetMethod ("GetHashCode"));  	il.Emit (OpCodes.Ldtoken' type);  	il.Emit (OpCodes.Call' typeof(Identity).GetConstructor (BindingFlags.Instance | BindingFlags.Public' null' new[] {  		typeof(int)'  		typeof(RuntimeTypeHandle)  	}' null));  	il.Emit (OpCodes.Ldarg_1);  	il.Emit (OpCodes.Ldloc_2);  	il.Emit (OpCodes.Ldloc_1);  	il.Emit (OpCodes.Callvirt' typeof(Dictionary<Identity' object>).GetMethod ("Add"));  	foreach (var field in fields) {  		if (!field.FieldType.IsValueType && field.FieldType != typeof(String)) {  			//不符合条件的字段，直接忽略，避免报错。  			if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))  				break;  			il.Emit (OpCodes.Ldloc_1);  			il.Emit (OpCodes.Ldloc_0);  			il.Emit (OpCodes.Ldfld' field);  			il.Emit (OpCodes.Ldarg_1);  			il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null);  			il.Emit (OpCodes.Stfld' field);  		}  		else {  			il.Emit (OpCodes.Ldloc_1);  			il.Emit (OpCodes.Ldloc_0);  			il.Emit (OpCodes.Ldfld' field);  			il.Emit (OpCodes.Stfld' field);  		}  	}  	for (type = type.BaseType; type != null && type != typeof(object); type = type.BaseType) {  		//只需要查找基类的私有成员，共有或受保护的在派生类中直接被复制过了。  		fields = type.GetFields (BindingFlags.NonPublic | BindingFlags.Instance).ToList ();  		foreach (var field in fields) {  			if (!field.FieldType.IsValueType && field.FieldType != typeof(String)) {  				//不符合条件的字段，直接忽略，避免报错。  				if ((field.FieldType.IsArray && (field.FieldType.GetArrayRank () > 1 || (!(tmptype = field.FieldType.GetElementType ()).IsValueType && tmptype != typeof(String) && tmptype.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || (!field.FieldType.IsArray && field.FieldType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))  					break;  				il.Emit (OpCodes.Ldloc_1);  				il.Emit (OpCodes.Ldloc_0);  				il.Emit (OpCodes.Ldfld' field);  				il.Emit (OpCodes.Ldarg_1);  				il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (field.FieldType)' null);  				il.Emit (OpCodes.Stfld' field);  			}  			else {  				il.Emit (OpCodes.Ldloc_1);  				il.Emit (OpCodes.Ldloc_0);  				il.Emit (OpCodes.Ldfld' field);  				il.Emit (OpCodes.Stfld' field);  			}  		}  	}  }  else {  	Type arraytype = type.GetElementType ();  	var i = il.DeclareLocal (typeof(int));  	var lb1 = il.DefineLabel ();  	var lb2 = il.DefineLabel ();  	il.Emit (OpCodes.Ldarg_0);  	il.Emit (OpCodes.Castclass' type);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_0);  	il.Emit (OpCodes.Ldlen);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Ldc_I4_1);  	il.Emit (OpCodes.Sub);  	il.Emit (OpCodes.Stloc' i);  	il.Emit (OpCodes.Newarr' arraytype);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc_1);  	il.Emit (OpCodes.Ldloca_S' 2);  	il.Emit (OpCodes.Ldloc_0);  	il.Emit (OpCodes.Callvirt' typeof(object).GetMethod ("GetHashCode"));  	il.Emit (OpCodes.Ldtoken' type);  	il.Emit (OpCodes.Call' typeof(Identity).GetConstructor (BindingFlags.Instance | BindingFlags.Public' null' new[] {  		typeof(int)'  		typeof(RuntimeTypeHandle)  	}' null));  	il.Emit (OpCodes.Ldarg_1);  	il.Emit (OpCodes.Ldloc_2);  	il.Emit (OpCodes.Ldloc_1);  	il.Emit (OpCodes.Callvirt' typeof(Dictionary<Identity' object>).GetMethod ("Add"));  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Br' lb1);  	il.MarkLabel (lb2);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Ldloc_0);  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Ldelem' arraytype);  	if (!arraytype.IsValueType && arraytype != typeof(String)) {  		il.EmitCall (OpCodes.Call' typeof(ObjectCopy).GetMethod ("CopyImpl1"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (arraytype)' null);  	}  	il.Emit (OpCodes.Stelem' arraytype);  	il.Emit (OpCodes.Ldloc' i);  	il.Emit (OpCodes.Ldc_I4_1);  	il.Emit (OpCodes.Sub);  	il.Emit (OpCodes.Dup);  	il.Emit (OpCodes.Stloc' i);  	il.MarkLabel (lb1);  	il.Emit (OpCodes.Ldc_I4_0);  	il.Emit (OpCodes.Clt);  	il.Emit (OpCodes.Brfalse' lb2);  }  
Magic Number,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The following statement contains a magic number: il.Emit (OpCodes.Ldloca_S' 2);  
Magic Number,Framework.Common,ObjectCopy,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\ObjectCopy.cs,CreateCloneMethod1,The following statement contains a magic number: il.Emit (OpCodes.Ldloca_S' 2);  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (bytes [i] < 128) {  		stringBuilder.Append ((char)bytes [i]);  	}  	else {  		stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  		stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  	}  }  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (bytes [i] < 128) {  		stringBuilder.Append ((char)bytes [i]);  	}  	else {  		stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  		stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  	}  }  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	if (bytes [i] < 128) {  		stringBuilder.Append ((char)bytes [i]);  	}  	else {  		stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  		stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  	}  }  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: if (bytes [i] < 128) {  	stringBuilder.Append ((char)bytes [i]);  }  else {  	stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  	stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  }  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: if (bytes [i] < 128) {  	stringBuilder.Append ((char)bytes [i]);  }  else {  	stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  	stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  }  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: if (bytes [i] < 128) {  	stringBuilder.Append ((char)bytes [i]);  }  else {  	stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  	stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  }  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: stringBuilder.Append ("%" + bytes [i++].ToString ("x").PadLeft (2' '0'));  
Magic Number,Framework.Common,UtilsHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\UtilsHelper.cs,UrlEncode,The following statement contains a magic number: stringBuilder.Append ("%" + bytes [i].ToString ("x").PadLeft (2' '0'));  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Number,The following statement contains a magic number: if (Sleep)  	System.Threading.Thread.Sleep (3);  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Number,The following statement contains a magic number: System.Threading.Thread.Sleep (3);  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Number,The following statement contains a magic number: for (int i = 0; i < Length; i++) {  	result += random.Next (10).ToString ();  }  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Number,The following statement contains a magic number: result += random.Next (10).ToString ();  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Str,The following statement contains a magic number: if (Sleep)  	System.Threading.Thread.Sleep (3);  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Str,The following statement contains a magic number: System.Threading.Thread.Sleep (3);  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Str_char,The following statement contains a magic number: if (Sleep)  	System.Threading.Thread.Sleep (3);  
Magic Number,Framework.Common,Rand,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,Str_char,The following statement contains a magic number: System.Threading.Thread.Sleep (3);  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,YZMHelper,The following statement contains a magic number: this.text = Rand.Number (4);  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	int x1 = Next (image.Width - 1);  	int x2 = Next (image.Width - 1);  	int y1 = Next (image.Height - 1);  	int y2 = Next (image.Height - 1);  	g.DrawLine (new Pen (Color.Silver)' x1' y1' x2' y2);  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int int_index = 0; int_index < this.text.Length; int_index++) {  	_x += Next (12' 16);  	_y = Next (-2' 2);  	string str_char = this.text.Substring (int_index' 1);  	str_char = Next (1) == 1 ? str_char.ToLower () : str_char.ToUpper ();  	Brush newBrush = new SolidBrush (GetRandomColor ());  	Point thePos = new Point (_x' _y);  	g.DrawString (str_char' fonts [Next (fonts.Length - 1)]' newBrush' thePos);  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int int_index = 0; int_index < this.text.Length; int_index++) {  	_x += Next (12' 16);  	_y = Next (-2' 2);  	string str_char = this.text.Substring (int_index' 1);  	str_char = Next (1) == 1 ? str_char.ToLower () : str_char.ToUpper ();  	Brush newBrush = new SolidBrush (GetRandomColor ());  	Point thePos = new Point (_x' _y);  	g.DrawString (str_char' fonts [Next (fonts.Length - 1)]' newBrush' thePos);  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int int_index = 0; int_index < this.text.Length; int_index++) {  	_x += Next (12' 16);  	_y = Next (-2' 2);  	string str_char = this.text.Substring (int_index' 1);  	str_char = Next (1) == 1 ? str_char.ToLower () : str_char.ToUpper ();  	Brush newBrush = new SolidBrush (GetRandomColor ());  	Point thePos = new Point (_x' _y);  	g.DrawString (str_char' fonts [Next (fonts.Length - 1)]' newBrush' thePos);  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int int_index = 0; int_index < this.text.Length; int_index++) {  	_x += Next (12' 16);  	_y = Next (-2' 2);  	string str_char = this.text.Substring (int_index' 1);  	str_char = Next (1) == 1 ? str_char.ToLower () : str_char.ToUpper ();  	Brush newBrush = new SolidBrush (GetRandomColor ());  	Point thePos = new Point (_x' _y);  	g.DrawString (str_char' fonts [Next (fonts.Length - 1)]' newBrush' thePos);  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: _x += Next (12' 16);  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: _x += Next (12' 16);  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: _y = Next (-2' 2);  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: _y = Next (-2' 2);  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int x = Next (image.Width - 1);  	int y = Next (image.Height - 1);  	image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int x = Next (image.Width - 1);  	int y = Next (image.Height - 1);  	image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int x = Next (image.Width - 1);  	int y = Next (image.Height - 1);  	image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	int x = Next (image.Width - 1);  	int y = Next (image.Height - 1);  	image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  }  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: image.SetPixel (x' y' Color.FromArgb (Next (0' 255)' Next (0' 255)' Next (0' 255)));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: image = TwistImage (image' true' Next (1' 3)' Next (4' 6));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: image = TwistImage (image' true' Next (1' 3)' Next (4' 6));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,CreateImage,The following statement contains a magic number: image = TwistImage (image' true' Next (1' 3)' Next (4' 6));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,GetRandomColor,The following statement contains a magic number: System.Threading.Thread.Sleep (RandomNum_First.Next (50));  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,GetRandomColor,The following statement contains a magic number: int_Blue = (int_Blue > 255) ? 255 : int_Blue;  
Magic Number,Framework.Common,YZMHelper,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Common\YMZHelper.cs,GetRandomColor,The following statement contains a magic number: int_Blue = (int_Blue > 255) ? 255 : int_Blue;  
