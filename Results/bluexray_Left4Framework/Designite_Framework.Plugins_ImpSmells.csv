Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Framework.Plugins,PluginFileParser,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFileParser.cs,ParsePluginDescriptionFile,Cyclomatic complexity of the method is 31
Complex Method,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,Cyclomatic complexity of the method is 19
Long Parameter List,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The method has 7 parameters.
Long Statement,Framework.Plugins,PluginFileParser,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFileParser.cs,ParseInstalledPluginsFile,The length of the statement  "	//Old way of file reading. This leads to unexpected behavior when a user's FTP program transfers these files as ASCII (\r\n becomes \n). " is 136.
Long Statement,Framework.Plugins,PluginFileParser,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFileParser.cs,ParsePluginDescriptionFile,The length of the statement  "	//Old way of file reading. This leads to unexpected behavior when a user's FTP program transfers these files as ASCII (\r\n becomes \n). " is 136.
Long Statement,Framework.Plugins,PluginFileParser,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFileParser.cs,SavePluginDescriptionFile,The length of the statement  "		throw new Exception (string.Format ("Description file for {0} plugin does not exist. {1}"' plugin.SystemName' filePath)); " is 121.
Long Statement,Framework.Plugins,PluginFinder,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFinder.cs,GetPluginDescriptorBySystemName,The length of the statement  "	return GetPluginDescriptors (installedOnly).SingleOrDefault (p => p.SystemName.Equals (systemName' StringComparison.InvariantCultureIgnoreCase)); " is 145.
Long Statement,Framework.Plugins,PluginFinder,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFinder.cs,GetPluginDescriptorBySystemName,The length of the statement  "	return GetPluginDescriptors<T> (installedOnly).SingleOrDefault (p => p.SystemName.Equals (systemName' StringComparison.InvariantCultureIgnoreCase)); " is 148.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "		_clearShadowDirectoryOnStartup = !String.IsNullOrEmpty (ConfigurationManager.AppSettings ["ClearPluginsShadowDirectoryOnStartup"]) && Convert.ToBoolean (ConfigurationManager.AppSettings ["ClearPluginsShadowDirectoryOnStartup"]); " is 228.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "					if (!description.SupportedVersions.Contains (FrameworkVersion.CurrentVersion' StringComparer.InvariantCultureIgnoreCase)) " is 121.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "						throw new Exception (string.Format ("A plugin '{0}' has no system name. Try assigning the plugin a unique name and recompiling."' descriptionFile.FullName)); " is 157.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "					description.Installed = installedPluginSystemNames.ToList ().Where (x => x.Equals (description.SystemName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault () != null; " is 179.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "					var pluginFiles = descriptionFile.Directory.GetFiles ("*.dll"' SearchOption.AllDirectories)//just make sure we're not registering shadow copied plugins " is 151.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "					.Where (x => !binFiles.Select (q => q.FullName).Contains (x.FullName)).Where (x => IsPackagePluginFolder (x.Directory)).ToList (); " is 130.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "					var mainPluginFile = pluginFiles.Where (x => x.Name.Equals (description.PluginFileName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault (); " is 152.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,Initialize,The length of the statement  "					foreach (var plugin in pluginFiles.Where (x => !x.Name.Equals (mainPluginFile.Name' StringComparison.InvariantCultureIgnoreCase)).Where (x => !IsAlreadyLoaded (x))) " is 164.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,MarkPluginAsInstalled,The length of the statement  "	bool alreadyMarkedAsInstalled = installedPluginSystemNames.ToList ().Where (x => x.Equals (systemName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault () != null; " is 175.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,MarkPluginAsUninstalled,The length of the statement  "	bool alreadyMarkedAsInstalled = installedPluginSystemNames.ToList ().Where (x => x.Equals (systemName' StringComparison.InvariantCultureIgnoreCase)).FirstOrDefault () != null; " is 175.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,PerformFileDeploy,The length of the statement  "		throw new InvalidOperationException ("The plugin directory for the " + plug.Name + " file exists in a folder outside of the allowed Umbraco folder heirarchy"); " is 159.
Long Statement,Framework.Plugins,PluginManager,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginManager.cs,InitializeMediumTrust,The length of the statement  "			//More info: http://www.nopcommerce.com/boards/t/11511/access-error-nopplugindiscountrulesbillingcountrydll.aspx?p=4#60838 " is 122.
Missing Default,Framework.Plugins,PluginFileParser,C:\repos\bluexray_Left4Framework\FrameworkComponent\Framework.Plugins\PluginFileParser.cs,ParsePluginDescriptionFile,The following switch statement is missing a default case: switch (key) {  case "Group":  	descriptor.Group = value;  	break;  case "FriendlyName":  	descriptor.FriendlyName = value;  	break;  case "SystemName":  	descriptor.SystemName = value;  	break;  case "Version":  	descriptor.Version = value;  	break;  case "SupportedVersions":  	{  		//parse supported versions  		descriptor.SupportedVersions = value.Split (new char[] {  			'''  		}' StringSplitOptions.RemoveEmptyEntries).Select (x => x.Trim ()).ToList ();  	}  	break;  case "Author":  	descriptor.Author = value;  	break;  case "DisplayOrder":  	{  		int displayOrder;  		int.TryParse (value' out displayOrder);  		descriptor.DisplayOrder = displayOrder;  	}  	break;  case "FileName":  	descriptor.PluginFileName = value;  	break;  }  
