Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Rhino.Licensing,LicenseGenerator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicenseGenerator.cs,Generate,The method has 5 parameters. Parameters: name' id' expirationDate' attributes' licenseType
Long Parameter List,Rhino.Licensing,LicenseGenerator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicenseGenerator.cs,CreateDocument,The method has 5 parameters. Parameters: id' name' expirationDate' attributes' licenseType
Long Identifier,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,RaiseMultipleLicenseDiscovered,The length of the parameter onMultipleLicensesWereDiscovered is 32.
Long Identifier,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,,The length of the parameter currentlyValidatingSubscriptionLicense is 38.
Long Statement,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,RaiseLicenseInvalidated,The length of the statement  "                throw new InvalidOperationException("License was invalidated' but there is no one subscribe to the LicenseInvalidated event"); " is 126.
Long Statement,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,TryGettingNewLeaseSubscription,The length of the statement  "            var service = ChannelFactory<ISubscriptionLicensingService>.CreateChannel(new BasicHttpBinding()' new EndpointAddress(SubscriptionEndpoint)); " is 141.
Long Statement,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,ValidateFloatingLicense,The length of the statement  "            var licensingService = ChannelFactory<ILicensingService>.CreateChannel(new WSHttpBinding()' new EndpointAddress(licenseServerUrl)); " is 131.
Long Statement,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,ReadInitialState,The length of the statement  "                throw new AccessViolationException("Could not open file '" + state + "' for read/write' please grant read/write access to the file."' e); " is 137.
Long Statement,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,GenerateLicenseAndRenewLease,The length of the statement  "			leasedLicenses[identifier] = new KeyValuePair<DateTime' LicenseValidator>(DateTime.UtcNow.AddMinutes(30)' licenseValidator); " is 124.
Long Statement,Rhino.Licensing.Discovery,DiscoveryClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\Discovery\DiscoveryClient.cs,PublishMyPresence,The length of the statement  "			Task.Factory.FromAsync<byte[]' int' IPEndPoint' int>(udpClient.BeginSend' udpClient.EndSend' buffer' buffer.Length' allHostsGroup' null) " is 136.
Empty Catch Block,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,ReadState,The method has an empty catch block.
Empty Catch Block,Rhino.Licensing.Discovery,DiscoveryHost,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\Discovery\DiscoveryHost.cs,Completed,The method has an empty catch block.
Magic Number,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,AbstractLicenseValidator,The following statement contains a magic number: LeaseTimeout = TimeSpan.FromMinutes(5);
Magic Number,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,ValidateSubscription,The following statement contains a magic number: (ExpirationDate - DateTime.UtcNow).TotalDays > 4
Magic Number,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,ValidateFloatingLicense,The following statement contains a magic number: var time = (ExpirationDate.AddMinutes(-5) - DateTime.UtcNow);
Magic Number,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,ReadState,The following statement contains a magic number: var userId = new Guid(binaryReader.ReadBytes(16));
Magic Number,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,LeaseLicense,The following statement contains a magic number: (DateTime.UtcNow - kvp.Value.Key).TotalMinutes < 45
Magic Number,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,GenerateLicenseAndRenewLease,The following statement contains a magic number: leasedLicenses[identifier] = new KeyValuePair<DateTime' LicenseValidator>(DateTime.UtcNow.AddMinutes(30)' licenseValidator);
Magic Number,Rhino.Licensing,LicensingService,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\LicensingService.cs,GenerateLicense,The following statement contains a magic number: return generator.Generate(validator.Name' id' DateTime.UtcNow.AddMinutes(45)' attributes 'LicenseType.Floating);
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetIsServerMode,The following statement contains a magic number: return (sntpData[0] & 0x7) == 4 /* server mode */;
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetTransmitTimestamp,The following statement contains a magic number: var milliSeconds = GetMilliSeconds(sntpData' 40);
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,ComputeDate,The following statement contains a magic number: return new DateTime(1900' 1' 1).Add(TimeSpan.FromMilliseconds(milliseconds));
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetMilliSeconds,The following statement contains a magic number: intpart = 256*intpart + sntpData[offset + i];
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetMilliSeconds,The following statement contains a magic number: i <= 3
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetMilliSeconds,The following statement contains a magic number: fractpart = 256*fractpart + sntpData[offset + i];
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetMilliSeconds,The following statement contains a magic number: i <= 7
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetMilliSeconds,The following statement contains a magic number: var milliseconds = intpart*1000 + (fractpart*1000)/0x100000000L;
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,GetMilliSeconds,The following statement contains a magic number: var milliseconds = intpart*1000 + (fractpart*1000)/0x100000000L;
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,EndGetHostAddress,The following statement contains a magic number: var endPoint = new IPEndPoint(addresses[0]' 123);
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,EndGetHostAddress,The following statement contains a magic number: socket.Client.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.ReceiveTimeout' 500);
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,EndGetHostAddress,The following statement contains a magic number: socket.Client.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.SendTimeout' 500);
Magic Number,Rhino.Licensing,SntpClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\SntpClient.cs,RegisterWaitForTimeout,The following statement contains a magic number: ThreadPool.RegisterWaitForSingleObject(result.AsyncWaitHandle' MaybeOperationTimeout' newState' 500' true);
Magic Number,Rhino.Licensing.Discovery,DiscoveryClient,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\Discovery\DiscoveryClient.cs,DiscoveryClient,The following statement contains a magic number: allHostsGroup = new IPEndPoint(IPAddress.Parse("224.0.0.1")' 12391);
Missing Default,Rhino.Licensing,AbstractLicenseValidator,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing\AbstractLicenseValidator.cs,DiscoveryHostOnClientDiscovered,The following switch statement is missing a default case: switch (MultipleLicenseUsageBehavior)              {                  case MultipleLicenseUsage.AllowForSameUser:                      if (Environment.UserName == clientDiscoveredEventArgs.UserName)                          return;                      break;              }
