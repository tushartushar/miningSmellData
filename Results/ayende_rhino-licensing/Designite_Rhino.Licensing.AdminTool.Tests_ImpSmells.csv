Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Rhino.Licensing.AdminTool.Tests.Services,ExpirationDateConverterTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ExpirationDateConverterTests.cs,Does_One_Way_Conversion,The length of the statement  "            Assert.Throws<NotImplementedException>(() => converter.ConvertBack(this' typeof(object)' this' CultureInfo.InvariantCulture)); " is 126.
Long Statement,Rhino.Licensing.AdminTool.Tests.Services,ExportServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ExportServiceTests.cs,Exports_LicenseInfo_To_File,The length of the statement  "            var license = new License { ID = Guid.NewGuid()' LicenseType = LicenseType.Standard' OwnerName = "License Owner"' ExpirationDate = new DateTime(2020' 1' 1) }; " is 158.
Long Statement,Rhino.Licensing.AdminTool.Tests.Services,ExportServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ExportServiceTests.cs,Exports_With_MaxDate_If_No_Expiration_Date_Is_Set,The length of the statement  "            var license = new License { ID = Guid.NewGuid()' LicenseType = LicenseType.Standard' OwnerName = "License Owner"' ExpirationDate = null }; " is 138.
Long Statement,Rhino.Licensing.AdminTool.Tests.Services,ProjectServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ProjectServiceTests.cs,Can_Load_Project_With_Licenses,The length of the statement  "            p.Product.IssuedLicenses.Add(new License { ExpirationDate = expirationDate' LicenseType = LicenseType.Trial' OwnerName = "John Doe" }); " is 135.
Long Statement,Rhino.Licensing.AdminTool.Tests.ViewModels,ProjectViewModelTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\ViewModels\ProjectViewModelTests.cs,Export_Selected_License,The length of the statement  "            _exportService.AssertWasCalled(x => x.Export(Arg.Is(vm.CurrentProject.Product)' Arg.Is(vm.SelectedLicense)' Arg<FileInfo>.Is.NotNull)); " is 135.
Long Statement,Rhino.Licensing.AdminTool.Tests.ViewModels,ProjectViewModelTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\ViewModels\ProjectViewModelTests.cs,CreateProjectViewModel,The length of the statement  "            return new ProjectViewModel(_projectService' _dialogService' _statusService' _exportService' _viewModelFactory' _windowManager); " is 128.
Long Statement,Rhino.Licensing.AdminTool.Tests.ViewModels,ShellViewModelTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\ViewModels\ShellViewModelTests.cs,CreateProjectViewModel,The length of the statement  "            return new ProjectViewModel(_projectService' _dialogService' _statusService' _exportService' _viewModelFactory' _windowManager); " is 128.
Magic Number,Rhino.Licensing.AdminTool.Tests.Dialogs,FileDialogTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Dialogs\FileDialogTests.cs,ShowDialog_Sets_Selected_Files,The following statement contains a magic number: Assert.Equal(2' model.FileNames.Count());
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,ExpirationDateConverterTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ExpirationDateConverterTests.cs,Convertes_Date_Using_Provided_Culture,The following statement contains a magic number: var value = converter.Convert(new DateTime(2000' 1' 1)' GetType()' null' culture);
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,ExpirationDateConverterTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ExpirationDateConverterTests.cs,Converts_Date_Using_Invariant_Culture_When_No_Culture_Provided,The following statement contains a magic number: var value = converter.Convert(new DateTime(2000' 1' 1)' GetType()' null' culture);
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,ExportServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ExportServiceTests.cs,Exports_LicenseInfo_To_File,The following statement contains a magic number: var license = new License { ID = Guid.NewGuid()' LicenseType = LicenseType.Standard' OwnerName = "License Owner"' ExpirationDate = new DateTime(2020' 1' 1) };
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,StatusServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\StatusServiceTests.cs,Can_Update_Status_Message,The following statement contains a magic number: _statusService.Update("Issued Licenses: {0}"' 10);
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,ProjectServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ProjectServiceTests.cs,Can_Load_Project_With_Licenses,The following statement contains a magic number: var expirationDate = new DateTime(2010' 5' 5);
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,ProjectServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ProjectServiceTests.cs,Can_Load_Project_With_Licenses,The following statement contains a magic number: var expirationDate = new DateTime(2010' 5' 5);
Magic Number,Rhino.Licensing.AdminTool.Tests.Services,ProjectServiceTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Services\ProjectServiceTests.cs,Can_Load_Project_With_Licenses,The following statement contains a magic number: var expirationDate = new DateTime(2010' 5' 5);
Magic Number,Rhino.Licensing.AdminTool.Tests.Startup,GuyWireTests,D:\research\architectureSmells\repos\ayende_rhino-licensing\Rhino.Licensing.AdminTool.Tests\Startup\GuyWireTests.cs,GuyWire_Registers_Correct_Components,The following statement contains a magic number: Assert.Equal(4' count);
