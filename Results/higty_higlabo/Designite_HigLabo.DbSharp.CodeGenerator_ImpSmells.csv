Implementation smell,Namespace,Class,File,Method,Description
Long Method,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,SetResultSetsList,The method has 113 lines of code.
Complex Method,HigLabo.DbSharp.CodeGenerator,DataConvertSqlScriptFile,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\CodeGenerator\SqlScript\DataConvertSqlScriptFile.cs,CreateBodyTextSqlServer,Cyclomatic complexity of the method is 8
Complex Method,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateClass,Cyclomatic complexity of the method is 10
Complex Method,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,Cyclomatic complexity of the method is 18
Complex Method,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateDataReaderCastCSharpCodeSqlServer,Cyclomatic complexity of the method is 17
Complex Method,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateDataReaderCastCSharpCodeMySql,Cyclomatic complexity of the method is 23
Complex Method,HigLabo.DbSharp.CodeGenerator,TableRecordClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableRecordClassSourceCodeFileFactory.cs,CreateSetValueMethod,Cyclomatic complexity of the method is 8
Complex Method,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameInsert,Cyclomatic complexity of the method is 8
Complex Method,HigLabo.DbSharp.CodeGenerator,TableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\TableStoredProcedureFactory.cs,CreateStoredProcedure,Cyclomatic complexity of the method is 10
Complex Method,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,Cyclomatic complexity of the method is 18
Complex Method,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,Cyclomatic complexity of the method is 13
Complex Method,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,Cyclomatic complexity of the method is 8
Complex Method,HigLabo.DbSharp.MetaData,MySqlDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\MySqlDatabaseSchemaReader.cs,SetResultSetsList,Cyclomatic complexity of the method is 14
Complex Method,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,SetResultSetsList,Cyclomatic complexity of the method is 20
Long Statement,HigLabo.DbSharp.CodeGenerator,ResultSetClassFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\Class\ResultSetClassFactory.cs,CreateResultSetToStringMethodBody,The length of the statement  "            yield return new CodeBlock(SourceCodeLanguage.CSharp' "sb.AppendLine(\"<{0}.{1}>\");"' this.StoredProcedureName' this.ResultSet.Name); " is 134.
Long Statement,HigLabo.DbSharp.CodeGenerator,ResultSetClassFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\Class\ResultSetClassFactory.cs,CreateResultSetToStringMethodBody,The length of the statement  "                yield return new CodeBlock(SourceCodeLanguage.CSharp' "sb.AppendFormat(\"{0}={1}\"' this.{0}); sb.AppendLine();"' parameter.Name' "{0}"); " is 137.
Long Statement,HigLabo.DbSharp.CodeGenerator,UserDefinedTableTypeRecordClassFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\Class\UserDefinedTableTypeRecordClassFactory.cs,CreateGetValuesMethodBody,The length of the statement  "                        yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (this.{1} != null) oo[{0}] = this.{1}.ToString();"' i' t.Columns[i].Name); " is 132.
Long Statement,HigLabo.DbSharp.CodeGenerator,ClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\ClassSourceCodeFileFactory.cs,AddPropertyAndField,The length of the statement  "                    p.Set.Body.Add(SourceCodeLanguage.CSharp' "this.SetPropertyValue(ref _{0}' value ?? \"\"' this.GetPropertyChangedEventHandler());"' pName); " is 139.
Long Statement,HigLabo.DbSharp.CodeGenerator,ClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\ClassSourceCodeFileFactory.cs,AddPropertyAndField,The length of the statement  "                    p.Set.Body.Add(SourceCodeLanguage.CSharp' "this.SetPropertyValue(ref _{0}' value' this.GetPropertyChangedEventHandler());"' pName); " is 131.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateClass,The length of the statement  "                    c.BaseClass = new TypeName(String.Format("StoredProcedureWithResultSetsList<{0}.{1}' {0}.ResultSetsList>"' sp.Name' rs.Name)); " is 126.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateConstructor,The length of the statement  "                    ct.Body.Add(SourceCodeLanguage.CSharp' "_CreateResultSetMethodList.Add(CreateCreateResultSetMethod<{0}>(this.SetResultSet));"' rs.Name); " is 136.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                case DatabaseServer.SqlServer: yield return new CodeBlock(SourceCodeLanguage.CSharp' "var db = new SqlServerDatabase(\"\");"); break; " is 133.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                case DatabaseServer.MySql: yield return new CodeBlock(SourceCodeLanguage.CSharp' "var db = new MySqlDatabase(\"\");"); break; " is 125.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                case DatabaseServer.Oracle: yield return new CodeBlock(SourceCodeLanguage.CSharp' "var db = new OracleDatabase(\"\");"); break; " is 127.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                case DatabaseServer.PostgreSql: yield return new CodeBlock(SourceCodeLanguage.CSharp' "var db = new PostgreSqlDatabase(\"\");"); break; " is 135.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                        case ParameterDirection.Input: yield return new CodeBlock(SourceCodeLanguage.CSharp' "p.Direction = ParameterDirection.Input;"); break; " is 135.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                        case ParameterDirection.InputOutput: yield return new CodeBlock(SourceCodeLanguage.CSharp' "p.Direction = ParameterDirection.InputOutput;"); break; " is 147.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                        case ParameterDirection.Output: yield return new CodeBlock(SourceCodeLanguage.CSharp' "p.Direction = ParameterDirection.Output;"); break; " is 137.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                        case ParameterDirection.ReturnValue: yield return new CodeBlock(SourceCodeLanguage.CSharp' "p.Direction = ParameterDirection.ReturnValue;"); break; " is 147.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateCreateCommandMethodBody,The length of the statement  "                cb.CodeBlocks.Add(new CodeBlock(SourceCodeLanguage.CSharp' "if (cm.Parameters[i].Value == null) cm.Parameters[i].Value = DBNull.Value;")); " is 138.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetOutputParameterValueMethodBody,The length of the statement  "                            yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (p.Value != DBNull.Value && p.Value != null) this.{0} = ((UInt64)p.Value != 0);" " is 138.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetOutputParameterValueMethodBody,The length of the statement  "                            yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (p.Value != DBNull.Value && p.Value != null) this.{0} = ({1})p.Value;" " is 128.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetOutputParameterValueMethodBody,The length of the statement  "                        yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (p.Value != DBNull.Value && p.Value != null) this.{0} = StoredProcedure.ToEnum<{1}>(p.Value as String) ?? this.{0};" " is 174.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetResultSetMethodBody,The length of the statement  "                        case SqlParameterConvertType.Default: code += String.Format("r.{0} = {1};"' parameter.Name' this.CreateDataReaderCastCSharpCode(parameter)); break; " is 147.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetResultSetMethodBody,The length of the statement  "                        case SqlParameterConvertType.Enum: code += String.Format("r.{0} = StoredProcedure.ToEnum<{1}>(reader[index] as String) ?? r.{0};"' parameter.Name' parameter.EnumName); break; " is 174.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetResultSetMethodBody,The length of the statement  "            cb.CodeBlocks.Add(new CodeBlock(SourceCodeLanguage.CSharp' "throw new StoredProcedureSchemaMismatchedException(this' index' ex);")); " is 132.
Long Statement,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateToStringMethodBody,The length of the statement  "                yield return new CodeBlock(SourceCodeLanguage.CSharp' "sb.AppendFormat(\"{0}={1}\"' this.{0}); sb.AppendLine();"' parameter.GetNameWithoutAtmark()' "{0}"); " is 155.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateSelectByPrimaryKeyOrNullMethod,The length of the statement  "            md.Body.Add(SourceCodeLanguage.CSharp' "return this.SelectByPrimaryKeyOrNull(this.GetDatabase()' {0});"' sb.ToString()); " is 120.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateSelectByPrimaryKeyMethod1,The length of the statement  "            md.Body.Add(SourceCodeLanguage.CSharp' "if (r == null) throw new TableRecordNotFoundException(Name' {0});"' sb.ToString()); " is 123.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateCreateStoredProcedureWithResultSetMethodBody,The length of the statement  "                ' String.Format("case TableStoredProcedureTypeWithResultSet.SelectByPrimaryKey: return this.CreateSelectByPrimaryKeyStoredProcedure(record);"' t.Name))); " is 153.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateSelectByPrimaryKeyStoredProcedureMethodBody,The length of the statement  "            yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (record.OldRecord == null) throw new OldRecordIsNullException();"); " is 125.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateUpdateStoredProcedureMethodBody,The length of the statement  "            yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (record.OldRecord == null) throw new OldRecordIsNullException();"); " is 125.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateDeleteStoredProcedureMethodBody,The length of the statement  "            yield return new CodeBlock(SourceCodeLanguage.CSharp' "if (record.OldRecord == null) throw new OldRecordIsNullException();"); " is 125.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateCreateDataTableMethod,The length of the statement  "                md.Body.Add(SourceCodeLanguage.CSharp' "dt.Columns.Add(\"@PK_{0}\"' typeof({1}));"' column.Name' column.GetClassNameText()); " is 124.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateCreateDataTableMethod,The length of the statement  "                md.Body.Add(SourceCodeLanguage.CSharp' "dt.Columns.Add(\"@{0}\"' typeof({1}));"' column.Name' column.GetClassNameText()); " is 121.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateSetDataRowMethodBody,The length of the statement  "            cb.CodeBlocks.Add(new CodeBlock(SourceCodeLanguage.CSharp' "if (record.OldRecord == null) throw new OldRecordIsNullException();")); " is 131.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateSetDataRowMethodBody,The length of the statement  "                cb.CodeBlocks.Add(new CodeBlock(SourceCodeLanguage.CSharp' "dataRow[\"@PK_{0}\"] = GetValueOrDBNull(record.OldRecord.{0});"' column.Name)); " is 139.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,CreateSetDataRowMethodBody,The length of the statement  "                yield return new CodeBlock(SourceCodeLanguage.CSharp' "dataRow[\"@{0}\"] = GetValueOrDBNull(record.{0});"' column.Name); " is 120.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableIRecordClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableIRecordClassSourceCodeFileFactory.cs,AddProperty,The length of the statement  "                @interface.Properties.Add(new InterfaceProperty(new TypeName(column.GetClassName())' column.GetNameWithoutAtmark()' true' true)); " is 129.
Long Statement,HigLabo.DbSharp.CodeGenerator,UserDefinedTableTypeSourceCodeFileClassFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\UserDefinedTableTypeSourceCodeFileClassFactory.cs,CreateDataTableMethodBody,The length of the statement  "                yield return new CodeBlock(SourceCodeLanguage.CSharp' "dt.Columns.Add(\"{0}\"' typeof({1}));"' column.Name' column.GetClassNameText()); " is 135.
Long Statement,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameSelectByPrimaryKey,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyColumns()' column => String.Format("PK_{0}"' column.GetDeclareParameterText())' "'"' true)); " is 132.
Long Statement,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameSelectByPrimaryKey,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyColumns()' column => String.Format("{0} = PK_{0}"' column.Name)' "and "' true)); " is 120.
Long Statement,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyOrTimestampColumns()' column => String.Format("PK_{0}"' column.GetDeclareParameterText())' "'"' true)); " is 143.
Long Statement,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyColumns()' column => String.Format("{0} = PK_{0}"' column.Name)' "and "' true)); " is 120.
Long Statement,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The length of the statement  "            sb.Append(CreateText(table.Columns.Where(column => column.CanUpdateValueColumn())' column => String.Format("T01.{0} = {0}"' column.Name)' "'"' true)); " is 150.
Long Statement,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameDelete,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyOrTimestampColumns()' column => String.Format("PK_{0}"' column.GetDeclareParameterText())' "'"' true)); " is 143.
Long Statement,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameSelectByPrimaryKey,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyColumns()' column => String.Format("@PK_{0}"' column.GetDeclareParameterText())' "'"' true)); " is 133.
Long Statement,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameSelectByPrimaryKey,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyColumns()' column => String.Format("[{0}] = @PK_{0}"' column.Name)' "and "' true)); " is 123.
Long Statement,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyOrTimestampColumns()' column => String.Format("@PK_{0}"' column.GetDeclareParameterText())' "'"' true)); " is 144.
Long Statement,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyColumns()' column => String.Format("@{0} = @PK_{0}"' column.Name)' "and "' true)); " is 122.
Long Statement,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The length of the statement  "            sb.Append(CreateText(table.Columns.Where(column => column.CanUpdateValueColumn())' column => String.Format("[{0}] = @{0}"' column.Name)' "'"' true)); " is 149.
Long Statement,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameDelete,The length of the statement  "            sb.Append(CreateText(table.GetPrimaryKeyOrTimestampColumns()' column => String.Format("@PK_{0}"' column.GetDeclareParameterText())' "'"' true)); " is 144.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\TableStoredProcedureFactory.cs,CreateTableStoredProcedures,The length of the statement  "                l.Add(this.CreateStoredProcedure(db' table' StoredProcedureType.SelectAll' this.CreateQueryOfTableNameSelectAll(table))); " is 121.
Long Statement,HigLabo.DbSharp.CodeGenerator,TableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\TableStoredProcedureFactory.cs,CreateTableStoredProcedures,The length of the statement  "                    l.Add(this.CreateStoredProcedure(db' table' StoredProcedureType.SelectByPrimaryKey' this.CreateQueryOfTableNameSelectByPrimaryKey(table))); " is 139.
Long Statement,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The length of the statement  "                    if (reader[columnLength] != DBNull.Value) c.Length = AppEnvironment.Settings.TypeConverter.ToInt32(reader[columnLength]); " is 121.
Long Statement,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The length of the statement  "                    if (reader[columnPrecision] != DBNull.Value) c.Precision = AppEnvironment.Settings.TypeConverter.ToInt32(reader[columnPrecision]); " is 130.
Long Statement,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetStoredProcedure,The length of the statement  "                if (reader.Read() == false) throw new InvalidOperationException(String.Format("Stored procedure {0} does not exist."' name)); " is 125.
Long Statement,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The length of the statement  "                    if (reader[parameterLength] != DBNull.Value) p.Length = AppEnvironment.Settings.TypeConverter.ToInt32(reader[parameterLength]); " is 127.
Long Statement,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The length of the statement  "                    if (reader[parameterPrecision] != DBNull.Value) p.Precision = AppEnvironment.Settings.TypeConverter.ToInt32(reader[parameterPrecision]); " is 136.
Long Statement,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The length of the statement  "                    if (reader[parameterScale] != DBNull.Value) p.Scale = AppEnvironment.Settings.TypeConverter.ToInt32(reader[parameterScale]); " is 124.
Long Statement,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaQueryBuilder,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetColumns,The length of the statement  "'convert(bit' COLUMNPROPERTY(OBJECT_ID(QUOTENAME(T01.TABLE_SCHEMA) + '.' + QUOTENAME(T01.TABLE_NAME))' T01.COLUMN_NAME' 'IsIdentity')) as IsIdentity " is 148.
Long Statement,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaQueryBuilder,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetColumns,The length of the statement  "'convert(bit' COLUMNPROPERTY(OBJECT_ID(QUOTENAME(T01.TABLE_SCHEMA) + '.' + QUOTENAME(T01.TABLE_NAME))' T01.COLUMN_NAME' 'IsRowGuidCol')) as IsRowGuid " is 149.
Magic Number,HigLabo.DbSharp.CodeGenerator,DataConvertSqlScriptFile,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\CodeGenerator\SqlScript\DataConvertSqlScriptFile.cs,CreateBodyTextSqlServer,The following statement contains a magic number: StringBuilder sb = new StringBuilder(512);
Magic Number,HigLabo.DbSharp.CodeGenerator,SqlScriptFileGenerator,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\CodeGenerator\SqlScript\SqlScriptFileGenerator.cs,CreateTableStoredProcedureSqlScriptFile,The following statement contains a magic number: StringBuilder sb = new StringBuilder(1024);
Magic Number,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateSetResultSetsListMethodBody,The following statement contains a magic number: var sb = new StringBuilder(128);
Magic Number,HigLabo.DbSharp.CodeGenerator,StoredProcedureClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\StoredProcedureClassSourceCodeFileFactory.cs,CreateMergeMethodBody,The following statement contains a magic number: var sb = new StringBuilder(128);
Magic Number,HigLabo.DbSharp.CodeGenerator,TableClassSourceCodeFileFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SourceCodeFactory\SourceCode\TableClassSourceCodeFileFactory.cs,ToCamelCase,The following statement contains a magic number: value.Length == 2
Magic Number,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameSelectByPrimaryKey,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameInsert,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateQueryOfTableNameDelete,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,MySqlTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\MySqlTableStoredProcedureFactory.cs,CreateWhereQuery,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameSelectByPrimaryKey,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameInsert,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameUpdate,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateQueryOfTableNameDelete,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp.CodeGenerator,SqlServerTableStoredProcedureFactory,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\TableStoredProcedureFactory\SqlServerTableStoredProcedureFactory.cs,CreateWhereQuery,The following statement contains a magic number: StringBuilder sb = new StringBuilder(32);
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case SqlServer2012DbType.BigInt:                      return 1;                    case SqlServer2012DbType.Binary:                  case SqlServer2012DbType.Image:                  case SqlServer2012DbType.Timestamp:                  case SqlServer2012DbType.VarBinary:                      return new Byte[0];                    case SqlServer2012DbType.Bit:                      return true;                    case SqlServer2012DbType.Char:                  case SqlServer2012DbType.NChar:                  case SqlServer2012DbType.NText:                  case SqlServer2012DbType.NVarChar:                  case SqlServer2012DbType.Text:                  case SqlServer2012DbType.VarChar:                      return "a";                  case SqlServer2012DbType.Xml:                      return "<xml></xml>";                    case SqlServer2012DbType.DateTime:                  case SqlServer2012DbType.SmallDateTime:                  case SqlServer2012DbType.Date:                  case SqlServer2012DbType.DateTime2:                      return new DateTime(2000' 1' 1);                    case SqlServer2012DbType.Time:                      return new TimeSpan(2' 0' 0);                    case SqlServer2012DbType.Decimal:                  case SqlServer2012DbType.Money:                  case SqlServer2012DbType.SmallMoney:                      return 1;                    case SqlServer2012DbType.Float:                      return 1;                    case SqlServer2012DbType.Int:                      return 1;                    case SqlServer2012DbType.Real:                      return 1;                    case SqlServer2012DbType.UniqueIdentifier:                      return Guid.NewGuid();                    case SqlServer2012DbType.SmallInt:                      return 1;                    case SqlServer2012DbType.TinyInt:                      return 1;                    case SqlServer2012DbType.Variant:                  case SqlServer2012DbType.Udt:                      return new Object();                    case SqlServer2012DbType.Structured:                      return new DataTable();                    case SqlServer2012DbType.DateTimeOffset:                      return new DateTimeOffset(2000' 1' 1' 0' 0' 0' TimeSpan.FromHours(9));                    default: throw new ArgumentException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case SqlServer2012DbType.BigInt:                      return 1;                    case SqlServer2012DbType.Binary:                  case SqlServer2012DbType.Image:                  case SqlServer2012DbType.Timestamp:                  case SqlServer2012DbType.VarBinary:                      return new Byte[0];                    case SqlServer2012DbType.Bit:                      return true;                    case SqlServer2012DbType.Char:                  case SqlServer2012DbType.NChar:                  case SqlServer2012DbType.NText:                  case SqlServer2012DbType.NVarChar:                  case SqlServer2012DbType.Text:                  case SqlServer2012DbType.VarChar:                      return "a";                  case SqlServer2012DbType.Xml:                      return "<xml></xml>";                    case SqlServer2012DbType.DateTime:                  case SqlServer2012DbType.SmallDateTime:                  case SqlServer2012DbType.Date:                  case SqlServer2012DbType.DateTime2:                      return new DateTime(2000' 1' 1);                    case SqlServer2012DbType.Time:                      return new TimeSpan(2' 0' 0);                    case SqlServer2012DbType.Decimal:                  case SqlServer2012DbType.Money:                  case SqlServer2012DbType.SmallMoney:                      return 1;                    case SqlServer2012DbType.Float:                      return 1;                    case SqlServer2012DbType.Int:                      return 1;                    case SqlServer2012DbType.Real:                      return 1;                    case SqlServer2012DbType.UniqueIdentifier:                      return Guid.NewGuid();                    case SqlServer2012DbType.SmallInt:                      return 1;                    case SqlServer2012DbType.TinyInt:                      return 1;                    case SqlServer2012DbType.Variant:                  case SqlServer2012DbType.Udt:                      return new Object();                    case SqlServer2012DbType.Structured:                      return new DataTable();                    case SqlServer2012DbType.DateTimeOffset:                      return new DateTimeOffset(2000' 1' 1' 0' 0' 0' TimeSpan.FromHours(9));                    default: throw new ArgumentException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case SqlServer2012DbType.BigInt:                      return 1;                    case SqlServer2012DbType.Binary:                  case SqlServer2012DbType.Image:                  case SqlServer2012DbType.Timestamp:                  case SqlServer2012DbType.VarBinary:                      return new Byte[0];                    case SqlServer2012DbType.Bit:                      return true;                    case SqlServer2012DbType.Char:                  case SqlServer2012DbType.NChar:                  case SqlServer2012DbType.NText:                  case SqlServer2012DbType.NVarChar:                  case SqlServer2012DbType.Text:                  case SqlServer2012DbType.VarChar:                      return "a";                  case SqlServer2012DbType.Xml:                      return "<xml></xml>";                    case SqlServer2012DbType.DateTime:                  case SqlServer2012DbType.SmallDateTime:                  case SqlServer2012DbType.Date:                  case SqlServer2012DbType.DateTime2:                      return new DateTime(2000' 1' 1);                    case SqlServer2012DbType.Time:                      return new TimeSpan(2' 0' 0);                    case SqlServer2012DbType.Decimal:                  case SqlServer2012DbType.Money:                  case SqlServer2012DbType.SmallMoney:                      return 1;                    case SqlServer2012DbType.Float:                      return 1;                    case SqlServer2012DbType.Int:                      return 1;                    case SqlServer2012DbType.Real:                      return 1;                    case SqlServer2012DbType.UniqueIdentifier:                      return Guid.NewGuid();                    case SqlServer2012DbType.SmallInt:                      return 1;                    case SqlServer2012DbType.TinyInt:                      return 1;                    case SqlServer2012DbType.Variant:                  case SqlServer2012DbType.Udt:                      return new Object();                    case SqlServer2012DbType.Structured:                      return new DataTable();                    case SqlServer2012DbType.DateTimeOffset:                      return new DateTimeOffset(2000' 1' 1' 0' 0' 0' TimeSpan.FromHours(9));                    default: throw new ArgumentException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case SqlServer2012DbType.BigInt:                      return 1;                    case SqlServer2012DbType.Binary:                  case SqlServer2012DbType.Image:                  case SqlServer2012DbType.Timestamp:                  case SqlServer2012DbType.VarBinary:                      return new Byte[0];                    case SqlServer2012DbType.Bit:                      return true;                    case SqlServer2012DbType.Char:                  case SqlServer2012DbType.NChar:                  case SqlServer2012DbType.NText:                  case SqlServer2012DbType.NVarChar:                  case SqlServer2012DbType.Text:                  case SqlServer2012DbType.VarChar:                      return "a";                  case SqlServer2012DbType.Xml:                      return "<xml></xml>";                    case SqlServer2012DbType.DateTime:                  case SqlServer2012DbType.SmallDateTime:                  case SqlServer2012DbType.Date:                  case SqlServer2012DbType.DateTime2:                      return new DateTime(2000' 1' 1);                    case SqlServer2012DbType.Time:                      return new TimeSpan(2' 0' 0);                    case SqlServer2012DbType.Decimal:                  case SqlServer2012DbType.Money:                  case SqlServer2012DbType.SmallMoney:                      return 1;                    case SqlServer2012DbType.Float:                      return 1;                    case SqlServer2012DbType.Int:                      return 1;                    case SqlServer2012DbType.Real:                      return 1;                    case SqlServer2012DbType.UniqueIdentifier:                      return Guid.NewGuid();                    case SqlServer2012DbType.SmallInt:                      return 1;                    case SqlServer2012DbType.TinyInt:                      return 1;                    case SqlServer2012DbType.Variant:                  case SqlServer2012DbType.Udt:                      return new Object();                    case SqlServer2012DbType.Structured:                      return new DataTable();                    case SqlServer2012DbType.DateTimeOffset:                      return new DateTimeOffset(2000' 1' 1' 0' 0' 0' TimeSpan.FromHours(9));                    default: throw new ArgumentException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case MySqlDbType.Binary:                  case MySqlDbType.Blob:                  case MySqlDbType.TinyBlob:                  case MySqlDbType.MediumBlob:                  case MySqlDbType.LongBlob:                  case MySqlDbType.Byte:                  case MySqlDbType.VarBinary:                      return new Byte[0];                  case MySqlDbType.Bit:                      return true;                  case MySqlDbType.Date:                  case MySqlDbType.Newdate:                  case MySqlDbType.DateTime:                      return new DateTime(2000' 1' 1);                  case MySqlDbType.Decimal:                  case MySqlDbType.Enum:                      return "a";                  case MySqlDbType.Geometry:                      return new MySqlGeometry(40.735031' -73.768387);                  case MySqlDbType.Guid:                      return Guid.NewGuid();                  case MySqlDbType.Double:                  case MySqlDbType.Float:                  case MySqlDbType.Int16:                  case MySqlDbType.Int24:                  case MySqlDbType.Int32:                  case MySqlDbType.Int64:                  case MySqlDbType.UByte:                  case MySqlDbType.UInt16:                  case MySqlDbType.UInt24:                  case MySqlDbType.UInt32:                  case MySqlDbType.UInt64:                  case MySqlDbType.NewDecimal:                      return 1;                  case MySqlDbType.Set:                      return "a";                  case MySqlDbType.Time:                      return new TimeSpan(2' 0' 0);                  case MySqlDbType.Timestamp:                      return null;                  case MySqlDbType.LongText:                  case MySqlDbType.MediumText:                  case MySqlDbType.String:                  case MySqlDbType.Text:                  case MySqlDbType.TinyText:                  case MySqlDbType.VarChar:                  case MySqlDbType.VarString:                      return "a";                  case MySqlDbType.Year:                      return 2000;                  default: throw new InvalidOperationException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case MySqlDbType.Binary:                  case MySqlDbType.Blob:                  case MySqlDbType.TinyBlob:                  case MySqlDbType.MediumBlob:                  case MySqlDbType.LongBlob:                  case MySqlDbType.Byte:                  case MySqlDbType.VarBinary:                      return new Byte[0];                  case MySqlDbType.Bit:                      return true;                  case MySqlDbType.Date:                  case MySqlDbType.Newdate:                  case MySqlDbType.DateTime:                      return new DateTime(2000' 1' 1);                  case MySqlDbType.Decimal:                  case MySqlDbType.Enum:                      return "a";                  case MySqlDbType.Geometry:                      return new MySqlGeometry(40.735031' -73.768387);                  case MySqlDbType.Guid:                      return Guid.NewGuid();                  case MySqlDbType.Double:                  case MySqlDbType.Float:                  case MySqlDbType.Int16:                  case MySqlDbType.Int24:                  case MySqlDbType.Int32:                  case MySqlDbType.Int64:                  case MySqlDbType.UByte:                  case MySqlDbType.UInt16:                  case MySqlDbType.UInt24:                  case MySqlDbType.UInt32:                  case MySqlDbType.UInt64:                  case MySqlDbType.NewDecimal:                      return 1;                  case MySqlDbType.Set:                      return "a";                  case MySqlDbType.Time:                      return new TimeSpan(2' 0' 0);                  case MySqlDbType.Timestamp:                      return null;                  case MySqlDbType.LongText:                  case MySqlDbType.MediumText:                  case MySqlDbType.String:                  case MySqlDbType.Text:                  case MySqlDbType.TinyText:                  case MySqlDbType.VarChar:                  case MySqlDbType.VarString:                      return "a";                  case MySqlDbType.Year:                      return 2000;                  default: throw new InvalidOperationException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case MySqlDbType.Binary:                  case MySqlDbType.Blob:                  case MySqlDbType.TinyBlob:                  case MySqlDbType.MediumBlob:                  case MySqlDbType.LongBlob:                  case MySqlDbType.Byte:                  case MySqlDbType.VarBinary:                      return new Byte[0];                  case MySqlDbType.Bit:                      return true;                  case MySqlDbType.Date:                  case MySqlDbType.Newdate:                  case MySqlDbType.DateTime:                      return new DateTime(2000' 1' 1);                  case MySqlDbType.Decimal:                  case MySqlDbType.Enum:                      return "a";                  case MySqlDbType.Geometry:                      return new MySqlGeometry(40.735031' -73.768387);                  case MySqlDbType.Guid:                      return Guid.NewGuid();                  case MySqlDbType.Double:                  case MySqlDbType.Float:                  case MySqlDbType.Int16:                  case MySqlDbType.Int24:                  case MySqlDbType.Int32:                  case MySqlDbType.Int64:                  case MySqlDbType.UByte:                  case MySqlDbType.UInt16:                  case MySqlDbType.UInt24:                  case MySqlDbType.UInt32:                  case MySqlDbType.UInt64:                  case MySqlDbType.NewDecimal:                      return 1;                  case MySqlDbType.Set:                      return "a";                  case MySqlDbType.Time:                      return new TimeSpan(2' 0' 0);                  case MySqlDbType.Timestamp:                      return null;                  case MySqlDbType.LongText:                  case MySqlDbType.MediumText:                  case MySqlDbType.String:                  case MySqlDbType.Text:                  case MySqlDbType.TinyText:                  case MySqlDbType.VarChar:                  case MySqlDbType.VarString:                      return "a";                  case MySqlDbType.Year:                      return 2000;                  default: throw new InvalidOperationException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case MySqlDbType.Binary:                  case MySqlDbType.Blob:                  case MySqlDbType.TinyBlob:                  case MySqlDbType.MediumBlob:                  case MySqlDbType.LongBlob:                  case MySqlDbType.Byte:                  case MySqlDbType.VarBinary:                      return new Byte[0];                  case MySqlDbType.Bit:                      return true;                  case MySqlDbType.Date:                  case MySqlDbType.Newdate:                  case MySqlDbType.DateTime:                      return new DateTime(2000' 1' 1);                  case MySqlDbType.Decimal:                  case MySqlDbType.Enum:                      return "a";                  case MySqlDbType.Geometry:                      return new MySqlGeometry(40.735031' -73.768387);                  case MySqlDbType.Guid:                      return Guid.NewGuid();                  case MySqlDbType.Double:                  case MySqlDbType.Float:                  case MySqlDbType.Int16:                  case MySqlDbType.Int24:                  case MySqlDbType.Int32:                  case MySqlDbType.Int64:                  case MySqlDbType.UByte:                  case MySqlDbType.UInt16:                  case MySqlDbType.UInt24:                  case MySqlDbType.UInt32:                  case MySqlDbType.UInt64:                  case MySqlDbType.NewDecimal:                      return 1;                  case MySqlDbType.Set:                      return "a";                  case MySqlDbType.Time:                      return new TimeSpan(2' 0' 0);                  case MySqlDbType.Timestamp:                      return null;                  case MySqlDbType.LongText:                  case MySqlDbType.MediumText:                  case MySqlDbType.String:                  case MySqlDbType.Text:                  case MySqlDbType.TinyText:                  case MySqlDbType.VarChar:                  case MySqlDbType.VarString:                      return "a";                  case MySqlDbType.Year:                      return 2000;                  default: throw new InvalidOperationException();              }
Magic Number,HigLabo.DbSharp,DataTypeExtensions,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\DataTypeExtensions.cs,GetParameterValue,The following statement contains a magic number: switch (sqlDbType)              {                  case MySqlDbType.Binary:                  case MySqlDbType.Blob:                  case MySqlDbType.TinyBlob:                  case MySqlDbType.MediumBlob:                  case MySqlDbType.LongBlob:                  case MySqlDbType.Byte:                  case MySqlDbType.VarBinary:                      return new Byte[0];                  case MySqlDbType.Bit:                      return true;                  case MySqlDbType.Date:                  case MySqlDbType.Newdate:                  case MySqlDbType.DateTime:                      return new DateTime(2000' 1' 1);                  case MySqlDbType.Decimal:                  case MySqlDbType.Enum:                      return "a";                  case MySqlDbType.Geometry:                      return new MySqlGeometry(40.735031' -73.768387);                  case MySqlDbType.Guid:                      return Guid.NewGuid();                  case MySqlDbType.Double:                  case MySqlDbType.Float:                  case MySqlDbType.Int16:                  case MySqlDbType.Int24:                  case MySqlDbType.Int32:                  case MySqlDbType.Int64:                  case MySqlDbType.UByte:                  case MySqlDbType.UInt16:                  case MySqlDbType.UInt24:                  case MySqlDbType.UInt32:                  case MySqlDbType.UInt64:                  case MySqlDbType.NewDecimal:                      return 1;                  case MySqlDbType.Set:                      return "a";                  case MySqlDbType.Time:                      return new TimeSpan(2' 0' 0);                  case MySqlDbType.Timestamp:                      return null;                  case MySqlDbType.LongText:                  case MySqlDbType.MediumText:                  case MySqlDbType.String:                  case MySqlDbType.Text:                  case MySqlDbType.TinyText:                  case MySqlDbType.VarChar:                  case MySqlDbType.VarString:                      return "a";                  case MySqlDbType.Year:                      return 2000;                  default: throw new InvalidOperationException();              }
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetTables,The following statement contains a magic number: o.LastAlteredTime = reader.GetDateTime(2);
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetTable,The following statement contains a magic number: t.LastAlteredTime = reader.GetDateTime(2);
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 IsPrimaryKey = 2;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 dbType = 3;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 columnLength = 4;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 columnPrecision = 5;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 columnScale = 6;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 allowNull = 7;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 IsIdentity = 8;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 IsRowGuidCol = 9;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 udtTypeName = 10;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetColumns,The following statement contains a magic number: Int32 enumValues = 11;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetStoredProcedures,The following statement contains a magic number: Int32 createTime = 2;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetStoredProcedures,The following statement contains a magic number: Int32 lastAlteredTime = 3;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetStoredProcedure,The following statement contains a magic number: Int32 createTime = 2;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetStoredProcedure,The following statement contains a magic number: Int32 lastAlteredTime = 3;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 dbType = 2;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 parameterLength = 3;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 parameterPrecision = 4;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 parameterScale = 5;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 isOutput = 6;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 userTableTypeName = 7;
Magic Number,HigLabo.DbSharp.MetaData,DatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\DatabaseSchemaReader.cs,GetParameters,The following statement contains a magic number: Int32 udtTypeName = 8;
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: c.UdtTypeName = reader.GetString(6);
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: c.Length = reader.GetInt16(2);
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: reader[4] != DBNull.Value
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: c.Precision = reader.GetByte(3);
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: reader[5] != DBNull.Value
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: c.Scale = reader.GetByte(4);
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: reader[6] != DBNull.Value
Magic Number,HigLabo.DbSharp.MetaData,SqlServerDatabaseSchemaReader,D:\research\architectureSmells\repos\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.CodeGenerator\SchemaReader\SqlServerDatabaseSchemaReader.cs,GetUserDefinedTableTypeColumns,The following statement contains a magic number: c.AllowNull = reader.GetBoolean(5);
