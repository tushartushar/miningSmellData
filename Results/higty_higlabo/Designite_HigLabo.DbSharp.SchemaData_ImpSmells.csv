Implementation smell,Namespace,Class,File,Method,Description
Complex Method,HigLabo.DbSharp.MetaData,ClassNameTypeExtensions,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\ClassNameType.cs,ToType,Cyclomatic complexity of the method is 25
Complex Method,HigLabo.DbSharp.MetaData,ClassNameTypeExtensions,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\ClassNameType.cs,ToClassNameString,Cyclomatic complexity of the method is 25
Complex Method,HigLabo.DbSharp.MetaData,ClassNameTypeExtensions,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\ClassNameType.cs,IsStructure,Cyclomatic complexity of the method is 26
Complex Method,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetDeclareParameterText,Cyclomatic complexity of the method is 21
Complex Method,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetDeclareTypeName,Cyclomatic complexity of the method is 11
Complex Method,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetClassName,Cyclomatic complexity of the method is 9
Complex Method,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetClassNameType,Cyclomatic complexity of the method is 12
Complex Method,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetClassNameType,Cyclomatic complexity of the method is 32
Complex Method,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetClassNameType,Cyclomatic complexity of the method is 39
Complex Method,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,IsTimestamp,Cyclomatic complexity of the method is 8
Complex Method,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareLength,Cyclomatic complexity of the method is 9
Complex Method,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareScale,Cyclomatic complexity of the method is 9
Complex Method,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclarePrecisionScale,Cyclomatic complexity of the method is 9
Complex Method,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareUnsigned,Cyclomatic complexity of the method is 8
Complex Method,HigLabo.DbSharp.MetaData,SqlInputParameter,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\SqlInputParameter.cs,GetDeclareTypeName,Cyclomatic complexity of the method is 9
Long Parameter List,System.ComponentModel,INotifyPropertyChangedExtensions,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Core\INotifyPropertyChangedExtensions.cs,SetPropertyValue,The method has 5 parameters.
Long Identifier,HigLabo.DbSharp.MetaData,Table,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\Table.cs,GetColumns,The length of the parameter includeServerAutomaticallyInsertValueColumn is 43.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,IsTimestamp,The length of the statement  "		return this.OracleServerDbType.Value == OracleDbType.TimeStamp || this.OracleServerDbType.Value == OracleDbType.TimeStampLTZ || this.OracleServerDbType.Value == OracleDbType.TimeStampTZ; " is 186.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,IsTimestamp,The length of the statement  "		return this.PostgreSqlServerDbType.Value == NpgsqlDbType.Timestamp || this.PostgreSqlServerDbType.Value == NpgsqlDbType.TimestampTZ; " is 132.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareLength,The length of the statement  "		return type == SqlServer2012DbType.Char || type == SqlServer2012DbType.NChar || type == SqlServer2012DbType.VarChar || type == SqlServer2012DbType.NVarChar || type == SqlServer2012DbType.Binary || type == SqlServer2012DbType.VarBinary || type == SqlServer2012DbType.Variant; " is 274.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareLength,The length of the statement  "		return type == MySqlDbType.String || type == MySqlDbType.Text || type == MySqlDbType.Blob || type == MySqlDbType.VarChar || type == MySqlDbType.VarString || type == MySqlDbType.Binary || type == MySqlDbType.VarBinary; " is 217.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareScale,The length of the statement  "		return type == SqlServer2012DbType.Time || type == SqlServer2012DbType.DateTime2 || type == SqlServer2012DbType.DateTimeOffset; " is 127.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareScale,The length of the statement  "		return type == MySqlDbType.Date || type == MySqlDbType.Newdate || type == MySqlDbType.DateTime || type == MySqlDbType.Time || type == MySqlDbType.Year; " is 151.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclarePrecisionScale,The length of the statement  "		return type == MySqlDbType.Decimal || type == MySqlDbType.NewDecimal || type == MySqlDbType.Double || type == MySqlDbType.Float; " is 128.
Long Statement,HigLabo.DbSharp.MetaData,DbType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DbType.cs,CanDeclareUnsigned,The length of the statement  "		return type == MySqlDbType.UByte || type == MySqlDbType.UInt16 || type == MySqlDbType.UInt24 || type == MySqlDbType.UInt32 || type == MySqlDbType.UInt64; " is 153.
Long Statement,HigLabo.DbSharp.MetaData,Table,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\Table.cs,GetColumns,The length of the statement  "			return this.Columns.Where (el => el.IsPrimaryKey == primaryKey.Value && el.IsServerAutomaticallyInsertValueColumn () == false); " is 127.
Magic Number,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetDeclareParameterText,The following statement contains a magic number: switch (this.DbType.DatabaseServer) {  case DatabaseServer.SqlServer:  #region   {  	var tp = this.DbType;  	if (tp.CanDeclareLength () == true && this.Length.HasValue == true) {  		if (this.Length > 8000 || this.Length == -1) {  			return String.Format ("{0} {1} (max)"' this.Name' this.GetDeclareTypeName ());  		} else if (this.Length > 0) {  			return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Length);  		}  	} else if (tp.CanDeclarePrecisionScale () == true && this.Precision.HasValue == true) {  		if (this.Scale.HasValue == true) {  			return String.Format ("{0} {1} ({2}' {3})"' this.Name' this.GetDeclareTypeName ()' this.Precision' this.Scale);  		}  		return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Precision);  	} else if (tp.CanDeclareScale () == true && this.Scale > 0) {  		return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Scale);  	}  	return String.Format ("{0} {1}"' this.Name' this.GetDeclareTypeName ());  }  #endregion  case DatabaseServer.MySql:  #region   {  	var tp = this.DbType;  	if (tp.CanDeclareLength () == true && this.Length.HasValue == true) {  		return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Length);  	} else if (tp.CanDeclarePrecisionScale () == true && this.Precision.HasValue == true) {  		if (this.Scale.HasValue == true) {  			return String.Format ("{0} {1} ({2}' {3})"' this.Name' this.GetDeclareTypeName ()' this.Precision' this.Scale);  		}  		return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Precision);  	} else if (tp.CanDeclareScale () == true && this.Scale > 0) {  		return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Scale);  	}  	//Unsigned type are UIntX and it does not have length'precision'scale.  	if (tp.CanDeclareUnsigned () == true) {  		return String.Format ("{0} {1} unsigned"' this.Name' this.GetDeclareTypeName ());  	}  	if (tp.MySqlServerDbType.Value == MySqlDbType.Year) {  		return String.Format ("{0} year(4)"' this.Name);  	}  	if (tp.MySqlServerDbType.Value == MySqlDbType.Enum || tp.MySqlServerDbType.Value == MySqlDbType.Set) {  		return String.Format ("{0} {1}"' this.Name' this.EnumValues);  	}  	return String.Format ("{0} {1}"' this.Name' this.GetDeclareTypeName ());  }  #endregion  case DatabaseServer.Oracle:  case DatabaseServer.PostgreSql:  default:  	throw new InvalidOperationException ();  }  
Magic Number,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetDeclareParameterText,The following statement contains a magic number: if (tp.CanDeclareLength () == true && this.Length.HasValue == true) {  	if (this.Length > 8000 || this.Length == -1) {  		return String.Format ("{0} {1} (max)"' this.Name' this.GetDeclareTypeName ());  	} else if (this.Length > 0) {  		return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Length);  	}  } else if (tp.CanDeclarePrecisionScale () == true && this.Precision.HasValue == true) {  	if (this.Scale.HasValue == true) {  		return String.Format ("{0} {1} ({2}' {3})"' this.Name' this.GetDeclareTypeName ()' this.Precision' this.Scale);  	}  	return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Precision);  } else if (tp.CanDeclareScale () == true && this.Scale > 0) {  	return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Scale);  }  
Magic Number,HigLabo.DbSharp.MetaData,DataType,F:\newReposMay17\higty_higlabo\Tools\DbSharp\HigLabo.DbSharp.SchemaData\Version1.0\DataType.cs,GetDeclareParameterText,The following statement contains a magic number: if (this.Length > 8000 || this.Length == -1) {  	return String.Format ("{0} {1} (max)"' this.Name' this.GetDeclareTypeName ());  } else if (this.Length > 0) {  	return String.Format ("{0} {1} ({2})"' this.Name' this.GetDeclareTypeName ()' this.Length);  }  
