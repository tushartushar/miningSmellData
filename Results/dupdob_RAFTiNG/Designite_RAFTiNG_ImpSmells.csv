Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RAFTiNG,Node,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\Node.cs,SequencedSwitch,Cyclomatic complexity of the method is 12
Long Statement,RAFTiNG,LogExtensions,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\LogExtensions.cs,TraceFormat,The length of the statement  "	logger.Logger.Log (MethodBase.GetCurrentMethod ().DeclaringType' Level.Trace' string.Format (format' formatItems)' null); " is 121.
Long Statement,RAFTiNG.Messages,AppendEntries,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\Messages\AppendEntries.cs,ToString,The length of the statement  "	return string.Format ("AppendEntries: LeaderId: {1} (Term {0})' PrevLog Index and Term: {2}' {3}' Commit {4}' Entries: {5}"' this.leaderTerm' this.leaderId' this.prevLogIndex' this.prevLogTerm' this.commitIndex' this.entries == null ? 0 : this.entries.Length); " is 260.
Long Statement,RAFTiNG.Messages,GrantVote,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\Messages\GrantVote.cs,ToString,The length of the statement  "	return string.Format ("GrantVote: Voter {1} {0} (VoterTerm: {2})"' this.VoteGranted ? "voted" : "did not vote"' this.VoterId' this.VoterTerm); " is 142.
Long Statement,RAFTiNG.Messages,RequestVote,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\Messages\RequestVote.cs,ToString,The length of the statement  "	return string.Format ("RequestVote: Candidate: {1} (Term {0}' LastLogEntry Index and Term: {2}' {3})"' this.Term' this.CandidateId' this.LastLogIndex' this.LastLogTerm); " is 169.
Long Statement,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,EnterState,The length of the statement  "	var request = new RequestVote (nextTerm' this.Node.Id' this.Node.State.LastPersistedIndex' this.Node.State.LastPersistedTerm); " is 126.
Long Statement,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,ProcessVoteRequest,The length of the statement  "		this.Logger.DebugFormat ("Received vote request from node with higher term ({0}'s term is {1}' our {2}). Resigning."' request.CandidateId' request.Term' currentTerm); " is 166.
Long Statement,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,ProcessVoteRequest,The length of the statement  "	if (request.Term == this.CurrentTerm && !this.Node.State.LogIsBetterOrSameAs (request.LastLogTerm' request.LastLogIndex)) { " is 123.
Long Statement,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,ProcessVoteRequest,The length of the statement  "		this.Logger.DebugFormat ("Received vote request from node with better log ({0}'s log is at {1}' our at {2}). Resigning."' request.LastLogIndex' this.Node.LastCommit' currentTerm); " is 179.
Long Statement,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,ProcessVote,The length of the statement  "		this.Logger.DebugFormat ("Received a vote from a node with a higher term. Dropping candidate status down. Message discarded {0}."' vote); " is 137.
Long Statement,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,ProcessVote,The length of the statement  "		this.Logger.WarnFormat ("We received a second vote from {0}. Initial vote: {1}. Second vote: {2}."' vote.VoterId' this.voteReceived [vote.VoterId]' vote); " is 154.
Long Statement,RAFTiNG.States,Leader,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Leader.cs,EnterState,The length of the statement  "		this.states [otherNode] = new LogReplicationAgent (TimeSpan.FromMilliseconds (this.Node.Settings.TimeoutInMs / 2.0)' this.Node.State.LogEntries.Count' otherNode' this.Logger); " is 175.
Long Statement,RAFTiNG.States,Leader,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Leader.cs,ProcessVoteRequest,The length of the statement  "		this.Logger.DebugFormat ("Received a vote request from a node with a higher term ({0}'s term is {1}' our {2}). Stepping down and process vote."' request.CandidateId' request.Term' this.Node.State.CurrentTerm); " is 209.
Magic Number,RAFTiNG.States,Candidate,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Candidate.cs,EnterState,The following statement contains a magic number: this.ResetTimeout (.3);  
Magic Number,RAFTiNG.States,Follower,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Follower.cs,EnterState,The following statement contains a magic number: this.ResetTimeout (.2);  
Magic Number,RAFTiNG.States,Follower,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Follower.cs,ProcessVoteRequest,The following statement contains a magic number: if (request.Term < currentTerm) {  	// requesting a vote for a node that has less recent information  	// we decline  	this.Logger.TraceFormat ("Vote request from node with lower term. Declined {0}."' request);  	vote = false;  } else {  	if (request.Term > currentTerm) {  		this.Logger.DebugFormat ("Vote request from node with higher term. Updating our term. {0}"' request);  		// we need to upgrade our term  		this.Node.State.CurrentTerm = request.Term;  	}  	// we check how complete is the log ?  	if (this.Node.State.LogIsBetterOrSameAs (request.LastLogTerm' request.LastLogIndex)) {  		// our log is better than the candidate's  		vote = false;  		this.Logger.TraceFormat ("Vote request from node with less information. We do not vote. Message: {0}."' request);  	} else if (string.IsNullOrEmpty (this.Node.State.VotedFor) || this.Node.State.VotedFor == request.CandidateId) {  		// grant vote  		this.Logger.TraceFormat ("We do vote for node {1}. Message: {0}."' request' request.CandidateId);  		vote = true;  		this.Node.State.VotedFor = request.CandidateId;  		// as we did vote' we are ok to wait longer  		this.ResetTimeout (0' 2);  	} else {  		// we already voted for someone  		vote = false;  		this.Logger.TraceFormat ("We already voted. We do not grant vote. Message: {0}."' request);  	}  }  
Magic Number,RAFTiNG.States,Follower,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Follower.cs,ProcessVoteRequest,The following statement contains a magic number: if (this.Node.State.LogIsBetterOrSameAs (request.LastLogTerm' request.LastLogIndex)) {  	// our log is better than the candidate's  	vote = false;  	this.Logger.TraceFormat ("Vote request from node with less information. We do not vote. Message: {0}."' request);  } else if (string.IsNullOrEmpty (this.Node.State.VotedFor) || this.Node.State.VotedFor == request.CandidateId) {  	// grant vote  	this.Logger.TraceFormat ("We do vote for node {1}. Message: {0}."' request' request.CandidateId);  	vote = true;  	this.Node.State.VotedFor = request.CandidateId;  	// as we did vote' we are ok to wait longer  	this.ResetTimeout (0' 2);  } else {  	// we already voted for someone  	vote = false;  	this.Logger.TraceFormat ("We already voted. We do not grant vote. Message: {0}."' request);  }  
Magic Number,RAFTiNG.States,Follower,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Follower.cs,ProcessVoteRequest,The following statement contains a magic number: if (string.IsNullOrEmpty (this.Node.State.VotedFor) || this.Node.State.VotedFor == request.CandidateId) {  	// grant vote  	this.Logger.TraceFormat ("We do vote for node {1}. Message: {0}."' request' request.CandidateId);  	vote = true;  	this.Node.State.VotedFor = request.CandidateId;  	// as we did vote' we are ok to wait longer  	this.ResetTimeout (0' 2);  } else {  	// we already voted for someone  	vote = false;  	this.Logger.TraceFormat ("We already voted. We do not grant vote. Message: {0}."' request);  }  
Magic Number,RAFTiNG.States,Follower,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Follower.cs,ProcessVoteRequest,The following statement contains a magic number: this.ResetTimeout (0' 2);  
Magic Number,RAFTiNG.States,Follower,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Follower.cs,ProcessAppendEntries,The following statement contains a magic number: this.ResetTimeout (.2);  
Magic Number,RAFTiNG.States,Leader,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Leader.cs,EnterState,The following statement contains a magic number: foreach (var otherNode in this.Node.Settings.OtherNodes ()) {  	this.states [otherNode] = new LogReplicationAgent (TimeSpan.FromMilliseconds (this.Node.Settings.TimeoutInMs / 2.0)' this.Node.State.LogEntries.Count' otherNode' this.Logger);  }  
Magic Number,RAFTiNG.States,Leader,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Leader.cs,EnterState,The following statement contains a magic number: this.states [otherNode] = new LogReplicationAgent (TimeSpan.FromMilliseconds (this.Node.Settings.TimeoutInMs / 2.0)' this.Node.State.LogEntries.Count' otherNode' this.Logger);  
Magic Number,RAFTiNG.States,Leader,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\Leader.cs,BroadcastHeartbeat,The following statement contains a magic number: this.ResetTimeout (0' .5);  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: if (this.Settings.TimeoutInMs != Timeout.Infinite) {  	timeout = (int)(((Seed.NextDouble () * randomPart * 2.0) + (fixPart - randomPart)) * this.Settings.TimeoutInMs);  	if (timeout < 10) {  		timeout = 10;  	}  	this.Logger.DebugFormat ("Set timeout to {0} ms."' timeout);  } else {  	timeout = this.Settings.TimeoutInMs;  	if (this.Logger.IsDebugEnabled) {  		this.Logger.Debug ("Set timeout to infinite.");  	}  }  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: if (this.Settings.TimeoutInMs != Timeout.Infinite) {  	timeout = (int)(((Seed.NextDouble () * randomPart * 2.0) + (fixPart - randomPart)) * this.Settings.TimeoutInMs);  	if (timeout < 10) {  		timeout = 10;  	}  	this.Logger.DebugFormat ("Set timeout to {0} ms."' timeout);  } else {  	timeout = this.Settings.TimeoutInMs;  	if (this.Logger.IsDebugEnabled) {  		this.Logger.Debug ("Set timeout to infinite.");  	}  }  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: if (this.Settings.TimeoutInMs != Timeout.Infinite) {  	timeout = (int)(((Seed.NextDouble () * randomPart * 2.0) + (fixPart - randomPart)) * this.Settings.TimeoutInMs);  	if (timeout < 10) {  		timeout = 10;  	}  	this.Logger.DebugFormat ("Set timeout to {0} ms."' timeout);  } else {  	timeout = this.Settings.TimeoutInMs;  	if (this.Logger.IsDebugEnabled) {  		this.Logger.Debug ("Set timeout to infinite.");  	}  }  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: timeout = (int)(((Seed.NextDouble () * randomPart * 2.0) + (fixPart - randomPart)) * this.Settings.TimeoutInMs);  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: if (timeout < 10) {  	timeout = 10;  }  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: if (timeout < 10) {  	timeout = 10;  }  
Magic Number,RAFTiNG.States,State,F:\newReposMay17\dupdob_RAFTiNG\RAFTiNG\States\State.cs,ResetTimeout,The following statement contains a magic number: timeout = 10;  
