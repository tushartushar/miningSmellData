Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The length of the statement  "            this.treasureDetail.BackgroundTexture = Texture2D.FromFile(this.graphicsDevice' @"GameComponents\TreasureDetail\Data\" + node.Attributes.GetNamedItem("FileName").Value); " is 169.
Long Statement,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The length of the statement  "            this.treasureDetail.DescriptionText.TitleColor = StaticMethods.LoadColor(node.Attributes.GetNamedItem("TitleColor").Value); " is 123.
Long Statement,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The length of the statement  "            this.treasureDetail.DescriptionText.SubTitleColor = StaticMethods.LoadColor(node.Attributes.GetNamedItem("SubTitleColor").Value); " is 129.
Long Statement,TreasureDetailPlugin,TreasureDetail,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetail.cs,Draw,The length of the statement  "                spriteBatch.Draw(this.BackgroundTexture' this.BackgroundDisplayPosition' sourceRectangle' Color.White' 0f' Vector2.Zero' SpriteEffects.None' 0.2f); " is 147.
Long Statement,TreasureDetailPlugin,TreasureDetail,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetail.cs,Draw,The length of the statement  "                spriteBatch.Draw(this.ShowingTreasure.Picture' this.PictureClientDisplayPosition' null' Color.White' 0f' Vector2.Zero' SpriteEffects.None' 0.199f); " is 147.
Long Statement,TreasureDetailPlugin,TreasureDetail,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetail.cs,SetPosition,The length of the statement  "            this.DescriptionText.DisplayOffset = new Point(this.DisplayOffset.X + this.DescriptionClient.X' this.DisplayOffset.Y + this.DescriptionClient.Y); " is 145.
Long Statement,TreasureDetailPlugin,TreasureDetail,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetail.cs,SetPosition,The length of the statement  "            this.InfluenceText.DisplayOffset = new Point(this.DisplayOffset.X + this.InfluenceClient.X' this.DisplayOffset.Y + this.InfluenceClient.Y); " is 139.
Magic Number,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The following statement contains a magic number: node = nextSibling.ChildNodes.Item(2);
Magic Number,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The following statement contains a magic number: for (int i = 0; i < node.ChildNodes.Count; i += 2)              {                  LabelText item = new LabelText();                  XmlNode node3 = node.ChildNodes.Item(i);                  Microsoft.Xna.Framework.Rectangle rectangle = StaticMethods.LoadRectangleFromXMLNode(node3);                  StaticMethods.LoadFontAndColorFromXMLNode(node3' out font' out color);                  item.Label = new FreeText(this.graphicsDevice' font' color);                  item.Label.Position = rectangle;                  item.Label.Align = (TextAlign) Enum.Parse(typeof(TextAlign)' node3.Attributes.GetNamedItem("Align").Value);                  item.Label.Text = node3.Attributes.GetNamedItem("Label").Value;                  node3 = node.ChildNodes.Item(i + 1);                  rectangle = StaticMethods.LoadRectangleFromXMLNode(node3);                  StaticMethods.LoadFontAndColorFromXMLNode(node3' out font' out color);                  item.Text = new FreeText(this.graphicsDevice' font' color);                  item.Text.Position = rectangle;                  item.Text.Align = (TextAlign) Enum.Parse(typeof(TextAlign)' node3.Attributes.GetNamedItem("Align").Value);                  item.PropertyName = node3.Attributes.GetNamedItem("PropertyName").Value;                  this.treasureDetail.LabelTexts.Add(item);              }
Magic Number,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The following statement contains a magic number: node = nextSibling.ChildNodes.Item(3);
Magic Number,TreasureDetailPlugin,TreasureDetailPlugin,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetailPlugin.cs,LoadDataFromXMLDocument,The following statement contains a magic number: node = nextSibling.ChildNodes.Item(4);
Missing Default,TreasureDetailPlugin,TreasureDetail,C:\repos\luiges90_ZhongHuaSanGuoZhi\TreasureDetailPlugin\TreasureDetailPlugin\TreasureDetail.cs,SetPosition,The following switch statement is missing a default case: switch (showPosition)              {                  case ShowPosition.Center:                      rect = StaticMethods.GetCenterRectangle(rectDes' rect);                      break;                    case ShowPosition.Top:                      rect = StaticMethods.GetTopRectangle(rectDes' rect);                      break;                    case ShowPosition.Left:                      rect = StaticMethods.GetLeftRectangle(rectDes' rect);                      break;                    case ShowPosition.Right:                      rect = StaticMethods.GetRightRectangle(rectDes' rect);                      break;                    case ShowPosition.Bottom:                      rect = StaticMethods.GetBottomRectangle(rectDes' rect);                      break;                    case ShowPosition.TopLeft:                      rect = StaticMethods.GetTopLeftRectangle(rectDes' rect);                      break;                    case ShowPosition.TopRight:                      rect = StaticMethods.GetTopRightRectangle(rectDes' rect);                      break;                    case ShowPosition.BottomLeft:                      rect = StaticMethods.GetBottomLeftRectangle(rectDes' rect);                      break;                    case ShowPosition.BottomRight:                      rect = StaticMethods.GetBottomRightRectangle(rectDes' rect);                      break;              }
