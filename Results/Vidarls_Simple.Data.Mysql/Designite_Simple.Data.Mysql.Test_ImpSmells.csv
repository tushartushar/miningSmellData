Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Simple.Data.Mysql.Test,ForeignKeyTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\ForeignKeyTests.cs,ShouldExtractForeignKeysFromCreateTableSql,The length of the statement  "                                               " CONSTRAINT `fk_orderitems_items` FOREIGN KEY (`ItemId`) REFERENCES `items` (`Id`) ON DELETE NO ACTION ON UPDATE NO ACTION' " + " is 128.
Long Statement,Simple.Data.Mysql.Test,ForeignKeyTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\ForeignKeyTests.cs,ShouldExtractForeignKeysFromCreateTableSql,The length of the statement  "                                               " CONSTRAINT `fk_orderitems_orders` FOREIGN KEY (`OrderId`' `Test` ) REFERENCES `dbo`.`orders` ( `Id` '`Test`) ON DELETE NO ACTION ON UPDATE NO ACTION " + " is 154.
Long Statement,Simple.Data.Mysql.Test,ForeignKeyTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\ForeignKeyTests.cs,ShouldExtractForeignKeysFromCreateTableSql,The length of the statement  "            var foreignKeys = MysqlForeignKeyCreator.ExtractForeignKeysFromCreateTableSql("orderitems_fk_test"' exampleCreateSql' false' true); " is 131.
Long Statement,Simple.Data.Mysql.Test.SchemaDataProviderTests,ColumnDataTests40,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\SchemaDataProviderTests\40SchemaDataProviderTests.cs,CanProvideAllColumnsFromTable,The length of the statement  "            var columns = schemaDataProvider.GetColumnsFor(table).Select(c => new Column(c.Name' table' c.IsAutoincrement' c.DbType' c.Capacity));  " is 134.
Magic Number,Simple.Data.Mysql.Test,DecimalTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\DecimalTests.cs,CorrectDecimalValue,The following statement contains a magic number: var price = Convert.ToDecimal(4.75);
Magic Number,Simple.Data.Mysql.Test,FindTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\FindTests.cs,TestInsert,The following statement contains a magic number: var user = db.Users.Insert(Name: "Alice"' Password: "foo"' Age: 29);
Magic Number,Simple.Data.Mysql.Test,FindTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\FindTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(29' user.Age);
Magic Number,Simple.Data.Mysql.Test,FindTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\FindTests.cs,TestTake,The following statement contains a magic number: var users = db.Users.All().Take(2);
Magic Number,Simple.Data.Mysql.Test,FindTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\FindTests.cs,TestTake,The following statement contains a magic number: Assert.AreEqual(2'users.ToList().Count);
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,By_default_autoincrement_columns_are_not_inserted_to,The following statement contains a magic number: Db.empty_table.Insert(new {Id = 99999' Somevalue = "thenewvalue"});
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,By_default_autoincrement_columns_are_not_inserted_to,The following statement contains a magic number: Assert.AreNotEqual(9999' inserted.Id);
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,With_the_insertidentity_option_the_autoincrement_column_should_be_inserted_to,The following statement contains a magic number: var db = Db.WithOptions(new AdoOptions(identityInsert: true' commandTimeout: 30));
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,With_the_insertidentity_option_the_autoincrement_column_should_be_inserted_to,The following statement contains a magic number: db.empty_table.Insert(new {id = 88888' Somevalue = "This is really not needed' is it?"});
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,With_the_insertidentity_option_the_autoincrement_column_should_be_inserted_to,The following statement contains a magic number: Assert.AreEqual(88888' inserted.Id);
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,With_the_insertidentity_option_the_autoincrement_column_should_autoincrement_when_no_value_is_provided,The following statement contains a magic number: var db = Db.WithOptions(new AdoOptions(identityInsert: true' commandTimeout: 30));
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,With_the_insertidentity_option_the_inserted_row_will_not_be_returned,The following statement contains a magic number: var db = Db.WithOptions(new AdoOptions(identityInsert: true' commandTimeout: 30));
Magic Number,Simple.Data.Mysql.Test,InsertTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\InsertTests.cs,With_the_insertidentity_option_the_inserted_row_will_not_be_returned,The following statement contains a magic number: var toBeInserted = new {Id = 99997' Somevalue = "running out of ideas here"};
Magic Number,Simple.Data.Mysql.Test,MySqlColumnInfoTest,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\MySqlColumnInfoTest.cs,DecimalColumnWithCapacityAndPrecisionParsedToDecimal,The following statement contains a magic number: Assert.True(columnInfo.Capacity == 10);
Magic Number,Simple.Data.Mysql.Test,MySqlColumnInfoTest,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\MySqlColumnInfoTest.cs,DecimalColumnWithCapacityWithoutPrecisionParsedToDecimal,The following statement contains a magic number: Assert.True(columnInfo.Capacity == 10);
Magic Number,Simple.Data.Mysql.Test,OrderDetailTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\OrderDetailTests.cs,TestOrderDetail,The following statement contains a magic number: var order = db.Orders.FindByOrderDate(new DateTime(2010' 8' 11));
Magic Number,Simple.Data.Mysql.Test,OrderDetailTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\OrderDetailTests.cs,TestOrderDetail,The following statement contains a magic number: var order = db.Orders.FindByOrderDate(new DateTime(2010' 8' 11));
Magic Number,Simple.Data.Mysql.Test,OrderDetailTests,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\OrderDetailTests.cs,TestOrderDetail,The following statement contains a magic number: var order = db.Orders.FindByOrderDate(new DateTime(2010' 8' 11));
Magic Number,Simple.Data.Mysql.Test.SchemaDataProviderTests,ColumnDataTests40,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\SchemaDataProviderTests\40SchemaDataProviderTests.cs,CanProvideAllColumnsFromTable,The following statement contains a magic number: var expectedColumns = new List<Column>                                        {                                            new Column("Id"' table' true' DbType.Int32' 11)'                                            new Column("Name"' table' false' DbType.String' 255)'                                            new Column("Password"' table' false' DbType.String' 255)'                                            new Column("Age"' table' false' DbType.Int32' 11)                                          };
Magic Number,Simple.Data.Mysql.Test.SchemaDataProviderTests,ColumnDataTests40,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\SchemaDataProviderTests\40SchemaDataProviderTests.cs,CanProvideAllColumnsFromTable,The following statement contains a magic number: var expectedColumns = new List<Column>                                        {                                            new Column("Id"' table' true' DbType.Int32' 11)'                                            new Column("Name"' table' false' DbType.String' 255)'                                            new Column("Password"' table' false' DbType.String' 255)'                                            new Column("Age"' table' false' DbType.Int32' 11)                                          };
Magic Number,Simple.Data.Mysql.Test.SchemaDataProviderTests,ColumnDataTests40,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\SchemaDataProviderTests\40SchemaDataProviderTests.cs,CanProvideAllColumnsFromTable,The following statement contains a magic number: var expectedColumns = new List<Column>                                        {                                            new Column("Id"' table' true' DbType.Int32' 11)'                                            new Column("Name"' table' false' DbType.String' 255)'                                            new Column("Password"' table' false' DbType.String' 255)'                                            new Column("Age"' table' false' DbType.Int32' 11)                                          };
Magic Number,Simple.Data.Mysql.Test.SchemaDataProviderTests,ColumnDataTests40,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\SchemaDataProviderTests\40SchemaDataProviderTests.cs,CanProvideAllColumnsFromTable,The following statement contains a magic number: var expectedColumns = new List<Column>                                        {                                            new Column("Id"' table' true' DbType.Int32' 11)'                                            new Column("Name"' table' false' DbType.String' 255)'                                            new Column("Password"' table' false' DbType.String' 255)'                                            new Column("Age"' table' false' DbType.Int32' 11)                                          };
Magic Number,Simple.Data.Mysql.Test.SchemaTests,ColumnInfoCreatorTest,D:\research\architectureSmells\repos\Vidarls_Simple.Data.Mysql\Src\Simple.Data.Mysql.Test\SchemaTests\ColumnInfoCreatorTest.cs,ParsesCapacityFromTypeinfoWithCapacity,The following statement contains a magic number: Assert.AreEqual(255'columnInfo.Capacity' "Capacity is not correct");
