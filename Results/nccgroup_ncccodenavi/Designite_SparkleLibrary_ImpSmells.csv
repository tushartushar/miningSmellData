Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BrightIdeasSoftware,Effects,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effects.cs,Move,The method has 5 parameters. Parameters: spriteCorner' fromProportionX' fromProportionY' toProportionX' toProportionY
Long Parameter List,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,TextSprite,The method has 6 parameters. Parameters: text' font' foreColor' backColor' borderColor' borderWidth
Long Parameter List,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,DrawBorderedText,The method has 5 parameters. Parameters: g' textRect' text' font' opacity
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom) }; " is 128.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' }; " is 129.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top) }; " is 128.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom) }; " is 128.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top) }; " is 142.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom) }; " is 142.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom) }; " is 142.
Long Statement,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The length of the statement  "                        targetPoints = new Point[] { new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top) }; " is 142.
Virtual Method Call from Constructor,BrightIdeasSoftware,Sprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\Sprite.cs,Sprite,The constructor "Sprite" calls a virtual method "Init".
Magic Number,BrightIdeasSoftware,Animation,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Animation\Animation.cs,Animation,The following statement contains a magic number: this.Interval = 30;
Magic Number,BrightIdeasSoftware,RedrawEventArgs,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Animation\Events.cs,RedrawEventArgs,The following statement contains a magic number: this.Damage = new Rectangle(-100000' -100000' 200000' 200000);
Magic Number,BrightIdeasSoftware,RedrawEventArgs,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Animation\Events.cs,RedrawEventArgs,The following statement contains a magic number: this.Damage = new Rectangle(-100000' -100000' 200000' 200000);
Magic Number,BrightIdeasSoftware,RedrawEventArgs,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Animation\Events.cs,RedrawEventArgs,The following statement contains a magic number: this.Damage = new Rectangle(-100000' -100000' 200000' 200000);
Magic Number,BrightIdeasSoftware,RedrawEventArgs,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Animation\Events.cs,RedrawEventArgs,The following statement contains a magic number: this.Damage = new Rectangle(-100000' -100000' 200000' 200000);
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: if (hue < 0 || hue > 360)                  throw new ArgumentException("Value must be between 0 and 360"' "hue");
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: if (saturation < 0 || saturation > 100)                  throw new ArgumentException("Value must be between 0 and 100"' "saturation");
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: if (brightness < 0 || brightness > 100)                  throw new ArgumentException("Value must be between 0 and 100"' "brightness");
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: if (saturation == 0) {                  // achromatic (grey)                  return Color.FromArgb((int)(v * 255)' (int)(v * 255)' (int)(v * 255));              }
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: if (saturation == 0) {                  // achromatic (grey)                  return Color.FromArgb((int)(v * 255)' (int)(v * 255)' (int)(v * 255));              }
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: if (saturation == 0) {                  // achromatic (grey)                  return Color.FromArgb((int)(v * 255)' (int)(v * 255)' (int)(v * 255));              }
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: h /= 60;
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: switch (i) {                  case 0:                      r = v;                      g = t;                      b = p;                      break;                  case 1:                      r = q;                      g = v;                      b = p;                      break;                  case 2:                      r = p;                      g = v;                      b = t;                      break;                  case 3:                      r = p;                      g = q;                      b = v;                      break;                  case 4:                      r = t;                      g = p;                      b = v;                      break;                  case 5:                  default:                      r = v;                      g = p;                      b = q;                      break;              }
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: switch (i) {                  case 0:                      r = v;                      g = t;                      b = p;                      break;                  case 1:                      r = q;                      g = v;                      b = p;                      break;                  case 2:                      r = p;                      g = v;                      b = t;                      break;                  case 3:                      r = p;                      g = q;                      b = v;                      break;                  case 4:                      r = t;                      g = p;                      b = v;                      break;                  case 5:                  default:                      r = v;                      g = p;                      b = q;                      break;              }
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: switch (i) {                  case 0:                      r = v;                      g = t;                      b = p;                      break;                  case 1:                      r = q;                      g = v;                      b = p;                      break;                  case 2:                      r = p;                      g = v;                      b = t;                      break;                  case 3:                      r = p;                      g = q;                      b = v;                      break;                  case 4:                      r = t;                      g = p;                      b = v;                      break;                  case 5:                  default:                      r = v;                      g = p;                      b = q;                      break;              }
Magic Number,BrightIdeasSoftware,Effect,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effect.cs,FromHSB,The following statement contains a magic number: switch (i) {                  case 0:                      r = v;                      g = t;                      b = p;                      break;                  case 1:                      r = q;                      g = v;                      b = p;                      break;                  case 2:                      r = p;                      g = v;                      b = t;                      break;                  case 3:                      r = p;                      g = q;                      b = v;                      break;                  case 4:                      r = t;                      g = p;                      b = v;                      break;                  case 5:                  default:                      r = v;                      g = p;                      b = q;                      break;              }
Magic Number,BrightIdeasSoftware,Effects,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effects.cs,Blink,The following statement contains a magic number: return Effects.Repeat(repetitions' Effects.OneBlink(2' 4' 2' 1));
Magic Number,BrightIdeasSoftware,Effects,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effects.cs,Blink,The following statement contains a magic number: return Effects.Repeat(repetitions' Effects.OneBlink(2' 4' 2' 1));
Magic Number,BrightIdeasSoftware,Effects,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Effects\Effects.cs,Blink,The following statement contains a magic number: return Effects.Repeat(repetitions' Effects.OneBlink(2' 4' 2' 1));
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following statement contains a magic number: int totalLength = r.Width * 2 + r.Height * 2;
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following statement contains a magic number: int totalLength = r.Width * 2 + r.Height * 2;
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following statement contains a magic number: if (this.Direction == WalkDirection.Clockwise) {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom) };                          break;                  }              } else {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom) };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top) };                          break;                  }              }
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following statement contains a magic number: if (this.Direction == WalkDirection.Clockwise) {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom) };                          break;                  }              } else {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom) };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top) };                          break;                  }              }
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following statement contains a magic number: if (this.Direction == WalkDirection.Clockwise) {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom) };                          break;                  }              } else {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom) };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top) };                          break;                  }              }
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following statement contains a magic number: if (this.Direction == WalkDirection.Clockwise) {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom) };                          break;                  }              } else {                  switch (segment) {                      case 0:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom) };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top) };                          break;                  }              }
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,DecideSegment,The following statement contains a magic number: if (point.X == rectangleToWalk.Right)                  return 2;
Magic Number,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,DecideSegment,The following statement contains a magic number: if (point.X == rectangleToWalk.Bottom)                  return 3;
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,ShapeSprite,The following statement contains a magic number: this.CornerRounding = 16;
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetGraphicsPath,The following statement contains a magic number: Point midPoint = new Point(r.X + r.Width / 2' r.Y + r.Height / 2);
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetGraphicsPath,The following statement contains a magic number: Point midPoint = new Point(r.X + r.Width / 2' r.Y + r.Height / 2);
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetGraphicsPath,The following statement contains a magic number: switch (this.Shape) {                  case Shapes.Rectangle:                      path.AddRectangle(new Rectangle(Point.Empty' r.Size));                      break;                  case Shapes.RoundedRectangle:                      path = ShapeSprite.GetRoundedRect(r' this.CornerRounding);                      break;                  case Shapes.Circle:                      path.AddEllipse(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2' minimumAxis' minimumAxis);                      break;                  case Shapes.Oval:                      path.AddEllipse(r);                      break;                  case Shapes.Square:                      path.AddRectangle(new Rectangle(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2'                          minimumAxis' minimumAxis));                      break;                  case Shapes.Triangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Top)'                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Top)'                          new Point(r.Left' r.Top)                      });                      break;                  case Shapes.IsoTriangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Bottom)'                          new Point(midPoint.X' r.Top)'                          new Point(r.Left' r.Bottom)                      });                      break;                  case Shapes.EquiTriangle:                      //TODO                      break;                  default:                      break;              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetGraphicsPath,The following statement contains a magic number: switch (this.Shape) {                  case Shapes.Rectangle:                      path.AddRectangle(new Rectangle(Point.Empty' r.Size));                      break;                  case Shapes.RoundedRectangle:                      path = ShapeSprite.GetRoundedRect(r' this.CornerRounding);                      break;                  case Shapes.Circle:                      path.AddEllipse(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2' minimumAxis' minimumAxis);                      break;                  case Shapes.Oval:                      path.AddEllipse(r);                      break;                  case Shapes.Square:                      path.AddRectangle(new Rectangle(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2'                          minimumAxis' minimumAxis));                      break;                  case Shapes.Triangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Top)'                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Top)'                          new Point(r.Left' r.Top)                      });                      break;                  case Shapes.IsoTriangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Bottom)'                          new Point(midPoint.X' r.Top)'                          new Point(r.Left' r.Bottom)                      });                      break;                  case Shapes.EquiTriangle:                      //TODO                      break;                  default:                      break;              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetGraphicsPath,The following statement contains a magic number: switch (this.Shape) {                  case Shapes.Rectangle:                      path.AddRectangle(new Rectangle(Point.Empty' r.Size));                      break;                  case Shapes.RoundedRectangle:                      path = ShapeSprite.GetRoundedRect(r' this.CornerRounding);                      break;                  case Shapes.Circle:                      path.AddEllipse(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2' minimumAxis' minimumAxis);                      break;                  case Shapes.Oval:                      path.AddEllipse(r);                      break;                  case Shapes.Square:                      path.AddRectangle(new Rectangle(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2'                          minimumAxis' minimumAxis));                      break;                  case Shapes.Triangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Top)'                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Top)'                          new Point(r.Left' r.Top)                      });                      break;                  case Shapes.IsoTriangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Bottom)'                          new Point(midPoint.X' r.Top)'                          new Point(r.Left' r.Bottom)                      });                      break;                  case Shapes.EquiTriangle:                      //TODO                      break;                  default:                      break;              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetGraphicsPath,The following statement contains a magic number: switch (this.Shape) {                  case Shapes.Rectangle:                      path.AddRectangle(new Rectangle(Point.Empty' r.Size));                      break;                  case Shapes.RoundedRectangle:                      path = ShapeSprite.GetRoundedRect(r' this.CornerRounding);                      break;                  case Shapes.Circle:                      path.AddEllipse(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2' minimumAxis' minimumAxis);                      break;                  case Shapes.Oval:                      path.AddEllipse(r);                      break;                  case Shapes.Square:                      path.AddRectangle(new Rectangle(midPoint.X - minimumAxis / 2' midPoint.Y - minimumAxis / 2'                          minimumAxis' minimumAxis));                      break;                  case Shapes.Triangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Top)'                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Top)'                          new Point(r.Left' r.Top)                      });                      break;                  case Shapes.IsoTriangle:                      path.AddLines(new Point[] {                          new Point(r.Left' r.Bottom)'                          new Point(r.Right' r.Bottom)'                          new Point(midPoint.X' r.Top)'                          new Point(r.Left' r.Bottom)                      });                      break;                  case Shapes.EquiTriangle:                      //TODO                      break;                  default:                      break;              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,ShapeSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\ShapeSprite.cs,GetRoundedRect,The following statement contains a magic number: if (diameter > 0) {                  RectangleF arc = new RectangleF(rect.X' rect.Y' diameter' diameter);                  path.AddArc(arc' 180' 90);                  arc.X = rect.Right - diameter;                  path.AddArc(arc' 270' 90);                  arc.Y = rect.Bottom - diameter;                  path.AddArc(arc' 0' 90);                  arc.X = rect.Left;                  path.AddArc(arc' 90' 90);                  path.CloseFigure();              } else {                  path.AddRectangle(rect);              }
Magic Number,BrightIdeasSoftware,Sprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\Sprite.cs,ApplyState,The following statement contains a magic number: if (this.Spin != 0) {                  Rectangle r = this.Bounds;                  // TODO: Make a SpinCentre property                  Point spinCentre = r.Location;                  if (!this.SpinAroundOrigin)                      spinCentre = new Point(r.X + r.Width / 2' r.Y + r.Height / 2);                  m.RotateAt(this.Spin' spinCentre);              }
Magic Number,BrightIdeasSoftware,Sprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\Sprite.cs,ApplyState,The following statement contains a magic number: if (this.Spin != 0) {                  Rectangle r = this.Bounds;                  // TODO: Make a SpinCentre property                  Point spinCentre = r.Location;                  if (!this.SpinAroundOrigin)                      spinCentre = new Point(r.X + r.Width / 2' r.Y + r.Height / 2);                  m.RotateAt(this.Spin' spinCentre);              }
Magic Number,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,TextSprite,The following statement contains a magic number: this.Font = new Font("Tahoma"' 12);
Magic Number,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,GetTextBrush,The following statement contains a magic number: if (opacity < 1.0f)                  return new SolidBrush(Color.FromArgb((int)(opacity * 255)' this.ForeColor));              else                  return new SolidBrush(this.ForeColor);
Magic Number,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,GetBackgroundBrush,The following statement contains a magic number: if (opacity < 1.0f)                  return new SolidBrush(Color.FromArgb((int)(opacity * 255)' this.BackColor));              else                  return new SolidBrush(this.BackColor);
Magic Number,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,GetBorderPen,The following statement contains a magic number: if (opacity < 1.0f)                  return new Pen(Color.FromArgb((int)(opacity * 255)' this.BorderColor)' this.BorderWidth);              else                  return new Pen(this.BorderColor' this.BorderWidth);
Magic Number,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,DrawBorderedText,The following statement contains a magic number: if (this.BorderWidth > 0.0f)                  borderRect.Inflate((int)this.BorderWidth / 2' (int)this.BorderWidth / 2);
Magic Number,BrightIdeasSoftware,TextSprite,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Sprites\TextSprite.cs,DrawBorderedText,The following statement contains a magic number: if (this.BorderWidth > 0.0f)                  borderRect.Inflate((int)this.BorderWidth / 2' (int)this.BorderWidth / 2);
Missing Default,BrightIdeasSoftware,Animation,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Animation\Animation.cs,AnimationEnded,The following switch statement is missing a default case: switch (this.Repeat) {                  case Repeat.None:                      this.Stop();                      break;                  case Repeat.Loop:                      this.Restart();                      break;                  case Repeat.Bounce:                      break;                  case Repeat.Pause:                      this.Pause();                      break;              }
Missing Default,BrightIdeasSoftware,PointOnRectangleLocator,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,ConvertCornerToProportion,The following switch statement is missing a default case: switch (corner) {                  case Corner.TopLeft:                      return new SizeF(0.0f' 0.0f);                  case Corner.TopCenter:                      return new SizeF(0.5f' 0.0f);                  case Corner.TopRight:                      return new SizeF(1.0f' 0.0f);                  case Corner.MiddleLeft:                      return new SizeF(0.0f' 0.5f);                  case Corner.MiddleCenter:                      return new SizeF(0.5f' 0.5f);                  case Corner.MiddleRight:                      return new SizeF(1.0f' 0.5f);                  case Corner.BottomLeft:                      return new SizeF(0.0f' 1.0f);                  case Corner.BottomCenter:                      return new SizeF(0.5f' 1.0f);                  case Corner.BottomRight:                      return new SizeF(1.0f' 1.0f);              }
Missing Default,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following switch statement is missing a default case: switch (segment) {                      case 0:                          targetPoints = new Point[] { r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' r.Location' new Point(r.Right' r.Top)' new Point(r.Right' r.Bottom) };                          break;                  }
Missing Default,BrightIdeasSoftware,RectangleWalker,C:\repos\nccgroup_ncccodenavi\Win.CodeNavi\3rd-Party\ObjectListView\ObjectListViewFull-2.6.0\ObjectListViewDemo\SparkleLibrary\Locators\PointLocator.cs,GetPoint,The following switch statement is missing a default case: switch (segment) {                      case 0:                          targetPoints = new Point[] { new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top) };                          break;                      case 1:                          targetPoints = new Point[] { new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom) };                          break;                      case 2:                          targetPoints = new Point[] { new Point(r.Right' r.Top)' new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom) };                          break;                      case 3:                          targetPoints = new Point[] { new Point(r.Left' r.Top)' new Point(r.Left' r.Bottom)' new Point(r.Right' r.Bottom)' new Point(r.Right' r.Top) };                          break;                  }
