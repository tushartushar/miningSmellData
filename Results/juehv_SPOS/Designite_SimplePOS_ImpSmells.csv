Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimplePOS.Article,ArtikelProcessor,C:\repos\juehv_SPOS\src\SimplePOS\Article\ArtikelProcessor.cs,preprocessArtikel,Cyclomatic complexity of the method is 13
Complex Method,SimplePOS.Printing,PrintingPreprocessor,C:\repos\juehv_SPOS\src\SimplePOS\Printing\PrintingPreprocessor.cs,ProcessInvoices,Cyclomatic complexity of the method is 8
Complex Method,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,Cyclomatic complexity of the method is 8
Long Parameter List,SimplePOS.Article,RegularArticle,C:\repos\juehv_SPOS\src\SimplePOS\Article\RegularArticle.cs,RegularArticle,The method has 5 parameters.
Long Parameter List,SimplePOS.Invoicing,InvoiceItemSimple,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\InvoiceItemSimple.cs,InvoiceItemSimple,The method has 5 parameters.
Long Parameter List,SimplePOS.Invoicing,SaveableInvoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\SaveableInvoice.cs,SaveableInvoice,The method has 5 parameters.
Long Parameter List,SimplePOS.Invoicing,SaveableInvoiceItem,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\SaveableInvoiceItem.cs,SaveableInvoiceItem,The method has 5 parameters.
Long Parameter List,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,Invoice,The method has 8 parameters.
Long Parameter List,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,Invoice,The method has 6 parameters.
Long Parameter List,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,Invoice,The method has 6 parameters.
Long Statement,SimplePOS.Article,ArticleManager,C:\repos\juehv_SPOS\src\SimplePOS\Article\ArticleManager.xaml.cs,button3_Click,The length of the statement  "	MessageBoxResult result = MessageBox.Show ("Möchten Sie den Artikel wirklich entfernen?"' "Artikel entfernen?"' MessageBoxButton.YesNo' MessageBoxImage.Question); " is 162.
Long Statement,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ParseCSV,The length of the statement  "	string connString = "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=\"" + dir + "\\\";" + "Extended Properties=\"text;HDR=No;FMT=Delimited\""; " is 145.
Long Statement,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The length of the statement  "				articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4]))); " is 172.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,InitDb,The length of the statement  "	command.CommandText = "CREATE TABLE IF NOT EXISTS invoice ( " + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT' " + "invoice_id INTEGER NOT NULL' " + "invoice_date INTEGER NOT NULL' " + "invoice_amount REAL NOT NULL'" + "currency TEXT NOT NULL);"; " is 247.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,InitDb,The length of the statement  "	command.CommandText = "CREATE TABLE IF NOT EXISTS invoice_item ( " + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT' " + "invoice_id INTEGER NOT NULL' " + "item_id TEXT NOT NULL' " + "item_name TEXT NOT NULL' " + "quantity REAL NOT NULL' " + "price REAL NOT NULL' " + "sum_price REAL NOT NULL' " + "tax REAL NOT NULL);"; " is 320.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,InitDb,The length of the statement  "	command.CommandText = "CREATE TABLE IF NOT EXISTS article ( " + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT' " + "item_id TEXT NOT NULL' " + "item_name TEXT NOT NULL' " + "item_text TEXT' " + "price REAL NOT NULL' " + "tax REAL NOT NULL);"; " is 243.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,InitDb,The length of the statement  "	command.CommandText = "CREATE TABLE IF NOT EXISTS stock ( " + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT' " + "item_id TEXT NOT NULL' " + "item_quantity REAL NOT NULL' " + "actual_stock REAL);"; " is 198.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,InitDb,The length of the statement  "	command.CommandText = "CREATE TABLE IF NOT EXISTS preferences ( " + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT' " + "key TEXT NOT NULL' " + "value TEXT NOT NULL);"; " is 168.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The length of the statement  "		command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article WHERE item_id LIKE ? ORDER BY item_id LIMIT 1;"; " is 138.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The length of the statement  "			retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]); " is 159.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The length of the statement  "			retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4])); " is 163.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,SaveInvoice,The length of the statement  "			command.Parameters.Add (new SQLiteParameter ("invoice_date"' SimplePOS.Util.Timehelper.getTimestampOfDateTime (new DateTime (SimplePOS.Util.Timehelper.getDateTimeOfTimestamp (invoice.Date).Year' 1' 1)))); " is 204.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,SaveInvoice,The length of the statement  "			command.CommandText = "INSERT INTO invoice (invoice_id' invoice_date' " + "invoice_amount' currency) VALUES (?' ?' ?' ?);"; " is 123.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,SaveInvoice,The length of the statement  "			command.CommandText = "INSERT INTO invoice_item (invoice_id' item_id' " + "item_name' quantity' price' sum_price' tax) VALUES (?'?'?'?'?'?'?);"; " is 144.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The length of the statement  "		command.CommandText = "SELECT invoice_id' invoice_date' invoice_amount'currency " + "FROM invoice ORDER BY invoice_id;"; " is 120.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The length of the statement  "			invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ())); " is 167.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The length of the statement  "		command.CommandText = "SELECT item_id' item_name' quantity' price' tax " + "FROM invoice_item WHERE invoice_id LIKE ? ORDER BY item_id;"; " is 137.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The length of the statement  "				itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4])); " is 168.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,SavePreferences,The length of the statement  "		command.CommandText = "CREATE TABLE IF NOT EXISTS preferences ( " + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT' " + "key TEXT NOT NULL' " + "value TEXT NOT NULL);"; " is 168.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The length of the statement  "		command.CommandText = "SELECT a.item_name' a.item_id' s.item_quantity' s.actual_stock " + "FROM article AS a INNER JOIN stock AS s ON a.item_id = s.item_id AND s.actual_stock IS NOT NULL;"; " is 189.
Long Statement,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The length of the statement  "			InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3])); " is 151.
Long Statement,SimplePOS.Inventory,InventoryItem,C:\repos\juehv_SPOS\src\SimplePOS\Inventory\InventoryItem.xaml.cs,button1_Click,The length of the statement  "			MessageBox.Show ("Bitte geben Sie als Menge einen gültigen Wert ein."' ""' MessageBoxButton.OK' MessageBoxImage.Warning); " is 121.
Long Statement,SimplePOS.Inventory,InventoryItem,C:\repos\juehv_SPOS\src\SimplePOS\Inventory\InventoryItem.xaml.cs,textbox2_KeyDown,The length of the statement  "				MessageBox.Show ("Bitte geben Sie als Menge einen gültigen Wert ein."' ""' MessageBoxButton.OK' MessageBoxImage.Warning); " is 121.
Long Statement,SimplePOS.Inventory,StockArticle,C:\repos\juehv_SPOS\src\SimplePOS\Stock\StockArticle.xaml.cs,saveItemFromForm,The length of the statement  "		SimplePOS.Article.ArticleView window = new SimplePOS.Article.ArticleView (db' new SimplePOS.Article.RegularArticle (number)); " is 125.
Long Statement,SimplePOS.Inventory,StockList,C:\repos\juehv_SPOS\src\SimplePOS\Stock\StockList.xaml.cs,button4_Click,The length of the statement  "	MessageBoxResult result = MessageBox.Show ("Möchten Sie den Artikel wirklich aus dem Lager entfernen?"' "Artikel entfernen?"' MessageBoxButton.YesNo' MessageBoxImage.Question); " is 176.
Long Statement,SimplePOS.Invoicing,SaveableInvoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\SaveableInvoice.cs,ConvertInvoiceItems,The length of the statement  "		retval.Add (new SaveableInvoiceItem (item.Article.Number' item.Article.Name' item.Quantity' item.Article.Price' item.Article.Tax)); " is 131.
Long Statement,SimplePOS.Invoicing,SaveableInvoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\SaveableInvoice.cs,ToCsvLines,The length of the statement  "		sb.Append ("\"").Append (Util.Timehelper.getDateFromTimestampAsString (date' "{0:yyyy-MM-dd}")).Append ("\"").Append ("'"); " is 123.
Long Statement,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,Clone,The length of the statement  "	return new Invoice (this.currency' this.number' this.date' this.items' this.pageNumber' this.taxSet1' this.taxSet2' this.showTax); " is 130.
Long Statement,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,getArticleList,The length of the statement  "			retval.Add ("    " + string.Format ("{0:00}"' item.Quantity) + " x " + string.Format ("{0:0.00}"' item.Article.Price) + currency); " is 130.
Long Statement,SimplePOS.Printing,PrintingPreprocessor,C:\repos\juehv_SPOS\src\SimplePOS\Printing\PrintingPreprocessor.cs,ProcessInvoices,The length of the statement  "				pages.Add (new SimplePOS.Invoicing.Invoice (invoice' pageCount++' aktStack' invoice.TaxSet1' invoice.TaxSet2' invoice.ShowTax)); " is 128.
Long Statement,SimplePOS.Printing,PrintingPreprocessor,C:\repos\juehv_SPOS\src\SimplePOS\Printing\PrintingPreprocessor.cs,ProcessInvoices,The length of the statement  "			pages.Add (new SimplePOS.Invoicing.Invoice (invoice' pageCount++' aktStack' invoice.TaxSet1' invoice.TaxSet2' invoice.ShowTax)); " is 128.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,clearForm,The length of the statement  "	invoice = new Invoice (-1' DateTime.Now' new List<InvoiceItem> ()' Preferences.PreferenceManager.TAX_1' Preferences.PreferenceManager.TAX_2' Preferences.PreferenceManager.SHOW_TAX); " is 181.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,stornoAction,The length of the statement  "	MessageBoxResult result = MessageBox.Show ("Möchten Sie folgenden Artikel stornieren?\n\"" + item.Article.Name + "\""' "Storno?"' MessageBoxButton.YesNo' MessageBoxImage.Question); " is 180.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,newInoiceAction,The length of the statement  "	MessageBoxResult result = MessageBox.Show ("Möchten Sie die aktuelle Rechnung löschen?"' "Löschen?"' MessageBoxButton.YesNo' MessageBoxImage.Warning); " is 150.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_11,The length of the statement  "	MessageBox.Show ("Simple POS\n(c) Jens Heuschkel\n\nVersion " + Preferences.PreferenceManager.VERSION + "\nAchtung: Testversion!\nNicht für den Produktiveinsatz."' ""' MessageBoxButton.OK' MessageBoxImage.None); " is 211.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The length of the statement  "				MessageBoxResult result = MessageBox.Show ("Neuere Version gefunden!\n" + "Möchten Sie die neue Version herunterladen?"' "Update verfügbar"' MessageBoxButton.YesNo' MessageBoxImage.Information); " is 194.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The length of the statement  "			MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error); " is 124.
Long Statement,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The length of the statement  "		MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error); " is 124.
Empty Catch Block,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ParseCSV,The method has an empty catch block.
Magic Number,SimplePOS.Article,DiscountInputBox,C:\repos\juehv_SPOS\src\SimplePOS\Article\DiscountInputBox.xaml.cs,textBox1_KeyUp,The following statement contains a magic number: try {  	int input = Int32.Parse (textBox1.Text);  	textBox2.Text = string.Format ("{0:0.00}"' ((Double)input / 100)) + " " + Preferences.PreferenceManager.CURRENCY_FORM;  }  catch {  	textBox2.Text = "kein Rabatt";  }  
Magic Number,SimplePOS.Article,DiscountInputBox,C:\repos\juehv_SPOS\src\SimplePOS\Article\DiscountInputBox.xaml.cs,textBox1_KeyUp,The following statement contains a magic number: textBox2.Text = string.Format ("{0:0.00}"' ((Double)input / 100)) + " " + Preferences.PreferenceManager.CURRENCY_FORM;  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: if (reader.FieldCount != 5 && !reader.HasRows) {  	return false;  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: while (reader.Read ()) {  	object[] values = new object[5];  	int result = reader.GetValues (values);  	if (result > 0) {  		try {  			// Text may be empty wich results in a strange object  			string text;  			try {  				text = (string)values [2];  			}  			catch {  				text = "";  			}  			articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  		}  		catch {  			return false;  		}  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: while (reader.Read ()) {  	object[] values = new object[5];  	int result = reader.GetValues (values);  	if (result > 0) {  		try {  			// Text may be empty wich results in a strange object  			string text;  			try {  				text = (string)values [2];  			}  			catch {  				text = "";  			}  			articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  		}  		catch {  			return false;  		}  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: while (reader.Read ()) {  	object[] values = new object[5];  	int result = reader.GetValues (values);  	if (result > 0) {  		try {  			// Text may be empty wich results in a strange object  			string text;  			try {  				text = (string)values [2];  			}  			catch {  				text = "";  			}  			articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  		}  		catch {  			return false;  		}  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: while (reader.Read ()) {  	object[] values = new object[5];  	int result = reader.GetValues (values);  	if (result > 0) {  		try {  			// Text may be empty wich results in a strange object  			string text;  			try {  				text = (string)values [2];  			}  			catch {  				text = "";  			}  			articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  		}  		catch {  			return false;  		}  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: if (result > 0) {  	try {  		// Text may be empty wich results in a strange object  		string text;  		try {  			text = (string)values [2];  		}  		catch {  			text = "";  		}  		articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  	}  	catch {  		return false;  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: if (result > 0) {  	try {  		// Text may be empty wich results in a strange object  		string text;  		try {  			text = (string)values [2];  		}  		catch {  			text = "";  		}  		articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  	}  	catch {  		return false;  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: if (result > 0) {  	try {  		// Text may be empty wich results in a strange object  		string text;  		try {  			text = (string)values [2];  		}  		catch {  			text = "";  		}  		articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  	}  	catch {  		return false;  	}  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: try {  	// Text may be empty wich results in a strange object  	string text;  	try {  		text = (string)values [2];  	}  	catch {  		text = "";  	}  	articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  }  catch {  	return false;  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: try {  	// Text may be empty wich results in a strange object  	string text;  	try {  		text = (string)values [2];  	}  	catch {  		text = "";  	}  	articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  }  catch {  	return false;  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: try {  	// Text may be empty wich results in a strange object  	string text;  	try {  		text = (string)values [2];  	}  	catch {  		text = "";  	}  	articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  }  catch {  	return false;  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: try {  	text = (string)values [2];  }  catch {  	text = "";  }  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: text = (string)values [2];  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  
Magic Number,SimplePOS.Database,Importer,C:\repos\juehv_SPOS\src\SimplePOS\Database\Importer.cs,ImportArticleFromCsv,The following statement contains a magic number: articleList.Add (new SimplePOS.Article.RegularArticle ((string)values [0]' (string)values [1]' text' Double.Parse ((string)values [3])' Double.Parse ((string)values [4])));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article WHERE item_id LIKE ? ORDER BY item_id LIMIT 1;";  	command.Parameters.Add (new SQLiteParameter ("item_id"' number));  	SQLiteDataReader reader = command.ExecuteReader ();  	while (reader.Read ()) {  		retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  	}  	reader.Close ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article WHERE item_id LIKE ? ORDER BY item_id LIMIT 1;";  	command.Parameters.Add (new SQLiteParameter ("item_id"' number));  	SQLiteDataReader reader = command.ExecuteReader ();  	while (reader.Read ()) {  		retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  	}  	reader.Close ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article WHERE item_id LIKE ? ORDER BY item_id LIMIT 1;";  	command.Parameters.Add (new SQLiteParameter ("item_id"' number));  	SQLiteDataReader reader = command.ExecuteReader ();  	while (reader.Read ()) {  		retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  	}  	reader.Close ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: while (reader.Read ()) {  	retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: while (reader.Read ()) {  	retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: while (reader.Read ()) {  	retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetArticleByNumber,The following statement contains a magic number: retval = new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]);  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article ORDER BY item_id;";  	SQLiteDataReader reader = command.ExecuteReader ();  	while (reader.Read ()) {  		retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  	}  	reader.Close ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article ORDER BY item_id;";  	SQLiteDataReader reader = command.ExecuteReader ();  	while (reader.Read ()) {  		retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  	}  	reader.Close ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT item_id' item_name' item_text' price' tax " + "FROM article ORDER BY item_id;";  	SQLiteDataReader reader = command.ExecuteReader ();  	while (reader.Read ()) {  		retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  	}  	reader.Close ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: while (reader.Read ()) {  	retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: while (reader.Read ()) {  	retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: while (reader.Read ()) {  	retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllArticles,The following statement contains a magic number: retval.Add (new SimplePOS.Article.RegularArticle (reader [0].ToString ()' reader [1].ToString ()' reader [2].ToString ()' (double)reader [3]' (double)reader [4]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	// load invoices  	command.CommandText = "SELECT invoice_id' invoice_date' invoice_amount'currency " + "FROM invoice ORDER BY invoice_id;";  	SQLiteDataReader invoiceReader = command.ExecuteReader ();  	while (invoiceReader.Read ()) {  		invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  	}  	invoiceReader.Close ();  	// load items sequentially  	SQLiteParameter invoice_id = new SQLiteParameter ("invoice_id");  	command.CommandText = "SELECT item_id' item_name' quantity' price' tax " + "FROM invoice_item WHERE invoice_id LIKE ? ORDER BY item_id;";  	command.Parameters.Add (invoice_id);  	foreach (SaveableInvoice invoice in invoiceList) {  		List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  		invoice_id.Value = invoice.Number;  		SQLiteDataReader itemReader = command.ExecuteReader ();  		while (itemReader.Read ()) {  			itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  		}  		itemReader.Close ();  		invoice.Items = itemList.ToArray ();  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	// load invoices  	command.CommandText = "SELECT invoice_id' invoice_date' invoice_amount'currency " + "FROM invoice ORDER BY invoice_id;";  	SQLiteDataReader invoiceReader = command.ExecuteReader ();  	while (invoiceReader.Read ()) {  		invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  	}  	invoiceReader.Close ();  	// load items sequentially  	SQLiteParameter invoice_id = new SQLiteParameter ("invoice_id");  	command.CommandText = "SELECT item_id' item_name' quantity' price' tax " + "FROM invoice_item WHERE invoice_id LIKE ? ORDER BY item_id;";  	command.Parameters.Add (invoice_id);  	foreach (SaveableInvoice invoice in invoiceList) {  		List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  		invoice_id.Value = invoice.Number;  		SQLiteDataReader itemReader = command.ExecuteReader ();  		while (itemReader.Read ()) {  			itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  		}  		itemReader.Close ();  		invoice.Items = itemList.ToArray ();  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	// load invoices  	command.CommandText = "SELECT invoice_id' invoice_date' invoice_amount'currency " + "FROM invoice ORDER BY invoice_id;";  	SQLiteDataReader invoiceReader = command.ExecuteReader ();  	while (invoiceReader.Read ()) {  		invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  	}  	invoiceReader.Close ();  	// load items sequentially  	SQLiteParameter invoice_id = new SQLiteParameter ("invoice_id");  	command.CommandText = "SELECT item_id' item_name' quantity' price' tax " + "FROM invoice_item WHERE invoice_id LIKE ? ORDER BY item_id;";  	command.Parameters.Add (invoice_id);  	foreach (SaveableInvoice invoice in invoiceList) {  		List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  		invoice_id.Value = invoice.Number;  		SQLiteDataReader itemReader = command.ExecuteReader ();  		while (itemReader.Read ()) {  			itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  		}  		itemReader.Close ();  		invoice.Items = itemList.ToArray ();  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	// load invoices  	command.CommandText = "SELECT invoice_id' invoice_date' invoice_amount'currency " + "FROM invoice ORDER BY invoice_id;";  	SQLiteDataReader invoiceReader = command.ExecuteReader ();  	while (invoiceReader.Read ()) {  		invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  	}  	invoiceReader.Close ();  	// load items sequentially  	SQLiteParameter invoice_id = new SQLiteParameter ("invoice_id");  	command.CommandText = "SELECT item_id' item_name' quantity' price' tax " + "FROM invoice_item WHERE invoice_id LIKE ? ORDER BY item_id;";  	command.Parameters.Add (invoice_id);  	foreach (SaveableInvoice invoice in invoiceList) {  		List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  		invoice_id.Value = invoice.Number;  		SQLiteDataReader itemReader = command.ExecuteReader ();  		while (itemReader.Read ()) {  			itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  		}  		itemReader.Close ();  		invoice.Items = itemList.ToArray ();  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	// load invoices  	command.CommandText = "SELECT invoice_id' invoice_date' invoice_amount'currency " + "FROM invoice ORDER BY invoice_id;";  	SQLiteDataReader invoiceReader = command.ExecuteReader ();  	while (invoiceReader.Read ()) {  		invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  	}  	invoiceReader.Close ();  	// load items sequentially  	SQLiteParameter invoice_id = new SQLiteParameter ("invoice_id");  	command.CommandText = "SELECT item_id' item_name' quantity' price' tax " + "FROM invoice_item WHERE invoice_id LIKE ? ORDER BY item_id;";  	command.Parameters.Add (invoice_id);  	foreach (SaveableInvoice invoice in invoiceList) {  		List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  		invoice_id.Value = invoice.Number;  		SQLiteDataReader itemReader = command.ExecuteReader ();  		while (itemReader.Read ()) {  			itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  		}  		itemReader.Close ();  		invoice.Items = itemList.ToArray ();  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: while (invoiceReader.Read ()) {  	invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: while (invoiceReader.Read ()) {  	invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: invoiceList.Add (new SimplePOS.Invoicing.SaveableInvoice ((long)invoiceReader [0]' (long)invoiceReader [1]' (double)invoiceReader [2]' invoiceReader [3].ToString ()));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: foreach (SaveableInvoice invoice in invoiceList) {  	List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  	invoice_id.Value = invoice.Number;  	SQLiteDataReader itemReader = command.ExecuteReader ();  	while (itemReader.Read ()) {  		itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  	}  	itemReader.Close ();  	invoice.Items = itemList.ToArray ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: foreach (SaveableInvoice invoice in invoiceList) {  	List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  	invoice_id.Value = invoice.Number;  	SQLiteDataReader itemReader = command.ExecuteReader ();  	while (itemReader.Read ()) {  		itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  	}  	itemReader.Close ();  	invoice.Items = itemList.ToArray ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: foreach (SaveableInvoice invoice in invoiceList) {  	List<SaveableInvoiceItem> itemList = new List<SaveableInvoiceItem> ();  	invoice_id.Value = invoice.Number;  	SQLiteDataReader itemReader = command.ExecuteReader ();  	while (itemReader.Read ()) {  		itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  	}  	itemReader.Close ();  	invoice.Items = itemList.ToArray ();  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: while (itemReader.Read ()) {  	itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: while (itemReader.Read ()) {  	itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: while (itemReader.Read ()) {  	itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetAllInvoices,The following statement contains a magic number: itemList.Add (new SaveableInvoiceItem (itemReader [0].ToString ()' itemReader [1].ToString ()' (double)itemReader [2]' (double)itemReader [3]' (double)itemReader [4]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,LoadPreferences,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	Dictionary<string' string> prefs = new Dictionary<string' string> ();  	command.CommandText = "SELECT key' value FROM preferences;";  	SQLiteDataReader reader = command.ExecuteReader ();  	// Read pref set  	while (reader.Read ()) {  		prefs.Add (reader [0].ToString ()' reader [1].ToString ());  	}  	reader.Close ();  	// Write to pref class  	if (prefs.Count == 7) {  		//valid pref set  		// doubleprint  		if (prefs ["DOUBLEPRINT"].Equals ("1")) {  			Preferences.PreferenceManager.DOUBLEPRINT = true;  		}  		else {  			Preferences.PreferenceManager.DOUBLEPRINT = false;  		}  		// currency  		Preferences.PreferenceManager.CURRENCY_TECH = prefs ["CURRENCY"];  		// show tax  		if (prefs ["SHOW_TAX"].Equals ("1")) {  			Preferences.PreferenceManager.SHOW_TAX = true;  		}  		else {  			Preferences.PreferenceManager.SHOW_TAX = false;  		}  		// tax1  		Preferences.PreferenceManager.TAX_1 = double.Parse (prefs ["TAX1"]);  		// tax2  		Preferences.PreferenceManager.TAX_2 = double.Parse (prefs ["TAX2"]);  		// invoice number start  		Preferences.PreferenceManager.INVOICE_NUMBER_START = long.Parse (prefs ["INVOICE_NUMBER_START"]);  		// date format string  		Preferences.PreferenceManager.DATE_FORMAT_STRING = prefs ["DATE_FORMAT_STRING"];  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,LoadPreferences,The following statement contains a magic number: if (prefs.Count == 7) {  	//valid pref set  	// doubleprint  	if (prefs ["DOUBLEPRINT"].Equals ("1")) {  		Preferences.PreferenceManager.DOUBLEPRINT = true;  	}  	else {  		Preferences.PreferenceManager.DOUBLEPRINT = false;  	}  	// currency  	Preferences.PreferenceManager.CURRENCY_TECH = prefs ["CURRENCY"];  	// show tax  	if (prefs ["SHOW_TAX"].Equals ("1")) {  		Preferences.PreferenceManager.SHOW_TAX = true;  	}  	else {  		Preferences.PreferenceManager.SHOW_TAX = false;  	}  	// tax1  	Preferences.PreferenceManager.TAX_1 = double.Parse (prefs ["TAX1"]);  	// tax2  	Preferences.PreferenceManager.TAX_2 = double.Parse (prefs ["TAX2"]);  	// invoice number start  	Preferences.PreferenceManager.INVOICE_NUMBER_START = long.Parse (prefs ["INVOICE_NUMBER_START"]);  	// date format string  	Preferences.PreferenceManager.DATE_FORMAT_STRING = prefs ["DATE_FORMAT_STRING"];  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,ChangeIventory,The following statement contains a magic number: try {  	using (SQLiteCommand command = new SQLiteCommand (connection)) {  		command.CommandText = "UPDATE stock SET actual_stock = " + quantity + " WHERE item_id LIKE ?;";  		command.Parameters.Add (new SQLiteParameter ("item_id"' number));  		command.ExecuteNonQuery ();  	}  	result = 0;  }  catch (Exception) {  	result = 8;  	throw;  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,ChangeIventory,The following statement contains a magic number: result = 8;  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT a.item_name' a.item_id' s.item_quantity' s.actual_stock " + "FROM article AS a INNER JOIN stock AS s ON a.item_id = s.item_id AND s.actual_stock IS NOT NULL;";  	SQLiteDataReader Reader = command.ExecuteReader ();  	while (Reader.Read ()) {  		InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3]));  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The following statement contains a magic number: using (SQLiteCommand command = new SQLiteCommand (connection)) {  	command.CommandText = "SELECT a.item_name' a.item_id' s.item_quantity' s.actual_stock " + "FROM article AS a INNER JOIN stock AS s ON a.item_id = s.item_id AND s.actual_stock IS NOT NULL;";  	SQLiteDataReader Reader = command.ExecuteReader ();  	while (Reader.Read ()) {  		InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3]));  	}  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The following statement contains a magic number: while (Reader.Read ()) {  	InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The following statement contains a magic number: while (Reader.Read ()) {  	InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3]));  }  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The following statement contains a magic number: InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3]));  
Magic Number,SimplePOS.Database,SQL_DAO,C:\repos\juehv_SPOS\src\SimplePOS\Database\SQL_DAO.cs,GetInventory,The following statement contains a magic number: InventoryList.Add (new SimplePOS.InventoryItem.InventoryItem (Reader [0].ToString ()' Reader [1].ToString ()' (double)Reader [2]' (double)Reader [3]));  
Magic Number,SimplePOS.Inventory,StockList,C:\repos\juehv_SPOS\src\SimplePOS\Stock\StockList.xaml.cs,button3_Click,The following statement contains a magic number: dataGrid1.Columns [2].IsReadOnly = false;  
Magic Number,SimplePOS.Inventory,StockList,C:\repos\juehv_SPOS\src\SimplePOS\Stock\StockList.xaml.cs,button10_Click,The following statement contains a magic number: dataGrid1.Columns [2].IsReadOnly = true;  
Magic Number,SimplePOS.Invoicing,SaveableInvoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\SaveableInvoice.cs,ToCsvLines,The following statement contains a magic number: sb.Remove (sb.Length - 2' 2);  
Magic Number,SimplePOS.Invoicing,SaveableInvoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\SaveableInvoice.cs,ToCsvLines,The following statement contains a magic number: sb.Remove (sb.Length - 2' 2);  
Magic Number,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,getTax1,The following statement contains a magic number: foreach (InvoiceItem item in items) {  	if (item.Article.Type == Article.AbstractArticle.ArticleType.ARTICLE) {  		double currentTax = ((SimplePOS.Article.RegularArticle)item.Article).Tax;  		if (currentTax == Preferences.PreferenceManager.TAX_1) {  			//calc netto  			double netto = item.Article.Price / (currentTax / 100 + 1);  			double tmpTax = item.Article.Price - netto;  			retval += item.Quantity * tmpTax;  		}  	}  }  
Magic Number,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,getTax1,The following statement contains a magic number: if (item.Article.Type == Article.AbstractArticle.ArticleType.ARTICLE) {  	double currentTax = ((SimplePOS.Article.RegularArticle)item.Article).Tax;  	if (currentTax == Preferences.PreferenceManager.TAX_1) {  		//calc netto  		double netto = item.Article.Price / (currentTax / 100 + 1);  		double tmpTax = item.Article.Price - netto;  		retval += item.Quantity * tmpTax;  	}  }  
Magic Number,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,getTax1,The following statement contains a magic number: if (currentTax == Preferences.PreferenceManager.TAX_1) {  	//calc netto  	double netto = item.Article.Price / (currentTax / 100 + 1);  	double tmpTax = item.Article.Price - netto;  	retval += item.Quantity * tmpTax;  }  
Magic Number,SimplePOS.Printing,A4,C:\repos\juehv_SPOS\src\SimplePOS\Printing\A4.xaml.cs,getGrid,The following statement contains a magic number: this.Measure (new System.Windows.Size (592' 555));  
Magic Number,SimplePOS.Printing,A4,C:\repos\juehv_SPOS\src\SimplePOS\Printing\A4.xaml.cs,getGrid,The following statement contains a magic number: this.Measure (new System.Windows.Size (592' 555));  
Magic Number,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The following statement contains a magic number: if (versionString.Length >= 7) {  	string[] version = versionString.Split (new char[] {  		'.'  	});  	string[] currVersion = Preferences.PreferenceManager.VERSION.Split (new char[] {  		'.'  	});  	bool mustUpdate = false;  	try {  		for (int i = 0; i < 4; i++) {  			if (Convert.ToInt32 (currVersion [i]) > Convert.ToInt32 (version [i])) {  				break;  			}  			if (Convert.ToInt32 (currVersion [i]) < Convert.ToInt32 (version [i])) {  				mustUpdate = true;  				break;  			}  			//if (Convert.ToInt32(currVersion[i]) == Convert.ToInt32(version[i]))  			//{  			//    continue;  			//}  		}  		if (mustUpdate) {  			MessageBoxResult result = MessageBox.Show ("Neuere Version gefunden!\n" + "Möchten Sie die neue Version herunterladen?"' "Update verfügbar"' MessageBoxButton.YesNo' MessageBoxImage.Information);  			if (result == MessageBoxResult.Yes) {  				System.Diagnostics.Process.Start ("http://www.juehv-tech.de/qad/spos/?download");  			}  		}  		else {  			MessageBox.Show ("Ihre Software ist aktuell."' "Aktuell"' MessageBoxButton.OK' MessageBoxImage.Information);  		}  	}  	catch {  		MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error);  	}  }  else {  	MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error);  }  
Magic Number,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The following statement contains a magic number: if (versionString.Length >= 7) {  	string[] version = versionString.Split (new char[] {  		'.'  	});  	string[] currVersion = Preferences.PreferenceManager.VERSION.Split (new char[] {  		'.'  	});  	bool mustUpdate = false;  	try {  		for (int i = 0; i < 4; i++) {  			if (Convert.ToInt32 (currVersion [i]) > Convert.ToInt32 (version [i])) {  				break;  			}  			if (Convert.ToInt32 (currVersion [i]) < Convert.ToInt32 (version [i])) {  				mustUpdate = true;  				break;  			}  			//if (Convert.ToInt32(currVersion[i]) == Convert.ToInt32(version[i]))  			//{  			//    continue;  			//}  		}  		if (mustUpdate) {  			MessageBoxResult result = MessageBox.Show ("Neuere Version gefunden!\n" + "Möchten Sie die neue Version herunterladen?"' "Update verfügbar"' MessageBoxButton.YesNo' MessageBoxImage.Information);  			if (result == MessageBoxResult.Yes) {  				System.Diagnostics.Process.Start ("http://www.juehv-tech.de/qad/spos/?download");  			}  		}  		else {  			MessageBox.Show ("Ihre Software ist aktuell."' "Aktuell"' MessageBoxButton.OK' MessageBoxImage.Information);  		}  	}  	catch {  		MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error);  	}  }  else {  	MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error);  }  
Magic Number,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The following statement contains a magic number: try {  	for (int i = 0; i < 4; i++) {  		if (Convert.ToInt32 (currVersion [i]) > Convert.ToInt32 (version [i])) {  			break;  		}  		if (Convert.ToInt32 (currVersion [i]) < Convert.ToInt32 (version [i])) {  			mustUpdate = true;  			break;  		}  		//if (Convert.ToInt32(currVersion[i]) == Convert.ToInt32(version[i]))  		//{  		//    continue;  		//}  	}  	if (mustUpdate) {  		MessageBoxResult result = MessageBox.Show ("Neuere Version gefunden!\n" + "Möchten Sie die neue Version herunterladen?"' "Update verfügbar"' MessageBoxButton.YesNo' MessageBoxImage.Information);  		if (result == MessageBoxResult.Yes) {  			System.Diagnostics.Process.Start ("http://www.juehv-tech.de/qad/spos/?download");  		}  	}  	else {  		MessageBox.Show ("Ihre Software ist aktuell."' "Aktuell"' MessageBoxButton.OK' MessageBoxImage.Information);  	}  }  catch {  	MessageBox.Show ("Fehler beim lesen der Versionsnummer:\n" + versionString' ""' MessageBoxButton.OK' MessageBoxImage.Error);  }  
Magic Number,SimplePOS,MainWindow,C:\repos\juehv_SPOS\src\SimplePOS\MainWindow.xaml.cs,MenuItem_Click_12,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	if (Convert.ToInt32 (currVersion [i]) > Convert.ToInt32 (version [i])) {  		break;  	}  	if (Convert.ToInt32 (currVersion [i]) < Convert.ToInt32 (version [i])) {  		mustUpdate = true;  		break;  	}  	//if (Convert.ToInt32(currVersion[i]) == Convert.ToInt32(version[i]))  	//{  	//    continue;  	//}  }  
Missing Default,SimplePOS.Article,ArtikelProcessor,C:\repos\juehv_SPOS\src\SimplePOS\Article\ArtikelProcessor.cs,preprocessArtikel,The following switch statement is missing a default case: switch (convertToType (number)) {  case AbstractArticle.ArticleType.ARTICLE:  	article = db.GetArticleByNumber (number);  	if (article == null) {  		// Artikel ist nicht vorhanden --> neu anlegen  		ArticleView window = new ArticleView (db' new RegularArticle (number));  		window.Owner = parent;  		window.ShowDialog ();  		article = db.GetArticleByNumber (number);  		// wenn nichts gültiges eingegeben wird --> beenden  		if (article == null) {  			return null;  		}  	}  	break;  case AbstractArticle.ArticleType.DISCOUNT:  	int discountInCent = Discount.getAmountOfTag (number);  	if (discountInCent < 0) {  		// Wenn der Tag keinen Wertenthält muss eine Nutzereingabe erfolgen  		DiscountInputBox widow = new DiscountInputBox ();  		widow.Owner = parent;  		int userValue = widow.ShowWithResult ();  		if (userValue > 0) {  			discountInCent = userValue;  		}  		else {  			// Wenn keine korrekte Eingabe erfolgt -> Ende.  			return null;  		}  	}  	article = new Discount (discountInCent);  	break;  }  
Missing Default,SimplePOS.Invoicing,Invoice,C:\repos\juehv_SPOS\src\SimplePOS\Invoicing\Invoice.cs,addItem,The following switch statement is missing a default case: switch (SimplePOS.Article.ArtikelProcessor.convertToType (article.Number)) {  case SimplePOS.Article.AbstractArticle.ArticleType.ARTICLE:  	addItem (article' 1);  	return;  case SimplePOS.Article.AbstractArticle.ArticleType.DISCOUNT:  	addDiscount (article);  	return;  }  
