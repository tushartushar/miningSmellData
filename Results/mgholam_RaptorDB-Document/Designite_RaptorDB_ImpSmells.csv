Implementation smell,Namespace,Class,File,Method,Description
Long Method,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The method has 267 lines of code.
Long Method,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The method has 243 lines of code.
Long Method,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The method has 102 lines of code.
Long Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,GenerateSchemaColumns,The method has 107 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The method has 122 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,NextToken,The method has 200 lines of code.
Complex Method,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,ByteHandler,Cyclomatic complexity of the method is 13
Complex Method,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,Cyclomatic complexity of the method is 12
Complex Method,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,Deserialize,Cyclomatic complexity of the method is 10
Complex Method,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,containerAND,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,containerOR,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Flush,Cyclomatic complexity of the method is 8
Complex Method,RaptorDB,Hoot,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\Hoot.cs,ExecutionPlan,Cyclomatic complexity of the method is 16
Complex Method,RaptorDB,MGIndex<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\MGIndex.cs,Query,Cyclomatic complexity of the method is 12
Complex Method,RaptorDB,MGIndex<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\MGIndex.cs,doLessOp,Cyclomatic complexity of the method is 8
Complex Method,RaptorDB,tokenizer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\tokenizer.cs,ParseString,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB,aWebServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\aWebServer.cs,ListenerCallback,Cyclomatic complexity of the method is 10
Complex Method,RaptorDB,aWebServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\aWebServer.cs,OutPutContentType,Cyclomatic complexity of the method is 12
Complex Method,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Save,Cyclomatic complexity of the method is 8
Complex Method,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,ProcessReplicationInbox,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,Cyclomatic complexity of the method is 11
Complex Method,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,_saveTimer_Elapsed,Cyclomatic complexity of the method is 11
Complex Method,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,_fulltextTimer_Elapsed,Cyclomatic complexity of the method is 10
Complex Method,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,RebuildDataFiles,Cyclomatic complexity of the method is 15
Complex Method,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,Increment,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,internalWriteData,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitBinary,Cyclomatic complexity of the method is 14
Complex Method,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitMethodCall,Cyclomatic complexity of the method is 8
Complex Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,SetView,Cyclomatic complexity of the method is 11
Complex Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,Query,Cyclomatic complexity of the method is 10
Complex Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,ReturnRowsTyped,Cyclomatic complexity of the method is 16
Complex Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,RebuildFromScratch,Cyclomatic complexity of the method is 9
Complex Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,GenerateSchemaColumns,Cyclomatic complexity of the method is 30
Complex Method,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,SortBy,Cyclomatic complexity of the method is 8
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseComparison,Cyclomatic complexity of the method is 13
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseIntegerLiteral,Cyclomatic complexity of the method is 8
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,PromoteExpression,Cyclomatic complexity of the method is 12
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseNumber,Cyclomatic complexity of the method is 22
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,Cyclomatic complexity of the method is 14
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,CompareConversions,Cyclomatic complexity of the method is 8
Complex Method,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,NextToken,Cyclomatic complexity of the method is 36
Long Parameter List,RaptorDB,FullTextIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\Indexes.cs,FullTextIndex,The method has 5 parameters. Parameters: IndexPath' FileName' docmode' sortable' tokenizer
Long Parameter List,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreatePageListData,The method has 6 parameters. Parameters: _pages' offset' rowindex' counter' page' blocknum
Long Parameter List,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Query,The method has 5 parameters. Parameters: viewname' filter' start' count' orderby
Long Parameter List,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,extractrowobject,The method has 7 parameters. Parameters: count' rows' skip' cc' del' order' idx
Long Parameter List,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,extractsortrowobject,The method has 7 parameters. Parameters: ba' count' orderby' rows' skip' c' idx
Long Parameter List,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,ReturnRowsTyped,The method has 6 parameters. Parameters: ba' trows' start' count' orderby' descending
Long Parameter List,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,extractsortrowT,The method has 7 parameters. Parameters: ba' count' orderby' rows' skip' c' idx
Long Parameter List,RaptorDB.Views,ViewManager,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewManager.cs,Query,The method has 5 parameters. Parameters: viewname' filter' start' count' orderby
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,CheckAndPromoteOperands,The method has 5 parameters. Parameters: signatures' opName' left' right' errorPos
Long Parameter List,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,FindMethod,The method has 5 parameters. Parameters: type' methodName' staticAccess' args' method
Long Identifier,RaptorDB,Global,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Global.cs,,The length of the parameter BackgroundFullTextIndexBatchSize is 32.
Long Identifier,System.Linq.Dynamic,Res,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,,The length of the parameter AmbiguousConstructorInvocation is 30.
Long Statement,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Optimize,The length of the statement  "                        Stream _newrec = new FileStream(_Path + _FileName + "$" + _recExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite); " is 133.
Long Statement,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Optimize,The length of the statement  "                        Stream _newbmp = new FileStream(_Path + _FileName + "$" + _bmpExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite); " is 133.
Long Statement,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Initialize,The length of the statement  "            _recordFileRead = new FileStream(_Path + _FileName + _recExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite); " is 128.
Long Statement,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Initialize,The length of the statement  "            _recordFileWriteOrg = new FileStream(_Path + _FileName + _recExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite); " is 132.
Long Statement,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Initialize,The length of the statement  "            _bitmapFileRead = new FileStream(_Path + _FileName + _bmpExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite); " is 128.
Long Statement,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Initialize,The length of the statement  "            _bitmapFileWriteOrg = new FileStream(_Path + _FileName + _bmpExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite); " is 132.
Long Statement,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The length of the statement  "                    ret.Data = _defaultInstance.rdb.ServerSide(GetServerSideFuncCache(param[0].ToString()' param[1].ToString())' param[2].ToString()); " is 130.
Long Statement,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The length of the statement  "                    ret.Data = _defaultInstance.rdb.ServerSide(GetServerSideFuncWithArgsCache(param[0].ToString()' param[1].ToString())' param[2].ToString()' param[3]); " is 148.
Long Statement,RaptorDB,aWebServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\aWebServer.cs,ListenerCallback,The length of the statement  "                            WriteResponse(ctx' 404' "route path not found : " + ctx.Request.Url.GetComponents(UriComponents.Path' UriFormat.Unescaped)); " is 124.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                        o.Add(new { Name = v.Name' Description = v.Description' BackgroundIndexing = v.BackgroundIndexing' Version = v.Version' isPrimaryList = v.isPrimaryList }); " is 155.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToJSON(oo' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' EnableAnonymousTypes = true }); " is 138.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToNiceJSON(_rdb.Fetch(g)' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false }); " is 150.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToJSON(h' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false }); " is 135.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToNiceJSON(oo' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false }); " is 139.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToNiceJSON(_rdb.FetchBytes(g)' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false }); " is 155.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToJSON(h' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false }); " is 135.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToNiceJSON(oo' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false }); " is 139.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToJSON(obj' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true }); " is 166.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToJSON(obj' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true }); " is 166.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The length of the statement  "                    var s = fastJSON.JSON.ToNiceJSON(h' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true }); " is 168.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,GetViewInfo,The length of the statement  "            var s = fastJSON.JSON.ToJSON(obj' new fastJSON.JSONParameters { UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true }); " is 143.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,OutputJsonData,The length of the statement  "            var s = fastJSON.JSON.ToJSON(resf' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' EnableAnonymousTypes = true }); " is 140.
Long Statement,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,ProcessGET,The length of the statement  "                var s = fastJSON.JSON.ToJSON(result' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' EnableAnonymousTypes = true }); " is 142.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Shutdown,The length of the statement  "            File.WriteAllText(_Path + "RaptorDB.config"' fastJSON.JSON.ToNiceJSON(new Global()' new fastJSON.JSONParameters { UseExtensions = false })); " is 140.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Shutdown,The length of the statement  "            File.WriteAllBytes(_Path + "Data" + _S + "Fulltext" + _S + "_fulltext.rec"' Helper.GetBytes(_LastFulltextIndexed' false)); " is 122.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Backup,The length of the statement  "                File.Move(tempp + _S + "backup.mgdat.gz"' _Path + "Backup" + _S + DateTime.Now.ToString("yyyy-MM-dd-HH-mm") + ".mgdat.gz"); " is 123.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,DoRepProcessing,The length of the statement  "                            string err = Properties.Resources.msg.Replace("%js%"' fastJSON.JSON.Beautify(Helper.GetString(i.data' 0' (short)i.data.Length))) " is 128.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The length of the statement  "                _repserver = new Replication.ReplicationServer(_Path' File.ReadAllText(_Path + "RaptorDB-Replication.config")' _objStore); " is 122.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,UpgradeStorageFile,The length of the statement  "            _log.Debug("Upgrading storage file version from " + ver + " to " + StorageFile<int>._CurrentVersion + " on file : " + filename); " is 128.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,_fulltextTimer_Elapsed,The length of the statement  "                            string json = fastJSON.JSON.ToJSON(obj' new fastJSON.JSONParameters { UseEscapedUnicode = false' UseFastGuid = false }); " is 120.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The length of the statement  "                File.WriteAllText(_Path + "-RaptorDB.config"' fastJSON.JSON.ToNiceJSON(new Global()' new fastJSON.JSONParameters { UseExtensions = false })); " is 141.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The length of the statement  "                File.WriteAllText(_Path + "-RaptorDB-Branch.config"' fastJSON.JSON.ToNiceJSON(new Replication.ClientConfiguration()' new fastJSON.JSONParameters { UseExtensions = false })); " is 173.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The length of the statement  "                s.What.Add(new Replication.WhatItem { Name = "default"' PackageItemLimit = 10000' Version = 1' B2HQtypes = new List<string> { "*" }' HQ2Btypes = new List<string> { "*" } }); " is 173.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The length of the statement  "                s.What.Add(new Replication.WhatItem { Name = "b2"' PackageItemLimit = 10000' Version = 1' B2HQtypes = new List<string> { "*" }' HQ2Btypes = new List<string> { "config.*" } }); " is 175.
Long Statement,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The length of the statement  "                File.WriteAllText(_Path + "-RaptorDB-Replication.config"' fastJSON.JSON.ToNiceJSON(s' new fastJSON.JSONParameters { UseExtensions = false })); " is 142.
Long Statement,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,CreateNewStorageFile,The length of the statement  "            FileStream file = new FileStream(_filename + i.ToString(_splitfileExtension)' FileMode.Open' FileAccess.Read' FileShare.ReadWrite); " is 131.
Long Statement,RaptorDB.Replication,ReplicationClient,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\ReplicationClient.cs,Initialize,The length of the statement  "                _clientConfig = fastBinaryJSON.BJSON.ToObject<ClientRepConfig>(File.ReadAllBytes(_path + "Replication" + _S + "branch.dat")); " is 125.
Long Statement,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,CreateRowFillerDelegate,The length of the statement  "            DynamicMethod dynMethod = new DynamicMethod("rowfill"' typeof(object)' new Type[] { typeof(object)' typeof(object[]) }); " is 120.
Long Statement,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,CallIn,The length of the statement  "            return Expression.Call(method'  new Expression[] { ConstantExpression.Variable(datatype' pname)' Expression.NewArrayInit(datatype' args) }); " is 140.
Complex Conditional,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The conditional expression  "b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]"  is complex.
Complex Conditional,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The conditional expression  "b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]"  is complex.
Complex Conditional,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitBinary,The conditional expression  "t == ExpressionType.Equal || t == ExpressionType.NotEqual ||                  t == ExpressionType.LessThan || t == ExpressionType.LessThanOrEqual ||                  t == ExpressionType.GreaterThan || t == ExpressionType.GreaterThanOrEqual"  is complex.
Complex Conditional,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitBinary,The conditional expression  "t == ExpressionType.Equal || t == ExpressionType.NotEqual ||                  t == ExpressionType.LessThanOrEqual || t == ExpressionType.LessThan ||                  t == ExpressionType.GreaterThanOrEqual || t == ExpressionType.GreaterThan"  is complex.
Complex Conditional,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitBinary,The conditional expression  "t == ExpressionType.And || t == ExpressionType.AndAlso ||                  t == ExpressionType.Or || t == ExpressionType.OrElse"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseComparison,The conditional expression  "token.id == TokenId.Equal || token.id == TokenId.DoubleEqual ||                  token.id == TokenId.ExclamationEqual || token.id == TokenId.LessGreater ||                  token.id == TokenId.GreaterThan || token.id == TokenId.GreaterThanEqual ||                  token.id == TokenId.LessThan || token.id == TokenId.LessThanEqual"  is complex.
Empty Catch Block,RaptorDB,CronJob,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronJob.cs,abort,The method has an empty catch block.
Empty Catch Block,RaptorDB,MGIndex<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\MGIndex.cs,FreeMemory,The method has an empty catch block.
Empty Catch Block,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,GetMemoryUsage,The method has an empty catch block.
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate,The following statement contains a magic number: generate_days_of_month(matches[2].ToString());
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate,The following statement contains a magic number: matches.Count > 2
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate,The following statement contains a magic number: generate_months(matches[3].ToString());
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate,The following statement contains a magic number: matches.Count > 3
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate,The following statement contains a magic number: generate_days_of_weeks(matches[4].ToString());
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate,The following statement contains a magic number: matches.Count > 4
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate_minutes,The following statement contains a magic number: this.minutes = generate_values(match' 0' 60);
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate_hours,The following statement contains a magic number: this.hours = generate_values(match' 0' 24);
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate_days_of_month,The following statement contains a magic number: this.days_of_month = generate_values(match' 1' 32);
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate_months,The following statement contains a magic number: this.months = generate_values(match' 1' 13);
Magic Number,RaptorDB,CronSchedule,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\cron\CronSchedule.cs,generate_days_of_weeks,The following statement contains a magic number: this.days_of_week = generate_values(match' 0' 7);
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: byte size = 4;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 4;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 4;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 8;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 16;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 8;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 16;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 4;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 2;
Magic Number,RaptorDB,RDBDataType<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetByteSize,The following statement contains a magic number: size = 8;
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetBytes,The following statement contains a magic number: byte[] b = new byte[16];
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetBytes,The following statement contains a magic number: Buffer.BlockCopy(db' 0' b' index' 4);
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetBytes,The following statement contains a magic number: index += 4;
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: int[] i = new int[4];
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: offset += 4;
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: offset += 4;
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: i[2] = Helper.ToInt32(buffer' offset);
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: offset += 4;
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: i[3] = Helper.ToInt32(buffer' offset);
Magic Number,RaptorDB,decimal_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: offset += 4;
Magic Number,RaptorDB,guid_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: byte[] b = new byte[16];
Magic Number,RaptorDB,guid_handler<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\DataTypes\DataTypes.cs,GetObject,The following statement contains a magic number: Buffer.BlockCopy(buffer' offset' b' 0' 16);
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,BitmapContainer,The following statement contains a magic number: Size = _values.Length * 64;
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,GetBitIndexes,The following statement contains a magic number: ulong mask = (ulong)1 << (63 - i);
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,GetBitIndexes,The following statement contains a magic number: i < 64
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,GetBitIndexes,The following statement contains a magic number: c += 64;
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Get,The following statement contains a magic number: int pos = (ushort)offset >> 6;
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Get,The following statement contains a magic number: int off = (int)(offset % 64);
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Get,The following statement contains a magic number: ulong mask = (ulong)1 << (63 - off);
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Set,The following statement contains a magic number: _values = new ulong[1024];
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Set,The following statement contains a magic number: i < 1024
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Set,The following statement contains a magic number: int pos = (ushort)offset >> 6;
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Set,The following statement contains a magic number: int off = (int)(offset % 64);
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Set,The following statement contains a magic number: ulong mask = (ulong)1 << (63 - off);
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Set,The following statement contains a magic number: Size = _values.Length * 64;
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,ChangeRequired,The following statement contains a magic number: var bytes = _values.Length << 3;
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Not,The following statement contains a magic number: var vals = new ulong[1024];
Magic Number,RaptorDB,BitmapContainer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,Not,The following statement contains a magic number: i < 1024
Magic Number,RaptorDB,Container,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,BitCount,The following statement contains a magic number: x = (x & 0x3333333333333333UL) + ((x >> 2) & 0x3333333333333333UL);
Magic Number,RaptorDB,Container,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,BitCount,The following statement contains a magic number: x = (x + (x >> 4)) & 0x0F0F0F0F0F0F0F0FUL;
Magic Number,RaptorDB,Container,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\Container.cs,BitCount,The following statement contains a magic number: return (int)((x * 0x0101010101010101UL) >> 56);
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,MGRB,The following statement contains a magic number: _size = (k[l] << 16) + _containers.GetValue(l).Size;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,Set,The following statement contains a magic number: var idx = (int)(position >> 16);
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,Get,The following statement contains a magic number: var idx = (int)(position >> 16);
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,Not,The following statement contains a magic number: var c = count >> 16;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,GetBitIndexes,The following statement contains a magic number: int i = c.Key << 16;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,Deserialize,The following statement contains a magic number: _size = (k[l] << 16) + _containers.GetValue(l).Size;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,containerAND,The following statement contains a magic number: var la = av != null ? av.Length : 1024;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,containerAND,The following statement contains a magic number: var lb = bv != null ? bv.Length : 1024;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,containerOR,The following statement contains a magic number: var la = av != null ? av.Length : 1024;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,containerOR,The following statement contains a magic number: var lb = bv != null ? bv.Length : 1024;
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,GetBytes,The following statement contains a magic number: byte[] buffer = new byte[2];
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,ToByteArray,The following statement contains a magic number: byte[] byteArray = new byte[8 * arrayLength];
Magic Number,RaptorDB,MGRB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Helper\MGRB.cs,ToByteArray,The following statement contains a magic number: byte[] byteArray = new byte[2 * arrayLength];
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Optimize,The following statement contains a magic number: lock (_readlock)                      lock (_writelock)                      {                          _stopOperations = true;                          while (_workingCount > 0) Thread.SpinWait(1);                          Flush();                            if (File.Exists(_Path + _FileName + "$" + _bmpExt))                              File.Delete(_Path + _FileName + "$" + _bmpExt);                            if (File.Exists(_Path + _FileName + "$" + _recExt))                              File.Delete(_Path + _FileName + "$" + _recExt);                            Stream _newrec = new FileStream(_Path + _FileName + "$" + _recExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);                          Stream _newbmp = new FileStream(_Path + _FileName + "$" + _bmpExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);                            long newoffset = 0;                          int c = (int)(_recordFileRead.Length / 8);                          for (int i = 0; i < c; i++)                          {                              long offset = ReadRecordOffset(i);                                byte[] b = ReadBMPDataForOptimize(offset);                              if (b == null)                              {                                  _stopOperations = false;                                  throw new Exception("bitmap index file is corrupted");                              }                                _newrec.Write(Helper.GetBytes(newoffset' false)' 0' 8);                              newoffset += b.Length;                              _newbmp.Write(b' 0' b.Length);                            }                          _newbmp.Flush();                          _newbmp.Close();                          _newrec.Flush();                          _newrec.Close();                            InternalShutdown();                            File.Delete(_Path + _FileName + _bmpExt);                          File.Delete(_Path + _FileName + _recExt);                          File.Move(_Path + _FileName + "$" + _bmpExt' _Path + _FileName + _bmpExt);                          File.Move(_Path + _FileName + "$" + _recExt' _Path + _FileName + _recExt);                            Initialize();                          _stopOperations = false;                      }
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Optimize,The following statement contains a magic number: lock (_readlock)                      lock (_writelock)                      {                          _stopOperations = true;                          while (_workingCount > 0) Thread.SpinWait(1);                          Flush();                            if (File.Exists(_Path + _FileName + "$" + _bmpExt))                              File.Delete(_Path + _FileName + "$" + _bmpExt);                            if (File.Exists(_Path + _FileName + "$" + _recExt))                              File.Delete(_Path + _FileName + "$" + _recExt);                            Stream _newrec = new FileStream(_Path + _FileName + "$" + _recExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);                          Stream _newbmp = new FileStream(_Path + _FileName + "$" + _bmpExt' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.ReadWrite);                            long newoffset = 0;                          int c = (int)(_recordFileRead.Length / 8);                          for (int i = 0; i < c; i++)                          {                              long offset = ReadRecordOffset(i);                                byte[] b = ReadBMPDataForOptimize(offset);                              if (b == null)                              {                                  _stopOperations = false;                                  throw new Exception("bitmap index file is corrupted");                              }                                _newrec.Write(Helper.GetBytes(newoffset' false)' 0' 8);                              newoffset += b.Length;                              _newbmp.Write(b' 0' b.Length);                            }                          _newbmp.Flush();                          _newbmp.Close();                          _newrec.Flush();                          _newrec.Close();                            InternalShutdown();                            File.Delete(_Path + _FileName + _bmpExt);                          File.Delete(_Path + _FileName + _recExt);                          File.Move(_Path + _FileName + "$" + _bmpExt' _Path + _FileName + _bmpExt);                          File.Move(_Path + _FileName + "$" + _recExt' _Path + _FileName + _recExt);                            Initialize();                          _stopOperations = false;                      }
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,ReadRecordOffset,The following statement contains a magic number: byte[] b = new byte[8];
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,ReadRecordOffset,The following statement contains a magic number: long off = ((long)recnum) * 8;
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,ReadRecordOffset,The following statement contains a magic number: _recordFileRead.Read(b' 0' 8);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,Initialize,The following statement contains a magic number: _lastRecordNumber = (int)(_recordFileRead.Length / 8);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmap,The following statement contains a magic number: long pointer = ((long)recno) * 8;
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmap,The following statement contains a magic number: byte[] b = new byte[8];
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmap,The following statement contains a magic number: _recordFileWrite.Write(b' 0' 8);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmapToFile,The following statement contains a magic number: hdr[2] = 0;
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmapToFile,The following statement contains a magic number: hdr[2] = 1;
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmapToFile,The following statement contains a magic number: Buffer.BlockCopy(s' 0' hdr' 3' 4);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,SaveBitmapToFile,The following statement contains a magic number: Buffer.BlockCopy(s' 0' hdr' 3' 4);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,ReadBMPDataForOptimize,The following statement contains a magic number: int c = Helper.ToInt32(hdr' 3);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,LoadBitmap,The following statement contains a magic number: int c = Helper.ToInt32(hdr' 3);
Magic Number,RaptorDB,BitmapIndex,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\BitmapIndex.cs,LoadBitmap,The following statement contains a magic number: hdr[2] == 1
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,IndexFile,The following statement contains a magic number: _maxKeySize = 4;
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,IndexFile,The following statement contains a magic number: _rowSize = (_maxKeySize + 1 + 4 + 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,IndexFile,The following statement contains a magic number: _rowSize = (_maxKeySize + 1 + 4 + 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,IndexFile,The following statement contains a magic number: _rowSize = (_maxKeySize + 1 + 4 + 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,IndexFile,The following statement contains a magic number: _rowSize = (_maxKeySize + 1 + 4 + 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateBlockHeader,The following statement contains a magic number: block[4] = type;
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateBlockHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' block' 5' 2);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateBlockHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' block' 5' 2);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateBlockHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' block' 11' 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateBlockHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' block' 11' 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateFileHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' _FileHeader' 3' 1);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateFileHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' _FileHeader' 4' 2);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateFileHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' _FileHeader' 4' 2);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateFileHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' _FileHeader' 11' 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateFileHeader,The following statement contains a magic number: Buffer.BlockCopy(b' 0' _FileHeader' 11' 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreateFileHeader,The following statement contains a magic number: _FileHeader[10] = 1;
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,ReadFileHeader,The following statement contains a magic number: byte maxks = b[3];
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,ReadFileHeader,The following statement contains a magic number: ushort nodes = (ushort)Helper.ToInt16(b' 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,ReadFileHeader,The following statement contains a magic number: int root = Helper.ToInt32(b' 6);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,ReadFileHeader,The following statement contains a magic number: b[10] == 0
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,ReadFileHeader,The following statement contains a magic number: b[0] == _FileHeader[0] && b[1] == _FileHeader[1] && b[2] == _FileHeader[2]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,ReadFileHeader,The following statement contains a magic number: b[0] == _FileHeader[0] && b[1] == _FileHeader[1] && b[2] == _FileHeader[2]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,GetPageList,The following statement contains a magic number: lastIndexedRow = Helper.ToInt32(_FileHeader' 11);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: short count = Helper.ToInt16(b' 5);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: nextpage = Helper.ToInt32(b' 11);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: int unique = Helper.ToInt32(b' idx + 1 + _maxKeySize + 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageListData,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,SavePage,The following statement contains a magic number: Buffer.BlockCopy(b' 0' pagebytes' idx + 1 + _maxKeySize + 4' b.Length);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: short count = Helper.ToInt16(b' 5);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: page.RightPageNumber = Helper.ToInt32(b' 11);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: int duppage = Helper.ToInt32(b' idx + 1 + _maxKeySize + 4);
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,LoadPageFromPageNumber,The following statement contains a magic number: b[0] == _BlockHeader[0] && b[1] == _BlockHeader[1] && b[2] == _BlockHeader[2] && b[3] == _BlockHeader[3]
Magic Number,RaptorDB,IndexFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\IndexFile.cs,CreatePageListData,The following statement contains a magic number: Buffer.BlockCopy(b' 0' page' idx + 1 + _maxKeySize + 4' b.Length);
Magic Number,RaptorDB,MGIndex<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\MGIndex.cs,SplitPage,The following statement contains a magic number: newpage.FirstKey = keys[keys.Length / 2];
Magic Number,RaptorDB,tokenizer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\tokenizer.cs,GenerateWordFreq,The following statement contains a magic number: Dictionary<string' int> dic = new Dictionary<string' int>(500);
Magic Number,RaptorDB,tokenizer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\tokenizer.cs,AddDictionary,The following statement contains a magic number: l < 2
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,RaptorDBServer,The following statement contains a magic number: _concleanuptimer = new System.Timers.Timer(30 * 1000);
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,RaptorDBServer,The following statement contains a magic number: _concleanuptimer = new System.Timers.Timer(30 * 1000);
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,RaptorDBServer,The following statement contains a magic number: _unusedinstancetimer = new System.Timers.Timer(300 * 1000);
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,RaptorDBServer,The following statement contains a magic number: _unusedinstancetimer = new System.Timers.Timer(300 * 1000);
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,_unusedinstancetimer_Elapsed,The following statement contains a magic number: i.Value.rdb != null &&                              FastDateTime.Now.Subtract(i.Value.lastUsed).TotalMinutes > 60
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The following statement contains a magic number: _handlers.Add("" + COMMANDS.AddUser'                  (p' ret) =>                  {                      var param = (object[])p.Data;                      ret.OK = AddUser((string)param[0]' (string)param[1]' (string)param[2]);                  });
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The following statement contains a magic number: _handlers.Add("" + COMMANDS.ServerSide'                  (p' ret) =>                  {                      var param = (object[])p.Data;                      ret.OK = true;                      ret.Data = _defaultInstance.rdb.ServerSide(GetServerSideFuncCache(param[0].ToString()' param[1].ToString())' param[2].ToString());                  });
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The following statement contains a magic number: _handlers.Add("" + COMMANDS.ServerSideWithArgs'                  (p' ret) =>                  {                      var param = (object[])p.Data;                      ret.OK = true;                      ret.Data = _defaultInstance.rdb.ServerSide(GetServerSideFuncWithArgsCache(param[0].ToString()' param[1].ToString())' param[2].ToString()' param[3]);                  });
Magic Number,RaptorDB,RaptorDBServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDBServer.cs,InitializeCommandsDictionary,The following statement contains a magic number: _handlers.Add("" + COMMANDS.ServerSideWithArgs'                  (p' ret) =>                  {                      var param = (object[])p.Data;                      ret.OK = true;                      ret.Data = _defaultInstance.rdb.ServerSide(GetServerSideFuncWithArgsCache(param[0].ToString()' param[1].ToString())' param[2].ToString()' param[3]);                  });
Magic Number,RaptorDB,aWebServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\aWebServer.cs,ListenerCallback,The following statement contains a magic number: WriteResponse(ctx' 200' ReadFromStream(_WebCache[(webpath + "index.html").ToLower()])' false);
Magic Number,RaptorDB,aWebServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\aWebServer.cs,WriteResponse,The following statement contains a magic number: compress == true && b.Length > 100 * 1024
Magic Number,RaptorDB,aWebServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\aWebServer.cs,WriteResponse,The following statement contains a magic number: compress == true && b.Length > 100 * 1024
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("getschema"'                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      if (qry == "")                      {                          WriteResponse(ctx' 404' "GetSchema requires a viewname to be defined e.g. ?view=customerview");                      }                      else                      {                          List<object> o = new List<object>();                          string view = qry.Split('=')[1];                          var sc = _rdb.GetSchema(view);                          foreach (var i in sc.Columns)                              o.Add(new { ColumnName = i.Key' Type = i.Value.Name });                          OutputJsonData(ctx' o);                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("systeminfo"'                  (ctx) =>                  {                      var oo = GetInfo();                      var s = fastJSON.JSON.ToJSON(oo' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' EnableAnonymousTypes = true });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("action"'                  (ctx) =>                  {                      string action = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      switch (action)                      {                          case "backup":                              _rdb.Backup();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "compact":                              _rdb.GetKVHF().CompactStorageHF();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "getconfigs":                              WriteResponse(ctx' 200' File.ReadAllText(_path + "raptordb.config"));                              break;                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("action"'                  (ctx) =>                  {                      string action = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      switch (action)                      {                          case "backup":                              _rdb.Backup();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "compact":                              _rdb.GetKVHF().CompactStorageHF();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "getconfigs":                              WriteResponse(ctx' 200' File.ReadAllText(_path + "raptordb.config"));                              break;                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("action"'                  (ctx) =>                  {                      string action = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      switch (action)                      {                          case "backup":                              _rdb.Backup();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "compact":                              _rdb.GetKVHF().CompactStorageHF();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "getconfigs":                              WriteResponse(ctx' 200' File.ReadAllText(_path + "raptordb.config"));                              break;                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("docget"' // takes : guid                   (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var g = Guid.Parse(qry);                      _log.Debug("docid = " + qry);                      var s = fastJSON.JSON.ToNiceJSON(_rdb.Fetch(g)' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("dochistory"' // takes : guid                   (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var g = Guid.Parse(qry);                      var h = _rdb.FetchHistoryInfo(g);                      _log.Debug("docid = " + qry);                      var s = fastJSON.JSON.ToJSON(h' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("docversion"' // takes : version                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var v = int.Parse(qry);                      var oo = _rdb.FetchVersion(v);                      var s = fastJSON.JSON.ToNiceJSON(oo' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("fileget"' // takes : guid                   (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var g = Guid.Parse(qry);                      _log.Debug("fileid = " + qry);                      var s = fastJSON.JSON.ToNiceJSON(_rdb.FetchBytes(g)' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("filehistory"' // takes : guid                   (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var g = Guid.Parse(qry);                      var h = _rdb.FetchBytesHistoryInfo(g);                      _log.Debug("fileid = " + qry);                      var s = fastJSON.JSON.ToJSON(h' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("fileversion"' // takes : version                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var v = int.Parse(qry);                      var oo = _rdb.FetchBytesVersion(v);                      var s = fastJSON.JSON.ToNiceJSON(oo' new fastJSON.JSONParameters { UseExtensions = true' UseFastGuid = false' UseEscapedUnicode = false });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("docsearch"' // takes : string & count =x &start=y                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      int start = 0;                      int count = -1;                        var m = _start_regex.Match(qry);                      if (m.Success)                      {                          start = int.Parse(m.Groups["start"].Value);                          qry = qry.Replace(m.Value' "");                      }                      m = _count_regex.Match(qry);                      if (m.Success)                      {                          count = int.Parse(m.Groups["count"].Value);                          qry = qry.Replace(m.Value' "");                      }                      var h = _rdb.FullTextSearch(qry);                      List<int> list = new List<int>();                      _log.Debug("search = " + qry);                      if (count > -1 && h.Length > 0)                      {                          int c = h.Length;                          for (int i = start; i < start + count && i < c; i++)                              list.Add(h[i]);                      }                      var obj = new                      {                          Items = list'                          Count = count'                          TotalCount = h.Length                      };                      var s = fastJSON.JSON.ToJSON(obj' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("hfkeys"' // takes : count =x &start=y                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      int start = 0;                      int count = -1;                        var m = _start_regex.Match(qry);                      if (m.Success)                      {                          start = int.Parse(m.Groups["start"].Value);                          qry = qry.Replace(m.Value' "");                      }                      m = _count_regex.Match(qry);                      if (m.Success)                      {                          count = int.Parse(m.Groups["count"].Value);                          qry = qry.Replace(m.Value' "");                      }                      var h = _rdb.GetKVHF().GetKeysHF();                      List<string> list = new List<string>();                      if (count > -1 && h.Length > 0)                      {                          int c = h.Length;                          for (int i = start; i < start + count && i < c; i++)                              list.Add(h[i]);                      }                      var obj = new                      {                          Items = list'                          Count = count'                          TotalCount = h.Length                      };                      var s = fastJSON.JSON.ToJSON(obj' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("hfget"' // takes : string                   (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      var h = _rdb.GetKVHF().GetObjectHF(qry);                      var s = fastJSON.JSON.ToNiceJSON(h' new fastJSON.JSONParameters { UseExtensions = false' UseFastGuid = false' UseEscapedUnicode = false' EnableAnonymousTypes = true });                      ctx.Response.ContentType = "application/json";                      WriteResponse(ctx' 200' s);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("viewinfo"' // takes : viewname                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      if (qry == "")                      {                          WriteResponse(ctx' 404' "ViewInfo requires a viewname to be defined e.g. ?customerview");                      }                      else                      {                          var vi = GetViewInfo(qry);                          if (vi == "")                              WriteResponse(ctx' 500' "View not found.");                          else                          {                              ctx.Response.ContentType = "application/json";                              WriteResponse(ctx' 200' vi);                          }                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("viewinfo"' // takes : viewname                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      if (qry == "")                      {                          WriteResponse(ctx' 404' "ViewInfo requires a viewname to be defined e.g. ?customerview");                      }                      else                      {                          var vi = GetViewInfo(qry);                          if (vi == "")                              WriteResponse(ctx' 500' "View not found.");                          else                          {                              ctx.Response.ContentType = "application/json";                              WriteResponse(ctx' 200' vi);                          }                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("viewinfo"' // takes : viewname                  (ctx) =>                  {                      string qry = ctx.Request.Url.GetComponents(UriComponents.Query' UriFormat.Unescaped);                      if (qry == "")                      {                          WriteResponse(ctx' 404' "ViewInfo requires a viewname to be defined e.g. ?customerview");                      }                      else                      {                          var vi = GetViewInfo(qry);                          if (vi == "")                              WriteResponse(ctx' 500' "View not found.");                          else                          {                              ctx.Response.ContentType = "application/json";                              WriteResponse(ctx' 200' vi);                          }                      }                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following statement contains a magic number: _handler.Add("excelexport"'                  (ctx) =>                  {                      string path = ctx.Request.Url.GetComponents(UriComponents.Path' UriFormat.Unescaped).ToLower();                        var data = DoQuery(_rdb' ctx' path.Replace("raptordb/excelexport/"' "")' null);                      ctx.Response.AddHeader("content-disposition"' "attachment;filename=" + data.Title + ".csv");                      ctx.Response.AddHeader("Content-Type"' "application/vnd.ms-excel");                      _log.Debug("exporting to excel rows : " + data.Rows.Count);                      WriteResponse(ctx' 200' WriteCsv(data.Rows)' true);                  });
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,GetMemoryUsage,The following statement contains a magic number: return s[9].Replace("\""' "");
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,GetMemoryUsage,The following statement contains a magic number: p.WaitForExit(1000)
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,OutputJsonData,The following statement contains a magic number: WriteResponse(ctx' 200' s);
Magic Number,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,ProcessGET,The following statement contains a magic number: WriteResponse(ctx' 200' s);
Magic Number,RaptorDB,KeyStoreString,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,Set,The following statement contains a magic number: ms.Write(Helper.GetBytes(bkey.Length' false)' 0' 4);
Magic Number,RaptorDB,KeyStoreString,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,UnpackData,The following statement contains a magic number: Buffer.BlockCopy(buffer' 4' key' 0' len);
Magic Number,RaptorDB,KeyStoreString,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,UnpackData,The following statement contains a magic number: val = new byte[buffer.Length - 4 - len];
Magic Number,RaptorDB,KeyStoreString,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,UnpackData,The following statement contains a magic number: Buffer.BlockCopy(buffer' 4 + len' val' 0' buffer.Length - 4 - len);
Magic Number,RaptorDB,KeyStoreString,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,UnpackData,The following statement contains a magic number: Buffer.BlockCopy(buffer' 4 + len' val' 0' buffer.Length - 4 - len);
Magic Number,RaptorDB,KeyStore<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,Count,The following statement contains a magic number: return c - _deleted.GetBits().CountOnes() * 2;
Magic Number,RaptorDB,KeyStore<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,Initialize,The following statement contains a magic number: _savetimer.Interval = Global.SaveIndexToDiskTimerSeconds * 1000;
Magic Number,RaptorDB,KeyStore<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStore.cs,CheckIndexState,The following statement contains a magic number: i % 100000 == 0
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,PumpDataForBackup,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,PumpDataForBackup,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateObject,The following statement contains a magic number: b[0] < 32
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The following statement contains a magic number: LogManager.Configure(_Path + "Logs" + _S + "log.txt"' 500' false);
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The following statement contains a magic number: _saveTimer = new System.Timers.Timer(Global.BackgroundSaveViewTimer * 1000);
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The following statement contains a magic number: _fulltextTimer = new System.Timers.Timer(Global.FullTextTimerSeconds * 1000);
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The following statement contains a magic number: _freeMemTimer = new System.Timers.Timer(Global.FreeMemoryTimerSeconds * 1000);
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,Initialize,The following statement contains a magic number: _processinboxTimer = new System.Timers.Timer(Global.ProcessInboxTimerSeconds * 1000);
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The following statement contains a magic number: s.What.Add(new Replication.WhatItem { Name = "default"' PackageItemLimit = 10000' Version = 1' B2HQtypes = new List<string> { "*" }' HQ2Btypes = new List<string> { "*" } });
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,CreateTemplateConfigFiles,The following statement contains a magic number: s.What.Add(new Replication.WhatItem { Name = "b2"' PackageItemLimit = 10000' Version = 1' B2HQtypes = new List<string> { "*" }' HQ2Btypes = new List<string> { "config.*" } });
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,FreeMemory,The following statement contains a magic number: long l = GC.GetTotalMemory(true) / (1024 * 1024);
Magic Number,RaptorDB,RaptorDB,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\RaptorDB.cs,FreeMemory,The following statement contains a magic number: long l = GC.GetTotalMemory(true) / (1024 * 1024);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,internalSave,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(counter' false)' 0' header' 0' 4);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,internalSave,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(next' false)' 0' header' 4' 4);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,internalSave,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(next' false)' 0' header' 4' 4);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] = 1;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 2;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 2;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 4;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 4;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(ab.datalength' false)' 0' alloc' 9' 4);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(ab.datalength' false)' 0' alloc' 9' 4);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[13] = ab.keylen;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[14] = 1;
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,FillAllocationBlock,The following statement contains a magic number: byte[] b = _datastore.ReadBlockBytes(blocknumber' _blockheader.Length + 255);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,ParseBlockHeader,The following statement contains a magic number: _log.Error("Expecting string keys only' got : " + b[14]);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,ParseBlockHeader,The following statement contains a magic number: b[14] != 1
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,ParseBlockHeader,The following statement contains a magic number: int next = Helper.ToInt32(b' 4);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,ParseBlockHeader,The following statement contains a magic number: byte flags = b[8];
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,ParseBlockHeader,The following statement contains a magic number: ab.datalength = Helper.ToInt32(b' 9);
Magic Number,RaptorDB,StringHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StringHF.cs,ParseBlockHeader,The following statement contains a magic number: byte keylen = b[13];
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,KeyStoreHF,The following statement contains a magic number: _keys = new MGIndex<string>(_Path' "keys.idx"' 255' /*Global.PageItemCount'*/ false);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,SetObjectHF,The following statement contains a magic number: k.Length > 255
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CompactStorageHF,The following statement contains a magic number: _keys = new MGIndex<string>(_Path' "keys.idx"' 255' false);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,internalSave,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(counter' false)' 0' header' 0' 4);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,internalSave,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(next' false)' 0' header' 4' 4);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,internalSave,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(next' false)' 0' header' 4' 4);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] = 1;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 2;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 2;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 4;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[8] += 4;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(ab.datalength' false)' 0' alloc' 9' 4);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: Buffer.BlockCopy(Helper.GetBytes(ab.datalength' false)' 0' alloc' 9' 4);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[13] = ab.keylen;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,CreateAllocHeader,The following statement contains a magic number: alloc[14] = 1;
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,FillAllocationBlock,The following statement contains a magic number: byte[] b = _datastore.ReadBlockBytes(blocknumber' _blockheader.Length + 255);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,ParseBlockHeader,The following statement contains a magic number: _log.Error("Expecting string keys only' got : " + b[14]);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,ParseBlockHeader,The following statement contains a magic number: b[14] != 1
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,ParseBlockHeader,The following statement contains a magic number: int next = Helper.ToInt32(b' 4);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,ParseBlockHeader,The following statement contains a magic number: byte flags = b[8];
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,ParseBlockHeader,The following statement contains a magic number: ab.datalength = Helper.ToInt32(b' 9);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,ParseBlockHeader,The following statement contains a magic number: byte keylen = b[13];
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,RebuildDataFiles,The following statement contains a magic number: keys = new MGIndex<string>(_Path' "keys.idx"' 255' /*Global.PageItemCount'*/ false);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,RebuildDataFiles,The following statement contains a magic number: byte[] b = _datastore.ReadBlockBytes(i' _blockheader.Length + 255);
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,Increment,The following statement contains a magic number: k.Length > 255
Magic Number,RaptorDB,KeyStoreHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\KeyStoreHF.cs,Increment,The following statement contains a magic number: k.Length > 255
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,WriteFreeListBMPFile,The following statement contains a magic number: WriteBlockBytes(new byte[] { (byte)'F'' (byte)'L' }' 0' 2);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,WriteFreeListBMPFile,The following statement contains a magic number: WriteBlockBytes(Helper.GetBytes(_lastBlockNumber' false)' 0' 4);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,WriteFreeListBMPFile,The following statement contains a magic number: WriteBlockBytes(Helper.GetBytes(len' false)' 0' 4);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,WriteFreeListBMPFile,The following statement contains a magic number: WriteBlockBytes(new byte[] { (byte)'F'' (byte)'L' }' 0' 2);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,WriteFreeListBMPFile,The following statement contains a magic number: WriteBlockBytes(b' offset' len > _BLOCKSIZE ? _BLOCKSIZE - 2 : len);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,WriteFreeListBMPFile,The following statement contains a magic number: len -= (_BLOCKSIZE - 2);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,ReadFileHeader,The following statement contains a magic number: _BLOCKSIZE = (ushort)(hdr[5] + hdr[6] << 8);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,ReadFileHeader,The following statement contains a magic number: _BLOCKSIZE = (ushort)(hdr[5] + hdr[6] << 8);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,ReadFileHeader,The following statement contains a magic number: _BLOCKSIZE = (ushort)(hdr[5] + hdr[6] << 8);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,ReadFileHeader,The following statement contains a magic number: return hdr[4];
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,CreateFileHeader,The following statement contains a magic number: _fileheader[4] = (byte)_CurrentVersion;
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,CreateFileHeader,The following statement contains a magic number: _fileheader[5] = (byte)(blocksize & 0xff);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,CreateFileHeader,The following statement contains a magic number: _fileheader[6] = (byte)(blocksize >> 8);
Magic Number,RaptorDB,StorageFileHF,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFileHF.cs,CreateFileHeader,The following statement contains a magic number: _fileheader[6] = (byte)(blocksize >> 8);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,StorageFile,The following statement contains a magic number: _fileheader[5] = (byte)_CurrentVersion;
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,StorageFile,The following statement contains a magic number: _fileheader[5] = (byte)_CurrentVersion;
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,Initialize,The following statement contains a magic number: _lastRecordNum = (int)(_recfilewrite.Length / 8);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,GetStorageFileHeaderVersion,The following statement contains a magic number: return b[5];
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ReadObject,The following statement contains a magic number: b[0] < 32
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ViewReadRawBytes,The following statement contains a magic number: byte[] hdr = new byte[5];
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ViewReadRawBytes,The following statement contains a magic number: _dataread.Read(hdr' 0' 5);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,internalWriteData,The following statement contains a magic number: offset > (long)Global.SplitStorageFilesMegaBytes * 1024 * 1024
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,internalWriteData,The following statement contains a magic number: offset > (long)Global.SplitStorageFilesMegaBytes * 1024 * 1024
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,internalWriteData,The following statement contains a magic number: _datawrite.Write(Helper.GetBytes(metabytes.Length' false)' 0' 4);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,internalWriteData,The following statement contains a magic number: _lastWriteOffset += metabytes.Length + 5;
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,internalWriteData,The following statement contains a magic number: _recfilewrite.Write(Helper.GetBytes(offset' false)' 0' 8);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ComputeOffset,The following statement contains a magic number: long off = recnum << 3;
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ComputeOffset,The following statement contains a magic number: byte[] b = new byte[8];
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ComputeOffset,The following statement contains a magic number: _recfileread.Read(b' 0' 8);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ComputeOffset,The following statement contains a magic number: off = 6;
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ReadMetaData,The following statement contains a magic number: byte[] hdr = new byte[5];
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ReadMetaData,The following statement contains a magic number: fs.Read(hdr' 0' 5);
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,ReadMetaData,The following statement contains a magic number: metasize = len + 5;
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,Pump,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,Pump,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB,StorageFile<T>,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Storage\StorageFile.cs,binarysearch,The following statement contains a magic number: midpoint = low + (high - low) / 2;
Magic Number,RaptorDB.Replication,ServerConfiguration,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\Configuration.cs,ServerConfiguration,The following statement contains a magic number: ReplicationPort = 9999;
Magic Number,RaptorDB.Replication,ClientConfiguration,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\Configuration.cs,ClientConfiguration,The following statement contains a magic number: ServerReplicationPort = 9999;
Magic Number,RaptorDB.Replication,ReplicationClient,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\ReplicationClient.cs,PumpDataForBackup,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB.Replication,ReplicationClient,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\ReplicationClient.cs,PumpDataForBackup,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB.Replication,ReplicationServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\ReplicationServer.cs,PumpDataForBackup,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB.Replication,ReplicationServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\ReplicationServer.cs,PumpDataForBackup,The following statement contains a magic number: byte[] bytes = new byte[4096 * 2];
Magic Number,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitMethodCall,The following statement contains a magic number: name = ss[1] + "_$" + ss[2];
Magic Number,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitMethodCall,The following statement contains a magic number: ss.Length > 2
Magic Number,RaptorDB.Views,QueryVisitor,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\LINQQuery.cs,VisitMethodCall,The following statement contains a magic number: to = DateTime.Parse((string)GetValueForMember(m.Arguments[2]));
Magic Number,RaptorDB.Views,TaskQueue,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\TaskQueue.cs,TaskQueue,The following statement contains a magic number: _timer.Interval = Global.TaskCleanupTimerSeconds * 1000;
Magic Number,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,SetView,The following statement contains a magic number: _saveTimer.Interval = Global.SaveIndexToDiskTimerSeconds * 1000;
Magic Number,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,Shutdown,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,CreateObject,The following statement contains a magic number: b[0] < 32
Magic Number,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,CreateLoadIndexes,The following statement contains a magic number: _indexes.Add(_docid' new TypeIndexes<Guid>(_Path' _docid' 16));
Magic Number,RaptorDB.Views,ViewHandler,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\ViewHandler.cs,internalCount,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseStringLiteral,The following statement contains a magic number: string s = token.text.Substring(1' token.text.Length - 2);
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsSignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 2;
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsUnsignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 3;
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Char:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return 1;                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                      return 2;                  case TypeCode.Byte:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return 3;                  default:                      return 0;              }
Magic Number,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Char:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return 1;                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                      return 2;                  case TypeCode.Byte:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return 3;                  default:                      return 0;              }
Missing Default,RaptorDB,Hoot,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Indexes\Hoot.cs,DoBitOperation,The following switch statement is missing a default case: switch (op)                  {                      case OPERATION.AND:                          bits = bits.And(c);                          break;                      case OPERATION.OR:                          bits = bits.Or(c);                          break;                      case OPERATION.ANDNOT:                          bits = bits.And(c.Not(maxsize));                          break;                  }
Missing Default,RaptorDB,rdbRest,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\REST\rdbRest.cs,InitializeCommandHandler,The following switch statement is missing a default case: switch (action)                      {                          case "backup":                              _rdb.Backup();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "compact":                              _rdb.GetKVHF().CompactStorageHF();                              WriteResponse(ctx' 200' "\"Done\"");                              break;                          case "getconfigs":                              WriteResponse(ctx' 200' File.ReadAllText(_path + "raptordb.config"));                              break;                      }
Missing Default,RaptorDB.Replication,ReplicationServer,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Replication\ReplicationServer.cs,processpayload,The following switch statement is missing a default case: switch (p.command)                  {                      case "getbranchconfig":                          ret.OK = true;                          ret.Data = GetBranchConfig(p.branchname);                          break;                      case "getpackageforbranch":                          ret.OK = true;                          ReplicationPacket pack = GetPackageForBranch(p);                          ret.Data = pack;                          break;                      case "packageforhq":                          ret.OK = PackageForHQ(p);                          break;                      case "hqpackageok":                          ret.OK = true;                          File.Delete(_OutboxPath + _S + p.branchname + _S + p.filename);                          // set last rec on hq                          _branchLastDocs.Add(p.branchname.ToLower()' p.lastrecord);                          WriteBranchCounters();                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseComparison,The following switch statement is missing a default case: switch (op.id)                  {                      case TokenId.Equal:                      case TokenId.DoubleEqual:                          left = GenerateEqual(left' right);                          break;                      case TokenId.ExclamationEqual:                      case TokenId.LessGreater:                          left = GenerateNotEqual(left' right);                          break;                      case TokenId.GreaterThan:                          left = GenerateGreaterThan(left' right);                          break;                      case TokenId.GreaterThanEqual:                          left = GenerateGreaterThanEqual(left' right);                          break;                      case TokenId.LessThan:                          left = GenerateLessThan(left' right);                          break;                      case TokenId.LessThanEqual:                          left = GenerateLessThanEqual(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,PromoteExpression,The following switch statement is missing a default case: switch (Type.GetTypeCode(ce.Type))                          {                              case TypeCode.Int32:                              case TypeCode.UInt32:                              case TypeCode.Int64:                              case TypeCode.UInt64:                                  value = ParseNumber(text' target);                                  break;                              case TypeCode.Double:                                  if (target == typeof(decimal)) value = ParseNumber(text' target);                                  break;                              case TypeCode.String:                                  value = ParseEnum(text' target);                                  break;                          }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,ParseNumber,The following switch statement is missing a default case: switch (Type.GetTypeCode(GetNonNullableType(type)))              {                  case TypeCode.SByte:                      sbyte sb;                      if (sbyte.TryParse(text' out sb)) return sb;                      break;                  case TypeCode.Byte:                      byte b;                      if (byte.TryParse(text' out b)) return b;                      break;                  case TypeCode.Int16:                      short s;                      if (short.TryParse(text' out s)) return s;                      break;                  case TypeCode.UInt16:                      ushort us;                      if (ushort.TryParse(text' out us)) return us;                      break;                  case TypeCode.Int32:                      int i;                      if (int.TryParse(text' out i)) return i;                      break;                  case TypeCode.UInt32:                      uint ui;                      if (uint.TryParse(text' out ui)) return ui;                      break;                  case TypeCode.Int64:                      long l;                      if (long.TryParse(text' out l)) return l;                      break;                  case TypeCode.UInt64:                      ulong ul;                      if (ulong.TryParse(text' out ul)) return ul;                      break;                  case TypeCode.Single:                      float f;                      if (float.TryParse(text' out f)) return f;                      break;                  case TypeCode.Double:                      double d;                      if (double.TryParse(text' out d)) return d;                      break;                  case TypeCode.Decimal:                      decimal e;                      if (decimal.TryParse(text' out e)) return e;                      break;              }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.SByte:                          case TypeCode.Int16:                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Byte:                          case TypeCode.Int16:                          case TypeCode.UInt16:                          case TypeCode.Int32:                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Int16:                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.UInt16:                          case TypeCode.Int32:                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,D:\research\architectureSmells\repos\mgholam_RaptorDB-Document\RaptorDB\Views\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc)                      {                          case TypeCode.Single:                          case TypeCode.Double:                              return true;                      }
