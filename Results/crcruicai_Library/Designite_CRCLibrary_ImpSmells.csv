Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CRC.Collections,SortedSplitList,C:\repos\crcruicai_Library\Extension\Collections\SortedSplitList.cs,InternalAdd,Cyclomatic complexity of the method is 12
Complex Method,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,Cyclomatic complexity of the method is 8
Complex Method,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,Cyclomatic complexity of the method is 12
Complex Method,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,Cyclomatic complexity of the method is 19
Complex Method,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,Cyclomatic complexity of the method is 11
Complex Method,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BytesTo16,Cyclomatic complexity of the method is 11
Complex Method,CRC.Util,StringParser,C:\repos\crcruicai_Library\Extension\Util\Strings\StringParser.cs,GetLinks,Cyclomatic complexity of the method is 15
Complex Method,CRC.Util,StringParser,C:\repos\crcruicai_Library\Extension\Util\Strings\StringParser.cs,RemoveHtml,Cyclomatic complexity of the method is 8
Complex Method,CRC.Util,ShutDownComputer,C:\repos\crcruicai_Library\Extension\Util\Sytems\ShutDownComputer.cs,ShutDown,Cyclomatic complexity of the method is 24
Complex Method,CRC.Register,RegisterUtil,C:\repos\crcruicai_Library\Extension\Register\RegisterUtil.cs,SetFileTypeWith,Cyclomatic complexity of the method is 9
Long Parameter List,CRC.Extension,SwithCaseExtension,C:\repos\crcruicai_Library\Extension\Extension\SwithCaseExtension.cs,Case,The method has 5 parameters.
Long Parameter List,CRC.Files,INIManager,C:\repos\crcruicai_Library\Extension\Files\INIHelper.cs,GetPrivateProfileString,The method has 6 parameters.
Long Parameter List,CRC.Util,CodeTimer2,C:\repos\crcruicai_Library\Extension\Timer\CodeTime.cs,GetThreadTimes,The method has 5 parameters.
Long Parameter List,CRC.Util,HotKeyData,C:\repos\crcruicai_Library\Extension\Util\HotKeyUtil.cs,HotKeyData,The method has 6 parameters.
Long Parameter List,CRC.Util,HotKeyData,C:\repos\crcruicai_Library\Extension\Util\HotKeyUtil.cs,HotKeyData,The method has 5 parameters.
Long Parameter List,CRC.Util,HotKeyData,C:\repos\crcruicai_Library\Extension\Util\HotKeyUtil.cs,HotKeyData,The method has 5 parameters.
Long Parameter List,CRC.Util,SystemIcon,C:\repos\crcruicai_Library\Extension\Util\Sytems\SystemIconUtil.cs,SHGetFileInfo,The method has 5 parameters.
Long Parameter List,CRC.Util,HotKeyInfo,C:\repos\crcruicai_Library\Extension\Util\Sytems\HotKeyUtil.cs,HotKeyInfo,The method has 5 parameters.
Long Parameter List,CRC.Util,HotKeyInfo,C:\repos\crcruicai_Library\Extension\Util\Sytems\HotKeyUtil.cs,HotKeyInfo,The method has 6 parameters.
Long Statement,CRC.Collections,KeyedCollection,C:\repos\crcruicai_Library\Extension\Collections\KeyedCollection.cs,CheckReentrancy,The length of the statement  "	if ((this.Monitor.Busy && (this.CollectionChanged != null)) && (this.CollectionChanged.GetInvocationList ().Length > 1)) { " is 122.
Long Statement,CRC.Collections,SortedSplitList,C:\repos\crcruicai_Library\Extension\Collections\SortedSplitList.cs,GetHorizontalTable,The length of the statement  "	int index = _verticalIndex.BinarySearch (localStruct' (containIndex < 0) ? _verticalComparer : (IComparer<VerticalIndexNode<T>>)_indexComparer); " is 144.
Long Statement,CRC.Collections,StringCollection,C:\repos\crcruicai_Library\Extension\Collections\StringCollection.cs,CheckReentrancy,The length of the statement  "	if ((this.Monitor.Busy && (this.CollectionChanged != null)) && (this.CollectionChanged.GetInvocationList ().Length > 1)) { " is 122.
Long Statement,CRC.Collections,StringCollection,C:\repos\crcruicai_Library\Extension\Collections\StringCollection.cs,Move,The length of the statement  "	this.OnCollectionChanged (new NotifyCollectionChangedEventArgs (NotifyCollectionChangedAction.Move' t' oldIndex' newIndex)); " is 124.
Long Statement,CRC.Extension,StringRegexExtension,C:\repos\crcruicai_Library\Extension\Extension\StringRegexExtension.cs,IsIPAddress,The length of the statement  "	return Regex.IsMatch (s' @"^(d{1'2}|1dd|2[0-4]d|25[0-5]).(d{1'2}|1dd|2[0-4]d|25[0-5]).(d{1'2}|1dd|2[0-4]d|25[0-5]).(d{1'2}|1dd|2[0-4]d|25[0-5])$"); " is 147.
Long Statement,CRC.Extension,StringRegexExtension,C:\repos\crcruicai_Library\Extension\Extension\StringRegexExtension.cs,GetPageTitle,The length of the statement  "	Regex reg = new Regex (@"(?m)<title[^>]*>(?<title>(?:\w|\W)*?)</title[^>]*>"' RegexOptions.Multiline | RegexOptions.IgnoreCase); " is 128.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,Save,The length of the statement  "		throw new FileDatabaseException (string.Format (CultureInfo.InvariantCulture' "Save document failed with id [{0}]."' id)' ex.Message); " is 134.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,FindOneById,The length of the statement  "		throw new FileDatabaseException (string.Format (CultureInfo.InvariantCulture' "Find document by id [{0}] failed."' id)' ex.Message); " is 132.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,FindAll,The length of the statement  "		string[] files = System.IO.Directory.GetFiles (GenerateFilePath<TDocument> ()' "*." + FileExtension' SearchOption.TopDirectoryOnly); " is 132.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,Delete,The length of the statement  "		throw new FileDatabaseException (string.Format (CultureInfo.InvariantCulture' "Delete document by id [{0}] failed."' id)' ex.Message); " is 134.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,DeleteAll,The length of the statement  "		string[] files = System.IO.Directory.GetFiles (GenerateFilePath<TDocument> ()' "*." + FileExtension' SearchOption.TopDirectoryOnly); " is 132.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,Count,The length of the statement  "		string[] files = System.IO.Directory.GetFiles (GenerateFilePath<TDocument> ()' "*." + FileExtension' SearchOption.TopDirectoryOnly); " is 132.
Long Statement,CRC.Files,FileDatabase,C:\repos\crcruicai_Library\Extension\Files\FileDatabase.cs,GenerateFileName,The length of the statement  "			throw new FileDatabaseException (string.Format (CultureInfo.InvariantCulture' "The character '{0}' is not a valid file name identifier."' c)' ""); " is 146.
Long Statement,CRC.Util,SystemIcon,C:\repos\crcruicai_Library\Extension\Util\Sytems\SystemIconUtil.cs,GetIcon,The length of the statement  "		SHGetFileInfo (fileName' 0' ref shfi' (uint)Marshal.SizeOf (shfi)' SHGFI_ICON | SHGFI_USEFILEATTRIBUTES | SHGFI_LARGEICON); " is 123.
Long Statement,CRC.Util,SystemIcon,C:\repos\crcruicai_Library\Extension\Util\Sytems\SystemIconUtil.cs,GetIcon,The length of the statement  "		SHGetFileInfo (fileName' 0' ref shfi' (uint)Marshal.SizeOf (shfi)' SHGFI_ICON | SHGFI_USEFILEATTRIBUTES | SHGFI_SMALLICON); " is 123.
Long Statement,CRC.Util,SystemIcon,C:\repos\crcruicai_Library\Extension\Util\Sytems\SystemIconUtil.cs,GetFileIcon,The length of the statement  "	IntPtr _IconIntPtr = SHGetFileInfo (pPath' 0' ref shfileinfo' (uint)Marshal.SizeOf (shfileinfo)' (uint)(SHGFI_ICON | SHGFI_LARGEICON | SHGFI_USEFILEATTRIBUTES)); " is 161.
Long Statement,CRC.Util,SystemIcon,C:\repos\crcruicai_Library\Extension\Util\Sytems\SystemIconUtil.cs,GetDirectoryIcon,The length of the statement  "	IntPtr iconIntPtr = SHGetFileInfo (@""' 0' ref shfileinfo' (uint)Marshal.SizeOf (shfileinfo)' (uint)(SHGFI_ICON | SHGFI_LARGEICON)); " is 132.
Long Statement,CRC.Util,SystemIcon,C:\repos\crcruicai_Library\Extension\Util\Sytems\SystemIconUtil.cs,FixAlphaBitmap,The length of the statement  "	Bitmap dstBitmap = new Bitmap (bmData.Width' bmData.Height' bmData.Stride' System.Drawing.Imaging.PixelFormat.Format32bppArgb' bmData.Scan0); " is 141.
Long Statement,CRC.Util,OSVersionUtil,C:\repos\crcruicai_Library\Extension\Util\Sytems\OSVersionUtil.cs,IsWinXP,The length of the statement  "	return (OS.Platform == PlatformID.Win32NT) && ((OS.Version.Major > 5) || ((OS.Version.Major == 5) && (OS.Version.Minor == 1))); " is 127.
Empty Catch Block,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The method has an empty catch block.
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,EncryptString,The following statement contains a magic number: if (!CheckString (encryptKey' 32))  	throw new ArgumentException ("encryptKey is null or length of encryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptString,The following statement contains a magic number: if (!CheckString (decryptKey' 32))  	throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,EncryptBase64String,The following statement contains a magic number: return EncryptBase64String (encryptString' _DefaultAesKey.PadRight (32' 'A'));  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,EncryptBase64String,The following statement contains a magic number: if (!CheckString (encryptKey' 32))  	throw new ArgumentException ("encryptKey is null or length of encryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptBase64String,The following statement contains a magic number: return DecryptBase64String (decryptString' _DefaultAesKey.PadRight (32' 'A'));  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptBase64String,The following statement contains a magic number: try {  	if (!CheckString (decryptKey' 32))  		throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  	RijndaelManaged rijndaelProvider = new RijndaelManaged {  		Key = Encoding.UTF8.GetBytes (decryptKey)'  		IV = _Keys  	};  	ICryptoTransform rijndaelDecrypt = rijndaelProvider.CreateDecryptor ();  	byte[] inputData = Convert.FromBase64String (decryptString);  	byte[] decryptedData = rijndaelDecrypt.TransformFinalBlock (inputData' 0' inputData.Length);  	return Encoding.UTF8.GetString (decryptedData);  }  catch {  	return string.Empty;  }  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptBase64String,The following statement contains a magic number: if (!CheckString (decryptKey' 32))  	throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,EncryptStream,The following statement contains a magic number: if (!CheckString (decryptKey' 32))  	throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptStream,The following statement contains a magic number: if (!CheckString (decryptKey' 32))  	throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,EncryptFile,The following statement contains a magic number: try {  	if (!CheckString (decryptKey' 32))  		throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  	FileStream fr = new FileStream (inputFile' FileMode.Open);  	FileStream fren = new FileStream (outputFile' FileMode.Create);  	CryptoStream enfr = EncryptStream (fren' decryptKey);  	byte[] bytearrayinput = new byte[fr.Length];  	fr.Read (bytearrayinput' 0' bytearrayinput.Length);  	enfr.Write (bytearrayinput' 0' bytearrayinput.Length);  	enfr.Close ();  	fr.Close ();  	fren.Close ();  }  catch {  	//�ļ��쳣  	return false;  }  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,EncryptFile,The following statement contains a magic number: if (!CheckString (decryptKey' 32))  	throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptFile,The following statement contains a magic number: try {  	if (!CheckString (decryptKey' 32))  		throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  	FileStream fr = new FileStream (inputFile' FileMode.Open);  	FileStream frde = new FileStream (outputFile' FileMode.Create);  	CryptoStream defr = DecryptStream (fr' decryptKey);  	byte[] bytearrayoutput = new byte[1024];  	do {  		int mCount = defr.Read (bytearrayoutput' 0' bytearrayoutput.Length);  		frde.Write (bytearrayoutput' 0' mCount);  		if (mCount < bytearrayoutput.Length)  			break;  	}  	while (true);  	defr.Close ();  	fr.Close ();  	frde.Close ();  }  catch {  	//�ļ��쳣  	return false;  }  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptFile,The following statement contains a magic number: try {  	if (!CheckString (decryptKey' 32))  		throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  	FileStream fr = new FileStream (inputFile' FileMode.Open);  	FileStream frde = new FileStream (outputFile' FileMode.Create);  	CryptoStream defr = DecryptStream (fr' decryptKey);  	byte[] bytearrayoutput = new byte[1024];  	do {  		int mCount = defr.Read (bytearrayoutput' 0' bytearrayoutput.Length);  		frde.Write (bytearrayoutput' 0' mCount);  		if (mCount < bytearrayoutput.Length)  			break;  	}  	while (true);  	defr.Close ();  	fr.Close ();  	frde.Close ();  }  catch {  	//�ļ��쳣  	return false;  }  
Magic Number,CRC.Security,AesSecurity,C:\repos\crcruicai_Library\Extension\Security\AesSecurity.cs,DecryptFile,The following statement contains a magic number: if (!CheckString (decryptKey' 32))  	throw new ArgumentException ("decryptKey is null or length of decryptKey must be 32 ");  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,EncoderBytes,The following statement contains a magic number: if (rgbKey == null || rgbKey.Length != 8)  	rgbKey = _Keys;  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,DecoderBytes,The following statement contains a magic number: if (rgbKey == null || rgbKey.Length != 8)  	rgbKey = _Keys;  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,DecoderStringByKey,The following statement contains a magic number: for (int i = 0; i != byteText.Length; i++)  	dataByte [i] = Convert.ToByte (byteText [i]' 16);  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,DecoderStringByKey,The following statement contains a magic number: dataByte [i] = Convert.ToByte (byteText [i]' 16);  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,EncryptString,The following statement contains a magic number: if (encryptKey.Length != 8)  	throw new ArgumentException ("encryptKey is length must be 8");  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,DecryptString,The following statement contains a magic number: if (decryptKey.Length != 8)  	throw new ArgumentException ("decryptKey length must be 8");  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,EncryptFile,The following statement contains a magic number: byKey = Encoding.UTF8.GetBytes (strEncrKey.Substring (0' 8));  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,EncryptFile,The following statement contains a magic number: while (rdlen < totlen) {  	int len = fin.Read (bin' 0' 100);  	//This is the number of bytes to be written at a time.  	encStream.Write (bin' 0' len);  	rdlen = rdlen + len;  }  
Magic Number,CRC.Security,DesSecurity,C:\repos\crcruicai_Library\Extension\Security\DesSecurity.cs,DecryptFile,The following statement contains a magic number: while (rdlen < totlen) {  	int len = fin.Read (bin' 0' 100);  	//This is the number of bytes to be written at a time.  	encStream.Write (bin' 0' len);  	rdlen = rdlen + len;  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,GetMD5_16,The following statement contains a magic number: return GetMD5_32 (input).Substring (8' 16);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,GetMD5_16,The following statement contains a magic number: return GetMD5_32 (input).Substring (8' 16);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,GetMD5_8,The following statement contains a magic number: return GetMD5_32 (input).Substring (8' 8);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,GetMD5_8,The following statement contains a magic number: return GetMD5_32 (input).Substring (8' 8);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,GetMD5_4,The following statement contains a magic number: return GetMD5_32 (input).Substring (8' 4);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,GetMD5_4,The following statement contains a magic number: return GetMD5_32 (input).Substring (8' 4);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,RemoveMd5Profix,The following statement contains a magic number: return input.Substring (4);  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,ValidateValue,The following statement contains a magic number: if (input.Length >= 4) {  	string tmp = input.Substring (4);  	if (input.Substring (0' 4) == GetMD5_4 (tmp)) {  		return true;  	}  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,ValidateValue,The following statement contains a magic number: if (input.Length >= 4) {  	string tmp = input.Substring (4);  	if (input.Substring (0' 4) == GetMD5_4 (tmp)) {  		return true;  	}  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,ValidateValue,The following statement contains a magic number: if (input.Length >= 4) {  	string tmp = input.Substring (4);  	if (input.Substring (0' 4) == GetMD5_4 (tmp)) {  		return true;  	}  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,ValidateValue,The following statement contains a magic number: if (input.Substring (0' 4) == GetMD5_4 (tmp)) {  	return true;  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,CheckMd5,The following statement contains a magic number: try {  	var getFile = new FileStream (path' FileMode.Open' FileAccess.Read' FileShare.Read);  	var md5File = new byte[getFile.Length];  	// 读入文件  	getFile.Read (md5File' 0' (int)getFile.Length);  	getFile.Close ();  	string result = Md5Buffer (md5File' 0' md5File.Length - 32);  	// 对文件除最后32位以外的字节计算MD5，这个32是因为标签位为32位。  	string md5 = Encoding.ASCII.GetString (md5File' md5File.Length - 32' 32);  	//读取文件最后32位，其中保存的就是MD5值  	return result == md5;  }  catch {  	return false;  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,CheckMd5,The following statement contains a magic number: try {  	var getFile = new FileStream (path' FileMode.Open' FileAccess.Read' FileShare.Read);  	var md5File = new byte[getFile.Length];  	// 读入文件  	getFile.Read (md5File' 0' (int)getFile.Length);  	getFile.Close ();  	string result = Md5Buffer (md5File' 0' md5File.Length - 32);  	// 对文件除最后32位以外的字节计算MD5，这个32是因为标签位为32位。  	string md5 = Encoding.ASCII.GetString (md5File' md5File.Length - 32' 32);  	//读取文件最后32位，其中保存的就是MD5值  	return result == md5;  }  catch {  	return false;  }  
Magic Number,CRC.Security,Md5Security,C:\repos\crcruicai_Library\Extension\Security\Md5Security.cs,CheckMd5,The following statement contains a magic number: try {  	var getFile = new FileStream (path' FileMode.Open' FileAccess.Read' FileShare.Read);  	var md5File = new byte[getFile.Length];  	// 读入文件  	getFile.Read (md5File' 0' (int)getFile.Length);  	getFile.Close ();  	string result = Md5Buffer (md5File' 0' md5File.Length - 32);  	// 对文件除最后32位以外的字节计算MD5，这个32是因为标签位为32位。  	string md5 = Encoding.ASCII.GetString (md5File' md5File.Length - 32' 32);  	//读取文件最后32位，其中保存的就是MD5值  	return result == md5;  }  catch {  	return false;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,TripleDESEncrypt,The following statement contains a magic number: try {  	byte[] bt = (new System.Text.UnicodeEncoding ()).GetBytes (pass);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (pass' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateEncryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return Convert.ToBase64String (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,TripleDESEncrypt,The following statement contains a magic number: try {  	byte[] bt = (new System.Text.UnicodeEncoding ()).GetBytes (pass);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (pass' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateEncryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return Convert.ToBase64String (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,TripleDESDecrypt,The following statement contains a magic number: try {  	byte[] bt = Convert.FromBase64String (str);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (pass' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateDecryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return (new System.Text.UnicodeEncoding ()).GetString (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,TripleDESDecrypt,The following statement contains a magic number: try {  	byte[] bt = Convert.FromBase64String (str);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (pass' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateDecryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return (new System.Text.UnicodeEncoding ()).GetString (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,EncryptWithKey,The following statement contains a magic number: try {  	byte[] bt = (new System.Text.UnicodeEncoding ()).GetBytes (pass);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (p_key' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateEncryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return Convert.ToBase64String (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,EncryptWithKey,The following statement contains a magic number: try {  	byte[] bt = (new System.Text.UnicodeEncoding ()).GetBytes (pass);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (p_key' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateEncryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return Convert.ToBase64String (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,DecryptWithKey,The following statement contains a magic number: try {  	byte[] bt = Convert.FromBase64String (str);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (p_key' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateDecryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return (new System.Text.UnicodeEncoding ()).GetString (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Security,EncryptUtil,C:\repos\crcruicai_Library\Extension\Security\EncryptUtil.cs,DecryptWithKey,The following statement contains a magic number: try {  	byte[] bt = Convert.FromBase64String (str);  	PasswordDeriveBytes pdb = new PasswordDeriveBytes (p_key' null);  	byte[] key = pdb.GetBytes (24);  	byte[] iv = pdb.GetBytes (8);  	MemoryStream ms = new MemoryStream ();  	TripleDESCryptoServiceProvider tdesc = new TripleDESCryptoServiceProvider ();  	CryptoStream cs = new CryptoStream (ms' tdesc.CreateDecryptor (key' iv)' CryptoStreamMode.Write);  	cs.Write (bt' 0' bt.Length);  	cs.FlushFinalBlock ();  	return (new System.Text.UnicodeEncoding ()).GetString (ms.ToArray ());  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (str.Length > 2)  	throw new Exception ("str 长度大于2");  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: str = str.PadLeft (2' '0');  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: index = (c - 96) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: index = (c - 96) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: index = (c - 64) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: index = (c - 64) + 9;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: index = c - 48;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: if (index != -1) {  	data += index * Math.Abs (i - 1) * 16 + index * i;  }  else {  	throw new Exception ("有不合法的字符.");  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToByte,The following statement contains a magic number: data += index * Math.Abs (i - 1) * 16 + index * i;  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The following statement contains a magic number: foreach (var item in strdata) {  	string temp = item.Trim ();  	try {  		if (temp.Length < 3) {  			list.Add (temp.ToByte ());  		}  	}  	catch (Exception) {  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The following statement contains a magic number: try {  	if (temp.Length < 3) {  		list.Add (temp.ToByte ());  	}  }  catch (Exception) {  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The following statement contains a magic number: if (temp.Length < 3) {  	list.Add (temp.ToByte ());  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	string temp = str.Substring (i * 2' 2);  	try {  		list.Add (temp.ToByte ());  	}  	catch (Exception e) {  		throw;  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	string temp = str.Substring (i * 2' 2);  	try {  		list.Add (temp.ToByte ());  	}  	catch (Exception e) {  		throw;  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ToBytes,The following statement contains a magic number: for (int i = 0; i < str.Length / 2; i++) {  	string temp = str.Substring (i * 2' 2);  	try {  		list.Add (temp.ToByte ());  	}  	catch (Exception e) {  		throw;  	}  }  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ClearBit,The following statement contains a magic number: if (index < 0 && index > 7)  	throw new ArgumentException ("8> index >-1 ");  
Magic Number,CRC.Extension,ByteExtension,C:\repos\crcruicai_Library\Extension\Extension\ByteExtension.cs,ClearBit,The following statement contains a magic number: b &= (byte)((1 << 8) - 1 - (1 << index));  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: if (ch < 256) {  	builder.Append ("\\x");  	shift = 8;  }  else {  	builder.Append ("\\u");  	shift = 16;  }  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: if (ch < 256) {  	builder.Append ("\\x");  	shift = 8;  }  else {  	builder.Append ("\\u");  	shift = 16;  }  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: if (ch < 256) {  	builder.Append ("\\x");  	shift = 8;  }  else {  	builder.Append ("\\u");  	shift = 16;  }  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: shift = 8;  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: shift = 16;  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: while (shift > 0) {  	shift -= 4;  	builder.Append (BaseDigits [(ch >> shift) & 0xF]);  }  
Magic Number,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following statement contains a magic number: shift -= 4;  
Magic Number,CRC.Extension,RandomExtension,C:\repos\crcruicai_Library\Extension\Extension\RandomExtension.cs,NextBool,The following statement contains a magic number: return random.NextDouble () > 0.5;  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,LastDirectoryName,The following statement contains a magic number: if (path.IndexOf (":"' System.StringComparison.Ordinal) > 0) {  	path = path.Replace ("//"' "\\");  	path = path.Replace ('/'' '\\');  	string[] array = path.Split ('\\');  	if (array.Length > 2)  		return array [array.Length - 2];  	else {  		return array [0].Substring (0' 1);  	}  }  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,LastDirectoryName,The following statement contains a magic number: if (path.IndexOf (":"' System.StringComparison.Ordinal) > 0) {  	path = path.Replace ("//"' "\\");  	path = path.Replace ('/'' '\\');  	string[] array = path.Split ('\\');  	if (array.Length > 2)  		return array [array.Length - 2];  	else {  		return array [0].Substring (0' 1);  	}  }  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,LastDirectoryName,The following statement contains a magic number: if (array.Length > 2)  	return array [array.Length - 2];  else {  	return array [0].Substring (0' 1);  }  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,LastDirectoryName,The following statement contains a magic number: if (array.Length > 2)  	return array [array.Length - 2];  else {  	return array [0].Substring (0' 1);  }  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,LastDirectoryName,The following statement contains a magic number: return array [array.Length - 2];  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,NextLastDirectoryPath,The following statement contains a magic number: if (path.IndexOf (":"' System.StringComparison.Ordinal) > 0) {  	string[] array = path.Split ('\\');  	for (int i = array.Length - 2; i < 0; i--) {  		string dirName = array [i];  		int lenth = path.IndexOf (dirName' System.StringComparison.Ordinal);  		if (lenth == 0)  			yield return dirName + ":\\";  		yield return path.Substring (0' lenth) + dirName;  	}  }  
Magic Number,CRC.Files,PathTool,C:\repos\crcruicai_Library\Extension\Files\PathTool.cs,NextLastDirectoryPath,The following statement contains a magic number: for (int i = array.Length - 2; i < 0; i--) {  	string dirName = array [i];  	int lenth = path.IndexOf (dirName' System.StringComparison.Ordinal);  	if (lenth == 0)  		yield return dirName + ":\\";  	yield return path.Substring (0' lenth) + dirName;  }  
Magic Number,CRC.Util,ConvertRmb,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertRmb.cs,ConvertInt,The following statement contains a magic number: for (i = 0; i < length - 1; i++' curUnit--) {  	if (intPart [i] != '0') {  		tmpValue = DigToCC (intPart [i]);  		tmpUnit = GetUnit (curUnit - 1);  	}  	else {  		// 如果当前的单位是"万、亿"，则需要把它记录下来  		if ((curUnit - 1) % 4 == 0) {  			tmpValue = "";  			tmpUnit = GetUnit (curUnit - 1);  			//  		}  		else {  			tmpUnit = "";  			// 如果当前位是零，则需要判断它的下一位是否为零，再确定是否记录'零'  			if (intPart [i + 1] != '0') {  				tmpValue = "零";  			}  			else {  				tmpValue = "";  			}  		}  	}  	buf += tmpValue + tmpUnit;  }  
Magic Number,CRC.Util,ConvertRmb,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertRmb.cs,ConvertInt,The following statement contains a magic number: if (intPart [i] != '0') {  	tmpValue = DigToCC (intPart [i]);  	tmpUnit = GetUnit (curUnit - 1);  }  else {  	// 如果当前的单位是"万、亿"，则需要把它记录下来  	if ((curUnit - 1) % 4 == 0) {  		tmpValue = "";  		tmpUnit = GetUnit (curUnit - 1);  		//  	}  	else {  		tmpUnit = "";  		// 如果当前位是零，则需要判断它的下一位是否为零，再确定是否记录'零'  		if (intPart [i + 1] != '0') {  			tmpValue = "零";  		}  		else {  			tmpValue = "";  		}  	}  }  
Magic Number,CRC.Util,ConvertRmb,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertRmb.cs,ConvertInt,The following statement contains a magic number: if ((curUnit - 1) % 4 == 0) {  	tmpValue = "";  	tmpUnit = GetUnit (curUnit - 1);  	//  }  else {  	tmpUnit = "";  	// 如果当前位是零，则需要判断它的下一位是否为零，再确定是否记录'零'  	if (intPart [i + 1] != '0') {  		tmpValue = "零";  	}  	else {  		tmpValue = "";  	}  }  
Magic Number,CRC.Util,ConvertRmb,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertRmb.cs,Convert,The following statement contains a magic number: tmp = strDigital.Split (_CDelim' 2);  
Magic Number,CRC.Util,ShockForm,C:\repos\crcruicai_Library\Extension\Util\ShockForm.cs,ShockForm,The following statement contains a magic number: Interval = 5.0;  
Magic Number,CRC.Util,ShockForm,C:\repos\crcruicai_Library\Extension\Util\ShockForm.cs,WorkShock,The following statement contains a magic number: while (true) {  	if (!origLoc.HasValue) {  		origLoc = form.Location;  		stopwatch.Reset ();  		stopwatch.Start ();  		shockPathIndex = 0;  	}  	//拷贝一个新的点.  	Point loc = new Point (origLoc.Value.X' origLoc.Value.Y);  	//进行位置变换.  	loc.Offset (shockPath [shockPathIndex]);  	//将新位置传递给窗体  	QueueInvoke (form' () => form.Location = loc);  	//通过不停的变换位置达到震动的效果.  	shockPathIndex = (shockPathIndex + 1) % shockPath.Length;  	//如果震动已经到达15秒'停止震动.  	if (stopwatch.Elapsed.TotalSeconds >= Interval) {  		if (origLoc != null) {  			QueueInvoke (form' () => form.Location = origLoc.Value);  		}  		origLoc = null;  		stopwatch.Stop ();  		return;  	}  	Thread.Sleep (50);  }  
Magic Number,CRC.Util,ShockForm,C:\repos\crcruicai_Library\Extension\Util\ShockForm.cs,WorkShock,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,CRC.Util,CodeTimer2,C:\repos\crcruicai_Library\Extension\Timer\CodeTime.cs,Time,The following statement contains a magic number: Console.WriteLine ("\tCPU time:\t\t" + (ticks * 100).ToString ("N0") + "ns");  
Magic Number,CRC.Util,CodeTimer2,C:\repos\crcruicai_Library\Extension\Timer\CodeTime.cs,Time,The following statement contains a magic number: Console.WriteLine ("\tCPU time (one time):\t" + (ticks * 100 / iteration).ToString ("N0") + "ns");  
Magic Number,CRC.Util,CodeTimer2,C:\repos\crcruicai_Library\Extension\Timer\CodeTime.cs,Time,The following statement contains a magic number: Console.WriteLine ("\tCPU time:\t\t" + (ticks * 100).ToString ("N0") + "ns");  
Magic Number,CRC.Util,CodeTimer2,C:\repos\crcruicai_Library\Extension\Timer\CodeTime.cs,Time,The following statement contains a magic number: Console.WriteLine ("\tCPU time (one time):\t" + (ticks * 100 / iteration).ToString ("N0") + "ns");  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,ConvertToDateTime,The following statement contains a magic number: return dtStart.Add (new TimeSpan (timestamp * 10000000));  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,ConvertToUnix,The following statement contains a magic number: timeStamp = timeStamp.Substring (0' timeStamp.Length - 7);  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,ConvertToUnixofLong,The following statement contains a magic number: return toNow.Ticks / 10000000;  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,ConvertToUnix,The following statement contains a magic number: timeStamp = timeStamp.Substring (0' timeStamp.Length - 7);  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (Convert.ToInt32 (now.DayOfWeek)) {  case 0:  	return type ? "星期天" : "周日";  case 1:  	return type ? "星期一" : "周一";  case 2:  	return type ? "星期二" : "周二";  case 3:  	return type ? "星期三" : "周三";  case 4:  	return type ? "星期四" : "周四";  case 5:  	return type ? "星期五" : "周五";  case 6:  	return type ? "星期六" : "周六";  }  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (Convert.ToInt32 (now.DayOfWeek)) {  case 0:  	return type ? "星期天" : "周日";  case 1:  	return type ? "星期一" : "周一";  case 2:  	return type ? "星期二" : "周二";  case 3:  	return type ? "星期三" : "周三";  case 4:  	return type ? "星期四" : "周四";  case 5:  	return type ? "星期五" : "周五";  case 6:  	return type ? "星期六" : "周六";  }  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (Convert.ToInt32 (now.DayOfWeek)) {  case 0:  	return type ? "星期天" : "周日";  case 1:  	return type ? "星期一" : "周一";  case 2:  	return type ? "星期二" : "周二";  case 3:  	return type ? "星期三" : "周三";  case 4:  	return type ? "星期四" : "周四";  case 5:  	return type ? "星期五" : "周五";  case 6:  	return type ? "星期六" : "周六";  }  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (Convert.ToInt32 (now.DayOfWeek)) {  case 0:  	return type ? "星期天" : "周日";  case 1:  	return type ? "星期一" : "周一";  case 2:  	return type ? "星期二" : "周二";  case 3:  	return type ? "星期三" : "周三";  case 4:  	return type ? "星期四" : "周四";  case 5:  	return type ? "星期五" : "周五";  case 6:  	return type ? "星期六" : "周六";  }  
Magic Number,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,GetDayOfWeek,The following statement contains a magic number: switch (Convert.ToInt32 (now.DayOfWeek)) {  case 0:  	return type ? "星期天" : "周日";  case 1:  	return type ? "星期一" : "周一";  case 2:  	return type ? "星期二" : "周二";  case 3:  	return type ? "星期三" : "周三";  case 4:  	return type ? "星期四" : "周四";  case 5:  	return type ? "星期五" : "周五";  case 6:  	return type ? "星期六" : "周六";  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,Md5Encode,The following statement contains a magic number: if (len > 32)  	throw new ArgumentException ("len must be less than 33");  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,Md5Encode,The following statement contains a magic number: if (len == 32)  	return text.ToString ().ToUpper ();  else {  	return text.ToString ().ToUpper ().Substring (0' len);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,Md5Encode,The following statement contains a magic number: if (len > 32)  	throw new ArgumentException ("len must be less than 33");  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,Md5Encode,The following statement contains a magic number: if (len == 32)  	return sb.ToString ().ToUpper ();  else  	return sb.ToString ().ToUpper ().Substring (0' len);  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: while (idx >= 0) {  	// 添加当前 '\' 之前的字符串。  	if (idx > start) {  		builder.Append (str' start' idx - start);  		start = idx;  	}  	// 跳过 '\' 字符。  	idx++;  	// '\' 字符后的字符数小于 2，不可能是转义字符，直接返回。  	if (idx + 1 >= len) {  		break;  	}  	// 十六进制字符的长度。  	int hexLen = 0;  	// 处理 Unicode 转义。  	switch (str [idx]) {  	case 'x':  		// \x 后面可以是 1 至 4 位。  		hexLen = GetHexLength (str' idx + 1' 4);  		break;  	case 'u':  		// \u 后面必须是 4 位。  		if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  			hexLen = 4;  		}  		else {  			hexLen = 0;  		}  		break;  	case 'U':  		// \U 后面必须是 8 位。  		if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  			hexLen = 8;  		}  		else {  			hexLen = 0;  		}  		break;  	}  	if (hexLen > 0) {  		idx++;  		int charNum = int.Parse (str.Substring (idx' hexLen)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);  		if (charNum < 0xFFFF) {  			// 单个字符。  			builder.Append ((char)charNum);  		}  		else {  			// 代理项对的字符。  			builder.Append (char.ConvertFromUtf32 (charNum & 0x1FFFFF));  		}  		idx = start = idx + hexLen;  	}  	idx = str.IndexOf ('\\'' idx);  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: hexLen = GetHexLength (str' idx + 1' 4);  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  	hexLen = 4;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  	hexLen = 4;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  	hexLen = 4;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  	hexLen = 4;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: hexLen = 4;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  	hexLen = 8;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  	hexLen = 8;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  	hexLen = 8;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  	hexLen = 8;  }  else {  	hexLen = 0;  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following statement contains a magic number: hexLen = 8;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	byte item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 95)  		a = true;  	else if (item > 62 && item < 91)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + ByteToUpper (item' true));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 95)  	a = true;  else if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 91)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (a) {  	if (isAll)  		sb.Append ("%" + ByteToUpper (item' true));  	else  		sb.Append (Convert.ToChar (item).ToString ());  }  else if (item == 32)//空格.   {  	if (isAll)  		sb.Append ("%" + ByteToUpper (item' true));  	else  		sb.Append ('+');  }  else {  	sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  }  
Magic Number,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 32)//空格.   {  	if (isAll)  		sb.Append ("%" + ByteToUpper (item' true));  	else  		sb.Append ('+');  }  else {  	sb.AppendFormat ("%{0}"' ByteToUpper (bytes [i]' isUpper));  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: for (int i = 0' j = 0; i < inSting.Length; i = i + 2' j++) {  	try {  		string s = inSting.Substring (i' 2);  		strBt [j] = (byte)Convert.ToInt16 (s' 16);  	}  	catch (Exception e) {  		throw new Exception ("你填写的数据不是纯16进制数，请检查。");  	}  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: for (int i = 0' j = 0; i < inSting.Length; i = i + 2' j++) {  	try {  		string s = inSting.Substring (i' 2);  		strBt [j] = (byte)Convert.ToInt16 (s' 16);  	}  	catch (Exception e) {  		throw new Exception ("你填写的数据不是纯16进制数，请检查。");  	}  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: for (int i = 0' j = 0; i < inSting.Length; i = i + 2' j++) {  	try {  		string s = inSting.Substring (i' 2);  		strBt [j] = (byte)Convert.ToInt16 (s' 16);  	}  	catch (Exception e) {  		throw new Exception ("你填写的数据不是纯16进制数，请检查。");  	}  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: i = i + 2
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: try {  	string s = inSting.Substring (i' 2);  	strBt [j] = (byte)Convert.ToInt16 (s' 16);  }  catch (Exception e) {  	throw new Exception ("你填写的数据不是纯16进制数，请检查。");  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: try {  	string s = inSting.Substring (i' 2);  	strBt [j] = (byte)Convert.ToInt16 (s' 16);  }  catch (Exception e) {  	throw new Exception ("你填写的数据不是纯16进制数，请检查。");  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,HexToBtyes,The following statement contains a magic number: strBt [j] = (byte)Convert.ToInt16 (s' 16);  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BytesToBinary,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	string tempString = Convert.ToString (bytes [i]' 2).PadLeft (8' '0');  	outString.AppendFormat ("{0}{1}"' tempString' temp);  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BytesToBinary,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	string tempString = Convert.ToString (bytes [i]' 2).PadLeft (8' '0');  	outString.AppendFormat ("{0}{1}"' tempString' temp);  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,ByteToBinary,The following statement contains a magic number: if (str.Length < 8) {  	string add = "";  	for (int i = 0; i < 8 - str.Length; i++) {  		add += "0";  	}  	str = add + str;  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,ByteToBinary,The following statement contains a magic number: if (str.Length < 8) {  	string add = "";  	for (int i = 0; i < 8 - str.Length; i++) {  		add += "0";  	}  	str = add + str;  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,ByteToBinary,The following statement contains a magic number: for (int i = 0; i < 8 - str.Length; i++) {  	add += "0";  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BinaryToByte,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	if (data [i] == '1') {  		value += Math.Pow (2' min - i);  	}  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BinaryToByte,The following statement contains a magic number: if (data [i] == '1') {  	value += Math.Pow (2' min - i);  }  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BinaryToByte,The following statement contains a magic number: value += Math.Pow (2' min - i);  
Magic Number,CRC.Util,ConvertCode,C:\repos\crcruicai_Library\Extension\Util\Convert\ConvertCode.cs,BinaryToByte,The following statement contains a magic number: return (byte)(value % 256);  
Magic Number,CRC.Util,OSVersionUtil,C:\repos\crcruicai_Library\Extension\Util\Sytems\OSVersionUtil.cs,IsWinXP,The following statement contains a magic number: return (OS.Platform == PlatformID.Win32NT) && ((OS.Version.Major > 5) || ((OS.Version.Major == 5) && (OS.Version.Minor == 1)));  
Magic Number,CRC.Util,OSVersionUtil,C:\repos\crcruicai_Library\Extension\Util\Sytems\OSVersionUtil.cs,IsWinXP,The following statement contains a magic number: return (OS.Platform == PlatformID.Win32NT) && ((OS.Version.Major > 5) || ((OS.Version.Major == 5) && (OS.Version.Minor == 1)));  
Magic Number,CRC.Util,OSVersionUtil,C:\repos\crcruicai_Library\Extension\Util\Sytems\OSVersionUtil.cs,IsWinVista,The following statement contains a magic number: return (OS.Platform == PlatformID.Win32NT) && (OS.Version.Major >= 6);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetIPText,The following statement contains a magic number: if (data.Length < 4)  	throw new IndexOutOfRangeException ("Array Length is Error");  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetIPText,The following statement contains a magic number: return string.Format ("{0}.{1}.{2}.{3}"' data [0]' data [1]' data [2]' data [3]);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetIPText,The following statement contains a magic number: return string.Format ("{0}.{1}.{2}.{3}"' data [0]' data [1]' data [2]' data [3]);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetIPText,The following statement contains a magic number: if (data.Length < 4 + start)  	throw new IndexOutOfRangeException ("Array Length is Error");  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetIPText,The following statement contains a magic number: return string.Format ("{0}.{1}.{2}.{3}"' data [start]' data [start + 1]' data [start + 2]' data [start + 3]);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetIPText,The following statement contains a magic number: return string.Format ("{0}.{1}.{2}.{3}"' data [start]' data [start + 1]' data [start + 2]' data [start + 3]);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetPort,The following statement contains a magic number: if (data.Length < 2 + index)  	throw new IndexOutOfRangeException ("Array Length is Error");  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,GetPort,The following statement contains a magic number: return data [index] * 256 + data [index + 1];  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,PortToBytes,The following statement contains a magic number: if (port > 65535 && port < 0)  	throw new Exception ("port is not in range");  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,PortToBytes,The following statement contains a magic number: data [0] = (byte)(port / 256);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,PortToBytes,The following statement contains a magic number: data [1] = (byte)(port % 256);  
Magic Number,CRC.Net,IPUtil,C:\repos\crcruicai_Library\Extension\Net\IPUtil.cs,ParseIPEndPoint,The following statement contains a magic number: if (str.Length >= 2) {  	IPAddress add = IPAddress.Parse (str [0]);  	int port = int.Parse (str [1]);  	return new IPEndPoint (add' port);  }  else {  	throw new System.FormatException ("ipString 不是有效的 IP 地址");  }  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,TryParse,The following statement contains a magic number: if (value == null || value.Length != 24) {  	return false;  }  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: for (var i = 0; i < numberChars; i += 2) {  	bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  }  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: for (var i = 0; i < numberChars; i += 2) {  	bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  }  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: for (var i = 0; i < numberChars; i += 2) {  	bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  }  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: for (var i = 0; i < numberChars; i += 2) {  	bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  }  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: i += 2
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  
Magic Number,CRC.Util.Strings,ObjectId,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,DecodeHex,The following statement contains a magic number: bytes [i / 2] = Convert.ToByte (new string (chars' i' 2)' 16);  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (GenerateTime ())' 0' oid' copyidx' 4);  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: copyidx += 4;  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: Array.Copy (_MachineHash' 0' oid' copyidx' 3);  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: copyidx += 3;  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: Array.Copy (_ProcessId' 0' oid' copyidx' 2);  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: copyidx += 2;  
Magic Number,CRC.Util.Strings,ObjectIdGenerator,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Generate,The following statement contains a magic number: Array.Copy (BitConverter.GetBytes (GenerateCounter ())' 0' oid' copyidx' 3);  
Magic Number,CRC.Util.Strings,ObjectIdTest,C:\repos\crcruicai_Library\Extension\Util\Strings\ObjectID.cs,Test,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	ObjectId oid = ObjectId.NewObjectId ();  	Console.WriteLine (oid);  }  
Missing Default,CRC.Extension,CharExtension,C:\repos\crcruicai_Library\Extension\Extension\CharExtension.cs,ToPrintableString,The following switch statement is missing a default case: switch (ch) {  case '\\':  	return "\\\\";  case '\a':  	return "\\a";  case '\b':  	return "\\b";  case '\u001B':  	return "\\e";  case '\f':  	return "\\f";  case '\n':  	return "\\n";  case '\r':  	return "\\r";  case '\t':  	return "\\t";  case '\v':  	return "\\v";  }  
Missing Default,CRC.Util,DateTimeUtil,C:\repos\crcruicai_Library\Extension\Util\DateTimeUtil.cs,GetDayOfWeek,The following switch statement is missing a default case: switch (Convert.ToInt32 (now.DayOfWeek)) {  case 0:  	return type ? "星期天" : "周日";  case 1:  	return type ? "星期一" : "周一";  case 2:  	return type ? "星期二" : "周二";  case 3:  	return type ? "星期三" : "周三";  case 4:  	return type ? "星期四" : "周四";  case 5:  	return type ? "星期五" : "周五";  case 6:  	return type ? "星期六" : "周六";  }  
Missing Default,CRC.Util,EncodeUtil,C:\repos\crcruicai_Library\Extension\Util\EncodeUtil.cs,DecodeUnicode,The following switch statement is missing a default case: switch (str [idx]) {  case 'x':  	// \x 后面可以是 1 至 4 位。  	hexLen = GetHexLength (str' idx + 1' 4);  	break;  case 'u':  	// \u 后面必须是 4 位。  	if (idx + 4 < len && GetHexLength (str' idx + 1' 4) == 4) {  		hexLen = 4;  	}  	else {  		hexLen = 0;  	}  	break;  case 'U':  	// \U 后面必须是 8 位。  	if (idx + 8 < len && GetHexLength (str' idx + 1' 8) == 8) {  		hexLen = 8;  	}  	else {  		hexLen = 0;  	}  	break;  }  
Missing Default,CRC.Util,ShutDownComputer,C:\repos\crcruicai_Library\Extension\Util\Sytems\ShutDownComputer.cs,ShutDown,The following switch statement is missing a default case: switch (so) {  case ShutdownOperation.ShutDown:  	try {  		p.StandardInput.WriteLine ("shutdown -f -s -t 0");  		p.StandardInput.WriteLine ("exit");  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' "警告"' MessageBoxButtons.OK);  		break;  	}  	break;  case ShutdownOperation.Reboot:  	try {  		p.StandardInput.WriteLine ("shutdown -f -r -t 0");  		p.StandardInput.WriteLine ("exit");  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' "警告"' MessageBoxButtons.OK);  		break;  	}  	break;  case ShutdownOperation.Logoff:  	try {  		p.StandardInput.WriteLine ("shutdown -l");  		p.StandardInput.WriteLine ("exit");  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' "警告"' MessageBoxButtons.OK);  		break;  	}  	break;  case ShutdownOperation.Hibernate:  	try {  		p.StandardInput.WriteLine ("powercfg -h on");  		Application.SetSuspendState (PowerState.Hibernate' true' true);  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' "警告"' MessageBoxButtons.OK);  		break;  	}  	break;  case ShutdownOperation.Suspend:  	try {  		Application.SetSuspendState (PowerState.Suspend' true' false);  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' "警告"' MessageBoxButtons.OK);  		break;  	}  	break;  case ShutdownOperation.LockWorkStation:  	try {  		LockWorkStation ();  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' "警告"' MessageBoxButtons.OK);  		break;  	}  	break;  }  
