Implementation smell,Namespace,Class,File,Method,Description
Complex Method,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,Cyclomatic complexity of the method is 47
Complex Method,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,Cyclomatic complexity of the method is 11
Complex Method,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,RequestCallback,Cyclomatic complexity of the method is 14
Complex Method,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse,Cyclomatic complexity of the method is 25
Complex Method,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,Cyclomatic complexity of the method is 33
Complex Method,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetKiMessage,Cyclomatic complexity of the method is 13
Complex Method,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,Cyclomatic complexity of the method is 52
Complex Method,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,Cyclomatic complexity of the method is 40
Complex Method,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetStatusChangerMessage,Cyclomatic complexity of the method is 13
Complex Method,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,Cyclomatic complexity of the method is 11
Complex Method,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,Cyclomatic complexity of the method is 11
Complex Method,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,Cyclomatic complexity of the method is 10
Complex Method,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,Cyclomatic complexity of the method is 47
Long Parameter List,QQSDK.Net,HttpText,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpText.cs,SendMessage,The method has 6 parameters.
Long Parameter List,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,QQMessageEventArgs,The method has 5 parameters.
Long Parameter List,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SearchQQByKey,The method has 8 parameters.
Long Statement,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetFace,The length of the statement  "	///cgi/svr/face/getface?cache=1&type=1&fid=0&uin=1595462822&vfwebqq=388e96930e991cd6546e972ed1017be8160f87f04915e0586a31c1b358944170b75e791f5a51137e&t=9191848211 " is 161.
Long Statement,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The length of the statement  "	// /api/get_single_long_nick2?tuin=398117542&vfwebqq=4c6805bae960185d6654d96c03fdcc349982b1609e8c1a4f5a73f1c50b506667fcbbdb0f68d29c87&t=9748631232  " is 146.
Long Statement,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SearchGroup,The length of the statement  "	sb.AppendFormat ("&c1=0&c2=0&c3=0&st=0&vfcode={2}&type=1&vfwebqq={0}&t={1}"' _VFWebQQ' Tool.GetRandomNumber (10)' vfCode.ToLower ()); " is 133.
Long Statement,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetLoginVC,The length of the statement  "	sb.Append ("&appid=1003903&js_ver=10056&js_type=0&login_sig=MHSO-A*q-PrMoaZLgnIejVwbnE0T2KngJQTtI0-sS0inyDXPlZ1APPIX8DWjSu35&u1"); " is 130.
Long Statement,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ChangeOnlineStatus,The length of the statement  "	//&psessionid=8368046764001e636f6e6e7365727665725f77656271714031302e3132382e36362e313132000063d90000012b026e0400a6caba176d0000000a405265527738515273396d000000283b4b334a755d0644a8c6cd627b5abb19981eb6e58e0df42c6716776016284c58af59422bdcf1eef5 " is 240.
Long Statement,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The length of the statement  "					string temp = string.Format ("接收错误:\r\nQQ号码:{0} \r\nPsessionID:{1}\r\nPTWebQQ:{2}\r\nVFWebQQ:{3}"' _MyQQNumber' _PsessionID' _PTWebQQ' _VFWebQQ); " is 145.
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = Tool.GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = Tool.GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = Tool.GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = Tool.GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = Tool.GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = Tool.GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = Tool.GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = Tool.GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = Tool.GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = Tool.GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = Tool.GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = Tool.GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = Tool.GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = Tool.GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = Tool.GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = Tool.GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = Tool.GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = Tool.GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 2)  	value.PollType = a [2];  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 2)  	value.PollType = a [2];  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: value.PollType = a [2];  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = long.Parse (a [2]);  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = long.Parse (a [2]);  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: value.MsgID = long.Parse (a [2]);  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  
Magic Number,QQSDK.Json,MessageValue,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\FriendMessage.cs,ParseMessage,The following statement contains a magic number: i = i + 2;  
Magic Number,QQSDK.Json,SearchData,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Json\SearchData.cs,GetQueryString,The following statement contains a magic number: sb.AppendFormat ("&page={0}&t={1}"' PageIndex' QQSDK.Net.Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,BytesToMD5String,The following statement contains a magic number: foreach (var item in array) {  	text.Append (item.ToString ("X").PadLeft (2' '0'));  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,BytesToMD5String,The following statement contains a magic number: text.Append (item.ToString ("X").PadLeft (2' '0'));  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,BytesToMD5String,The following statement contains a magic number: if (len == 32)  	return text.ToString ().ToUpper ();  else  	return text.ToString ().ToUpper ().Substring (8' len);  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,BytesToMD5String,The following statement contains a magic number: if (len == 32)  	return text.ToString ().ToUpper ();  else  	return text.ToString ().ToUpper ().Substring (8' len);  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,BytesToMD5String,The following statement contains a magic number: return text.ToString ().ToUpper ().Substring (8' len);  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,MD5Encode,The following statement contains a magic number: if (len == 32)  	return sb.ToString ().ToUpper ();  else  	return sb.ToString ().ToUpper ().Substring (8' len);  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,MD5Encode,The following statement contains a magic number: if (len == 32)  	return sb.ToString ().ToUpper ();  else  	return sb.ToString ().ToUpper ().Substring (8' len);  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,MD5Encode,The following statement contains a magic number: return sb.ToString ().ToUpper ().Substring (8' len);  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUTF8,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	if (item < 128) {  		bool flag = false;  		//char[] array = "".ToCharArray();  		//foreach (var sitem in array)  		//{  		//    if (sitem == (char)item) flag = true;  		//}  		if (flag || isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i++]' isUpper));  		if (bytes.Length > i) {  			sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  		}  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUTF8,The following statement contains a magic number: if (item < 128) {  	bool flag = false;  	//char[] array = "".ToCharArray();  	//foreach (var sitem in array)  	//{  	//    if (sitem == (char)item) flag = true;  	//}  	if (flag || isAll)  		sb.Append ("%" + byteToUpper (item' isAll));  	else  		sb.Append (Convert.ToChar (item).ToString ());  }  else {  	sb.AppendFormat ("%{0}"' byteToUpper (bytes [i++]' isUpper));  	if (bytes.Length > i) {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	bool a = false;  	if (item > 32 && item < 37)  		a = true;  	else if (item > 37 && item < 60)  		a = true;  	else if (item == 61 || item == 91 || item == 95)  		a = true;  	else if (item > 62 && item < 92)  		a = true;  	else if (item > 96 && item < 123)  		a = true;  	else  		a = false;  	//! * ' ( ) ; : @ & = + $ ' / ? # [ ]  	if (a) {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else if (item == 32)//空格.  	 {  		if (isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append ('+');  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 32 && item < 37)  	a = true;  else if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 37 && item < 60)  	a = true;  else if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 61 || item == 91 || item == 95)  	a = true;  else if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 62 && item < 92)  	a = true;  else if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item > 96 && item < 123)  	a = true;  else  	a = false;  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (a) {  	if (isAll)  		sb.Append ("%" + byteToUpper (item' isAll));  	else  		sb.Append (Convert.ToChar (item).ToString ());  }  else if (item == 32)//空格.   {  	if (isAll)  		sb.Append ("%" + byteToUpper (item' isAll));  	else  		sb.Append ('+');  }  else {  	sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,HttpUrlEncode,The following statement contains a magic number: if (item == 32)//空格.   {  	if (isAll)  		sb.Append ("%" + byteToUpper (item' isAll));  	else  		sb.Append ('+');  }  else {  	sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToGB2312,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	item = bytes [i];  	if (item < 128) {  		bool flag = false;  		//char[] array = "".ToCharArray();  		//foreach (var sitem in array)  		//{  		//    if (sitem == (char)item) flag = true;  		//}  		if (flag || isAll)  			sb.Append ("%" + byteToUpper (item' isAll));  		else  			sb.Append (Convert.ToChar (item).ToString ());  	}  	else {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i++]' isUpper));  		if (bytes.Length > i) {  			sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  		}  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToGB2312,The following statement contains a magic number: if (item < 128) {  	bool flag = false;  	//char[] array = "".ToCharArray();  	//foreach (var sitem in array)  	//{  	//    if (sitem == (char)item) flag = true;  	//}  	if (flag || isAll)  		sb.Append ("%" + byteToUpper (item' isAll));  	else  		sb.Append (Convert.ToChar (item).ToString ());  }  else {  	sb.AppendFormat ("%{0}"' byteToUpper (bytes [i++]' isUpper));  	if (bytes.Length > i) {  		sb.AppendFormat ("%{0}"' byteToUpper (bytes [i]' isUpper));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	for (int i = 0; i < str.Length; i++) {  		int value = (int)str [i];  		if (value < 256 && !isAll) {  			strResult.Append (str [i]);  		}  		else {  			strResult.Append ("\\u");  			strResult.Append (value.ToString ("X").PadLeft (4' '0'));  		}  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	for (int i = 0; i < str.Length; i++) {  		int value = (int)str [i];  		if (value < 256 && !isAll) {  			strResult.Append (str [i]);  		}  		else {  			strResult.Append ("\\u");  			strResult.Append (value.ToString ("X").PadLeft (4' '0'));  		}  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	int value = (int)str [i];  	if (value < 256 && !isAll) {  		strResult.Append (str [i]);  	}  	else {  		strResult.Append ("\\u");  		strResult.Append (value.ToString ("X").PadLeft (4' '0'));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: for (int i = 0; i < str.Length; i++) {  	int value = (int)str [i];  	if (value < 256 && !isAll) {  		strResult.Append (str [i]);  	}  	else {  		strResult.Append ("\\u");  		strResult.Append (value.ToString ("X").PadLeft (4' '0'));  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: if (value < 256 && !isAll) {  	strResult.Append (str [i]);  }  else {  	strResult.Append ("\\u");  	strResult.Append (value.ToString ("X").PadLeft (4' '0'));  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: if (value < 256 && !isAll) {  	strResult.Append (str [i]);  }  else {  	strResult.Append ("\\u");  	strResult.Append (value.ToString ("X").PadLeft (4' '0'));  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,ToUnicodeString,The following statement contains a magic number: strResult.Append (value.ToString ("X").PadLeft (4' '0'));  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	str = str.Replace ("\\r"' "\\\r");  	string[] strlist = str.Replace ("\\"' "").Split ('u');  	try {  		if (strlist.Length > 0)  			strResult.Append (strlist [0]);  		for (int i = 1; i < strlist.Length; i++) {  			string text = strlist [i];  			if (text.Length > 4) {  				int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  				strResult.Append ((char)charCode);  				strResult.Append (text.Substring (4' text.Length - 4));  			}  			else {  				int charCode = Convert.ToInt32 (strlist [i]' 16);  				strResult.Append ((char)charCode);  			}  		}  	}  	catch (FormatException) {  		return Regex.Unescape (str);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	str = str.Replace ("\\r"' "\\\r");  	string[] strlist = str.Replace ("\\"' "").Split ('u');  	try {  		if (strlist.Length > 0)  			strResult.Append (strlist [0]);  		for (int i = 1; i < strlist.Length; i++) {  			string text = strlist [i];  			if (text.Length > 4) {  				int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  				strResult.Append ((char)charCode);  				strResult.Append (text.Substring (4' text.Length - 4));  			}  			else {  				int charCode = Convert.ToInt32 (strlist [i]' 16);  				strResult.Append ((char)charCode);  			}  		}  	}  	catch (FormatException) {  		return Regex.Unescape (str);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	str = str.Replace ("\\r"' "\\\r");  	string[] strlist = str.Replace ("\\"' "").Split ('u');  	try {  		if (strlist.Length > 0)  			strResult.Append (strlist [0]);  		for (int i = 1; i < strlist.Length; i++) {  			string text = strlist [i];  			if (text.Length > 4) {  				int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  				strResult.Append ((char)charCode);  				strResult.Append (text.Substring (4' text.Length - 4));  			}  			else {  				int charCode = Convert.ToInt32 (strlist [i]' 16);  				strResult.Append ((char)charCode);  			}  		}  	}  	catch (FormatException) {  		return Regex.Unescape (str);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	str = str.Replace ("\\r"' "\\\r");  	string[] strlist = str.Replace ("\\"' "").Split ('u');  	try {  		if (strlist.Length > 0)  			strResult.Append (strlist [0]);  		for (int i = 1; i < strlist.Length; i++) {  			string text = strlist [i];  			if (text.Length > 4) {  				int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  				strResult.Append ((char)charCode);  				strResult.Append (text.Substring (4' text.Length - 4));  			}  			else {  				int charCode = Convert.ToInt32 (strlist [i]' 16);  				strResult.Append ((char)charCode);  			}  		}  	}  	catch (FormatException) {  		return Regex.Unescape (str);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	str = str.Replace ("\\r"' "\\\r");  	string[] strlist = str.Replace ("\\"' "").Split ('u');  	try {  		if (strlist.Length > 0)  			strResult.Append (strlist [0]);  		for (int i = 1; i < strlist.Length; i++) {  			string text = strlist [i];  			if (text.Length > 4) {  				int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  				strResult.Append ((char)charCode);  				strResult.Append (text.Substring (4' text.Length - 4));  			}  			else {  				int charCode = Convert.ToInt32 (strlist [i]' 16);  				strResult.Append ((char)charCode);  			}  		}  	}  	catch (FormatException) {  		return Regex.Unescape (str);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (!string.IsNullOrEmpty (str)) {  	str = str.Replace ("\\r"' "\\\r");  	string[] strlist = str.Replace ("\\"' "").Split ('u');  	try {  		if (strlist.Length > 0)  			strResult.Append (strlist [0]);  		for (int i = 1; i < strlist.Length; i++) {  			string text = strlist [i];  			if (text.Length > 4) {  				int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  				strResult.Append ((char)charCode);  				strResult.Append (text.Substring (4' text.Length - 4));  			}  			else {  				int charCode = Convert.ToInt32 (strlist [i]' 16);  				strResult.Append ((char)charCode);  			}  		}  	}  	catch (FormatException) {  		return Regex.Unescape (str);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: try {  	if (strlist.Length > 0)  		strResult.Append (strlist [0]);  	for (int i = 1; i < strlist.Length; i++) {  		string text = strlist [i];  		if (text.Length > 4) {  			int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  			strResult.Append ((char)charCode);  			strResult.Append (text.Substring (4' text.Length - 4));  		}  		else {  			int charCode = Convert.ToInt32 (strlist [i]' 16);  			strResult.Append ((char)charCode);  		}  	}  }  catch (FormatException) {  	return Regex.Unescape (str);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: try {  	if (strlist.Length > 0)  		strResult.Append (strlist [0]);  	for (int i = 1; i < strlist.Length; i++) {  		string text = strlist [i];  		if (text.Length > 4) {  			int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  			strResult.Append ((char)charCode);  			strResult.Append (text.Substring (4' text.Length - 4));  		}  		else {  			int charCode = Convert.ToInt32 (strlist [i]' 16);  			strResult.Append ((char)charCode);  		}  	}  }  catch (FormatException) {  	return Regex.Unescape (str);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: try {  	if (strlist.Length > 0)  		strResult.Append (strlist [0]);  	for (int i = 1; i < strlist.Length; i++) {  		string text = strlist [i];  		if (text.Length > 4) {  			int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  			strResult.Append ((char)charCode);  			strResult.Append (text.Substring (4' text.Length - 4));  		}  		else {  			int charCode = Convert.ToInt32 (strlist [i]' 16);  			strResult.Append ((char)charCode);  		}  	}  }  catch (FormatException) {  	return Regex.Unescape (str);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: try {  	if (strlist.Length > 0)  		strResult.Append (strlist [0]);  	for (int i = 1; i < strlist.Length; i++) {  		string text = strlist [i];  		if (text.Length > 4) {  			int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  			strResult.Append ((char)charCode);  			strResult.Append (text.Substring (4' text.Length - 4));  		}  		else {  			int charCode = Convert.ToInt32 (strlist [i]' 16);  			strResult.Append ((char)charCode);  		}  	}  }  catch (FormatException) {  	return Regex.Unescape (str);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: try {  	if (strlist.Length > 0)  		strResult.Append (strlist [0]);  	for (int i = 1; i < strlist.Length; i++) {  		string text = strlist [i];  		if (text.Length > 4) {  			int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  			strResult.Append ((char)charCode);  			strResult.Append (text.Substring (4' text.Length - 4));  		}  		else {  			int charCode = Convert.ToInt32 (strlist [i]' 16);  			strResult.Append ((char)charCode);  		}  	}  }  catch (FormatException) {  	return Regex.Unescape (str);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: try {  	if (strlist.Length > 0)  		strResult.Append (strlist [0]);  	for (int i = 1; i < strlist.Length; i++) {  		string text = strlist [i];  		if (text.Length > 4) {  			int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  			strResult.Append ((char)charCode);  			strResult.Append (text.Substring (4' text.Length - 4));  		}  		else {  			int charCode = Convert.ToInt32 (strlist [i]' 16);  			strResult.Append ((char)charCode);  		}  	}  }  catch (FormatException) {  	return Regex.Unescape (str);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: for (int i = 1; i < strlist.Length; i++) {  	string text = strlist [i];  	if (text.Length > 4) {  		int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  		strResult.Append ((char)charCode);  		strResult.Append (text.Substring (4' text.Length - 4));  	}  	else {  		int charCode = Convert.ToInt32 (strlist [i]' 16);  		strResult.Append ((char)charCode);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: for (int i = 1; i < strlist.Length; i++) {  	string text = strlist [i];  	if (text.Length > 4) {  		int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  		strResult.Append ((char)charCode);  		strResult.Append (text.Substring (4' text.Length - 4));  	}  	else {  		int charCode = Convert.ToInt32 (strlist [i]' 16);  		strResult.Append ((char)charCode);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: for (int i = 1; i < strlist.Length; i++) {  	string text = strlist [i];  	if (text.Length > 4) {  		int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  		strResult.Append ((char)charCode);  		strResult.Append (text.Substring (4' text.Length - 4));  	}  	else {  		int charCode = Convert.ToInt32 (strlist [i]' 16);  		strResult.Append ((char)charCode);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: for (int i = 1; i < strlist.Length; i++) {  	string text = strlist [i];  	if (text.Length > 4) {  		int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  		strResult.Append ((char)charCode);  		strResult.Append (text.Substring (4' text.Length - 4));  	}  	else {  		int charCode = Convert.ToInt32 (strlist [i]' 16);  		strResult.Append ((char)charCode);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: for (int i = 1; i < strlist.Length; i++) {  	string text = strlist [i];  	if (text.Length > 4) {  		int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  		strResult.Append ((char)charCode);  		strResult.Append (text.Substring (4' text.Length - 4));  	}  	else {  		int charCode = Convert.ToInt32 (strlist [i]' 16);  		strResult.Append ((char)charCode);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: for (int i = 1; i < strlist.Length; i++) {  	string text = strlist [i];  	if (text.Length > 4) {  		int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  		strResult.Append ((char)charCode);  		strResult.Append (text.Substring (4' text.Length - 4));  	}  	else {  		int charCode = Convert.ToInt32 (strlist [i]' 16);  		strResult.Append ((char)charCode);  	}  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (text.Length > 4) {  	int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  	strResult.Append ((char)charCode);  	strResult.Append (text.Substring (4' text.Length - 4));  }  else {  	int charCode = Convert.ToInt32 (strlist [i]' 16);  	strResult.Append ((char)charCode);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (text.Length > 4) {  	int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  	strResult.Append ((char)charCode);  	strResult.Append (text.Substring (4' text.Length - 4));  }  else {  	int charCode = Convert.ToInt32 (strlist [i]' 16);  	strResult.Append ((char)charCode);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (text.Length > 4) {  	int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  	strResult.Append ((char)charCode);  	strResult.Append (text.Substring (4' text.Length - 4));  }  else {  	int charCode = Convert.ToInt32 (strlist [i]' 16);  	strResult.Append ((char)charCode);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (text.Length > 4) {  	int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  	strResult.Append ((char)charCode);  	strResult.Append (text.Substring (4' text.Length - 4));  }  else {  	int charCode = Convert.ToInt32 (strlist [i]' 16);  	strResult.Append ((char)charCode);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (text.Length > 4) {  	int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  	strResult.Append ((char)charCode);  	strResult.Append (text.Substring (4' text.Length - 4));  }  else {  	int charCode = Convert.ToInt32 (strlist [i]' 16);  	strResult.Append ((char)charCode);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: if (text.Length > 4) {  	int charCode = Convert.ToInt32 (text.Substring (0' 4)' 16);  	strResult.Append ((char)charCode);  	strResult.Append (text.Substring (4' text.Length - 4));  }  else {  	int charCode = Convert.ToInt32 (strlist [i]' 16);  	strResult.Append ((char)charCode);  }  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: strResult.Append (text.Substring (4' text.Length - 4));  
Magic Number,QQSDK.Net,Encode,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Encode.cs,DeUnicode,The following statement contains a magic number: strResult.Append (text.Substring (4' text.Length - 4));  
Magic Number,QQSDK.Net,HttpText,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpText.cs,SendMessage,The following statement contains a magic number: sb.AppendFormat ("'\"face\":{0}'"' 606);  
Magic Number,QQSDK.Net,HttpText,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpText.cs,SendMessage,The following statement contains a magic number: sb.AppendFormat ("{0}'"' Tool.GetRandomNumber (8));  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,HttpWeb,The following statement contains a magic number: if (!_OpenLimit) {  	System.Net.ServicePointManager.DefaultConnectionLimit = 1000;  	_OpenLimit = true;  }  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,HttpWeb,The following statement contains a magic number: System.Net.ServicePointManager.DefaultConnectionLimit = 1000;  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,SendToText,The following statement contains a magic number: try {  	HttpWebRequest request = CreateHttpWebRequest (url);  	request.MaximumAutomaticRedirections = 5;  	request.AllowAutoRedirect = true;  	request.Timeout = 10000;  	request.Method = "Get";  	request.ContentType = "application/x-www-form-urlencoded";  	request.Accept = "*/*";  	HttpWebResponse response = (HttpWebResponse)request.GetResponse ();  	//Thread.Sleep(100);  	Stream stream = response.GetResponseStream ();  	StreamReader streamReader = new StreamReader (stream' Encoding.UTF8);  	string text = streamReader.ReadToEnd ();  	_Headers = response.Headers;  	_URL = response.ResponseUri.ToString ();  	_Cookie.Add (response.Cookies);  	request.Abort ();  	streamReader.Close ();  	response.Close ();  	return text;  }  catch (Exception ex) {  	Loger.WriteLog (ex);  	return ex.Message;  }  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,SendToText,The following statement contains a magic number: try {  	HttpWebRequest request = CreateHttpWebRequest (url);  	request.MaximumAutomaticRedirections = 5;  	request.AllowAutoRedirect = true;  	request.Timeout = 10000;  	request.Method = "Get";  	request.ContentType = "application/x-www-form-urlencoded";  	request.Accept = "*/*";  	HttpWebResponse response = (HttpWebResponse)request.GetResponse ();  	//Thread.Sleep(100);  	Stream stream = response.GetResponseStream ();  	StreamReader streamReader = new StreamReader (stream' Encoding.UTF8);  	string text = streamReader.ReadToEnd ();  	_Headers = response.Headers;  	_URL = response.ResponseUri.ToString ();  	_Cookie.Add (response.Cookies);  	request.Abort ();  	streamReader.Close ();  	response.Close ();  	return text;  }  catch (Exception ex) {  	Loger.WriteLog (ex);  	return ex.Message;  }  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,SendToText,The following statement contains a magic number: request.MaximumAutomaticRedirections = 5;  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,SendToText,The following statement contains a magic number: request.Timeout = 10000;  
Magic Number,QQSDK.Net,HttpWeb,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\HttpWeb.cs,RespCallback,The following statement contains a magic number: Thread.Sleep (10000);  
Magic Number,QQSDK.Net,PasswordEncrypt,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,MD5Encrypt,The following statement contains a magic number: foreach (var item in bytes1) {  	stringBuilder.Append (item.ToString ("x").PadLeft (2' '0'));  }  
Magic Number,QQSDK.Net,PasswordEncrypt,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,MD5Encrypt,The following statement contains a magic number: stringBuilder.Append (item.ToString ("x").PadLeft (2' '0'));  
Magic Number,QQSDK.Net,PasswordEncrypt,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,MD5Encrypt,The following statement contains a magic number: foreach (var item in bytes1) {  	stringBuilder.Append (item.ToString ("x").PadLeft (2' '0'));  }  
Magic Number,QQSDK.Net,PasswordEncrypt,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,MD5Encrypt,The following statement contains a magic number: stringBuilder.Append (item.ToString ("x").PadLeft (2' '0'));  
Magic Number,QQSDK.Net,ByteBuffer,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,PutInt,The following statement contains a magic number: this._buffer [2] = (byte)(value >> 8);  
Magic Number,QQSDK.Net,ByteBuffer,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,PutInt,The following statement contains a magic number: this._buffer [2] = (byte)(value >> 8);  
Magic Number,QQSDK.Net,ByteBuffer,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,PutInt,The following statement contains a magic number: this._buffer [3] = (byte)value;  
Magic Number,QQSDK.Net,ByteBuffer,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\PasswordEncrypt.cs,PutInt,The following statement contains a magic number: this.BaseStream.Write (this._buffer' 0' 4);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (array.Length > 2) {  	string[] item = array [0].Split (':');  	if (item.Length > 1) {  		args.Recode = int.Parse (item [1]);  	}  	string[] a = array [1].Split (':');  	if (a.Length > 2) {  		switch (a [2].ToLower ()) {  		case "tips":  			args.PollMsgType = PollType.Tips;  			Loger.WriteLog (string.Format ("Tips :{0}"' text));  			args = null;  			break;  		case "message":  			args.PollMsgType = PollType.Friend;  			args.Data = GetFriendMessage (array' 2);  			break;  		case "group_message":  			args.PollMsgType = PollType.Group;  			Loger.WriteLog (string.Format ("Group :{0}"' text));  			args.Data = GetGroupMessage (array' 2);  			break;  		case "kick_message":  			args.PollMsgType = PollType.KickMessage;  			args.Data = GetKiMessage (array' 2);  			break;  		case "system_message":  		case "sys_g_msg":  			Loger.WriteLog (string.Format ("system_message :{0}"' text));  			break;  		case "buddies_status_change":  			args.PollMsgType = PollType.StatusChange;  			args.Data = GetStatusChangerMessage (array' 2);  			break;  		default:  			Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  			args = null;  			break;  		}  	}  	else {  		Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (a.Length > 2) {  	switch (a [2].ToLower ()) {  	case "tips":  		args.PollMsgType = PollType.Tips;  		Loger.WriteLog (string.Format ("Tips :{0}"' text));  		args = null;  		break;  	case "message":  		args.PollMsgType = PollType.Friend;  		args.Data = GetFriendMessage (array' 2);  		break;  	case "group_message":  		args.PollMsgType = PollType.Group;  		Loger.WriteLog (string.Format ("Group :{0}"' text));  		args.Data = GetGroupMessage (array' 2);  		break;  	case "kick_message":  		args.PollMsgType = PollType.KickMessage;  		args.Data = GetKiMessage (array' 2);  		break;  	case "system_message":  	case "sys_g_msg":  		Loger.WriteLog (string.Format ("system_message :{0}"' text));  		break;  	case "buddies_status_change":  		args.PollMsgType = PollType.StatusChange;  		args.Data = GetStatusChangerMessage (array' 2);  		break;  	default:  		Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  		args = null;  		break;  	}  }  else {  	Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (a.Length > 2) {  	switch (a [2].ToLower ()) {  	case "tips":  		args.PollMsgType = PollType.Tips;  		Loger.WriteLog (string.Format ("Tips :{0}"' text));  		args = null;  		break;  	case "message":  		args.PollMsgType = PollType.Friend;  		args.Data = GetFriendMessage (array' 2);  		break;  	case "group_message":  		args.PollMsgType = PollType.Group;  		Loger.WriteLog (string.Format ("Group :{0}"' text));  		args.Data = GetGroupMessage (array' 2);  		break;  	case "kick_message":  		args.PollMsgType = PollType.KickMessage;  		args.Data = GetKiMessage (array' 2);  		break;  	case "system_message":  	case "sys_g_msg":  		Loger.WriteLog (string.Format ("system_message :{0}"' text));  		break;  	case "buddies_status_change":  		args.PollMsgType = PollType.StatusChange;  		args.Data = GetStatusChangerMessage (array' 2);  		break;  	default:  		Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  		args = null;  		break;  	}  }  else {  	Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (a.Length > 2) {  	switch (a [2].ToLower ()) {  	case "tips":  		args.PollMsgType = PollType.Tips;  		Loger.WriteLog (string.Format ("Tips :{0}"' text));  		args = null;  		break;  	case "message":  		args.PollMsgType = PollType.Friend;  		args.Data = GetFriendMessage (array' 2);  		break;  	case "group_message":  		args.PollMsgType = PollType.Group;  		Loger.WriteLog (string.Format ("Group :{0}"' text));  		args.Data = GetGroupMessage (array' 2);  		break;  	case "kick_message":  		args.PollMsgType = PollType.KickMessage;  		args.Data = GetKiMessage (array' 2);  		break;  	case "system_message":  	case "sys_g_msg":  		Loger.WriteLog (string.Format ("system_message :{0}"' text));  		break;  	case "buddies_status_change":  		args.PollMsgType = PollType.StatusChange;  		args.Data = GetStatusChangerMessage (array' 2);  		break;  	default:  		Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  		args = null;  		break;  	}  }  else {  	Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (a.Length > 2) {  	switch (a [2].ToLower ()) {  	case "tips":  		args.PollMsgType = PollType.Tips;  		Loger.WriteLog (string.Format ("Tips :{0}"' text));  		args = null;  		break;  	case "message":  		args.PollMsgType = PollType.Friend;  		args.Data = GetFriendMessage (array' 2);  		break;  	case "group_message":  		args.PollMsgType = PollType.Group;  		Loger.WriteLog (string.Format ("Group :{0}"' text));  		args.Data = GetGroupMessage (array' 2);  		break;  	case "kick_message":  		args.PollMsgType = PollType.KickMessage;  		args.Data = GetKiMessage (array' 2);  		break;  	case "system_message":  	case "sys_g_msg":  		Loger.WriteLog (string.Format ("system_message :{0}"' text));  		break;  	case "buddies_status_change":  		args.PollMsgType = PollType.StatusChange;  		args.Data = GetStatusChangerMessage (array' 2);  		break;  	default:  		Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  		args = null;  		break;  	}  }  else {  	Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (a.Length > 2) {  	switch (a [2].ToLower ()) {  	case "tips":  		args.PollMsgType = PollType.Tips;  		Loger.WriteLog (string.Format ("Tips :{0}"' text));  		args = null;  		break;  	case "message":  		args.PollMsgType = PollType.Friend;  		args.Data = GetFriendMessage (array' 2);  		break;  	case "group_message":  		args.PollMsgType = PollType.Group;  		Loger.WriteLog (string.Format ("Group :{0}"' text));  		args.Data = GetGroupMessage (array' 2);  		break;  	case "kick_message":  		args.PollMsgType = PollType.KickMessage;  		args.Data = GetKiMessage (array' 2);  		break;  	case "system_message":  	case "sys_g_msg":  		Loger.WriteLog (string.Format ("system_message :{0}"' text));  		break;  	case "buddies_status_change":  		args.PollMsgType = PollType.StatusChange;  		args.Data = GetStatusChangerMessage (array' 2);  		break;  	default:  		Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  		args = null;  		break;  	}  }  else {  	Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: if (a.Length > 2) {  	switch (a [2].ToLower ()) {  	case "tips":  		args.PollMsgType = PollType.Tips;  		Loger.WriteLog (string.Format ("Tips :{0}"' text));  		args = null;  		break;  	case "message":  		args.PollMsgType = PollType.Friend;  		args.Data = GetFriendMessage (array' 2);  		break;  	case "group_message":  		args.PollMsgType = PollType.Group;  		Loger.WriteLog (string.Format ("Group :{0}"' text));  		args.Data = GetGroupMessage (array' 2);  		break;  	case "kick_message":  		args.PollMsgType = PollType.KickMessage;  		args.Data = GetKiMessage (array' 2);  		break;  	case "system_message":  	case "sys_g_msg":  		Loger.WriteLog (string.Format ("system_message :{0}"' text));  		break;  	case "buddies_status_change":  		args.PollMsgType = PollType.StatusChange;  		args.Data = GetStatusChangerMessage (array' 2);  		break;  	default:  		Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  		args = null;  		break;  	}  }  else {  	Loger.WriteLog ("接收消息出现错误'消息返回值:" + source);  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: switch (a [2].ToLower ()) {  case "tips":  	args.PollMsgType = PollType.Tips;  	Loger.WriteLog (string.Format ("Tips :{0}"' text));  	args = null;  	break;  case "message":  	args.PollMsgType = PollType.Friend;  	args.Data = GetFriendMessage (array' 2);  	break;  case "group_message":  	args.PollMsgType = PollType.Group;  	Loger.WriteLog (string.Format ("Group :{0}"' text));  	args.Data = GetGroupMessage (array' 2);  	break;  case "kick_message":  	args.PollMsgType = PollType.KickMessage;  	args.Data = GetKiMessage (array' 2);  	break;  case "system_message":  case "sys_g_msg":  	Loger.WriteLog (string.Format ("system_message :{0}"' text));  	break;  case "buddies_status_change":  	args.PollMsgType = PollType.StatusChange;  	args.Data = GetStatusChangerMessage (array' 2);  	break;  default:  	Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  	args = null;  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: switch (a [2].ToLower ()) {  case "tips":  	args.PollMsgType = PollType.Tips;  	Loger.WriteLog (string.Format ("Tips :{0}"' text));  	args = null;  	break;  case "message":  	args.PollMsgType = PollType.Friend;  	args.Data = GetFriendMessage (array' 2);  	break;  case "group_message":  	args.PollMsgType = PollType.Group;  	Loger.WriteLog (string.Format ("Group :{0}"' text));  	args.Data = GetGroupMessage (array' 2);  	break;  case "kick_message":  	args.PollMsgType = PollType.KickMessage;  	args.Data = GetKiMessage (array' 2);  	break;  case "system_message":  case "sys_g_msg":  	Loger.WriteLog (string.Format ("system_message :{0}"' text));  	break;  case "buddies_status_change":  	args.PollMsgType = PollType.StatusChange;  	args.Data = GetStatusChangerMessage (array' 2);  	break;  default:  	Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  	args = null;  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: switch (a [2].ToLower ()) {  case "tips":  	args.PollMsgType = PollType.Tips;  	Loger.WriteLog (string.Format ("Tips :{0}"' text));  	args = null;  	break;  case "message":  	args.PollMsgType = PollType.Friend;  	args.Data = GetFriendMessage (array' 2);  	break;  case "group_message":  	args.PollMsgType = PollType.Group;  	Loger.WriteLog (string.Format ("Group :{0}"' text));  	args.Data = GetGroupMessage (array' 2);  	break;  case "kick_message":  	args.PollMsgType = PollType.KickMessage;  	args.Data = GetKiMessage (array' 2);  	break;  case "system_message":  case "sys_g_msg":  	Loger.WriteLog (string.Format ("system_message :{0}"' text));  	break;  case "buddies_status_change":  	args.PollMsgType = PollType.StatusChange;  	args.Data = GetStatusChangerMessage (array' 2);  	break;  default:  	Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  	args = null;  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: switch (a [2].ToLower ()) {  case "tips":  	args.PollMsgType = PollType.Tips;  	Loger.WriteLog (string.Format ("Tips :{0}"' text));  	args = null;  	break;  case "message":  	args.PollMsgType = PollType.Friend;  	args.Data = GetFriendMessage (array' 2);  	break;  case "group_message":  	args.PollMsgType = PollType.Group;  	Loger.WriteLog (string.Format ("Group :{0}"' text));  	args.Data = GetGroupMessage (array' 2);  	break;  case "kick_message":  	args.PollMsgType = PollType.KickMessage;  	args.Data = GetKiMessage (array' 2);  	break;  case "system_message":  case "sys_g_msg":  	Loger.WriteLog (string.Format ("system_message :{0}"' text));  	break;  case "buddies_status_change":  	args.PollMsgType = PollType.StatusChange;  	args.Data = GetStatusChangerMessage (array' 2);  	break;  default:  	Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  	args = null;  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: switch (a [2].ToLower ()) {  case "tips":  	args.PollMsgType = PollType.Tips;  	Loger.WriteLog (string.Format ("Tips :{0}"' text));  	args = null;  	break;  case "message":  	args.PollMsgType = PollType.Friend;  	args.Data = GetFriendMessage (array' 2);  	break;  case "group_message":  	args.PollMsgType = PollType.Group;  	Loger.WriteLog (string.Format ("Group :{0}"' text));  	args.Data = GetGroupMessage (array' 2);  	break;  case "kick_message":  	args.PollMsgType = PollType.KickMessage;  	args.Data = GetKiMessage (array' 2);  	break;  case "system_message":  case "sys_g_msg":  	Loger.WriteLog (string.Format ("system_message :{0}"' text));  	break;  case "buddies_status_change":  	args.PollMsgType = PollType.StatusChange;  	args.Data = GetStatusChangerMessage (array' 2);  	break;  default:  	Loger.WriteLog (string.Format ("接收到 other:{0}"' text));  	args = null;  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: args.Data = GetFriendMessage (array' 2);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: args.Data = GetGroupMessage (array' 2);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: args.Data = GetKiMessage (array' 2);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,Parse2,The following statement contains a magic number: args.Data = GetStatusChangerMessage (array' 2);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetKiMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			value.Way = a [2];  			break;  		case "show_reason":  			value.ShowReason = int.Parse (a [1]);  			break;  		case "reason":  			value.Reason = Encode.DeUnicode (a [1]);  			break;  		default:  			break;  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetKiMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		value.Way = a [2];  		break;  	case "show_reason":  		value.ShowReason = int.Parse (a [1]);  		break;  	case "reason":  		value.Reason = Encode.DeUnicode (a [1]);  		break;  	default:  		break;  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetKiMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	value.Way = a [2];  	break;  case "show_reason":  	value.ShowReason = int.Parse (a [1]);  	break;  case "reason":  	value.Reason = Encode.DeUnicode (a [1]);  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetKiMessage,The following statement contains a magic number: value.Way = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		case "info_seq":  			value.InfoSeq = a [1];  			break;  		case "seq":  			value.Seq = a [1];  			break;  		case "send_uin":  			value.SendUin = a [1];  			break;  		case "group_code":  			value.GroupCode = a [1];  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		case "info_seq":  			value.InfoSeq = a [1];  			break;  		case "seq":  			value.Seq = a [1];  			break;  		case "send_uin":  			value.SendUin = a [1];  			break;  		case "group_code":  			value.GroupCode = a [1];  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		case "info_seq":  			value.InfoSeq = a [1];  			break;  		case "seq":  			value.Seq = a [1];  			break;  		case "send_uin":  			value.SendUin = a [1];  			break;  		case "group_code":  			value.GroupCode = a [1];  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		case "info_seq":  			value.InfoSeq = a [1];  			break;  		case "seq":  			value.Seq = a [1];  			break;  		case "send_uin":  			value.SendUin = a [1];  			break;  		case "group_code":  			value.GroupCode = a [1];  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	case "info_seq":  		value.InfoSeq = a [1];  		break;  	case "seq":  		value.Seq = a [1];  		break;  	case "send_uin":  		value.SendUin = a [1];  		break;  	case "group_code":  		value.GroupCode = a [1];  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	case "info_seq":  		value.InfoSeq = a [1];  		break;  	case "seq":  		value.Seq = a [1];  		break;  	case "send_uin":  		value.SendUin = a [1];  		break;  	case "group_code":  		value.GroupCode = a [1];  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	case "info_seq":  		value.InfoSeq = a [1];  		break;  	case "seq":  		value.Seq = a [1];  		break;  	case "send_uin":  		value.SendUin = a [1];  		break;  	case "group_code":  		value.GroupCode = a [1];  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	case "info_seq":  		value.InfoSeq = a [1];  		break;  	case "seq":  		value.Seq = a [1];  		break;  	case "send_uin":  		value.SendUin = a [1];  		break;  	case "group_code":  		value.GroupCode = a [1];  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  case "info_seq":  	value.InfoSeq = a [1];  	break;  case "seq":  	value.Seq = a [1];  	break;  case "send_uin":  	value.SendUin = a [1];  	break;  case "group_code":  	value.GroupCode = a [1];  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  case "info_seq":  	value.InfoSeq = a [1];  	break;  case "seq":  	value.Seq = a [1];  	break;  case "send_uin":  	value.SendUin = a [1];  	break;  case "group_code":  	value.GroupCode = a [1];  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  case "info_seq":  	value.InfoSeq = a [1];  	break;  case "seq":  	value.Seq = a [1];  	break;  case "send_uin":  	value.SendUin = a [1];  	break;  case "group_code":  	value.GroupCode = a [1];  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  case "info_seq":  	value.InfoSeq = a [1];  	break;  case "seq":  	value.Seq = a [1];  	break;  case "send_uin":  	value.SendUin = a [1];  	break;  case "group_code":  	value.GroupCode = a [1];  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: value.MsgID = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetGroupMessage,The following statement contains a magic number: i = i + 2;  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("\r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("\r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("\r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			if (a.Length > 2)  				value.MsgID = a [2];  			break;  		case "from_uin":  			value.FromUin = a [1];  			break;  		case "msg_id2":  			value.MsgID2 = a [1];  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = a [1];  			break;  		case "time":  			value.Time = a [1];  			break;  		case "to_uin":  			value.ToUin = a [1];  			break;  		case "color":  			value.Color = Tool.GetColor (a [1]);  			break;  		case "name":  			name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			size = int.Parse (a [1]);  			break;  		case "style":  			style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			string t = Encode.DeUnicode (item);  			value.Content.Add (t.Replace ("\r"' "\r\n"));  		}  		else {  			value.Content.Add (item);  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("\r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("\r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("\r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		if (a.Length > 2)  			value.MsgID = a [2];  		break;  	case "from_uin":  		value.FromUin = a [1];  		break;  	case "msg_id2":  		value.MsgID2 = a [1];  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = a [1];  		break;  	case "time":  		value.Time = a [1];  		break;  	case "to_uin":  		value.ToUin = a [1];  		break;  	case "color":  		value.Color = Tool.GetColor (a [1]);  		break;  	case "name":  		name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		size = int.Parse (a [1]);  		break;  	case "style":  		style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		string t = Encode.DeUnicode (item);  		value.Content.Add (t.Replace ("\r"' "\r\n"));  	}  	else {  		value.Content.Add (item);  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	if (a.Length > 2)  		value.MsgID = a [2];  	break;  case "from_uin":  	value.FromUin = a [1];  	break;  case "msg_id2":  	value.MsgID2 = a [1];  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = a [1];  	break;  case "time":  	value.Time = a [1];  	break;  case "to_uin":  	value.ToUin = a [1];  	break;  case "color":  	value.Color = Tool.GetColor (a [1]);  	break;  case "name":  	name = Encode.DeUnicode (a [1]);  	break;  case "size":  	size = int.Parse (a [1]);  	break;  case "style":  	style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: value.MsgID = a [2];  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: style = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetFriendMessage,The following statement contains a magic number: i = i + 2;  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetStatusChangerMessage,The following statement contains a magic number: for (int i = index; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "value":  			value.Uin = a [2];  			break;  		case "status":  			value.Status = GetOnLineStatus (a [1]);  			break;  		case "client_type":  			value.ClientType = int.Parse (a [1]);  			break;  		default:  			break;  		}  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetStatusChangerMessage,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "value":  		value.Uin = a [2];  		break;  	case "status":  		value.Status = GetOnLineStatus (a [1]);  		break;  	case "client_type":  		value.ClientType = int.Parse (a [1]);  		break;  	default:  		break;  	}  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetStatusChangerMessage,The following statement contains a magic number: switch (a [0]) {  case "value":  	value.Uin = a [2];  	break;  case "status":  	value.Status = GetOnLineStatus (a [1]);  	break;  case "client_type":  	value.ClientType = int.Parse (a [1]);  	break;  default:  	break;  }  
Magic Number,QQSDK.Net,QQMessageEventArgs,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\QQMessageEventArgs.cs,GetStatusChangerMessage,The following statement contains a magic number: value.Uin = a [2];  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,WebQQ,The following statement contains a magic number: _ClientID = Tool.GetRandomNumber (10);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,WebQQ,The following statement contains a magic number: _SendNumber = d.Next () + 10000000;  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,LoginOut,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetFace,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetFriendInfo,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: if (index > -1) {  	int last = text.IndexOf ("}"' index);  	if (last > index) {  		return text.Substring (index + 8' last - index - 9);  	}  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: if (index > -1) {  	int last = text.IndexOf ("}"' index);  	if (last > index) {  		return text.Substring (index + 8' last - index - 9);  	}  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: if (last > index) {  	return text.Substring (index + 8' last - index - 9);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: if (last > index) {  	return text.Substring (index + 8' last - index - 9);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: return text.Substring (index + 8' last - index - 9);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetUserLnick,The following statement contains a magic number: return text.Substring (index + 8' last - index - 9);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetQQNumber,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetQQNumber,The following statement contains a magic number: if (index > -1 && last > index) {  	return text.Substring (index + 10' last - index - 10);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetQQNumber,The following statement contains a magic number: if (index > -1 && last > index) {  	return text.Substring (index + 10' last - index - 10);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetQQNumber,The following statement contains a magic number: return text.Substring (index + 10' last - index - 10);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetQQNumber,The following statement contains a magic number: return text.Substring (index + 10' last - index - 10);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetSingleInfo,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SearchQQByKey,The following statement contains a magic number: sb.AppendFormat ("&page={0}&t={1}"' page' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: if (index > -1) {  	int last = text.IndexOf ("'");  	if (last > index) {  		return text.Substring (index + 9' last - index - 9);  	}  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: if (index > -1) {  	int last = text.IndexOf ("'");  	if (last > index) {  		return text.Substring (index + 9' last - index - 9);  	}  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: if (last > index) {  	return text.Substring (index + 9' last - index - 9);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: if (last > index) {  	return text.Substring (index + 9' last - index - 9);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: return text.Substring (index + 9' last - index - 9);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupNumber,The following statement contains a magic number: return text.Substring (index + 9' last - index - 9);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetGroupMemberList,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetFriendHead,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SearchGroup,The following statement contains a magic number: sb.AppendFormat ("&c1=0&c2=0&c3=0&st=0&vfcode={2}&type=1&vfwebqq={0}&t={1}"' _VFWebQQ' Tool.GetRandomNumber (10)' vfCode.ToLower ());  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SearchGroupByKey,The following statement contains a magic number: sb.AppendFormat ("&c1=0&c2=0&c3=0&st=0&vfcode=&type=1&vfwebqq={0}&t={1}"' _VFWebQQ' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetLoginVC,The following statement contains a magic number: sb.Append (Tool.GetRandomNumber (15));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetLoginVC,The following statement contains a magic number: if (text.IndexOf ("ptui_checkVC('0')") > -1) {  	//不需要验证码.  	result = text.Substring (18' 4);  	return LoginResult.NotVerifyCode;  }  else {  	//需要验证码.  	result = string.Format ("https://ssl.captcha.qq.com/getimage?aid=1003903&r=0.7291774027980864&uin={0}"' qqNumber);  	return LoginResult.NeedVerifyCode;  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetLoginVC,The following statement contains a magic number: if (text.IndexOf ("ptui_checkVC('0')") > -1) {  	//不需要验证码.  	result = text.Substring (18' 4);  	return LoginResult.NotVerifyCode;  }  else {  	//需要验证码.  	result = string.Format ("https://ssl.captcha.qq.com/getimage?aid=1003903&r=0.7291774027980864&uin={0}"' qqNumber);  	return LoginResult.NeedVerifyCode;  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetLoginVC,The following statement contains a magic number: result = text.Substring (18' 4);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetLoginVC,The following statement contains a magic number: result = text.Substring (18' 4);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ChangeOnlineStatus,The following statement contains a magic number: sb.AppendFormat ("&t={0}"' Tool.GetRandomNumber (10));  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SendMessage,The following statement contains a magic number: try {  	StringBuilder sb = new StringBuilder (400);  	sb.Append ("r={\"to\":");  	sb.Append (uin);  	sb.AppendFormat ("'\"face\":{0}'"' 606);  	sb.AppendFormat ("\"content\":\"[\\\"{0}\\\"'"' Encode.ToUnicodeString (content' false));  	sb.Append ("[\\\"font\\\"'");  	sb.Append ("{\\\"name\\\":");  	sb.AppendFormat ("\\\"{0}\\\"'"' Encode.ToUnicodeString (font.Name' true));  	sb.AppendFormat ("\\\"size\\\":");  	sb.AppendFormat ("\\\"{0}\\\"'"' font.Size);  	sb.AppendFormat ("\\\"style\\\":");  	sb.AppendFormat ("[{0}]'"' Tool.GetFontStyle (font));  	sb.Append ("\\\"color\\\":\\\"");  	sb.Append (Tool.GetColor (color));  	sb.Append ("\\\"}]]\"'");  	sb.Append ("\"msg_id\":");  	sb.AppendFormat ("{0}'"' GetSendNumber ());  	sb.Append ("\"clientid\":");  	sb.AppendFormat ("\"{0}\"'"' _ClientID);  	sb.Append ("\"psessionid\":");  	sb.AppendFormat ("\"{0}\""' _PsessionID);  	sb.Append ("}&clientid=");  	sb.Append (_ClientID);  	sb.AppendFormat ("&psessionid={0}"' _PsessionID);  	//string data = Encode.HttpUrlEncode(sb.ToString());  	string data = HttpUtility.UrlDecode (sb.ToString ());  	_HttpWeb.Referer = HttpText.SendMessageReferer;  	string text = _HttpWeb.PostWebRequest ("http://d.web2.qq.com/channel/send_buddy_msg2"' data' Encoding.UTF8);  	if (text.IndexOf ("result") > -1) {  		return true;  	}  	else if (text.IndexOf ("未能解析此远程名称") > -1) {  		//通知下线.  	}  	else {  		return false;  	}  }  catch (Exception ex) {  	Loger.WriteLog (ex);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SendMessage,The following statement contains a magic number: try {  	StringBuilder sb = new StringBuilder (400);  	sb.Append ("r={\"to\":");  	sb.Append (uin);  	sb.AppendFormat ("'\"face\":{0}'"' 606);  	sb.AppendFormat ("\"content\":\"[\\\"{0}\\\"'"' Encode.ToUnicodeString (content' false));  	sb.Append ("[\\\"font\\\"'");  	sb.Append ("{\\\"name\\\":");  	sb.AppendFormat ("\\\"{0}\\\"'"' Encode.ToUnicodeString (font.Name' true));  	sb.AppendFormat ("\\\"size\\\":");  	sb.AppendFormat ("\\\"{0}\\\"'"' font.Size);  	sb.AppendFormat ("\\\"style\\\":");  	sb.AppendFormat ("[{0}]'"' Tool.GetFontStyle (font));  	sb.Append ("\\\"color\\\":\\\"");  	sb.Append (Tool.GetColor (color));  	sb.Append ("\\\"}]]\"'");  	sb.Append ("\"msg_id\":");  	sb.AppendFormat ("{0}'"' GetSendNumber ());  	sb.Append ("\"clientid\":");  	sb.AppendFormat ("\"{0}\"'"' _ClientID);  	sb.Append ("\"psessionid\":");  	sb.AppendFormat ("\"{0}\""' _PsessionID);  	sb.Append ("}&clientid=");  	sb.Append (_ClientID);  	sb.AppendFormat ("&psessionid={0}"' _PsessionID);  	//string data = Encode.HttpUrlEncode(sb.ToString());  	string data = HttpUtility.UrlDecode (sb.ToString ());  	_HttpWeb.Referer = HttpText.SendMessageReferer;  	string text = _HttpWeb.PostWebRequest ("http://d.web2.qq.com/channel/send_buddy_msg2"' data' Encoding.UTF8);  	if (text.IndexOf ("result") > -1) {  		return true;  	}  	else if (text.IndexOf ("未能解析此远程名称") > -1) {  		//通知下线.  	}  	else {  		return false;  	}  }  catch (Exception ex) {  	Loger.WriteLog (ex);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,SendMessage,The following statement contains a magic number: sb.AppendFormat ("'\"face\":{0}'"' 606);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: try {  	while (true) {  		if (_KissOnline) {  			//QQ 掉线了.  			Thread.Sleep (500);  			continue;  		}  		StringBuilder sb = new StringBuilder ();  		sb.Append ("r=%7B%22clientid%22%3A%22");  		sb.Append (_ClientID);  		sb.Append ("%22%2C%22psessionid%22%3A%22");  		sb.Append (_PsessionID);  		sb.Append ("%22%2C%22key%22%3A0%2C%22ids%22%3A%5B%5D%7D&clientid=");  		sb.Append (_ClientID);  		sb.Append ("&psessionid=");  		sb.Append (_PsessionID);  		_HttpWeb.Referer = HttpText.PollReferer;  		string text = _HttpWeb.PollWebRequest ("http://d.web2.qq.com/channel/poll2"' sb.ToString ()' Encoding.UTF8);  		try {  			if (text.IndexOf ("result") > -1) {  				List<QQMessageEventArgs> list = QQMessageEventArgs.Parse (text);  				foreach (var item in list) {  					if (item.PollMsgType == PollType.KickMessage) {  						_KissOnline = true;  					}  					OnReciveMessage (item);  				}  			}  			else if (text.IndexOf ("\"retcode\":102") > -1) {  				// 没有接收到任何消息.  			}  			else if (text.IndexOf ("\"retcode\":121") > -1) {  				ReLogin ();  				//QQ掉线了  				string temp = string.Format ("接收错误:\r\nQQ号码:{0} \r\nPsessionID:{1}\r\nPTWebQQ:{2}\r\nVFWebQQ:{3}"' _MyQQNumber' _PsessionID' _PTWebQQ' _VFWebQQ);  				Loger.WriteLog (temp);  			}  			else if (text.IndexOf ("\"retcode\":116") > -1) {  				//改变Cookie  				ReLogin ();  				Loger.WriteLog ("接收错误116:" + text);  			}  			else {  				Loger.WriteLog ("其他接收错误:" + text);  			}  		}  		catch (Exception e) {  			Loger.WriteLog (e);  		}  		Thread.Sleep (500);  	}  }  catch (Exception ex) {  	Loger.WriteLog (ex);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: try {  	while (true) {  		if (_KissOnline) {  			//QQ 掉线了.  			Thread.Sleep (500);  			continue;  		}  		StringBuilder sb = new StringBuilder ();  		sb.Append ("r=%7B%22clientid%22%3A%22");  		sb.Append (_ClientID);  		sb.Append ("%22%2C%22psessionid%22%3A%22");  		sb.Append (_PsessionID);  		sb.Append ("%22%2C%22key%22%3A0%2C%22ids%22%3A%5B%5D%7D&clientid=");  		sb.Append (_ClientID);  		sb.Append ("&psessionid=");  		sb.Append (_PsessionID);  		_HttpWeb.Referer = HttpText.PollReferer;  		string text = _HttpWeb.PollWebRequest ("http://d.web2.qq.com/channel/poll2"' sb.ToString ()' Encoding.UTF8);  		try {  			if (text.IndexOf ("result") > -1) {  				List<QQMessageEventArgs> list = QQMessageEventArgs.Parse (text);  				foreach (var item in list) {  					if (item.PollMsgType == PollType.KickMessage) {  						_KissOnline = true;  					}  					OnReciveMessage (item);  				}  			}  			else if (text.IndexOf ("\"retcode\":102") > -1) {  				// 没有接收到任何消息.  			}  			else if (text.IndexOf ("\"retcode\":121") > -1) {  				ReLogin ();  				//QQ掉线了  				string temp = string.Format ("接收错误:\r\nQQ号码:{0} \r\nPsessionID:{1}\r\nPTWebQQ:{2}\r\nVFWebQQ:{3}"' _MyQQNumber' _PsessionID' _PTWebQQ' _VFWebQQ);  				Loger.WriteLog (temp);  			}  			else if (text.IndexOf ("\"retcode\":116") > -1) {  				//改变Cookie  				ReLogin ();  				Loger.WriteLog ("接收错误116:" + text);  			}  			else {  				Loger.WriteLog ("其他接收错误:" + text);  			}  		}  		catch (Exception e) {  			Loger.WriteLog (e);  		}  		Thread.Sleep (500);  	}  }  catch (Exception ex) {  	Loger.WriteLog (ex);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: while (true) {  	if (_KissOnline) {  		//QQ 掉线了.  		Thread.Sleep (500);  		continue;  	}  	StringBuilder sb = new StringBuilder ();  	sb.Append ("r=%7B%22clientid%22%3A%22");  	sb.Append (_ClientID);  	sb.Append ("%22%2C%22psessionid%22%3A%22");  	sb.Append (_PsessionID);  	sb.Append ("%22%2C%22key%22%3A0%2C%22ids%22%3A%5B%5D%7D&clientid=");  	sb.Append (_ClientID);  	sb.Append ("&psessionid=");  	sb.Append (_PsessionID);  	_HttpWeb.Referer = HttpText.PollReferer;  	string text = _HttpWeb.PollWebRequest ("http://d.web2.qq.com/channel/poll2"' sb.ToString ()' Encoding.UTF8);  	try {  		if (text.IndexOf ("result") > -1) {  			List<QQMessageEventArgs> list = QQMessageEventArgs.Parse (text);  			foreach (var item in list) {  				if (item.PollMsgType == PollType.KickMessage) {  					_KissOnline = true;  				}  				OnReciveMessage (item);  			}  		}  		else if (text.IndexOf ("\"retcode\":102") > -1) {  			// 没有接收到任何消息.  		}  		else if (text.IndexOf ("\"retcode\":121") > -1) {  			ReLogin ();  			//QQ掉线了  			string temp = string.Format ("接收错误:\r\nQQ号码:{0} \r\nPsessionID:{1}\r\nPTWebQQ:{2}\r\nVFWebQQ:{3}"' _MyQQNumber' _PsessionID' _PTWebQQ' _VFWebQQ);  			Loger.WriteLog (temp);  		}  		else if (text.IndexOf ("\"retcode\":116") > -1) {  			//改变Cookie  			ReLogin ();  			Loger.WriteLog ("接收错误116:" + text);  		}  		else {  			Loger.WriteLog ("其他接收错误:" + text);  		}  	}  	catch (Exception e) {  		Loger.WriteLog (e);  	}  	Thread.Sleep (500);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: while (true) {  	if (_KissOnline) {  		//QQ 掉线了.  		Thread.Sleep (500);  		continue;  	}  	StringBuilder sb = new StringBuilder ();  	sb.Append ("r=%7B%22clientid%22%3A%22");  	sb.Append (_ClientID);  	sb.Append ("%22%2C%22psessionid%22%3A%22");  	sb.Append (_PsessionID);  	sb.Append ("%22%2C%22key%22%3A0%2C%22ids%22%3A%5B%5D%7D&clientid=");  	sb.Append (_ClientID);  	sb.Append ("&psessionid=");  	sb.Append (_PsessionID);  	_HttpWeb.Referer = HttpText.PollReferer;  	string text = _HttpWeb.PollWebRequest ("http://d.web2.qq.com/channel/poll2"' sb.ToString ()' Encoding.UTF8);  	try {  		if (text.IndexOf ("result") > -1) {  			List<QQMessageEventArgs> list = QQMessageEventArgs.Parse (text);  			foreach (var item in list) {  				if (item.PollMsgType == PollType.KickMessage) {  					_KissOnline = true;  				}  				OnReciveMessage (item);  			}  		}  		else if (text.IndexOf ("\"retcode\":102") > -1) {  			// 没有接收到任何消息.  		}  		else if (text.IndexOf ("\"retcode\":121") > -1) {  			ReLogin ();  			//QQ掉线了  			string temp = string.Format ("接收错误:\r\nQQ号码:{0} \r\nPsessionID:{1}\r\nPTWebQQ:{2}\r\nVFWebQQ:{3}"' _MyQQNumber' _PsessionID' _PTWebQQ' _VFWebQQ);  			Loger.WriteLog (temp);  		}  		else if (text.IndexOf ("\"retcode\":116") > -1) {  			//改变Cookie  			ReLogin ();  			Loger.WriteLog ("接收错误116:" + text);  		}  		else {  			Loger.WriteLog ("其他接收错误:" + text);  		}  	}  	catch (Exception e) {  		Loger.WriteLog (e);  	}  	Thread.Sleep (500);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: if (_KissOnline) {  	//QQ 掉线了.  	Thread.Sleep (500);  	continue;  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,ListenMessage,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetNickName,The following statement contains a magic number: if (last > index) {  	_NickName = text.Substring (index + 9' last - index - 9);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetNickName,The following statement contains a magic number: if (last > index) {  	_NickName = text.Substring (index + 9' last - index - 9);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetNickName,The following statement contains a magic number: _NickName = text.Substring (index + 9' last - index - 9);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetNickName,The following statement contains a magic number: _NickName = text.Substring (index + 9' last - index - 9);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetKey,The following statement contains a magic number: if (string.IsNullOrEmpty (_PTWebQQ)) {  	string cookie = _HttpWeb.GetCookieText ();  	//string cookie = web.GetCookie();  	int index = cookie.IndexOf ("ptwebqq=");  	if (index > -1) {  		_PTWebQQ = cookie.Substring (index + 8' 64);  	}  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetKey,The following statement contains a magic number: if (string.IsNullOrEmpty (_PTWebQQ)) {  	string cookie = _HttpWeb.GetCookieText ();  	//string cookie = web.GetCookie();  	int index = cookie.IndexOf ("ptwebqq=");  	if (index > -1) {  		_PTWebQQ = cookie.Substring (index + 8' 64);  	}  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetKey,The following statement contains a magic number: if (index > -1) {  	_PTWebQQ = cookie.Substring (index + 8' 64);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetKey,The following statement contains a magic number: if (index > -1) {  	_PTWebQQ = cookie.Substring (index + 8' 64);  }  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetKey,The following statement contains a magic number: _PTWebQQ = cookie.Substring (index + 8' 64);  
Magic Number,QQSDK.Net,WebQQ,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\WebQQ.cs,GetKey,The following statement contains a magic number: _PTWebQQ = cookie.Substring (index + 8' 64);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,CheckQQPassword,The following statement contains a magic number: return length < 6 ? false : length > 16 ? false : true;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,CheckQQPassword,The following statement contains a magic number: return length < 6 ? false : length > 16 ? false : true;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (stack.Count > 0) {  	HashItem qqitem = stack.Pop ();  	if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  		if (qqitem.index + 1 == qqitem.Value) {  			if (array2 [qqitem.index] > array2 [qqitem.Value]) {  				char c = array2 [qqitem.index];  				array2 [qqitem.index] = array2 [qqitem.Value];  				array2 [qqitem.Value] = c;  			}  		}  		else {  			int index = qqitem.index;  			int value = qqitem.Value;  			char c2 = array2 [qqitem.index];  			while (qqitem.index < qqitem.Value) {  				while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  					qqitem.Value--;  					array [0] = (array [0] + 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.index] = array2 [qqitem.Value];  					qqitem.index++;  					array [1] = (array [1] * 13uL + 43uL & 255uL);  				}  				while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  					qqitem.index++;  					array [2] = (array [2] - 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.Value] = array2 [qqitem.index];  					qqitem.Value--;  					array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  				}  			}  			array2 [qqitem.index] = c2;  			stack.Push (new HashItem (index' qqitem.index - 1));  			stack.Push (new HashItem (qqitem.index + 1' value));  		}  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (stack.Count > 0) {  	HashItem qqitem = stack.Pop ();  	if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  		if (qqitem.index + 1 == qqitem.Value) {  			if (array2 [qqitem.index] > array2 [qqitem.Value]) {  				char c = array2 [qqitem.index];  				array2 [qqitem.index] = array2 [qqitem.Value];  				array2 [qqitem.Value] = c;  			}  		}  		else {  			int index = qqitem.index;  			int value = qqitem.Value;  			char c2 = array2 [qqitem.index];  			while (qqitem.index < qqitem.Value) {  				while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  					qqitem.Value--;  					array [0] = (array [0] + 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.index] = array2 [qqitem.Value];  					qqitem.index++;  					array [1] = (array [1] * 13uL + 43uL & 255uL);  				}  				while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  					qqitem.index++;  					array [2] = (array [2] - 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.Value] = array2 [qqitem.index];  					qqitem.Value--;  					array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  				}  			}  			array2 [qqitem.index] = c2;  			stack.Push (new HashItem (index' qqitem.index - 1));  			stack.Push (new HashItem (qqitem.index + 1' value));  		}  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (stack.Count > 0) {  	HashItem qqitem = stack.Pop ();  	if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  		if (qqitem.index + 1 == qqitem.Value) {  			if (array2 [qqitem.index] > array2 [qqitem.Value]) {  				char c = array2 [qqitem.index];  				array2 [qqitem.index] = array2 [qqitem.Value];  				array2 [qqitem.Value] = c;  			}  		}  		else {  			int index = qqitem.index;  			int value = qqitem.Value;  			char c2 = array2 [qqitem.index];  			while (qqitem.index < qqitem.Value) {  				while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  					qqitem.Value--;  					array [0] = (array [0] + 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.index] = array2 [qqitem.Value];  					qqitem.index++;  					array [1] = (array [1] * 13uL + 43uL & 255uL);  				}  				while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  					qqitem.index++;  					array [2] = (array [2] - 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.Value] = array2 [qqitem.index];  					qqitem.Value--;  					array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  				}  			}  			array2 [qqitem.index] = c2;  			stack.Push (new HashItem (index' qqitem.index - 1));  			stack.Push (new HashItem (qqitem.index + 1' value));  		}  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (stack.Count > 0) {  	HashItem qqitem = stack.Pop ();  	if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  		if (qqitem.index + 1 == qqitem.Value) {  			if (array2 [qqitem.index] > array2 [qqitem.Value]) {  				char c = array2 [qqitem.index];  				array2 [qqitem.index] = array2 [qqitem.Value];  				array2 [qqitem.Value] = c;  			}  		}  		else {  			int index = qqitem.index;  			int value = qqitem.Value;  			char c2 = array2 [qqitem.index];  			while (qqitem.index < qqitem.Value) {  				while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  					qqitem.Value--;  					array [0] = (array [0] + 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.index] = array2 [qqitem.Value];  					qqitem.index++;  					array [1] = (array [1] * 13uL + 43uL & 255uL);  				}  				while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  					qqitem.index++;  					array [2] = (array [2] - 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.Value] = array2 [qqitem.index];  					qqitem.Value--;  					array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  				}  			}  			array2 [qqitem.index] = c2;  			stack.Push (new HashItem (index' qqitem.index - 1));  			stack.Push (new HashItem (qqitem.index + 1' value));  		}  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (stack.Count > 0) {  	HashItem qqitem = stack.Pop ();  	if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  		if (qqitem.index + 1 == qqitem.Value) {  			if (array2 [qqitem.index] > array2 [qqitem.Value]) {  				char c = array2 [qqitem.index];  				array2 [qqitem.index] = array2 [qqitem.Value];  				array2 [qqitem.Value] = c;  			}  		}  		else {  			int index = qqitem.index;  			int value = qqitem.Value;  			char c2 = array2 [qqitem.index];  			while (qqitem.index < qqitem.Value) {  				while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  					qqitem.Value--;  					array [0] = (array [0] + 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.index] = array2 [qqitem.Value];  					qqitem.index++;  					array [1] = (array [1] * 13uL + 43uL & 255uL);  				}  				while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  					qqitem.index++;  					array [2] = (array [2] - 3uL & 255uL);  				}  				if (qqitem.index < qqitem.Value) {  					array2 [qqitem.Value] = array2 [qqitem.index];  					qqitem.Value--;  					array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  				}  			}  			array2 [qqitem.index] = c2;  			stack.Push (new HashItem (index' qqitem.index - 1));  			stack.Push (new HashItem (qqitem.index + 1' value));  		}  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  	if (qqitem.index + 1 == qqitem.Value) {  		if (array2 [qqitem.index] > array2 [qqitem.Value]) {  			char c = array2 [qqitem.index];  			array2 [qqitem.index] = array2 [qqitem.Value];  			array2 [qqitem.Value] = c;  		}  	}  	else {  		int index = qqitem.index;  		int value = qqitem.Value;  		char c2 = array2 [qqitem.index];  		while (qqitem.index < qqitem.Value) {  			while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  				qqitem.Value--;  				array [0] = (array [0] + 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.index] = array2 [qqitem.Value];  				qqitem.index++;  				array [1] = (array [1] * 13uL + 43uL & 255uL);  			}  			while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  				qqitem.index++;  				array [2] = (array [2] - 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.Value] = array2 [qqitem.index];  				qqitem.Value--;  				array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  			}  		}  		array2 [qqitem.index] = c2;  		stack.Push (new HashItem (index' qqitem.index - 1));  		stack.Push (new HashItem (qqitem.index + 1' value));  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  	if (qqitem.index + 1 == qqitem.Value) {  		if (array2 [qqitem.index] > array2 [qqitem.Value]) {  			char c = array2 [qqitem.index];  			array2 [qqitem.index] = array2 [qqitem.Value];  			array2 [qqitem.Value] = c;  		}  	}  	else {  		int index = qqitem.index;  		int value = qqitem.Value;  		char c2 = array2 [qqitem.index];  		while (qqitem.index < qqitem.Value) {  			while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  				qqitem.Value--;  				array [0] = (array [0] + 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.index] = array2 [qqitem.Value];  				qqitem.index++;  				array [1] = (array [1] * 13uL + 43uL & 255uL);  			}  			while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  				qqitem.index++;  				array [2] = (array [2] - 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.Value] = array2 [qqitem.index];  				qqitem.Value--;  				array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  			}  		}  		array2 [qqitem.index] = c2;  		stack.Push (new HashItem (index' qqitem.index - 1));  		stack.Push (new HashItem (qqitem.index + 1' value));  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  	if (qqitem.index + 1 == qqitem.Value) {  		if (array2 [qqitem.index] > array2 [qqitem.Value]) {  			char c = array2 [qqitem.index];  			array2 [qqitem.index] = array2 [qqitem.Value];  			array2 [qqitem.Value] = c;  		}  	}  	else {  		int index = qqitem.index;  		int value = qqitem.Value;  		char c2 = array2 [qqitem.index];  		while (qqitem.index < qqitem.Value) {  			while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  				qqitem.Value--;  				array [0] = (array [0] + 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.index] = array2 [qqitem.Value];  				qqitem.index++;  				array [1] = (array [1] * 13uL + 43uL & 255uL);  			}  			while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  				qqitem.index++;  				array [2] = (array [2] - 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.Value] = array2 [qqitem.index];  				qqitem.Value--;  				array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  			}  		}  		array2 [qqitem.index] = c2;  		stack.Push (new HashItem (index' qqitem.index - 1));  		stack.Push (new HashItem (qqitem.index + 1' value));  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  	if (qqitem.index + 1 == qqitem.Value) {  		if (array2 [qqitem.index] > array2 [qqitem.Value]) {  			char c = array2 [qqitem.index];  			array2 [qqitem.index] = array2 [qqitem.Value];  			array2 [qqitem.Value] = c;  		}  	}  	else {  		int index = qqitem.index;  		int value = qqitem.Value;  		char c2 = array2 [qqitem.index];  		while (qqitem.index < qqitem.Value) {  			while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  				qqitem.Value--;  				array [0] = (array [0] + 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.index] = array2 [qqitem.Value];  				qqitem.index++;  				array [1] = (array [1] * 13uL + 43uL & 255uL);  			}  			while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  				qqitem.index++;  				array [2] = (array [2] - 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.Value] = array2 [qqitem.index];  				qqitem.Value--;  				array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  			}  		}  		array2 [qqitem.index] = c2;  		stack.Push (new HashItem (index' qqitem.index - 1));  		stack.Push (new HashItem (qqitem.index + 1' value));  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value && qqitem.index >= 0 && qqitem.Value < array2.Length) {  	if (qqitem.index + 1 == qqitem.Value) {  		if (array2 [qqitem.index] > array2 [qqitem.Value]) {  			char c = array2 [qqitem.index];  			array2 [qqitem.index] = array2 [qqitem.Value];  			array2 [qqitem.Value] = c;  		}  	}  	else {  		int index = qqitem.index;  		int value = qqitem.Value;  		char c2 = array2 [qqitem.index];  		while (qqitem.index < qqitem.Value) {  			while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  				qqitem.Value--;  				array [0] = (array [0] + 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.index] = array2 [qqitem.Value];  				qqitem.index++;  				array [1] = (array [1] * 13uL + 43uL & 255uL);  			}  			while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  				qqitem.index++;  				array [2] = (array [2] - 3uL & 255uL);  			}  			if (qqitem.index < qqitem.Value) {  				array2 [qqitem.Value] = array2 [qqitem.index];  				qqitem.Value--;  				array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  			}  		}  		array2 [qqitem.index] = c2;  		stack.Push (new HashItem (index' qqitem.index - 1));  		stack.Push (new HashItem (qqitem.index + 1' value));  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index + 1 == qqitem.Value) {  	if (array2 [qqitem.index] > array2 [qqitem.Value]) {  		char c = array2 [qqitem.index];  		array2 [qqitem.index] = array2 [qqitem.Value];  		array2 [qqitem.Value] = c;  	}  }  else {  	int index = qqitem.index;  	int value = qqitem.Value;  	char c2 = array2 [qqitem.index];  	while (qqitem.index < qqitem.Value) {  		while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  			qqitem.Value--;  			array [0] = (array [0] + 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.index] = array2 [qqitem.Value];  			qqitem.index++;  			array [1] = (array [1] * 13uL + 43uL & 255uL);  		}  		while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  			qqitem.index++;  			array [2] = (array [2] - 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.Value] = array2 [qqitem.index];  			qqitem.Value--;  			array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  		}  	}  	array2 [qqitem.index] = c2;  	stack.Push (new HashItem (index' qqitem.index - 1));  	stack.Push (new HashItem (qqitem.index + 1' value));  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index + 1 == qqitem.Value) {  	if (array2 [qqitem.index] > array2 [qqitem.Value]) {  		char c = array2 [qqitem.index];  		array2 [qqitem.index] = array2 [qqitem.Value];  		array2 [qqitem.Value] = c;  	}  }  else {  	int index = qqitem.index;  	int value = qqitem.Value;  	char c2 = array2 [qqitem.index];  	while (qqitem.index < qqitem.Value) {  		while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  			qqitem.Value--;  			array [0] = (array [0] + 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.index] = array2 [qqitem.Value];  			qqitem.index++;  			array [1] = (array [1] * 13uL + 43uL & 255uL);  		}  		while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  			qqitem.index++;  			array [2] = (array [2] - 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.Value] = array2 [qqitem.index];  			qqitem.Value--;  			array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  		}  	}  	array2 [qqitem.index] = c2;  	stack.Push (new HashItem (index' qqitem.index - 1));  	stack.Push (new HashItem (qqitem.index + 1' value));  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index + 1 == qqitem.Value) {  	if (array2 [qqitem.index] > array2 [qqitem.Value]) {  		char c = array2 [qqitem.index];  		array2 [qqitem.index] = array2 [qqitem.Value];  		array2 [qqitem.Value] = c;  	}  }  else {  	int index = qqitem.index;  	int value = qqitem.Value;  	char c2 = array2 [qqitem.index];  	while (qqitem.index < qqitem.Value) {  		while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  			qqitem.Value--;  			array [0] = (array [0] + 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.index] = array2 [qqitem.Value];  			qqitem.index++;  			array [1] = (array [1] * 13uL + 43uL & 255uL);  		}  		while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  			qqitem.index++;  			array [2] = (array [2] - 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.Value] = array2 [qqitem.index];  			qqitem.Value--;  			array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  		}  	}  	array2 [qqitem.index] = c2;  	stack.Push (new HashItem (index' qqitem.index - 1));  	stack.Push (new HashItem (qqitem.index + 1' value));  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index + 1 == qqitem.Value) {  	if (array2 [qqitem.index] > array2 [qqitem.Value]) {  		char c = array2 [qqitem.index];  		array2 [qqitem.index] = array2 [qqitem.Value];  		array2 [qqitem.Value] = c;  	}  }  else {  	int index = qqitem.index;  	int value = qqitem.Value;  	char c2 = array2 [qqitem.index];  	while (qqitem.index < qqitem.Value) {  		while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  			qqitem.Value--;  			array [0] = (array [0] + 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.index] = array2 [qqitem.Value];  			qqitem.index++;  			array [1] = (array [1] * 13uL + 43uL & 255uL);  		}  		while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  			qqitem.index++;  			array [2] = (array [2] - 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.Value] = array2 [qqitem.index];  			qqitem.Value--;  			array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  		}  	}  	array2 [qqitem.index] = c2;  	stack.Push (new HashItem (index' qqitem.index - 1));  	stack.Push (new HashItem (qqitem.index + 1' value));  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index + 1 == qqitem.Value) {  	if (array2 [qqitem.index] > array2 [qqitem.Value]) {  		char c = array2 [qqitem.index];  		array2 [qqitem.index] = array2 [qqitem.Value];  		array2 [qqitem.Value] = c;  	}  }  else {  	int index = qqitem.index;  	int value = qqitem.Value;  	char c2 = array2 [qqitem.index];  	while (qqitem.index < qqitem.Value) {  		while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  			qqitem.Value--;  			array [0] = (array [0] + 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.index] = array2 [qqitem.Value];  			qqitem.index++;  			array [1] = (array [1] * 13uL + 43uL & 255uL);  		}  		while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  			qqitem.index++;  			array [2] = (array [2] - 3uL & 255uL);  		}  		if (qqitem.index < qqitem.Value) {  			array2 [qqitem.Value] = array2 [qqitem.index];  			qqitem.Value--;  			array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  		}  	}  	array2 [qqitem.index] = c2;  	stack.Push (new HashItem (index' qqitem.index - 1));  	stack.Push (new HashItem (qqitem.index + 1' value));  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value) {  	while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  		qqitem.Value--;  		array [0] = (array [0] + 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.index] = array2 [qqitem.Value];  		qqitem.index++;  		array [1] = (array [1] * 13uL + 43uL & 255uL);  	}  	while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  		qqitem.index++;  		array [2] = (array [2] - 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.Value] = array2 [qqitem.index];  		qqitem.Value--;  		array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value) {  	while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  		qqitem.Value--;  		array [0] = (array [0] + 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.index] = array2 [qqitem.Value];  		qqitem.index++;  		array [1] = (array [1] * 13uL + 43uL & 255uL);  	}  	while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  		qqitem.index++;  		array [2] = (array [2] - 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.Value] = array2 [qqitem.index];  		qqitem.Value--;  		array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value) {  	while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  		qqitem.Value--;  		array [0] = (array [0] + 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.index] = array2 [qqitem.Value];  		qqitem.index++;  		array [1] = (array [1] * 13uL + 43uL & 255uL);  	}  	while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  		qqitem.index++;  		array [2] = (array [2] - 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.Value] = array2 [qqitem.index];  		qqitem.Value--;  		array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value) {  	while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  		qqitem.Value--;  		array [0] = (array [0] + 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.index] = array2 [qqitem.Value];  		qqitem.index++;  		array [1] = (array [1] * 13uL + 43uL & 255uL);  	}  	while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  		qqitem.index++;  		array [2] = (array [2] - 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.Value] = array2 [qqitem.index];  		qqitem.Value--;  		array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value) {  	while (qqitem.index < qqitem.Value && array2 [qqitem.Value] >= c2) {  		qqitem.Value--;  		array [0] = (array [0] + 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.index] = array2 [qqitem.Value];  		qqitem.index++;  		array [1] = (array [1] * 13uL + 43uL & 255uL);  	}  	while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  		qqitem.index++;  		array [2] = (array [2] - 3uL & 255uL);  	}  	if (qqitem.index < qqitem.Value) {  		array2 [qqitem.Value] = array2 [qqitem.index];  		qqitem.Value--;  		array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  	qqitem.index++;  	array [2] = (array [2] - 3uL & 255uL);  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: while (qqitem.index < qqitem.Value && array2 [qqitem.index] <= c2) {  	qqitem.index++;  	array [2] = (array [2] - 3uL & 255uL);  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: array [2] = (array [2] - 3uL & 255uL);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: array [2] = (array [2] - 3uL & 255uL);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value) {  	array2 [qqitem.Value] = array2 [qqitem.index];  	qqitem.Value--;  	array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value) {  	array2 [qqitem.Value] = array2 [qqitem.index];  	qqitem.Value--;  	array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: if (qqitem.index < qqitem.Value) {  	array2 [qqitem.Value] = array2 [qqitem.index];  	qqitem.Value--;  	array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: array [3] = ((array [0] ^ array [1] ^ array [2] ^ array [3] + 1uL) & 255uL);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: for (int j = 0; j < array.Length; j++) {  	checked {  		text += array2 [(int)((IntPtr)(array [j] >> 4 & 15uL))];  		text += array2 [(int)((IntPtr)(array [j] & 15uL))];  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: checked {  	text += array2 [(int)((IntPtr)(array [j] >> 4 & 15uL))];  	text += array2 [(int)((IntPtr)(array [j] & 15uL))];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash,The following statement contains a magic number: text += array2 [(int)((IntPtr)(array [j] >> 4 & 15uL))];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: for (int i = 0; i < ptWebQQ.Length; i++) {  	code [i % 4] ^= ptWebQQ [i];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: code [i % 4] ^= ptWebQQ [i];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [0] = qqNumber >> 24 & 255 ^ fixChar [0] [0];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [0] = qqNumber >> 24 & 255 ^ fixChar [0] [0];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [1] = qqNumber >> 16 & 255 ^ fixChar [0] [1];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [1] = qqNumber >> 16 & 255 ^ fixChar [0] [1];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [2] = qqNumber >> 8 & 255 ^ fixChar [1] [0];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [2] = qqNumber >> 8 & 255 ^ fixChar [1] [0];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [2] = qqNumber >> 8 & 255 ^ fixChar [1] [0];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [3] = qqNumber & 255 ^ fixChar [1] [1];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: newcode [3] = qqNumber & 255 ^ fixChar [1] [1];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	table [i] = i % 2 == 0 ? code [i >> 1] : newcode [i >> 1];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	table [i] = i % 2 == 0 ? code [i >> 1] : newcode [i >> 1];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: table [i] = i % 2 == 0 ? code [i >> 1] : newcode [i >> 1];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: for (int i = 0; i < table.Length; i++) {  	result += charTable [table [i] >> 4 & 15];  	result += charTable [table [i] & 15];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: for (int i = 0; i < table.Length; i++) {  	result += charTable [table [i] >> 4 & 15];  	result += charTable [table [i] & 15];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: for (int i = 0; i < table.Length; i++) {  	result += charTable [table [i] >> 4 & 15];  	result += charTable [table [i] & 15];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: result += charTable [table [i] >> 4 & 15];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: result += charTable [table [i] >> 4 & 15];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,Hash2,The following statement contains a magic number: result += charTable [table [i] & 15];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0' d = 0; d < c.Length; d++) {  	b += c [d];  	b %= ptwebqq.Length;  	var f = 0;  	if (b + 4 > ptwebqq.Length) {  		for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  			f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  	}  	else {  		for (int h = 0; h < 4; h++)  			f |= (ecode [b + h] & 255) << (3 - h) * 8;  		k ^= f;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: if (b + 4 > ptwebqq.Length) {  	for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  		f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  }  else {  	for (int h = 0; h < 4; h++)  		f |= (ecode [b + h] & 255) << (3 - h) * 8;  	k ^= f;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int g = 4 + b - ptwebqq.Length' h = 0; h < 4; h++)  	f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= h < g ? (ecode [b + h] & 255) << (3 - h) * 8 : (ecode [h - g] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int h = 0; h < 4; h++)  	f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int h = 0; h < 4; h++)  	f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int h = 0; h < 4; h++)  	f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int h = 0; h < 4; h++)  	f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: f |= (ecode [b + h] & 255) << (3 - h) * 8;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c = new int[4];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [0] = k >> 24 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [0] = k >> 24 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [1] = k >> 16 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [1] = k >> 16 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [2] = k >> 8 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [2] = k >> 8 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [2] = k >> 8 & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [3] = k & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: c [3] = k & 255;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0; b < c.Length; b++) {  	v += w [c [b] >> 4 & 15];  	v += w [c [b] & 15];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0; b < c.Length; b++) {  	v += w [c [b] >> 4 & 15];  	v += w [c [b] & 15];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: for (int b = 0; b < c.Length; b++) {  	v += w [c [b] >> 4 & 15];  	v += w [c [b] & 15];  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: v += w [c [b] >> 4 & 15];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: v += w [c [b] >> 4 & 15];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetHash,The following statement contains a magic number: v += w [c [b] & 15];  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetFontStyle,The following statement contains a magic number: if (array.Length > 2) {  	FontStyle s = FontStyle.Regular;  	if (array [0] == "1")  		s = FontStyle.Bold;  	if (array [1] == "1")  		s |= FontStyle.Italic;  	if (array [1] == "1")  		s |= FontStyle.Underline;  	return s;  }  else {  	return FontStyle.Regular;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (str.Length > 2)  	throw new Exception ("str 长度大于2");  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		throw new Exception ("有不合法的字符.");  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: if (index != -1) {  	data += index * Math.Abs (i - 1) * 16 + index * i;  }  else {  	throw new Exception ("有不合法的字符.");  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetByte,The following statement contains a magic number: data += index * Math.Abs (i - 1) * 16 + index * i;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (str.Length > 2)  	throw new Exception ("str 长度大于2");  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	char c = str [i];  	int index = -1;  	if (c > 96 && c < 103)  		index = (c - 96) + 9;  	if (c > 64 && c < 71)  		index = (c - 64) + 9;  	if (c > 47 && c < 58)  		index = c - 48;  	if (index != -1) {  		data += index * Math.Abs (i - 1) * 16 + index * i;  	}  	else {  		result = (byte)data;  		return false;  	}  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 96 && c < 103)  	index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: index = (c - 96) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 64 && c < 71)  	index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: index = (c - 64) + 9;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (c > 47 && c < 58)  	index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: index = c - 48;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: if (index != -1) {  	data += index * Math.Abs (i - 1) * 16 + index * i;  }  else {  	result = (byte)data;  	return false;  }  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,TryParse,The following statement contains a magic number: data += index * Math.Abs (i - 1) * 16 + index * i;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: if (text.Length < 6)  	return Color.Black;  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: s = text.Substring (0' 2);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: s = text.Substring (2' 2);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: s = text.Substring (2' 2);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: s = text.Substring (4' 2);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: s = text.Substring (4' 2);  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: text += color.G.ToString ("X").PadLeft (2' '0');  
Magic Number,QQSDK.Net,Tool,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Net\Tool.cs,GetColor,The following statement contains a magic number: text += color.B.ToString ("X").PadLeft (2' '0');  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  			Debug.WriteLine (value.MsgContent);  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  			Debug.WriteLine (value.MsgContent);  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  			Debug.WriteLine (value.MsgContent);  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  			Debug.WriteLine (value.MsgContent);  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  			Debug.WriteLine (value.MsgContent);  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: for (int i = 0; i < array.Length; i++) {  	item = array [i];  	string[] a = item.Split (':');  	if (a.Length > 1) {  		switch (a [0]) {  		case "result":  			if (a.Length > 2)  				value.PollType = a [2];  			break;  		case "value":  			if (a.Length > 2)  				value.MsgID = long.Parse (a [2]);  			break;  		case "from_uin":  			value.FromUin = long.Parse (a [1]);  			break;  		case "msg_id":  			value.MsgID = long.Parse (a [1]);  			break;  		case "msg_id2":  			value.MsgID2 = int.Parse (a [1]);  			break;  		case "msg_type":  			value.MsgType = int.Parse (a [1]);  			break;  		case "reply_ip":  			value.ReplyIP = int.Parse (a [1]);  			break;  		case "time":  			value.Time = int.Parse (a [1]);  			break;  		case "to_uin":  			value.ToUin = long.Parse (a [1]);  			break;  		case "color":  			value.FontColor = GetColor (a [1]);  			break;  		case "name":  			value.Name = Encode.DeUnicode (a [1]);  			break;  		case "size":  			value.FontSize = int.Parse (a [1]);  			break;  		case "style":  			value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  			i = i + 2;  			break;  		default:  			break;  		}  	}  	else {  		//Debug.WriteLine(item);  		if (item.IndexOf ("\\u") > -1) {  			value.MsgContent = Encode.DeUnicode (item);  			value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  			Debug.WriteLine (value.MsgContent);  		}  		else {  			value.MsgContent = item;  		}  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		Debug.WriteLine (value.MsgContent);  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		Debug.WriteLine (value.MsgContent);  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		Debug.WriteLine (value.MsgContent);  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		Debug.WriteLine (value.MsgContent);  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		Debug.WriteLine (value.MsgContent);  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 1) {  	switch (a [0]) {  	case "result":  		if (a.Length > 2)  			value.PollType = a [2];  		break;  	case "value":  		if (a.Length > 2)  			value.MsgID = long.Parse (a [2]);  		break;  	case "from_uin":  		value.FromUin = long.Parse (a [1]);  		break;  	case "msg_id":  		value.MsgID = long.Parse (a [1]);  		break;  	case "msg_id2":  		value.MsgID2 = int.Parse (a [1]);  		break;  	case "msg_type":  		value.MsgType = int.Parse (a [1]);  		break;  	case "reply_ip":  		value.ReplyIP = int.Parse (a [1]);  		break;  	case "time":  		value.Time = int.Parse (a [1]);  		break;  	case "to_uin":  		value.ToUin = long.Parse (a [1]);  		break;  	case "color":  		value.FontColor = GetColor (a [1]);  		break;  	case "name":  		value.Name = Encode.DeUnicode (a [1]);  		break;  	case "size":  		value.FontSize = int.Parse (a [1]);  		break;  	case "style":  		value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  		i = i + 2;  		break;  	default:  		break;  	}  }  else {  	//Debug.WriteLine(item);  	if (item.IndexOf ("\\u") > -1) {  		value.MsgContent = Encode.DeUnicode (item);  		value.MsgContent = value.MsgContent.Replace ("r"' "\r\n");  		Debug.WriteLine (value.MsgContent);  	}  	else {  		value.MsgContent = item;  	}  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: switch (a [0]) {  case "result":  	if (a.Length > 2)  		value.PollType = a [2];  	break;  case "value":  	if (a.Length > 2)  		value.MsgID = long.Parse (a [2]);  	break;  case "from_uin":  	value.FromUin = long.Parse (a [1]);  	break;  case "msg_id":  	value.MsgID = long.Parse (a [1]);  	break;  case "msg_id2":  	value.MsgID2 = int.Parse (a [1]);  	break;  case "msg_type":  	value.MsgType = int.Parse (a [1]);  	break;  case "reply_ip":  	value.ReplyIP = int.Parse (a [1]);  	break;  case "time":  	value.Time = int.Parse (a [1]);  	break;  case "to_uin":  	value.ToUin = long.Parse (a [1]);  	break;  case "color":  	value.FontColor = GetColor (a [1]);  	break;  case "name":  	value.Name = Encode.DeUnicode (a [1]);  	break;  case "size":  	value.FontSize = int.Parse (a [1]);  	break;  case "style":  	value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  	i = i + 2;  	break;  default:  	break;  }  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 2)  	value.PollType = a [2];  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 2)  	value.PollType = a [2];  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: value.PollType = a [2];  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = long.Parse (a [2]);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: if (a.Length > 2)  	value.MsgID = long.Parse (a [2]);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: value.MsgID = long.Parse (a [2]);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: value.FontStyle = string.Format ("{0}{1}{2}"' a [1]' array [i + 1]' array [i + 2]);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,parse,The following statement contains a magic number: i = i + 2;  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,GetColor,The following statement contains a magic number: if (text.Length < 6)  	return Color.Black;  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,GetColor,The following statement contains a magic number: s = text.Substring (0' 2);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,GetColor,The following statement contains a magic number: s = text.Substring (2' 2);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,GetColor,The following statement contains a magic number: s = text.Substring (2' 2);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,GetColor,The following statement contains a magic number: s = text.Substring (4' 2);  
Magic Number,QQSDK,Form1,C:\repos\crcruicai_Library\QQSDK1.4\QQSDK\Test\Form1.cs,GetColor,The following statement contains a magic number: s = text.Substring (4' 2);  
