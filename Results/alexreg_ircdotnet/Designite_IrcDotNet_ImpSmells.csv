Implementation smell,Namespace,Class,File,Method,Description
Complex Method,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,GetMessageTarget,Cyclomatic complexity of the method is 10
Complex Method,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,WriteMessage,Cyclomatic complexity of the method is 8
Complex Method,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,Cyclomatic complexity of the method is 8
Complex Method,IrcDotNet,IrcUtilities,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcUtilities.cs,UpdateModes,Cyclomatic complexity of the method is 13
Complex Method,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,Dispose,Cyclomatic complexity of the method is 8
Long Parameter List,IrcDotNet,IrcUtilities,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcUtilities.cs,UpdateModes,The method has 5 parameters. Parameters: collection' newModes' newModeParameters' modesWithParameters' handleModeParameter
Long Parameter List,IrcDotNet.Ctcp,CtcpMessage,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\Ctcp\CtcpClient.cs,CtcpMessage,The method has 5 parameters. Parameters: source' targets' tag' data' isResponse
Complex Conditional,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,CheckMiddleParameter,The conditional expression  "value.Length == 0 || value.Any(c => IsInvalidMessageChar(c) || c == ' ') || value[0] == ':'"  is complex.
Empty Catch Block,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,WritePendingMessages,The method has an empty catch block.
Empty Catch Block,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,SendCompleted,The method has an empty catch block.
Empty Catch Block,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,ReceiveCompleted,The method has an empty catch block.
Empty Catch Block,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,ConnectCompleted,The method has an empty catch block.
Empty Catch Block,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,DisconnectCompleted,The method has an empty catch block.
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,IrcClient,The following statement contains a magic number: numericMessageProcessors = new Dictionary<int' MessageProcessor>(1000);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,InitializeMessageProcessors,The following statement contains a magic number: commandRangeParts.Length == 2
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageKick,The following statement contains a magic number: var comment = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyMyInfo,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyMyInfo,The following statement contains a magic number: ServerVersion = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyMyInfo,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyMyInfo,The following statement contains a magic number: ServerAvailableUserModes = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyMyInfo,The following statement contains a magic number: Debug.Assert(message.Parameters[4] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyMyInfo,The following statement contains a magic number: ServerAvailableChannelModes = message.Parameters[4];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyBounceOrISupport,The following statement contains a magic number: var serverAddress = textParts[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyBounceOrISupport,The following statement contains a magic number: var serverPort = int.Parse(textParts[6]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageLUserClient,The following statement contains a magic number: Debug.Assert(infoParts.Length == 10);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageLUserClient,The following statement contains a magic number: networkInformation.VisibleUsersCount = int.Parse(infoParts[2]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageLUserClient,The following statement contains a magic number: networkInformation.InvisibleUsersCount = int.Parse(infoParts[5]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageLUserClient,The following statement contains a magic number: networkInformation.ServersCount = int.Parse(infoParts[8]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyAway,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyAway,The following statement contains a magic number: user.AwayMessage = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: user.UserName = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: user.HostName = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: Debug.Assert(message.Parameters[4] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: Debug.Assert(message.Parameters[5] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsUser,The following statement contains a magic number: user.RealName = message.Parameters[5];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsServer,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsServer,The following statement contains a magic number: user.ServerName = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsServer,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsServer,The following statement contains a magic number: user.ServerInfo = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: user.UserName = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: user.HostName = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: Debug.Assert(message.Parameters[4] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: Debug.Assert(message.Parameters[5] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoWasUser,The following statement contains a magic number: user.RealName = message.Parameters[5];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsIdle,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsIdle,The following statement contains a magic number: user.IdleDuration = TimeSpan.FromSeconds(int.Parse(message.Parameters[2]));
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsChannels,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoIsChannels,The following statement contains a magic number: message.Parameters[2].Split(' ')
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyList,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyList,The following statement contains a magic number: var visibleUsersCount = int.Parse(message.Parameters[2]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyList,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyList,The following statement contains a magic number: var topic = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyTopic,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyTopic,The following statement contains a magic number: channel.HandleTopicChanged(null' message.Parameters[2]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyInviting,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyInviting,The following statement contains a magic number: var channel = GetChannelFromName(message.Parameters[2]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyVersion,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyVersion,The following statement contains a magic number: var server = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyVersion,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyVersion,The following statement contains a magic number: var comments = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: Debug.Assert(message.Parameters[5] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: var user = GetUserFromNickName(message.Parameters[5]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: var userName = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: user.HostName = message.Parameters[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: Debug.Assert(message.Parameters[4] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: user.ServerName = message.Parameters[4];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: Debug.Assert(message.Parameters[6] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: var userModeFlags = message.Parameters[6];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: Debug.Assert(message.Parameters[7] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyWhoReply,The following statement contains a magic number: var lastParamParts = message.Parameters[7].SplitIntoPair(" ");
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyNameReply,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyNameReply,The following statement contains a magic number: var channel = GetChannelFromName(message.Parameters[2]);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyNameReply,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyNameReply,The following statement contains a magic number: message.Parameters[3].Split(' ')
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyLinks,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyLinks,The following statement contains a magic number: var clientServerHostName = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyLinks,The following statement contains a magic number: Debug.Assert(message.Parameters[3] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyLinks,The following statement contains a magic number: var infoParts = message.Parameters[3].SplitIntoPair(" ");
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyYouAreService,The following statement contains a magic number: localUser.NickName = message.Parameters[1].Split(' ')[3];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyTime,The following statement contains a magic number: Debug.Assert(message.Parameters[2] != null);
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageReplyTime,The following statement contains a magic number: var dateTime = message.Parameters[2];
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,EnsureChannelName,The following statement contains a magic number: !IsChannelName(c) || c.Length > 50 || c.IndexOfAny(new[] {' '' '''' ':'}) != -1
Magic Number,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,SendMessageChannelMode,The following statement contains a magic number: modeParametersArray.Length > 3
Magic Number,IrcDotNet,IrcTargetMask,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcTargetMask.cs,IrcTargetMask,The following statement contains a magic number: Resources.MessageTargetMaskTooShort.Length < 2
Magic Number,IrcDotNet,StandardIrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\StandardIrcClient.cs,WritePendingMessages,The following statement contains a magic number: Debug.Assert(messageSendQueue.Count < 100);
Magic Number,IrcDotNet,TextUtilities,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\TextUtilities.cs,Quote,The following statement contains a magic number: var textBuilder = new StringBuilder(value.Length*2);
Magic Number,IrcDotNet.Ctcp,CtcpClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\Ctcp\CtcpClient.cs,ReadMessage,The following statement contains a magic number: var dequotedText = LowLevelDequote(CtcpDequote(previewMessageEventArgs.Text.Substring(                          1' previewMessageEventArgs.Text.Length - 2)));
Missing Default,IrcDotNet,IrcClient,D:\research\architectureSmells\repos\alexreg_ircdotnet\source\IrcDotNet\IrcClient.cs,ProcessMessageLUserMe,The following switch statement is missing a default case: switch (infoParts[i].ToLowerInvariant())                  {                      case "user":                      case "users":                          networkInformation.ServerClientsCount = int.Parse(infoParts[i - 1]);                          break;                      case "server":                      case "servers":                          networkInformation.ServerServersCount = int.Parse(infoParts[i - 1]);                          break;                      case "service":                      case "services":                          networkInformation.ServerClientsCount = int.Parse(infoParts[i - 1]);                          break;                  }
