Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TouchWalkthrough,CustomGestureRecognizerActivity,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\CustomGestureRecognizerActivity.cs,GestureOverlayViewOnGesturePerformed,The length of the statement  "			Log.Debug (GetType ().FullName' "Using the prediction named {0} with a score of {1}."' prediction.Name' prediction.Score); " is 122.
Magic Number,TouchWalkthrough,MainMenuAdapter,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\MainMenuAdapter.cs,GetView,The following statement contains a magic number: result = new TextView (_activity) {  					TextSize = 28.0f'  					Text = _gestureActivities.Keys.ElementAt(position)  				};
Magic Number,TouchWalkthrough,MainMenuAdapter,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\MainMenuAdapter.cs,GetView,The following statement contains a magic number: result.SetPadding (0' 15' 0' 15);
Magic Number,TouchWalkthrough,MainMenuAdapter,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\MainMenuAdapter.cs,GetView,The following statement contains a magic number: result.SetPadding (0' 15' 0' 15);
Magic Number,TouchWalkthrough,MyScaleListener,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\GestureRecognizerView.cs,OnScale,The following statement contains a magic number: _view._scaleFactor = 5.0f;
Magic Number,TouchWalkthrough,MyScaleListener,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\GestureRecognizerView.cs,OnScale,The following statement contains a magic number: _view._scaleFactor > 5.0f
Magic Number,TouchWalkthrough,MyScaleListener,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\GestureRecognizerView.cs,OnScale,The following statement contains a magic number: _view._scaleFactor = 0.1f;
Magic Number,TouchWalkthrough,MyScaleListener,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\GestureRecognizerView.cs,OnScale,The following statement contains a magic number: _view._scaleFactor < 0.1f
Missing Default,TouchWalkthrough,GestureRecognizerView,D:\research\architectureSmells\repos\xamarin_mobile-samples\Touch\Touch.Android\GestureRecognizerView.cs,OnTouchEvent,The following switch statement is missing a default case: switch (action) {  			case MotionEventActions.Down:  				_lastTouchX = ev.GetX ();  				_lastTouchY = ev.GetY ();  				_activePointerId = ev.GetPointerId (0);  				break;    			case MotionEventActions.Move:  				pointerIndex = ev.FindPointerIndex (_activePointerId);  				float x = ev.GetX (pointerIndex);  				float y = ev.GetY (pointerIndex);  				if (!_scaleDetector.IsInProgress) {  					// Only move the ScaleGestureDetector isn't already processing a gesture.  					float deltaX = x - _lastTouchX;  					float deltaY = y - _lastTouchY;  					_posX += deltaX;  					_posY += deltaY;  					Invalidate ();  				}    				_lastTouchX = x;  				_lastTouchY = y;  				break;    			case MotionEventActions.Up:  			case MotionEventActions.Cancel:                      // This events occur when something cancels the gesture (for example the                      // activity going in the background) or when the pointer has been lifted up.                      // We no longer need to keep track of the active pointer.  				_activePointerId = InvalidPointerId;  				break;    			case MotionEventActions.PointerUp:                      // We only want to update the last touch position if the the appropriate pointer                      // has been lifted off the screen.  				pointerIndex = (int)(ev.Action & MotionEventActions.PointerIndexMask) >> (int)MotionEventActions.PointerIndexShift;  				int pointerId = ev.GetPointerId (pointerIndex);  				if (pointerId == _activePointerId) {  					// This was our active pointer going up. Choose a new  					// action pointer and adjust accordingly  					int newPointerIndex = pointerIndex == 0 ? 1 : 0;  					_lastTouchX = ev.GetX (newPointerIndex);  					_lastTouchY = ev.GetY (newPointerIndex);  					_activePointerId = ev.GetPointerId (newPointerIndex);  				}  				break;  			}
