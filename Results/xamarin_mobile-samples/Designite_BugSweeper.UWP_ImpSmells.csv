Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BugSweeper,Board,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\Board.cs,OnTileStatusChanged,Cyclomatic complexity of the method is 13
Long Statement,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The length of the statement  "            double congratulationsTextWidth = congratulationsText.Measure(Double.PositiveInfinity' Double.PositiveInfinity).Request.Width; " is 126.
Complex Conditional,BugSweeper,Board,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\Board.cs,DefineNewBoard,The conditional expression  "row >= tappedRow - 1 &&                      row <= tappedRow + 1 &&                      col >= tappedCol - 1 &&                      col <= tappedCol + 1"  is complex.
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,OnMainContentViewSizeChanged,The following statement contains a magic number: if (isLandscape)              {                  mainGrid.RowDefinitions[0].Height = 0;                  mainGrid.RowDefinitions[1].Height = new GridLength(1' GridUnitType.Star);                    mainGrid.ColumnDefinitions[0].Width = new GridLength(1' GridUnitType.Star);                  mainGrid.ColumnDefinitions[1].Width = new GridLength(1' GridUnitType.Star);                    Grid.SetRow(textStack' 1);                  Grid.SetColumn(textStack' 0);              }              else // portrait              {                  mainGrid.RowDefinitions[0].Height = new GridLength(3' GridUnitType.Star);                  mainGrid.RowDefinitions[1].Height = new GridLength(5' GridUnitType.Star);                    mainGrid.ColumnDefinitions[0].Width = 0;                  mainGrid.ColumnDefinitions[1].Width = new GridLength(1' GridUnitType.Star);                    Grid.SetRow(textStack' 0);                  Grid.SetColumn(textStack' 1);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,OnMainContentViewSizeChanged,The following statement contains a magic number: if (isLandscape)              {                  mainGrid.RowDefinitions[0].Height = 0;                  mainGrid.RowDefinitions[1].Height = new GridLength(1' GridUnitType.Star);                    mainGrid.ColumnDefinitions[0].Width = new GridLength(1' GridUnitType.Star);                  mainGrid.ColumnDefinitions[1].Width = new GridLength(1' GridUnitType.Star);                    Grid.SetRow(textStack' 1);                  Grid.SetColumn(textStack' 0);              }              else // portrait              {                  mainGrid.RowDefinitions[0].Height = new GridLength(3' GridUnitType.Star);                  mainGrid.RowDefinitions[1].Height = new GridLength(5' GridUnitType.Star);                    mainGrid.ColumnDefinitions[0].Width = 0;                  mainGrid.ColumnDefinitions[1].Width = new GridLength(1' GridUnitType.Star);                    Grid.SetRow(textStack' 0);                  Grid.SetColumn(textStack' 1);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,OnBoardContentViewSizeChanged,The following statement contains a magic number: double horzPadding = (width - dimension) / 2;
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,OnBoardContentViewSizeChanged,The following statement contains a magic number: double vertPadding = (height - dimension) / 2;
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: congratulationsText.RotateTo(3 * 360' 1000' Easing.CubicOut);
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: congratulationsText.RotateTo(3 * 360' 1000' Easing.CubicOut);
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: congratulationsText.RotateTo(3 * 360' 1000' Easing.CubicOut);
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: double maxScale = 0.9 * board.Width / congratulationsTextWidth;
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: await congratulationsText.ScaleTo(maxScale' 1000);
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: foreach (View view in congratulationsText.Children)              {                  view.Rotation = 0;                  view.RotateTo(180);                  await view.ScaleTo(3' 100);                  view.RotateTo(360);                  await view.ScaleTo(1' 100);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: foreach (View view in congratulationsText.Children)              {                  view.Rotation = 0;                  view.RotateTo(180);                  await view.ScaleTo(3' 100);                  view.RotateTo(360);                  await view.ScaleTo(1' 100);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: foreach (View view in congratulationsText.Children)              {                  view.Rotation = 0;                  view.RotateTo(180);                  await view.ScaleTo(3' 100);                  view.RotateTo(360);                  await view.ScaleTo(1' 100);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: foreach (View view in congratulationsText.Children)              {                  view.Rotation = 0;                  view.RotateTo(180);                  await view.ScaleTo(3' 100);                  view.RotateTo(360);                  await view.ScaleTo(1' 100);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayWonAnimation,The following statement contains a magic number: foreach (View view in congratulationsText.Children)              {                  view.Rotation = 0;                  view.RotateTo(180);                  await view.ScaleTo(3' 100);                  view.RotateTo(360);                  await view.ScaleTo(1' 100);              }
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayLostAnimation,The following statement contains a magic number: double maxScale = 0.9 * board.Width / consolationTextWidth;
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayLostAnimation,The following statement contains a magic number: await consolationText.ScaleTo(maxScale' 1000);
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayLostAnimation,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,BugSweeper,MainPage,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\MainPage.xaml.cs,DisplayPlayAgainButton,The following statement contains a magic number: await playAgainButton.ScaleTo(maxScale' 1000' Easing.SpringOut);
Magic Number,BugSweeper,Tile,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\Tile.cs,Tile,The following statement contains a magic number: if (Device.RuntimePlatform != Device.UWP)                {            #endif                    TapGestureRecognizer doubleTap = new TapGestureRecognizer                  {                      NumberOfTapsRequired = 2                  };                  doubleTap.Tapped += OnDoubleTap;                  TileView.GestureRecognizers.Add(doubleTap);            #if FIX_WINDOWS_DOUBLE_TAPS                }
Magic Number,BugSweeper,Tile,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\Tile.cs,OnSingleTap,The following statement contains a magic number: if (Device.RuntimePlatform == Device.UWP)              {                  if (lastTapSingle && DateTime.Now - lastTapTime < TimeSpan.FromMilliseconds (500))                  {                      OnDoubleTap (sender' args);                      lastTapSingle = false;                  }                  else                  {                      lastTapTime = DateTime.Now;                      lastTapSingle = true;                  }          	}
Missing Default,BugSweeper,Tile,C:\repos\xamarin_mobile-samples\LivePlayer\BugSweeperLP\BugSweeper\BugSweeper\Tile.cs,OnSingleTap,The following switch statement is missing a default case: switch (Status)              {                  case TileStatus.Hidden:                      Status = TileStatus.Flagged;                      break;                    case TileStatus.Flagged:                      Status = TileStatus.Hidden;                      break;                    case TileStatus.Exposed:                      // Do nothing                      break;              }
