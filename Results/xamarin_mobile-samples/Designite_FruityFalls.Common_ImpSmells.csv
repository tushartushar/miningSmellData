Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,FruityFalls.Entities,Fruit,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Fruit.cs,,The length of the parameter timeUntilExtraPointsCanBeAdded is 30.
Long Identifier,FruityFalls.Entities,Fruit,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Fruit.cs,,The length of the parameter extraPointValueButPleaseUseProperty is 35.
Long Identifier,FruityFalls.Geometry,CollisionResponse,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\CollisionResponse.cs,ApplyBounce,The length of the parameter velocityComponentPerpendicularToTangent is 39.
Long Statement,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,UpdateAbsolutePoints,The length of the statement  "			CCPoint rotatedXAxis = new CCPoint((float) System.Math.Cos (rotationInRadians)' (float) System.Math.Sin (rotationInRadians)); " is 125.
Long Statement,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,IsPointInside,The length of the statement  "				if ((((absolutePoints[i].Y <= y) && (y < absolutePoints[j].Y)) || ((absolutePoints[j].Y <= y) && (y < absolutePoints[i].Y))) && " is 127.
Long Statement,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,IsPointInside,The length of the statement  "					(x < (absolutePoints[j].X - absolutePoints[i].X) * (y - absolutePoints[i].Y) / (absolutePoints[j].Y - absolutePoints[i].Y) + absolutePoints[i].X)) b = !b; " is 154.
Complex Conditional,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,IsPointInside,The conditional expression  "(((absolutePoints[i].Y <= y) && (y < absolutePoints[j].Y)) || ((absolutePoints[j].Y <= y) && (y < absolutePoints[i].Y))) &&  					(x < (absolutePoints[j].X - absolutePoints[i].X) * (y - absolutePoints[i].Y) / (absolutePoints[j].Y - absolutePoints[i].Y) + absolutePoints[i].X)"  is complex.
Magic Number,FruityFalls.Entities,SolidRectangle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\SolidRectangle.cs,SolidRectangle,The following statement contains a magic number: graphic.DrawRect(                  new CCRect(-width / 2' -height / 2' width' height)'                  fillColor: CCColor4B.Blue);
Magic Number,FruityFalls.Entities,SolidRectangle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\SolidRectangle.cs,SolidRectangle,The following statement contains a magic number: graphic.DrawRect(                  new CCRect(-width / 2' -height / 2' width' height)'                  fillColor: CCColor4B.Blue);
Magic Number,FruityFalls.Entities,Fruit,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Fruit.cs,CreateExtraPointsLabel,The following statement contains a magic number: extraPointsLabel = new CCLabel(""' "Arial"' 12' CCLabelFormat.SystemFont);
Magic Number,FruityFalls.Entities,Fruit,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Fruit.cs,UpdateGraphics,The following statement contains a magic number: if (GameCoefficients.ShowCollisionAreas)  			{  				debugGrahic.Clear ();  				const float borderWidth = 4;  				debugGrahic.DrawSolidCircle (  					CCPoint.Zero'  					GameCoefficients.FruitRadius'  					CCColor4B.Black);  				debugGrahic.DrawSolidCircle (  					CCPoint.Zero'  					GameCoefficients.FruitRadius - borderWidth'  					fruitColor.ToCCColor ());  			}
Magic Number,FruityFalls.Entities,Fruit,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Fruit.cs,UpdateGraphics,The following statement contains a magic number: if (this.FruitColor == FruitColor.Yellow)  			{  				graphic.Texture = CCTextureCache.SharedTextureCache.AddImage ("lemon.png");  				extraPointsLabel.Color = CCColor3B.Black;  				extraPointsLabel.PositionY = 0;    			}  			else  			{  				graphic.Texture = CCTextureCache.SharedTextureCache.AddImage ("cherry.png");  				extraPointsLabel.Color = CCColor3B.White;  				extraPointsLabel.PositionY = -8;  			}
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateSpriteGraphic,The following statement contains a magic number: graphic.PositionY = -24;
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateDebugGraphic,The following statement contains a magic number: debugGraphic.DrawRect (  				new CCRect (-width/2' -height/2' width' height)'  				fillColor: new CCColor4B(180' 180' 180' 180));
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateDebugGraphic,The following statement contains a magic number: debugGraphic.DrawRect (  				new CCRect (-width/2' -height/2' width' height)'  				fillColor: new CCColor4B(180' 180' 180' 180));
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateDebugGraphic,The following statement contains a magic number: debugGraphic.DrawRect (  				new CCRect (-width/2' -height/2' width' height)'  				fillColor: new CCColor4B(180' 180' 180' 180));
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateDebugGraphic,The following statement contains a magic number: debugGraphic.DrawRect (  				new CCRect (-width/2' -height/2' width' height)'  				fillColor: new CCColor4B(180' 180' 180' 180));
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateDebugGraphic,The following statement contains a magic number: debugGraphic.DrawRect (  				new CCRect (-width/2' -height/2' width' height)'  				fillColor: new CCColor4B(180' 180' 180' 180));
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateDebugGraphic,The following statement contains a magic number: debugGraphic.DrawRect (  				new CCRect (-width/2' -height/2' width' height)'  				fillColor: new CCColor4B(180' 180' 180' 180));
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,CreateVines,The following statement contains a magic number: const int vineDistanceFromEdge = 4;
Magic Number,FruityFalls.Entities,Paddle,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Paddle.cs,Activity,The following statement contains a magic number: const float velocityCoefficient = 4;
Magic Number,FruityFalls.Entities,ScoreIncreaseText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreIncreaseText.cs,ScoreIncreaseText,The following statement contains a magic number: label = new CCLabel ("+1"' "Arial"' 20' CCLabelFormat.SystemFont);
Magic Number,FruityFalls.Entities,FruitColorExtensions,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\FruitBin.cs,ToCCColor,The following statement contains a magic number: switch(color)              {                  case FruitColor.Yellow:  					return new CCColor4B(150' 150' 0' 150);                  case FruitColor.Red:  					return new CCColor4B(150'0'0'150);              }
Magic Number,FruityFalls.Entities,FruitColorExtensions,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\FruitBin.cs,ToCCColor,The following statement contains a magic number: switch(color)              {                  case FruitColor.Yellow:  					return new CCColor4B(150' 150' 0' 150);                  case FruitColor.Red:  					return new CCColor4B(150'0'0'150);              }
Magic Number,FruityFalls.Entities,FruitColorExtensions,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\FruitBin.cs,ToCCColor,The following statement contains a magic number: switch(color)              {                  case FruitColor.Yellow:  					return new CCColor4B(150' 150' 0' 150);                  case FruitColor.Red:  					return new CCColor4B(150'0'0'150);              }
Magic Number,FruityFalls.Entities,FruitColorExtensions,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\FruitBin.cs,ToCCColor,The following statement contains a magic number: switch(color)              {                  case FruitColor.Yellow:  					return new CCColor4B(150' 150' 0' 150);                  case FruitColor.Red:  					return new CCColor4B(150'0'0'150);              }
Magic Number,FruityFalls.Entities,FruitColorExtensions,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\FruitBin.cs,ToCCColor,The following statement contains a magic number: switch(color)              {                  case FruitColor.Yellow:  					return new CCColor4B(150' 150' 0' 150);                  case FruitColor.Red:  					return new CCColor4B(150'0'0'150);              }
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: const int width = 115;
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: const int height = 27;
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: background.DrawRect (new CCRect (-5' -height '  				width' height)'  				new CCColor4B (100' 100' 100));
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: background.DrawRect (new CCRect (-5' -height '  				width' height)'  				new CCColor4B (100' 100' 100));
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: background.DrawRect (new CCRect (-5' -height '  				width' height)'  				new CCColor4B (100' 100' 100));
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: background.DrawRect (new CCRect (-5' -height '  				width' height)'  				new CCColor4B (100' 100' 100));
Magic Number,FruityFalls.Entities,ScoreText,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\ScoreText.cs,ScoreText,The following statement contains a magic number: label = new CCLabel ("Score: 9999"' "Arial"' 20' CCLabelFormat.SystemFont);
Magic Number,FruityFalls.Entities,Vine,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\Vine.cs,Vine,The following statement contains a magic number: const int numberOfVinesToAdd = 20;
Magic Number,FruityFalls,GameController,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\GameController.cs,Initialize,The following statement contains a magic number: int width = 384;
Magic Number,FruityFalls,GameController,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\GameController.cs,Initialize,The following statement contains a magic number: int height = 512;
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Geometry,Polygon,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Geometry\Polygon.cs,CreateRectangle,The following statement contains a magic number: var points = new CCPoint[] {                  new CCPoint(-width/2' -height/2)'                  new CCPoint(-width/2' height/2)'                  new CCPoint(width/2' height/2)'                  new CCPoint(width/2' -height/2)'                  new CCPoint(-width/2' -height/2)              };
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateForeground,The following statement contains a magic number: if(GameCoefficients.ShowCollisionAreas)              {                  // Make it transparent so collision areas are easier to see:                  foreground.Opacity = 100;              }
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateDebugLabel,The following statement contains a magic number: debugLabel = new CCLabel("DebugLabel"' "Arial"' 20' CCLabelFormat.SystemFont);
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateDebugLabel,The following statement contains a magic number: debugLabel.PositionY = 650;
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateHud,The following statement contains a magic number: scoreText.PositionX = 10;
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateHud,The following statement contains a magic number: scoreText.PositionY = hudLayer.ContentSize.Height - 30;
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateBins,The following statement contains a magic number: bin.Width = gameView.DesignResolution.Width / 2;
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateBins,The following statement contains a magic number: bin.PositionX = gameView.DesignResolution.Width / 2;
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateBins,The following statement contains a magic number: bin.Width = gameView.DesignResolution.Width / 2;
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,CreateBins,The following statement contains a magic number: splitter = new SolidRectangle(20' GameCoefficients.SplitterHeight);
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,EndGame,The following statement contains a magic number: drawNode.DrawRect(  				new CCRect (0'0' 2000' 2000)'  				new CCColor4B(0'0'0'160));
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,EndGame,The following statement contains a magic number: drawNode.DrawRect(  				new CCRect (0'0' 2000' 2000)'  				new CCColor4B(0'0'0'160));
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,EndGame,The following statement contains a magic number: drawNode.DrawRect(  				new CCRect (0'0' 2000' 2000)'  				new CCColor4B(0'0'0'160));
Magic Number,FruityFalls.Scenes,GameScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\GameScene.cs,EndGame,The following statement contains a magic number: var endGameLabel = new CCLabel("Game Over\nFinal Score:" + score'  				"Arial"' 40' CCLabelFormat.SystemFont);
Magic Number,FruityFalls.Scenes,TitleScene,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Scenes\TitleScene.cs,CreateText,The following statement contains a magic number: var label = new CCLabel("Tap to begin"' "Arial"' 30' CCLabelFormat.SystemFont);
Missing Default,FruityFalls.Entities,FruitColorExtensions,C:\repos\xamarin_mobile-samples\FruityFalls\FruityFalls\FruityFalls.Common\Entities\FruitBin.cs,ToCCColor,The following switch statement is missing a default case: switch(color)              {                  case FruitColor.Yellow:  					return new CCColor4B(150' 150' 0' 150);                  case FruitColor.Red:  					return new CCColor4B(150'0'0'150);              }
