Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ActionProject,LineNode,C:\repos\xamarin_mobile-samples\CCAction\ActionProject\ActionProject.Common\LineNode.cs,LineNode,The following statement contains a magic number: Width = 10;
Magic Number,ActionProject,LineNode,C:\repos\xamarin_mobile-samples\CCAction\ActionProject\ActionProject.Common\LineNode.cs,UpdateLine,The following statement contains a magic number: line.DrawLine (CCPoint.Zero' new CCPoint (40' 0)' effectiveWidth / 2' new CCColor4F (1' 1' 0' 1));
Magic Number,ActionProject,LineNode,C:\repos\xamarin_mobile-samples\CCAction\ActionProject\ActionProject.Common\LineNode.cs,UpdateLine,The following statement contains a magic number: line.DrawLine (CCPoint.Zero' new CCPoint (40' 0)' effectiveWidth / 2' new CCColor4F (1' 1' 0' 1));
Missing Default,ActionProject,GameLayer,C:\repos\xamarin_mobile-samples\CCAction\ActionProject\ActionProject.Common\GameLayer.cs,HandleMoveCircle,The following switch statement is missing a default case: switch (VariableOptions [currentVariableIndex]) {  			case "Position":  				coreAction = new CCMoveTo(timeToTake' touch.Location);  				break;  			case "Scale":  				var distance = CCPoint.Distance (touch.Location' drawNodeRoot.Position);  				var desiredScale = distance / DefaultCircleRadius;  				coreAction = new CCScaleTo (timeToTake' desiredScale);  				break;  			case "Rotation":  				float differenceY = touch.Location.Y - drawNodeRoot.PositionY;  				float differenceX = touch.Location.X - drawNodeRoot.PositionX;    				float angleInDegrees = -1 * CCMathHelper.ToDegrees (  					(float)Math.Atan2 (differenceY' differenceX));    				coreAction = new CCRotateTo (timeToTake' angleInDegrees);    				break;  			case "LineWidth":  				coreAction = new LineWidthAction (timeToTake' touch.Location.X / 40f);  				// The LineWidthAction is a special action designed to work only on  				// LineNode instances' so we have to set the nodeToAddTo to the lineNode:  				nodeToAddTo = lineNode;  				break;  			}
Missing Default,ActionProject,GameLayer,C:\repos\xamarin_mobile-samples\CCAction\ActionProject\ActionProject.Common\GameLayer.cs,HandleMoveCircle,The following switch statement is missing a default case: switch (EasingOptions [currentEasingIndex]) {  			case "CCEaseBack":  				if (currentInOutIndex == 0)  					easing = new CCEaseBackOut (coreAction);  				else if (currentInOutIndex == 1)  					easing = new CCEaseBackIn (coreAction);  				else  					easing = new CCEaseBackInOut (coreAction);    				break;  			case "CCEaseBounce":  				if (currentInOutIndex == 0)  					easing = new CCEaseBounceOut (coreAction);  				else if (currentInOutIndex == 1)  					easing = new CCEaseBounceIn (coreAction);  				else  					easing = new CCEaseBounceInOut (coreAction);    				break;  			case "CCEaseElastic":  				if (currentInOutIndex == 0)  					easing = new CCEaseElasticOut (coreAction);  				else if (currentInOutIndex == 1)  					easing = new CCEaseElasticIn (coreAction);  				else  					easing = new CCEaseElasticInOut (coreAction);    				break;  			case "CCEaseExponential":  				if (currentInOutIndex == 0)  					easing = new CCEaseExponentialOut (coreAction);  				else if (currentInOutIndex == 1)  					easing = new CCEaseExponentialIn (coreAction);  				else  					easing = new CCEaseExponentialInOut (coreAction);    				break;  			case "CCEaseSine":  				if (currentInOutIndex == 0)  					easing = new CCEaseSineOut (coreAction);  				else if (currentInOutIndex == 1)  					easing = new CCEaseSineIn (coreAction);  				else  					easing = new CCEaseSineInOut (coreAction);    				break;  			}
