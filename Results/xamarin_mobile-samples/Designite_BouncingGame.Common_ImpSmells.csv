Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: paddleSprite.PositionX = 100;
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: paddleSprite.PositionY = 100;
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: ballSprite.PositionX = 320;
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: ballSprite.PositionY = 600;
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: scoreLabel = new CCLabel ("Score: 0"' "Arial"' 20' CCLabelFormat.SystemFont);
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: scoreLabel.PositionX = 50;
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: scoreLabel.PositionY = 1000;
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,RunGameLogic,The following statement contains a magic number: if (doesBallOverlapPaddle && isMovingDownward)  			{  				// First let's invert the velocity:  				ballYVelocity *= -1;  				// Then let's assign a random to the ball's x velocity:  				const float minXVelocity = -300;  				const float maxXVelocity = 300;  				ballXVelocity = CCRandom.GetRandomFloat (minXVelocity' maxXVelocity);  				// New code:  				score++;  				scoreLabel.Text = "Score: " + score;  			}
Magic Number,BouncingGame,GameLayer,C:\repos\xamarin_mobile-samples\BouncingGame\BouncingGame\BouncingGame.Common\GameLayer.cs,RunGameLogic,The following statement contains a magic number: if (doesBallOverlapPaddle && isMovingDownward)  			{  				// First let's invert the velocity:  				ballYVelocity *= -1;  				// Then let's assign a random to the ball's x velocity:  				const float minXVelocity = -300;  				const float maxXVelocity = 300;  				ballXVelocity = CCRandom.GetRandomFloat (minXVelocity' maxXVelocity);  				// New code:  				score++;  				scoreLabel.Text = "Score: " + score;  			}
