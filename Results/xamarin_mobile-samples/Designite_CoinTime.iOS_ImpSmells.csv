Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,PopulateFrom,Cyclomatic complexity of the method is 10
Complex Method,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetFirstAfter,Cyclomatic complexity of the method is 9
Complex Method,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetSeparatingVector,Cyclomatic complexity of the method is 10
Complex Method,CoinTimeGame.Entities,TouchScreenAnalogStick,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\TouchScreenAnalogStick.cs,DetermineHorizontalRatio,Cyclomatic complexity of the method is 10
Complex Method,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,PerformActivity,Cyclomatic complexity of the method is 9
Empty Catch Block,CoinTimeGame.TilemapClasses,TileMapPropertyFinder,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\TilemapClasses\TileMapPropertyFinder.cs,GetPropertyLocations,The method has an empty catch block.
Empty Catch Block,CoinTimeGame,LevelManager,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\LevelManager.cs,DetermineAvailableLevels,The method has an empty catch block.
Magic Number,CoinTime,GameAppDelegate,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\GameAppDelegate.cs,ApplicationDidFinishLaunching,The following statement contains a magic number: float desiredWidth = 256.0f;
Magic Number,CoinTime,GameAppDelegate,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\GameAppDelegate.cs,ApplicationDidFinishLaunching,The following statement contains a magic number: float desiredHeight = 224.0f;
Magic Number,CoinTime,GameAppDelegate,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\GameAppDelegate.cs,ApplicationDidFinishLaunching,The following statement contains a magic number: CCSimpleAudioEngine.SharedEngine.EffectsVolume = .3f;
Magic Number,CoinTimeGame.Entities,AnimatedSpriteEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\AnimatedSpriteEntity.cs,CreateSprite,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (1024' 0' 100' 100);
Magic Number,CoinTimeGame.Entities,AnimatedSpriteEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\AnimatedSpriteEntity.cs,CreateSprite,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (1024' 0' 100' 100);
Magic Number,CoinTimeGame.Entities,AnimatedSpriteEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\AnimatedSpriteEntity.cs,CreateSprite,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (1024' 0' 100' 100);
Magic Number,CoinTimeGame.Entities,AnimatedSpriteEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\AnimatedSpriteEntity.cs,CreateSprite,The following statement contains a magic number: sprite.ContentSize = new CCSize (100' 100);
Magic Number,CoinTimeGame.Entities,AnimatedSpriteEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\AnimatedSpriteEntity.cs,CreateSprite,The following statement contains a magic number: sprite.ContentSize = new CCSize (100' 100);
Magic Number,CoinTimeGame.Entities,AnimatedSpriteEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\AnimatedSpriteEntity.cs,PerformSpriteAnimation,The following statement contains a magic number: remainder = CurrentAnimation.Duration.TotalSeconds - CurrentAnimation.Frames.Last().Duration.TotalSeconds/2.0;
Magic Number,CoinTimeGame.Entities,Button,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Button.cs,Button,The following statement contains a magic number: label = new CCLabel(""' "fonts/Aldrich-Regular.ttf"' 24' CCLabelFormat.SystemFont);
Magic Number,CoinTimeGame.Entities,Enemy,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Enemy.cs,ReactToCollision,The following statement contains a magic number: const float epsilon = .0001f;
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,PopulateFrom,The following statement contains a magic number: tileDimension = (int)(tileMap.TileTexelSize.Width + .5f);
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,PopulateFrom,The following statement contains a magic number: float left = centerX - tileDimension/2.0f;
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,PopulateFrom,The following statement contains a magic number: float bottom = centerY - tileDimension/2.0f;
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetFirstAfter,The following statement contains a magic number: highBoundIndex - lowBoundIndex < 2
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetIndicesBetween,The following statement contains a magic number: float leftAdjusted = tileDimension * (((int)leftX) / tileDimension) - tileDimension/2;
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetIndicesBetween,The following statement contains a magic number: float rightAdjusted = tileDimension * (((int)rightX) / tileDimension) + tileDimension/2;
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetSeparatingVector,The following statement contains a magic number: float secondCenterX = second.Left + second.Width / 2.0f;
Magic Number,CoinTimeGame.Entities,LevelCollision,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\LevelCollision.cs,GetSeparatingVector,The following statement contains a magic number: float secondCenterY = second.Bottom + second.Width / 2.0f;
Magic Number,CoinTimeGame.Entities,PhysicsEntity,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\PhysicsEntity.cs,ApplyMovementValues,The following statement contains a magic number: float halfSecondsSquared = (seconds * seconds) / 2.0f;
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (  				1024' 208' 64' 24);
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (  				1024' 208' 64' 24);
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (  				1024' 208' 64' 24);
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: sprite.TextureRectInPixels = new CCRect (  				1024' 208' 64' 24);
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: label = new CCLabel("Test"' "fonts/Aldrich-Regular.ttf"' 22' CCLabelFormat.SystemFont);
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: label.PositionY = -2;
Magic Number,CoinTimeGame.Entities,Timer,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Timer.cs,Timer,The following statement contains a magic number: SecondsLeft = 60;
Magic Number,CoinTimeGame.Entities,TouchScreenAnalogStick,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\TouchScreenAnalogStick.cs,DetermineHorizontalRatio,The following statement contains a magic number: const float deadZone = .15f;
Magic Number,CoinTimeGame.Scenes,GameScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\GameScene.Collision.cs,CreateHud,The following statement contains a magic number: timer.PositionY = this.ContentSize.Height - 20;
Magic Number,CoinTimeGame.Scenes,GameScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\GameScene.Collision.cs,CreateHud,The following statement contains a magic number: backButton.PositionX = 30;
Magic Number,CoinTimeGame.Scenes,GameScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\GameScene.Collision.cs,CreateHud,The following statement contains a magic number: backButton.PositionY = ContentSize.Height - 30;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateHowToPlayButton,The following statement contains a magic number: howToButton.PositionY = 22;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateLogo,The following statement contains a magic number: const float offsetFromMiddle = 72;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateNavigationButtons,The following statement contains a magic number: const float horizontalDistanceFromEdge = 36;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateNavigationButtons,The following statement contains a magic number: const float verticalDistanceFromEdge = 28;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,UpdateNavigationButtonVisibility,The following statement contains a magic number: navigateRightButton.Visible = (1+pageNumber) * 6 < LevelManager.Self.NumberOfLevels;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateLevelButtons,The following statement contains a magic number: const int buttonsPerPage = 6;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateLevelButtons,The following statement contains a magic number: int maxLevelExclusive = System.Math.Min (levelIndex0Based + 6' LevelManager.Self.NumberOfLevels);
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateLevelButtons,The following statement contains a magic number: const float topRowOffsetFromCenter = 16;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateLevelButtons,The following statement contains a magic number: button.PositionX = centerX - levelButtonSpacing + (buttonIndex % 3) * levelButtonSpacing;
Magic Number,CoinTimeGame.Scenes,LevelSelectScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\LevelSelectScene.cs,CreateLevelButtons,The following statement contains a magic number: button.PositionY = topRowY - levelButtonSpacing * (buttonIndex / 3);
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowToImage,The following statement contains a magic number: howToImage.AnchorPoint = new CCPoint (.5f' .5f);
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowToImage,The following statement contains a magic number: howToImage.AnchorPoint = new CCPoint (.5f' .5f);
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowToImage,The following statement contains a magic number: howToImage.PositionY = ContentSize.Center.Y + 20;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowToImage,The following statement contains a magic number: howToImage.Scale = .5f;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: const float backgroundHeight = 36;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: var rect = new CCRect (  				-backgroundWidth / 2.0f' -backgroundHeight / 2.0f'   				backgroundWidth ' backgroundHeight );
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: var rect = new CCRect (  				-backgroundWidth / 2.0f' -backgroundHeight / 2.0f'   				backgroundWidth ' backgroundHeight );
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: labelBackground.PositionY = 74;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: howToLabel = new CCLabel(  				"Touch and move on the left side of the screen to move.\nTap on the right side to jump."'   				"fonts/Aldrich-Regular.ttf"' 12' CCLabelFormat.SystemFont);
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: howToLabel.Scale = .5f;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateHowtoLabel,The following statement contains a magic number: howToLabel.PositionY = 74;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateBackButton,The following statement contains a magic number: const float horizontalDistanceFromEdge = 36;
Magic Number,CoinTimeGame.Scenes,HowToPlayScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\HowToPlayScene.cs,CreateBackButton,The following statement contains a magic number: const float verticalDistanceFromEdge = 28;
Magic Number,CoinTimeGame.TilemapClasses,TileMapPropertyFinder,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\TilemapClasses\TileMapPropertyFinder.cs,GetPropertyLocations,The following statement contains a magic number: int worldX = tileDimension * column + tileDimension / 2;
Magic Number,CoinTimeGame.TilemapClasses,TileMapPropertyFinder,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\TilemapClasses\TileMapPropertyFinder.cs,GetPropertyLocations,The following statement contains a magic number: int worldY = tileDimension * row + tileDimension / 2;
Missing Default,CoinTimeGame.Entities,Enemy,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Enemy.cs,AssignAnimation,The following switch statement is missing a default case: switch (directionFacing)  			{  			case LeftOrRight.Left:  				this.CurrentAnimation = walkLeftAnimation;  				break;  			case LeftOrRight.Right:  				this.CurrentAnimation = walkRightAnimation;  				break;  			}
Missing Default,CoinTimeGame.Entities,Enemy,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Entities\Enemy.cs,PerformAi,The following switch statement is missing a default case: switch (directionFacing)  			{  			case LeftOrRight.Left:  				this.VelocityX = -EnemyMovementCoefficients.MaxHorizontalSpeed;  				break;  			case LeftOrRight.Right:  				this.VelocityX = EnemyMovementCoefficients.MaxHorizontalSpeed;  				break;  			}
Missing Default,CoinTimeGame.Scenes,GameScene,D:\research\architectureSmells\repos\xamarin_mobile-samples\CoinTime\CoinTimeShared\Scenes\GameScene.Collision.cs,TryCreateEntity,The following switch statement is missing a default case: switch (entityType)  			{  			case "Player":  				player = new Player ();  				entityAsNode = player;  				break;  			case "Coin":  				Coin coin = new Coin ();  				entityAsNode = coin;  				coins.Add (coin);  				break;  			case "Door":  				door = new Door ();  				entityAsNode = door;  				break;  			case "Spikes":  				var spikes = new Spikes ();  				this.damageDealers.Add (spikes);  				entityAsNode = spikes;  				break;  			case "Enemy":  				var enemy = new Enemy ();  				this.damageDealers.Add (enemy);  				this.enemies.Add (enemy);  				entityAsNode = enemy;  				break;  			}
