Implementation smell,Namespace,Class,File,Method,Description
Long Method,Brutal.Dev.StrongNameSigner,AutomaticBuildTask,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\AutomaticBuildTask.cs,Execute,The method has 100 lines of code.
Complex Method,Brutal.Dev.StrongNameSigner,AutomaticBuildTask,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\AutomaticBuildTask.cs,Execute,Cyclomatic complexity of the method is 16
Long Parameter List,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,SignAssembly,The method has 5 parameters. Parameters: assemblyPath' keyPath' outputPath' keyFilePassword' probingPaths
Long Parameter List,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The method has 5 parameters. Parameters: assemblyPath' referenceAssemblyPath' keyPath' keyFilePassword' probingPaths
Long Statement,Brutal.Dev.StrongNameSigner,AutomaticBuildTask,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\AutomaticBuildTask.cs,Execute,The length of the statement  "          // Remove all InternalsVisibleTo attributes without public keys from the processed assemblies. Signed assemblies cannot have unsigned friend assemblies. " is 152.
Long Statement,Brutal.Dev.StrongNameSigner,AutomaticBuildTask,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\AutomaticBuildTask.cs,FixSingleAssemblyReference,The length of the statement  "          Log.LogMessage(MessageImportance.Normal' "References to '{1}' in '{0}' were fixed successfully."' assemblyPath' referencePath); " is 127.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,SignAssembly,The length of the statement  "          ad.Write(outputFileMgr.IntermediateAssemblyPath' new WriterParameters() { StrongNameKeyPair = GetStrongNameKeyPair(keyPath' keyFilePassword)' WriteSymbols = outputFileMgr.HasSymbols }); " is 185.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,GetAssemblyInfo,The length of the statement  "          !GetFileMD5Hash(assemblyPath).Equals(a.Key' StringComparison.OrdinalIgnoreCase))  // Check if the file contents have changed. " is 125.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,GetAssemblyInfo,The length of the statement  "            SigningType = !definition.MainModule.Attributes.HasFlag(ModuleAttributes.StrongNameSigned) ? StrongNameType.NotSigned : StrongNameSignatureVerificationEx(assemblyPath' true' ref wasVerified) ? StrongNameType.Signed : StrongNameType.DelaySigned' " is 244.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,GetAssemblyInfo,The length of the statement  "            Is64BitOnly = definition.MainModule.Architecture == TargetArchitecture.AMD64 || definition.MainModule.Architecture == TargetArchitecture.IA64' " is 142.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,GetAssemblyInfo,The length of the statement  "            Is32BitOnly = definition.MainModule.Attributes.HasFlag(ModuleAttributes.Required32Bit) && !definition.MainModule.Attributes.HasFlag(ModuleAttributes.Preferred32Bit)' " is 165.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "        using (var b = AssemblyDefinition.ReadAssembly(referenceAssemblyPath' GetReadParameters(referenceAssemblyPath' probingPaths))) " is 126.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "          var assemblyReference = a.MainModule.AssemblyReferences.FirstOrDefault(r => r.Name.Equals(b.Name.Name' StringComparison.OrdinalIgnoreCase)); " is 140.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "          if (assemblyReference != null && BitConverter.ToString(assemblyReference.PublicKeyToken) != BitConverter.ToString(b.Name.PublicKeyToken)) " is 137.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "            a.Write(fileManagerA.IntermediateAssemblyPath' new WriterParameters { StrongNameKeyPair = GetStrongNameKeyPair(keyPath' keyFilePassword)' WriteSymbols = File.Exists(Path.ChangeExtension(assemblyPath' ".pdb")) }); " is 212.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "          var friendReference = b.CustomAttributes.SingleOrDefault(attr => attr.AttributeType.FullName == typeof(InternalsVisibleToAttribute).FullName && " is 143.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "            friendReference.ConstructorArguments.Add(new CustomAttributeArgument(typeRef' a.Name.Name + "' PublicKey=" + BitConverter.ToString(a.Name.PublicKey).Replace("-"' string.Empty))); " is 178.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,FixAssemblyReference,The length of the statement  "            b.Write(fileManagerB.IntermediateAssemblyPath' new WriterParameters { StrongNameKeyPair = GetStrongNameKeyPair(keyPath' keyFilePassword)' WriteSymbols = File.Exists(Path.ChangeExtension(referenceAssemblyPath' ".pdb")) }); " is 221.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,RemoveInvalidFriendAssemblies,The length of the statement  "          var ivtAttributes = a.CustomAttributes.Where(attr => attr.AttributeType.FullName == typeof(InternalsVisibleToAttribute).FullName).ToList(); " is 139.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,RemoveInvalidFriendAssemblies,The length of the statement  "            if (friendReference.HasConstructorArguments && friendReference.ConstructorArguments.Any(ca => ca.Value?.ToString().IndexOf("PublicKey="' StringComparison.Ordinal) == -1)) " is 170.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,RemoveInvalidFriendAssemblies,The length of the statement  "            a.Write(outFileMgr.IntermediateAssemblyPath' new WriterParameters { StrongNameKeyPair = GetStrongNameKeyPair(keyPath' keyFilePassword)' WriteSymbols = File.Exists(Path.ChangeExtension(assemblyPath' ".pdb")) }); " is 210.
Long Statement,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,GetReadParameters,The length of the statement  "          readParams = new ReaderParameters() { AssemblyResolver = resolver' ReadSymbols = File.Exists(Path.ChangeExtension(assemblyPath' ".pdb")) }; " is 139.
Empty Catch Block,Brutal.Dev.StrongNameSigner,OutputFileManager,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\OutputFileManager.cs,Dispose,The method has an empty catch block.
Missing Default,Brutal.Dev.StrongNameSigner,SigningHelper,D:\research\architectureSmells\repos\brutaldev_StrongNameSigner\src\Brutal.Dev.StrongNameSigner\SigningHelper.cs,GetDotNetVersion,The following switch statement is missing a default case: switch (runtime)        {          case TargetRuntime.Net_1_0:            return "1.0.3705";          case TargetRuntime.Net_1_1:            return "1.1.4322";          case TargetRuntime.Net_2_0:            return "2.0.50727";          case TargetRuntime.Net_4_0:            return "4.0.30319";        }
