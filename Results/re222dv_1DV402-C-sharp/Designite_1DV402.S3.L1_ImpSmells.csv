Implementation smell,Namespace,Class,File,Method,Description
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,Cyclomatic complexity of the method is 30
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ReadIngredients,Cyclomatic complexity of the method is 12
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ReadDirections,Cyclomatic complexity of the method is 12
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,FindRecipe,Cyclomatic complexity of the method is 12
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,DeleteRecipe,Cyclomatic complexity of the method is 13
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,Cyclomatic complexity of the method is 37
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,RemoveIngredient,Cyclomatic complexity of the method is 16
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,RemoveDirection,Cyclomatic complexity of the method is 16
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,Cyclomatic complexity of the method is 13
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,Cyclomatic complexity of the method is 13
Complex Method,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,SaveRecipes,Cyclomatic complexity of the method is 14
Complex Method,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,Cyclomatic complexity of the method is 25
Complex Method,_1DV402.S3.L1,RecipeView,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeView.cs,RenderHeader,Cyclomatic complexity of the method is 18
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The length of the statement  "			Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,RemoveIngredient,The length of the statement  "		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,RemoveDirection,The length of the statement  "		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The length of the statement  "		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The length of the statement  "		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,GetMenuChoise,The length of the statement  "		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Long Statement,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,GetRecipe,The length of the statement  "		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550"); " is 269.
Empty Catch Block,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,GetMenuChoise,The method has an empty catch block.
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: do {  	switch (GetMenuChoise ()) {  	case 0:  		running = false;  		break;  	case 1:  		recipes.AddRange (LoadRecepies ());  		break;  	case 2:  		SaveRecipes (recipes);  		break;  	case 3:  		DeleteRecipe (recipes);  		break;  	case 4:  		ViewRecipe (recipes);  		break;  	case 5:  		ViewRecipe (recipes' true);  		break;  	case 6:  		Recipe recipe = CreateRecipe ();  		if (recipe != null) {  			recipes.Add (recipe);  		}  		break;  	case 7:  		FindRecipe (recipes);  		break;  	case 8:  		ModifyRecipe (recipes);  		break;  	}  }  while (running);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following statement contains a magic number: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Recipe recipe = GetRecipe ("Välj recept att ändra"' recipes);  	if (recipe == null) {  		return;  	}  	bool modifying = true;  	do {  		Console.Clear ();  		RecipeView.RenderHeader (recipe.Name);  		Console.WriteLine (" 0. Avsluta.");  		Console.WriteLine ();  		Console.WriteLine (" ------------------------------------");  		Console.WriteLine ();  		Console.WriteLine (" 1. Visa receptet.");  		Console.WriteLine ();  		Console.WriteLine (" - Ingredienser ----------------------");  		Console.WriteLine ();  		Console.WriteLine (" 2. Lägg till ingredienser.");  		Console.WriteLine (" 3. Ta bort ingredienser.");  		Console.WriteLine (" 4. Byt ordning på ingredienser.");  		Console.WriteLine ();  		Console.WriteLine (" - Instruktioner ---------------------");  		Console.WriteLine ();  		Console.WriteLine (" 5. Lägg till instruktioner.");  		Console.WriteLine (" 6. Ta bort instruktioner.");  		Console.WriteLine (" 7. Byt ordning på instruktioner.");  		Console.WriteLine ();  		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  		Console.WriteLine ();  		Console.Write ("Ange menyval [0-7]: ");  		try {  			int choise = int.Parse (Console.ReadLine ());  			switch (choise) {  			case 0:  				modifying = false;  				break;  			case 1:  				RecipeView.Render (recipe);  				break;  			case 2:  				recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 3:  				recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 4:  				recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 5:  				recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 6:  				recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 7:  				recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			default:  				Console.BackgroundColor = ConsoleColor.DarkRed;  				Console.WriteLine ();  				Console.WriteLine ("Felaktigt menyval");  				Console.WriteLine ();  				Console.ResetColor ();  				break;  			}  		}  		catch {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  		if (modifying) {  			ContinueOnKeyPressed ();  		}  	}  	while (modifying);  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Recipe recipe = GetRecipe ("Välj recept att ändra"' recipes);  	if (recipe == null) {  		return;  	}  	bool modifying = true;  	do {  		Console.Clear ();  		RecipeView.RenderHeader (recipe.Name);  		Console.WriteLine (" 0. Avsluta.");  		Console.WriteLine ();  		Console.WriteLine (" ------------------------------------");  		Console.WriteLine ();  		Console.WriteLine (" 1. Visa receptet.");  		Console.WriteLine ();  		Console.WriteLine (" - Ingredienser ----------------------");  		Console.WriteLine ();  		Console.WriteLine (" 2. Lägg till ingredienser.");  		Console.WriteLine (" 3. Ta bort ingredienser.");  		Console.WriteLine (" 4. Byt ordning på ingredienser.");  		Console.WriteLine ();  		Console.WriteLine (" - Instruktioner ---------------------");  		Console.WriteLine ();  		Console.WriteLine (" 5. Lägg till instruktioner.");  		Console.WriteLine (" 6. Ta bort instruktioner.");  		Console.WriteLine (" 7. Byt ordning på instruktioner.");  		Console.WriteLine ();  		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  		Console.WriteLine ();  		Console.Write ("Ange menyval [0-7]: ");  		try {  			int choise = int.Parse (Console.ReadLine ());  			switch (choise) {  			case 0:  				modifying = false;  				break;  			case 1:  				RecipeView.Render (recipe);  				break;  			case 2:  				recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 3:  				recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 4:  				recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 5:  				recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 6:  				recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 7:  				recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			default:  				Console.BackgroundColor = ConsoleColor.DarkRed;  				Console.WriteLine ();  				Console.WriteLine ("Felaktigt menyval");  				Console.WriteLine ();  				Console.ResetColor ();  				break;  			}  		}  		catch {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  		if (modifying) {  			ContinueOnKeyPressed ();  		}  	}  	while (modifying);  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Recipe recipe = GetRecipe ("Välj recept att ändra"' recipes);  	if (recipe == null) {  		return;  	}  	bool modifying = true;  	do {  		Console.Clear ();  		RecipeView.RenderHeader (recipe.Name);  		Console.WriteLine (" 0. Avsluta.");  		Console.WriteLine ();  		Console.WriteLine (" ------------------------------------");  		Console.WriteLine ();  		Console.WriteLine (" 1. Visa receptet.");  		Console.WriteLine ();  		Console.WriteLine (" - Ingredienser ----------------------");  		Console.WriteLine ();  		Console.WriteLine (" 2. Lägg till ingredienser.");  		Console.WriteLine (" 3. Ta bort ingredienser.");  		Console.WriteLine (" 4. Byt ordning på ingredienser.");  		Console.WriteLine ();  		Console.WriteLine (" - Instruktioner ---------------------");  		Console.WriteLine ();  		Console.WriteLine (" 5. Lägg till instruktioner.");  		Console.WriteLine (" 6. Ta bort instruktioner.");  		Console.WriteLine (" 7. Byt ordning på instruktioner.");  		Console.WriteLine ();  		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  		Console.WriteLine ();  		Console.Write ("Ange menyval [0-7]: ");  		try {  			int choise = int.Parse (Console.ReadLine ());  			switch (choise) {  			case 0:  				modifying = false;  				break;  			case 1:  				RecipeView.Render (recipe);  				break;  			case 2:  				recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 3:  				recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 4:  				recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 5:  				recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 6:  				recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 7:  				recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			default:  				Console.BackgroundColor = ConsoleColor.DarkRed;  				Console.WriteLine ();  				Console.WriteLine ("Felaktigt menyval");  				Console.WriteLine ();  				Console.ResetColor ();  				break;  			}  		}  		catch {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  		if (modifying) {  			ContinueOnKeyPressed ();  		}  	}  	while (modifying);  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Recipe recipe = GetRecipe ("Välj recept att ändra"' recipes);  	if (recipe == null) {  		return;  	}  	bool modifying = true;  	do {  		Console.Clear ();  		RecipeView.RenderHeader (recipe.Name);  		Console.WriteLine (" 0. Avsluta.");  		Console.WriteLine ();  		Console.WriteLine (" ------------------------------------");  		Console.WriteLine ();  		Console.WriteLine (" 1. Visa receptet.");  		Console.WriteLine ();  		Console.WriteLine (" - Ingredienser ----------------------");  		Console.WriteLine ();  		Console.WriteLine (" 2. Lägg till ingredienser.");  		Console.WriteLine (" 3. Ta bort ingredienser.");  		Console.WriteLine (" 4. Byt ordning på ingredienser.");  		Console.WriteLine ();  		Console.WriteLine (" - Instruktioner ---------------------");  		Console.WriteLine ();  		Console.WriteLine (" 5. Lägg till instruktioner.");  		Console.WriteLine (" 6. Ta bort instruktioner.");  		Console.WriteLine (" 7. Byt ordning på instruktioner.");  		Console.WriteLine ();  		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  		Console.WriteLine ();  		Console.Write ("Ange menyval [0-7]: ");  		try {  			int choise = int.Parse (Console.ReadLine ());  			switch (choise) {  			case 0:  				modifying = false;  				break;  			case 1:  				RecipeView.Render (recipe);  				break;  			case 2:  				recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 3:  				recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 4:  				recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 5:  				recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 6:  				recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 7:  				recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			default:  				Console.BackgroundColor = ConsoleColor.DarkRed;  				Console.WriteLine ();  				Console.WriteLine ("Felaktigt menyval");  				Console.WriteLine ();  				Console.ResetColor ();  				break;  			}  		}  		catch {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  		if (modifying) {  			ContinueOnKeyPressed ();  		}  	}  	while (modifying);  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Recipe recipe = GetRecipe ("Välj recept att ändra"' recipes);  	if (recipe == null) {  		return;  	}  	bool modifying = true;  	do {  		Console.Clear ();  		RecipeView.RenderHeader (recipe.Name);  		Console.WriteLine (" 0. Avsluta.");  		Console.WriteLine ();  		Console.WriteLine (" ------------------------------------");  		Console.WriteLine ();  		Console.WriteLine (" 1. Visa receptet.");  		Console.WriteLine ();  		Console.WriteLine (" - Ingredienser ----------------------");  		Console.WriteLine ();  		Console.WriteLine (" 2. Lägg till ingredienser.");  		Console.WriteLine (" 3. Ta bort ingredienser.");  		Console.WriteLine (" 4. Byt ordning på ingredienser.");  		Console.WriteLine ();  		Console.WriteLine (" - Instruktioner ---------------------");  		Console.WriteLine ();  		Console.WriteLine (" 5. Lägg till instruktioner.");  		Console.WriteLine (" 6. Ta bort instruktioner.");  		Console.WriteLine (" 7. Byt ordning på instruktioner.");  		Console.WriteLine ();  		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  		Console.WriteLine ();  		Console.Write ("Ange menyval [0-7]: ");  		try {  			int choise = int.Parse (Console.ReadLine ());  			switch (choise) {  			case 0:  				modifying = false;  				break;  			case 1:  				RecipeView.Render (recipe);  				break;  			case 2:  				recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 3:  				recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 4:  				recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 5:  				recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 6:  				recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 7:  				recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			default:  				Console.BackgroundColor = ConsoleColor.DarkRed;  				Console.WriteLine ();  				Console.WriteLine ("Felaktigt menyval");  				Console.WriteLine ();  				Console.ResetColor ();  				break;  			}  		}  		catch {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  		if (modifying) {  			ContinueOnKeyPressed ();  		}  	}  	while (modifying);  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Recipe recipe = GetRecipe ("Välj recept att ändra"' recipes);  	if (recipe == null) {  		return;  	}  	bool modifying = true;  	do {  		Console.Clear ();  		RecipeView.RenderHeader (recipe.Name);  		Console.WriteLine (" 0. Avsluta.");  		Console.WriteLine ();  		Console.WriteLine (" ------------------------------------");  		Console.WriteLine ();  		Console.WriteLine (" 1. Visa receptet.");  		Console.WriteLine ();  		Console.WriteLine (" - Ingredienser ----------------------");  		Console.WriteLine ();  		Console.WriteLine (" 2. Lägg till ingredienser.");  		Console.WriteLine (" 3. Ta bort ingredienser.");  		Console.WriteLine (" 4. Byt ordning på ingredienser.");  		Console.WriteLine ();  		Console.WriteLine (" - Instruktioner ---------------------");  		Console.WriteLine ();  		Console.WriteLine (" 5. Lägg till instruktioner.");  		Console.WriteLine (" 6. Ta bort instruktioner.");  		Console.WriteLine (" 7. Byt ordning på instruktioner.");  		Console.WriteLine ();  		Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  		Console.WriteLine ();  		Console.Write ("Ange menyval [0-7]: ");  		try {  			int choise = int.Parse (Console.ReadLine ());  			switch (choise) {  			case 0:  				modifying = false;  				break;  			case 1:  				RecipeView.Render (recipe);  				break;  			case 2:  				recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 3:  				recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 4:  				recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  				break;  			case 5:  				recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 6:  				recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			case 7:  				recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  				break;  			default:  				Console.BackgroundColor = ConsoleColor.DarkRed;  				Console.WriteLine ();  				Console.WriteLine ("Felaktigt menyval");  				Console.WriteLine ();  				Console.ResetColor ();  				break;  			}  		}  		catch {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  		if (modifying) {  			ContinueOnKeyPressed ();  		}  	}  	while (modifying);  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader (recipe.Name);  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 1. Visa receptet.");  	Console.WriteLine ();  	Console.WriteLine (" - Ingredienser ----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 2. Lägg till ingredienser.");  	Console.WriteLine (" 3. Ta bort ingredienser.");  	Console.WriteLine (" 4. Byt ordning på ingredienser.");  	Console.WriteLine ();  	Console.WriteLine (" - Instruktioner ---------------------");  	Console.WriteLine ();  	Console.WriteLine (" 5. Lägg till instruktioner.");  	Console.WriteLine (" 6. Ta bort instruktioner.");  	Console.WriteLine (" 7. Byt ordning på instruktioner.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-7]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		switch (choise) {  		case 0:  			modifying = false;  			break;  		case 1:  			RecipeView.Render (recipe);  			break;  		case 2:  			recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 3:  			recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 4:  			recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 5:  			recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 6:  			recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 7:  			recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		default:  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  			break;  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	if (modifying) {  		ContinueOnKeyPressed ();  	}  }  while (modifying);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader (recipe.Name);  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 1. Visa receptet.");  	Console.WriteLine ();  	Console.WriteLine (" - Ingredienser ----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 2. Lägg till ingredienser.");  	Console.WriteLine (" 3. Ta bort ingredienser.");  	Console.WriteLine (" 4. Byt ordning på ingredienser.");  	Console.WriteLine ();  	Console.WriteLine (" - Instruktioner ---------------------");  	Console.WriteLine ();  	Console.WriteLine (" 5. Lägg till instruktioner.");  	Console.WriteLine (" 6. Ta bort instruktioner.");  	Console.WriteLine (" 7. Byt ordning på instruktioner.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-7]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		switch (choise) {  		case 0:  			modifying = false;  			break;  		case 1:  			RecipeView.Render (recipe);  			break;  		case 2:  			recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 3:  			recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 4:  			recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 5:  			recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 6:  			recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 7:  			recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		default:  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  			break;  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	if (modifying) {  		ContinueOnKeyPressed ();  	}  }  while (modifying);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader (recipe.Name);  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 1. Visa receptet.");  	Console.WriteLine ();  	Console.WriteLine (" - Ingredienser ----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 2. Lägg till ingredienser.");  	Console.WriteLine (" 3. Ta bort ingredienser.");  	Console.WriteLine (" 4. Byt ordning på ingredienser.");  	Console.WriteLine ();  	Console.WriteLine (" - Instruktioner ---------------------");  	Console.WriteLine ();  	Console.WriteLine (" 5. Lägg till instruktioner.");  	Console.WriteLine (" 6. Ta bort instruktioner.");  	Console.WriteLine (" 7. Byt ordning på instruktioner.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-7]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		switch (choise) {  		case 0:  			modifying = false;  			break;  		case 1:  			RecipeView.Render (recipe);  			break;  		case 2:  			recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 3:  			recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 4:  			recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 5:  			recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 6:  			recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 7:  			recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		default:  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  			break;  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	if (modifying) {  		ContinueOnKeyPressed ();  	}  }  while (modifying);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader (recipe.Name);  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 1. Visa receptet.");  	Console.WriteLine ();  	Console.WriteLine (" - Ingredienser ----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 2. Lägg till ingredienser.");  	Console.WriteLine (" 3. Ta bort ingredienser.");  	Console.WriteLine (" 4. Byt ordning på ingredienser.");  	Console.WriteLine ();  	Console.WriteLine (" - Instruktioner ---------------------");  	Console.WriteLine ();  	Console.WriteLine (" 5. Lägg till instruktioner.");  	Console.WriteLine (" 6. Ta bort instruktioner.");  	Console.WriteLine (" 7. Byt ordning på instruktioner.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-7]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		switch (choise) {  		case 0:  			modifying = false;  			break;  		case 1:  			RecipeView.Render (recipe);  			break;  		case 2:  			recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 3:  			recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 4:  			recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 5:  			recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 6:  			recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 7:  			recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		default:  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  			break;  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	if (modifying) {  		ContinueOnKeyPressed ();  	}  }  while (modifying);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader (recipe.Name);  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 1. Visa receptet.");  	Console.WriteLine ();  	Console.WriteLine (" - Ingredienser ----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 2. Lägg till ingredienser.");  	Console.WriteLine (" 3. Ta bort ingredienser.");  	Console.WriteLine (" 4. Byt ordning på ingredienser.");  	Console.WriteLine ();  	Console.WriteLine (" - Instruktioner ---------------------");  	Console.WriteLine ();  	Console.WriteLine (" 5. Lägg till instruktioner.");  	Console.WriteLine (" 6. Ta bort instruktioner.");  	Console.WriteLine (" 7. Byt ordning på instruktioner.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-7]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		switch (choise) {  		case 0:  			modifying = false;  			break;  		case 1:  			RecipeView.Render (recipe);  			break;  		case 2:  			recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 3:  			recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 4:  			recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 5:  			recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 6:  			recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 7:  			recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		default:  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  			break;  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	if (modifying) {  		ContinueOnKeyPressed ();  	}  }  while (modifying);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader (recipe.Name);  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 1. Visa receptet.");  	Console.WriteLine ();  	Console.WriteLine (" - Ingredienser ----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 2. Lägg till ingredienser.");  	Console.WriteLine (" 3. Ta bort ingredienser.");  	Console.WriteLine (" 4. Byt ordning på ingredienser.");  	Console.WriteLine ();  	Console.WriteLine (" - Instruktioner ---------------------");  	Console.WriteLine ();  	Console.WriteLine (" 5. Lägg till instruktioner.");  	Console.WriteLine (" 6. Ta bort instruktioner.");  	Console.WriteLine (" 7. Byt ordning på instruktioner.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-7]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		switch (choise) {  		case 0:  			modifying = false;  			break;  		case 1:  			RecipeView.Render (recipe);  			break;  		case 2:  			recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 3:  			recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 4:  			recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  			break;  		case 5:  			recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 6:  			recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		case 7:  			recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  			break;  		default:  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  			break;  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	if (modifying) {  		ContinueOnKeyPressed ();  	}  }  while (modifying);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	switch (choise) {  	case 0:  		modifying = false;  		break;  	case 1:  		RecipeView.Render (recipe);  		break;  	case 2:  		recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 3:  		recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 4:  		recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 5:  		recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 6:  		recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 7:  		recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	default:  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  		break;  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	switch (choise) {  	case 0:  		modifying = false;  		break;  	case 1:  		RecipeView.Render (recipe);  		break;  	case 2:  		recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 3:  		recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 4:  		recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 5:  		recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 6:  		recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 7:  		recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	default:  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  		break;  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	switch (choise) {  	case 0:  		modifying = false;  		break;  	case 1:  		RecipeView.Render (recipe);  		break;  	case 2:  		recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 3:  		recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 4:  		recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 5:  		recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 6:  		recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 7:  		recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	default:  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  		break;  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	switch (choise) {  	case 0:  		modifying = false;  		break;  	case 1:  		RecipeView.Render (recipe);  		break;  	case 2:  		recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 3:  		recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 4:  		recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 5:  		recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 6:  		recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 7:  		recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	default:  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  		break;  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	switch (choise) {  	case 0:  		modifying = false;  		break;  	case 1:  		RecipeView.Render (recipe);  		break;  	case 2:  		recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 3:  		recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 4:  		recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 5:  		recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 6:  		recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 7:  		recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	default:  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  		break;  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	switch (choise) {  	case 0:  		modifying = false;  		break;  	case 1:  		RecipeView.Render (recipe);  		break;  	case 2:  		recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 3:  		recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 4:  		recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  		break;  	case 5:  		recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 6:  		recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	case 7:  		recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  		break;  	default:  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  		break;  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: switch (choise) {  case 0:  	modifying = false;  	break;  case 1:  	RecipeView.Render (recipe);  	break;  case 2:  	recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 3:  	recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 4:  	recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 5:  	recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 6:  	recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 7:  	recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  default:  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: switch (choise) {  case 0:  	modifying = false;  	break;  case 1:  	RecipeView.Render (recipe);  	break;  case 2:  	recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 3:  	recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 4:  	recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 5:  	recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 6:  	recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 7:  	recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  default:  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: switch (choise) {  case 0:  	modifying = false;  	break;  case 1:  	RecipeView.Render (recipe);  	break;  case 2:  	recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 3:  	recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 4:  	recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 5:  	recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 6:  	recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 7:  	recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  default:  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: switch (choise) {  case 0:  	modifying = false;  	break;  case 1:  	RecipeView.Render (recipe);  	break;  case 2:  	recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 3:  	recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 4:  	recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 5:  	recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 6:  	recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 7:  	recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  default:  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: switch (choise) {  case 0:  	modifying = false;  	break;  case 1:  	RecipeView.Render (recipe);  	break;  case 2:  	recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 3:  	recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 4:  	recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 5:  	recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 6:  	recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 7:  	recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  default:  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,ModifyRecipe,The following statement contains a magic number: switch (choise) {  case 0:  	modifying = false;  	break;  case 1:  	RecipeView.Render (recipe);  	break;  case 2:  	recipe.Ingredients = ReadIngredients (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 3:  	recipe.Ingredients = RemoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 4:  	recipe.Ingredients = MoveIngredient (new List<Ingredient> (recipe.Ingredients)).AsReadOnly ();  	break;  case 5:  	recipe.Directions = ReadDirections (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 6:  	recipe.Directions = RemoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  case 7:  	recipe.Directions = MoveDirection (new List<string> (recipe.Directions)).AsReadOnly ();  	break;  default:  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader ("Välj ingrediens att ta bort");  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	for (int i = 0; i < ingredients.Count; i++) {  		Ingredient ingredient = ingredients [i];  		Console.WriteLine (" {0}. {1}."' i + 1' ingredient.Name);  	}  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-{0}]: "' ingredients.Count);  	try {  		int choise = int.Parse (Console.ReadLine ());  		if (choise == 0) {  			break;  		}  		if (choise > 0 && choise <= ingredients.Count) {  			bool moving = true;  			do {  				Console.WriteLine ();  				Console.WriteLine (" 0. Avsluta.");  				if (choise != 1) {  					Console.WriteLine (" 1. Flytta upp.");  				}  				if (choise != ingredients.Count) {  					Console.WriteLine (" 2. Flytta ner.");  					Console.Write ("Ange menyval [0-2]: ");  				}  				else {  					Console.Write ("Ange menyval [0-1]: ");  				}  				string subChoise = Console.ReadLine ();  				if (subChoise == "0") {  					moving = false;  					break;  				}  				else if (subChoise == "1" && choise != 1) {  					moving = false;  					ingredients.Insert (choise - 2' ingredients [choise - 1]);  					ingredients.RemoveAt (choise);  					break;  				}  				else if (subChoise == "2" && choise != ingredients.Count) {  					moving = false;  					ingredients.Insert (choise + 1' ingredients [choise - 1]);  					ingredients.RemoveAt (choise - 1);  					break;  				}  			}  			while (moving);  		}  		else {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	ContinueOnKeyPressed ();  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	if (choise == 0) {  		break;  	}  	if (choise > 0 && choise <= ingredients.Count) {  		bool moving = true;  		do {  			Console.WriteLine ();  			Console.WriteLine (" 0. Avsluta.");  			if (choise != 1) {  				Console.WriteLine (" 1. Flytta upp.");  			}  			if (choise != ingredients.Count) {  				Console.WriteLine (" 2. Flytta ner.");  				Console.Write ("Ange menyval [0-2]: ");  			}  			else {  				Console.Write ("Ange menyval [0-1]: ");  			}  			string subChoise = Console.ReadLine ();  			if (subChoise == "0") {  				moving = false;  				break;  			}  			else if (subChoise == "1" && choise != 1) {  				moving = false;  				ingredients.Insert (choise - 2' ingredients [choise - 1]);  				ingredients.RemoveAt (choise);  				break;  			}  			else if (subChoise == "2" && choise != ingredients.Count) {  				moving = false;  				ingredients.Insert (choise + 1' ingredients [choise - 1]);  				ingredients.RemoveAt (choise - 1);  				break;  			}  		}  		while (moving);  	}  	else {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: if (choise > 0 && choise <= ingredients.Count) {  	bool moving = true;  	do {  		Console.WriteLine ();  		Console.WriteLine (" 0. Avsluta.");  		if (choise != 1) {  			Console.WriteLine (" 1. Flytta upp.");  		}  		if (choise != ingredients.Count) {  			Console.WriteLine (" 2. Flytta ner.");  			Console.Write ("Ange menyval [0-2]: ");  		}  		else {  			Console.Write ("Ange menyval [0-1]: ");  		}  		string subChoise = Console.ReadLine ();  		if (subChoise == "0") {  			moving = false;  			break;  		}  		else if (subChoise == "1" && choise != 1) {  			moving = false;  			ingredients.Insert (choise - 2' ingredients [choise - 1]);  			ingredients.RemoveAt (choise);  			break;  		}  		else if (subChoise == "2" && choise != ingredients.Count) {  			moving = false;  			ingredients.Insert (choise + 1' ingredients [choise - 1]);  			ingredients.RemoveAt (choise - 1);  			break;  		}  	}  	while (moving);  }  else {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: do {  	Console.WriteLine ();  	Console.WriteLine (" 0. Avsluta.");  	if (choise != 1) {  		Console.WriteLine (" 1. Flytta upp.");  	}  	if (choise != ingredients.Count) {  		Console.WriteLine (" 2. Flytta ner.");  		Console.Write ("Ange menyval [0-2]: ");  	}  	else {  		Console.Write ("Ange menyval [0-1]: ");  	}  	string subChoise = Console.ReadLine ();  	if (subChoise == "0") {  		moving = false;  		break;  	}  	else if (subChoise == "1" && choise != 1) {  		moving = false;  		ingredients.Insert (choise - 2' ingredients [choise - 1]);  		ingredients.RemoveAt (choise);  		break;  	}  	else if (subChoise == "2" && choise != ingredients.Count) {  		moving = false;  		ingredients.Insert (choise + 1' ingredients [choise - 1]);  		ingredients.RemoveAt (choise - 1);  		break;  	}  }  while (moving);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: if (subChoise == "0") {  	moving = false;  	break;  }  else if (subChoise == "1" && choise != 1) {  	moving = false;  	ingredients.Insert (choise - 2' ingredients [choise - 1]);  	ingredients.RemoveAt (choise);  	break;  }  else if (subChoise == "2" && choise != ingredients.Count) {  	moving = false;  	ingredients.Insert (choise + 1' ingredients [choise - 1]);  	ingredients.RemoveAt (choise - 1);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: if (subChoise == "1" && choise != 1) {  	moving = false;  	ingredients.Insert (choise - 2' ingredients [choise - 1]);  	ingredients.RemoveAt (choise);  	break;  }  else if (subChoise == "2" && choise != ingredients.Count) {  	moving = false;  	ingredients.Insert (choise + 1' ingredients [choise - 1]);  	ingredients.RemoveAt (choise - 1);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveIngredient,The following statement contains a magic number: ingredients.Insert (choise - 2' ingredients [choise - 1]);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader ("Välj instruktion att flytta");  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine ();  	Console.WriteLine (" ------------------------------------");  	Console.WriteLine ();  	for (int i = 0; i < directions.Count; i++) {  		string direction = directions [i];  		Console.WriteLine (" {0}. {1}."' i + 1' direction);  	}  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-{0}]: "' directions.Count);  	try {  		int choise = int.Parse (Console.ReadLine ());  		if (choise == 0) {  			break;  		}  		if (choise > 0 && choise <= directions.Count) {  			bool moving = true;  			do {  				Console.WriteLine ();  				Console.WriteLine (" 0. Avsluta.");  				if (choise != 1) {  					Console.WriteLine (" 1. Flytta upp.");  				}  				if (choise != directions.Count) {  					Console.WriteLine (" 2. Flytta ner.");  					Console.Write ("Ange menyval [0-2]: ");  				}  				else {  					Console.Write ("Ange menyval [0-1]: ");  				}  				string subChoise = Console.ReadLine ();  				if (subChoise == "0") {  					moving = false;  					break;  				}  				else if (subChoise == "1" && choise != 1) {  					moving = false;  					directions.Insert (choise - 2' directions [choise - 1]);  					directions.RemoveAt (choise);  					break;  				}  				else if (subChoise == "2" && choise != directions.Count) {  					moving = false;  					directions.Insert (choise + 1' directions [choise - 1]);  					directions.RemoveAt (choise - 1);  					break;  				}  			}  			while (moving);  		}  		else {  			Console.BackgroundColor = ConsoleColor.DarkRed;  			Console.WriteLine ();  			Console.WriteLine ("Felaktigt menyval");  			Console.WriteLine ();  			Console.ResetColor ();  		}  	}  	catch {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  	ContinueOnKeyPressed ();  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	if (choise == 0) {  		break;  	}  	if (choise > 0 && choise <= directions.Count) {  		bool moving = true;  		do {  			Console.WriteLine ();  			Console.WriteLine (" 0. Avsluta.");  			if (choise != 1) {  				Console.WriteLine (" 1. Flytta upp.");  			}  			if (choise != directions.Count) {  				Console.WriteLine (" 2. Flytta ner.");  				Console.Write ("Ange menyval [0-2]: ");  			}  			else {  				Console.Write ("Ange menyval [0-1]: ");  			}  			string subChoise = Console.ReadLine ();  			if (subChoise == "0") {  				moving = false;  				break;  			}  			else if (subChoise == "1" && choise != 1) {  				moving = false;  				directions.Insert (choise - 2' directions [choise - 1]);  				directions.RemoveAt (choise);  				break;  			}  			else if (subChoise == "2" && choise != directions.Count) {  				moving = false;  				directions.Insert (choise + 1' directions [choise - 1]);  				directions.RemoveAt (choise - 1);  				break;  			}  		}  		while (moving);  	}  	else {  		Console.BackgroundColor = ConsoleColor.DarkRed;  		Console.WriteLine ();  		Console.WriteLine ("Felaktigt menyval");  		Console.WriteLine ();  		Console.ResetColor ();  	}  }  catch {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: if (choise > 0 && choise <= directions.Count) {  	bool moving = true;  	do {  		Console.WriteLine ();  		Console.WriteLine (" 0. Avsluta.");  		if (choise != 1) {  			Console.WriteLine (" 1. Flytta upp.");  		}  		if (choise != directions.Count) {  			Console.WriteLine (" 2. Flytta ner.");  			Console.Write ("Ange menyval [0-2]: ");  		}  		else {  			Console.Write ("Ange menyval [0-1]: ");  		}  		string subChoise = Console.ReadLine ();  		if (subChoise == "0") {  			moving = false;  			break;  		}  		else if (subChoise == "1" && choise != 1) {  			moving = false;  			directions.Insert (choise - 2' directions [choise - 1]);  			directions.RemoveAt (choise);  			break;  		}  		else if (subChoise == "2" && choise != directions.Count) {  			moving = false;  			directions.Insert (choise + 1' directions [choise - 1]);  			directions.RemoveAt (choise - 1);  			break;  		}  	}  	while (moving);  }  else {  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: do {  	Console.WriteLine ();  	Console.WriteLine (" 0. Avsluta.");  	if (choise != 1) {  		Console.WriteLine (" 1. Flytta upp.");  	}  	if (choise != directions.Count) {  		Console.WriteLine (" 2. Flytta ner.");  		Console.Write ("Ange menyval [0-2]: ");  	}  	else {  		Console.Write ("Ange menyval [0-1]: ");  	}  	string subChoise = Console.ReadLine ();  	if (subChoise == "0") {  		moving = false;  		break;  	}  	else if (subChoise == "1" && choise != 1) {  		moving = false;  		directions.Insert (choise - 2' directions [choise - 1]);  		directions.RemoveAt (choise);  		break;  	}  	else if (subChoise == "2" && choise != directions.Count) {  		moving = false;  		directions.Insert (choise + 1' directions [choise - 1]);  		directions.RemoveAt (choise - 1);  		break;  	}  }  while (moving);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: if (subChoise == "0") {  	moving = false;  	break;  }  else if (subChoise == "1" && choise != 1) {  	moving = false;  	directions.Insert (choise - 2' directions [choise - 1]);  	directions.RemoveAt (choise);  	break;  }  else if (subChoise == "2" && choise != directions.Count) {  	moving = false;  	directions.Insert (choise + 1' directions [choise - 1]);  	directions.RemoveAt (choise - 1);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: if (subChoise == "1" && choise != 1) {  	moving = false;  	directions.Insert (choise - 2' directions [choise - 1]);  	directions.RemoveAt (choise);  	break;  }  else if (subChoise == "2" && choise != directions.Count) {  	moving = false;  	directions.Insert (choise + 1' directions [choise - 1]);  	directions.RemoveAt (choise - 1);  	break;  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,MoveDirection,The following statement contains a magic number: directions.Insert (choise - 2' directions [choise - 1]);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,GetMenuChoise,The following statement contains a magic number: do {  	Console.Clear ();  	RecipeView.RenderHeader ("       Receptsamling med fil       ");  	Console.WriteLine (" - Arkiv --------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 0. Avsluta.");  	Console.WriteLine (" 1. Öppna textfil med recept.");  	Console.WriteLine (" 2. Spara recept på textfil.");  	Console.WriteLine ();  	Console.WriteLine (" - Redigera -----------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 3. Ta bort recept.");  	Console.WriteLine ();  	Console.WriteLine (" - Visa ---------------------------------");  	Console.WriteLine ();  	Console.WriteLine (" 4. Visa recept.");  	Console.WriteLine (" 5. Visa alla recept.");  	Console.WriteLine ();  	Console.WriteLine (" - Extrauppgifter -----------------------");  	Console.WriteLine ();  	Console.WriteLine (" 6. Lägg till nytt recept.");  	Console.WriteLine (" 7. Hitta recept med ingredienser.");  	Console.WriteLine (" 8. Ändra recept.");  	Console.WriteLine ();  	Console.WriteLine ("\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550");  	Console.WriteLine ();  	Console.Write ("Ange menyval [0-8]: ");  	try {  		int choise = int.Parse (Console.ReadLine ());  		if (choise >= 0 && choise <= 8) {  			return choise;  		}  	}  	catch {  	}  	Console.BackgroundColor = ConsoleColor.DarkRed;  	Console.WriteLine ();  	Console.WriteLine ("Felaktigt menyval");  	Console.WriteLine ();  	Console.ResetColor ();  	ContinueOnKeyPressed ();  }  while (true);  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,GetMenuChoise,The following statement contains a magic number: try {  	int choise = int.Parse (Console.ReadLine ());  	if (choise >= 0 && choise <= 8) {  		return choise;  	}  }  catch {  }  
Magic Number,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,GetMenuChoise,The following statement contains a magic number: if (choise >= 0 && choise <= 8) {  	return choise;  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: foreach (string line in lines) {  	if (String.IsNullOrWhiteSpace (line)) {  		continue;  	}  	else if (line == "[Recept]") {  		status = RecipeReadStatus.New;  		continue;  	}  	else if (line == "[Ingredienser]") {  		status = RecipeReadStatus.Ingredient;  		continue;  	}  	else if (line == "[Instruktioner]") {  		status = RecipeReadStatus.Direction;  		continue;  	}  	try {  		switch (status) {  		case RecipeReadStatus.New:  			recipe = new Recipe (line);  			recepies.Add (recipe);  			break;  		case RecipeReadStatus.Ingredient:  			Ingredient i = new Ingredient ();  			string[] parts = line.Split (';');  			if (parts.Length != 3) {  				throw new Exception ("bad file format");  			}  			i.Amount = parts [0];  			i.Measure = parts [1];  			i.Name = parts [2];  			recipe.Add (i);  			break;  		case RecipeReadStatus.Direction:  			recipe.Add (line);  			break;  		default:  			throw new Exception ("bad file format");  		}  	}  	catch (NullReferenceException) {  		throw new Exception ("bad file format");  	}  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: foreach (string line in lines) {  	if (String.IsNullOrWhiteSpace (line)) {  		continue;  	}  	else if (line == "[Recept]") {  		status = RecipeReadStatus.New;  		continue;  	}  	else if (line == "[Ingredienser]") {  		status = RecipeReadStatus.Ingredient;  		continue;  	}  	else if (line == "[Instruktioner]") {  		status = RecipeReadStatus.Direction;  		continue;  	}  	try {  		switch (status) {  		case RecipeReadStatus.New:  			recipe = new Recipe (line);  			recepies.Add (recipe);  			break;  		case RecipeReadStatus.Ingredient:  			Ingredient i = new Ingredient ();  			string[] parts = line.Split (';');  			if (parts.Length != 3) {  				throw new Exception ("bad file format");  			}  			i.Amount = parts [0];  			i.Measure = parts [1];  			i.Name = parts [2];  			recipe.Add (i);  			break;  		case RecipeReadStatus.Direction:  			recipe.Add (line);  			break;  		default:  			throw new Exception ("bad file format");  		}  	}  	catch (NullReferenceException) {  		throw new Exception ("bad file format");  	}  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: try {  	switch (status) {  	case RecipeReadStatus.New:  		recipe = new Recipe (line);  		recepies.Add (recipe);  		break;  	case RecipeReadStatus.Ingredient:  		Ingredient i = new Ingredient ();  		string[] parts = line.Split (';');  		if (parts.Length != 3) {  			throw new Exception ("bad file format");  		}  		i.Amount = parts [0];  		i.Measure = parts [1];  		i.Name = parts [2];  		recipe.Add (i);  		break;  	case RecipeReadStatus.Direction:  		recipe.Add (line);  		break;  	default:  		throw new Exception ("bad file format");  	}  }  catch (NullReferenceException) {  	throw new Exception ("bad file format");  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: try {  	switch (status) {  	case RecipeReadStatus.New:  		recipe = new Recipe (line);  		recepies.Add (recipe);  		break;  	case RecipeReadStatus.Ingredient:  		Ingredient i = new Ingredient ();  		string[] parts = line.Split (';');  		if (parts.Length != 3) {  			throw new Exception ("bad file format");  		}  		i.Amount = parts [0];  		i.Measure = parts [1];  		i.Name = parts [2];  		recipe.Add (i);  		break;  	case RecipeReadStatus.Direction:  		recipe.Add (line);  		break;  	default:  		throw new Exception ("bad file format");  	}  }  catch (NullReferenceException) {  	throw new Exception ("bad file format");  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: switch (status) {  case RecipeReadStatus.New:  	recipe = new Recipe (line);  	recepies.Add (recipe);  	break;  case RecipeReadStatus.Ingredient:  	Ingredient i = new Ingredient ();  	string[] parts = line.Split (';');  	if (parts.Length != 3) {  		throw new Exception ("bad file format");  	}  	i.Amount = parts [0];  	i.Measure = parts [1];  	i.Name = parts [2];  	recipe.Add (i);  	break;  case RecipeReadStatus.Direction:  	recipe.Add (line);  	break;  default:  	throw new Exception ("bad file format");  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: switch (status) {  case RecipeReadStatus.New:  	recipe = new Recipe (line);  	recepies.Add (recipe);  	break;  case RecipeReadStatus.Ingredient:  	Ingredient i = new Ingredient ();  	string[] parts = line.Split (';');  	if (parts.Length != 3) {  		throw new Exception ("bad file format");  	}  	i.Amount = parts [0];  	i.Measure = parts [1];  	i.Name = parts [2];  	recipe.Add (i);  	break;  case RecipeReadStatus.Direction:  	recipe.Add (line);  	break;  default:  	throw new Exception ("bad file format");  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: if (parts.Length != 3) {  	throw new Exception ("bad file format");  }  
Magic Number,_1DV402.S3.L1,RecipeRepository,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\RecipeRepository.cs,Load,The following statement contains a magic number: i.Name = parts [2];  
Missing Default,_1DV402.S3.L1,Program,C:\repos\re222dv_1DV402-C-sharp\1DV402.S3.L1\Program.cs,Main,The following switch statement is missing a default case: switch (GetMenuChoise ()) {  case 0:  	running = false;  	break;  case 1:  	recipes.AddRange (LoadRecepies ());  	break;  case 2:  	SaveRecipes (recipes);  	break;  case 3:  	DeleteRecipe (recipes);  	break;  case 4:  	ViewRecipe (recipes);  	break;  case 5:  	ViewRecipe (recipes' true);  	break;  case 6:  	Recipe recipe = CreateRecipe ();  	if (recipe != null) {  		recipes.Add (recipe);  	}  	break;  case 7:  	FindRecipe (recipes);  	break;  case 8:  	ModifyRecipe (recipes);  	break;  }  
