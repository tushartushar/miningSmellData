Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,WriteXml,Cyclomatic complexity of the method is 11
Complex Method,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,ReadXml,Cyclomatic complexity of the method is 8
Long Statement,BusinessObjects,BusinessObjectBase,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObjectBase.cs,GetBrokenRules,The length of the statement  "			//Debug.WriteLine(DateTime.Now.ToLongTimeString() + ": Validating the rule: '" + r.ToString() + "' on object '" + this.ToString() + "'. Result = " + ((isRuleBroken == false) ? "Valid" : "Broken")); " is 197.
Long Statement,BusinessObjects,BusinessObjectBase,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObjectBase.cs,IsListOfT,The length of the statement  "	return type.IsGenericType && typeof(List<>).IsAssignableFrom (type.GetGenericTypeDefinition ()) || type.GetInterfaces ().Any (x => x.IsGenericType && x.GetGenericTypeDefinition () == typeof(List<>)); " is 199.
Long Statement,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,ToJson,The length of the statement  "	var json = JsonConvert.SerializeObject (this' (jsonOptions == JsonOptions.Indented) ? Formatting.Indented : Formatting.None' new JsonSerializerSettings { " is 153.
Long Statement,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,WriteXml,The length of the statement  "		if (prop.PropertyType.IsGenericType && tList.IsAssignableFrom (propertyType.GetGenericTypeDefinition ()) || propertyType.GetInterfaces ().Any (x => x.IsGenericType && x.GetGenericTypeDefinition () == tList)) { " is 209.
Long Statement,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,WriteXml,The length of the statement  "		if (propertyValue is DateTime && XmlOptions.DateTimeFormat != null && !Attribute.IsDefined (prop' typeof(IgnoreXmlDateFormat))) { " is 129.
Long Statement,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,WriteXml,The length of the statement  "			w.WriteElementString (prop.Name' ((decimal)propertyValue).ToString (XmlOptions.DecimalFormat' CultureInfo.InvariantCulture)); " is 125.
Long Statement,BusinessObjects.Validators,XorRequiredValidator,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\Validators\XorRequiredValidator.cs,Validate,The length of the statement  "	var cnt = Properties.Select (prop => GetPropertyValue (businessObject' prop)).Count (v => v != null && (string)v != string.Empty); " is 130.
Complex Conditional,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,WriteXml,The conditional expression  "prop.PropertyType.IsGenericType && tList.IsAssignableFrom (propertyType.GetGenericTypeDefinition ()) || propertyType.GetInterfaces ().Any (x => x.IsGenericType && x.GetGenericTypeDefinition () == tList)"  is complex.
Virtual Method Call from Constructor,BusinessObjects,BusinessObject,C:\repos\FatturaElettronicaPA_BusinessObjects\BusinessObjects\BusinessObject.cs,BusinessObject,The constructor "BusinessObject" calls a virtual method "ReadXml".
