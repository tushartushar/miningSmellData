Implementation smell,Namespace,Class,File,Method,Description
Long Method,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ResolveInternal,The method has 107 lines of code.
Complex Method,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,Cyclomatic complexity of the method is 10
Complex Method,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,Cyclomatic complexity of the method is 10
Complex Method,OpenUO.Core.Patterns,ExecutionChainBase<T>,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\Chaining\ExecutionChainBase.cs,ComputeChainSequence,Cyclomatic complexity of the method is 8
Complex Method,OpenUO.Core.Patterns,GenericMethodCacheKey,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,CanResolveInternal,Cyclomatic complexity of the method is 13
Complex Method,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ResolveInternal,Cyclomatic complexity of the method is 12
Complex Method,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,GetMethodInvoker,Cyclomatic complexity of the method is 11
Complex Method,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,Cyclomatic complexity of the method is 11
Complex Method,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,GetMethodInvoker4Set,Cyclomatic complexity of the method is 11
Complex Method,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,Cyclomatic complexity of the method is 11
Long Parameter List,OpenUO.Core.IO,BufferPool,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\BufferPool.cs,GetInfo,The method has 6 parameters. Parameters: name' freeCount' initialCapacity' currentCapacity' bufferSize' misses
Long Parameter List,OpenUO.Core.IO,ZlibCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,Pack,The method has 5 parameters. Parameters: dest' destLength' source' sourceLength' quality
Long Parameter List,OpenUO.Core.IO,ICompressor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,Compress,The method has 5 parameters. Parameters: dest' destLength' source' sourceLength' quality
Long Parameter List,OpenUO.Core.IO,Compressor32,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,Compress,The method has 5 parameters. Parameters: dest' destLength' source' sourceLength' quality
Long Parameter List,OpenUO.Core.IO,Compressor32,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,compress2,The method has 5 parameters. Parameters: dest' destLength' source' sourceLength' quality
Long Parameter List,OpenUO.Core.IO,Compressor64,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,Compress,The method has 5 parameters. Parameters: dest' destLength' source' sourceLength' quality
Long Parameter List,OpenUO.Core.IO,Compressor64,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,compress2,The method has 5 parameters. Parameters: dest' destLength' source' sourceLength' quality
Long Parameter List,Framework,NativeMethods,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\NativeMethods.cs,CallWindowProc,The method has 5 parameters. Parameters: lpPrevWndFunc' hWnd' Msg' wParam' lParam
Long Parameter List,Framework,NativeMethods,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\NativeMethods.cs,MultiByteToWideChar,The method has 6 parameters. Parameters: CodePage' dwFlags' lpMultiByteStr' cchMultiByte' lpWideCharStr' cchWideChar
Long Parameter List,OpenUO.Core.Patterns,TypeExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,GetGenericMethod,The method has 5 parameters. Parameters: sourceType' bindingFlags' methodName' genericTypes' parameterTypes
Long Parameter List,OpenUO.Core.Patterns,TypeExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,GetMethod,The method has 5 parameters. Parameters: sourceType' bindingFlags' methodName' genericTypes' parameterTypes
Long Parameter List,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,TryResolve,The method has 5 parameters. Parameters: resolveType' name' parameters' options' resolvedType
Long Parameter List,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ConstructType,The method has 5 parameters. Parameters: requestedType' implementationType' constructor' parameters' options
Long Parameter List,OpenUO.Core.Patterns,IContainer,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\IContainer.cs,TryResolve,The method has 5 parameters. Parameters: resolveType' name' parameters' options' resolvedType
Long Identifier,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegisterInternal,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,IContainer,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\IContainer.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,IContainer,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\IContainer.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,IContainer,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\IContainer.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Identifier,OpenUO.Core.Patterns,IContainer,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\IContainer.cs,AutoRegister,The length of the parameter ignoreDuplicateImplementations is 30.
Long Statement,OpenUO.Core.Collections,SafeDictionary<TKey;TValue>,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Collections\SafeDictionary.cs,Dispose,The length of the statement  "                    IEnumerable<IDisposable> disposableItems = _dictionary.Values.Where(o => o is IDisposable).Cast<IDisposable>().ToArray(); " is 121.
Long Statement,OpenUO.Core.Patterns,ExecutionChainBase<T>,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\Chaining\ExecutionChainBase.cs,ComputeChainSequence,The length of the statement  "                                "Cannot execute chain '{0}' because step '{1}' has a mandatory dependency on step '{2}' and '{2}' cannot be found in the {0} chain."' " is 133.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(AppDomain.CurrentDomain.GetAssemblies().Where(a => !IsIgnoredAssembly(a))' true' registrationPredicate); " is 125.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(AppDomain.CurrentDomain.GetAssemblies().Where(a => !IsIgnoredAssembly(a))' ignoreDuplicateImplementations' null); " is 134.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the statement  "                AppDomain.CurrentDomain.GetAssemblies().Where(a => !IsIgnoredAssembly(a))' ignoreDuplicateImplementations' registrationPredicate); " is 130.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegister,The length of the statement  "            AutoRegisterInternal(new Assembly[] { this.GetType().Assembly }' ignoreDuplicateImplementations' registrationPredicate); " is 120.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,Register,The length of the statement  "            return RegisterInternal(registerType' string.Empty' new InstanceFactory(registerType' registerImplementation' instance)); " is 121.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,Resolve,The length of the statement  "            return ResolveInternal(new TypeRegistration(resolveType' name)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 121.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,CanResolve,The length of the statement  "            return CanResolveInternal(new TypeRegistration(resolveType' name)' NamedParameterOverloads.Default' ResolveOptions.Default); " is 124.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,CanResolveInternal,The length of the statement  "            if (!String.IsNullOrEmpty(name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.AttemptUnnamedResolution) " is 130.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ResolveInternal,The length of the statement  "            if (!String.IsNullOrEmpty(registration.Name) && options.NamedResolutionFailureAction == NamedResolutionFailureActions.Fail) " is 123.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ResolveInternal,The length of the statement  "                (registration.Type.IsGenericType && options.UnregisteredResolutionAction == UnregisteredResolutionActions.GenericsOnly)) " is 120.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ConstructType,The length of the statement  "                constructor = GetBestConstructor(typeToConstruct' parameters' options) ?? GetTypeConstructors(typeToConstruct).LastOrDefault(); " is 127.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,BuildUpInternal,The length of the statement  "                            input' ResolveInternal(new TypeRegistration(property.PropertyType)' NamedParameterOverloads.Default' resolveOptions)' null); " is 124.
Long Statement,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,ResolveAllInternal,The length of the statement  "            return registrations.Select(registration => ResolveInternal(registration' NamedParameterOverloads.Default' ResolveOptions.Default)); " is 132.
Long Statement,OpenUO.Core.Patterns,DelegateFactory,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,SetConstructor,The length of the statement  "                throw new IoCConstructorResolutionException("Constructor selection is not possible for delegate factory registrations"); " is 120.
Long Statement,OpenUO.Core.Patterns,WeakDelegateFactory,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,SetConstructor,The length of the statement  "                throw new IoCConstructorResolutionException("Constructor selection is not possible for delegate factory registrations"); " is 120.
Long Statement,OpenUO.Core.Patterns,InstanceFactory,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,SetConstructor,The length of the statement  "                throw new IoCConstructorResolutionException("Constructor selection is not possible for instance factory registrations"); " is 120.
Long Statement,OpenUO.Core.Patterns,WeakInstanceFactory,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,SetConstructor,The length of the statement  "                throw new IoCConstructorResolutionException("Constructor selection is not possible for instance factory registrations"); " is 120.
Long Statement,OpenUO.Core.Reflection,BaseFieldAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseFieldAccessor.cs,SetFieldInvoker,The length of the statement  "                return (FieldFastSetInvokeHandler<TargetType' FieldType>) dm.CreateDelegate(typeof (FieldFastSetInvokeHandler<TargetType' FieldType>)); " is 135.
Empty Catch Block,OpenUO.Core,ConsoleManager,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\ConsoleManager.cs,PushColor,The method has an empty catch block.
Empty Catch Block,OpenUO.Core,ConsoleManager,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\ConsoleManager.cs,PopColor,The method has an empty catch block.
Empty Catch Block,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegisterInternal,The method has an empty catch block.
Empty Catch Block,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,AutoRegisterInternal,The method has an empty catch block.
Empty Catch Block,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,BuildUpInternal,The method has an empty catch block.
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var whole = length >> 4;
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var bytes = new StringBuilder(49);
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var chars = new StringBuilder(16);
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j != 7
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j < 16
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var bytes = new StringBuilder(49);
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j != 7
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j < 16
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var whole = length >> 4;
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var bytes = new StringBuilder(49);
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var chars = new StringBuilder(16);
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j != 7
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j < 16
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: var bytes = new StringBuilder(49);
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j != 7
Magic Number,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The following statement contains a magic number: j < 16
Magic Number,OpenUO.Core,ProgressEventArgs,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\ProgressEventArgs.cs,ProgressEventArgs,The following statement contains a magic number: PercentComplete = (int) (((float) position/length)*100);
Magic Number,OpenUO.Core.Configuration,SettingsFile,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Configuration\SettingsFile.cs,SettingsFile,The following statement contains a magic number: _saveTimer = new Timer              {                  Interval = 300'                  AutoReset = true              };
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitCount -= 8;
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitCount >= 8
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitValue <<= (8 - (bitCount & 7));
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitValue <<= (8 - (bitCount & 7));
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitCount += (8 - (bitCount & 7));
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitCount += (8 - (bitCount & 7));
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: (bitCount & 7) != 0
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitCount -= 8;
Magic Number,OpenUO.Core.IO,HuffmanCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\HuffmanCompression.cs,Compress,The following statement contains a magic number: bitCount >= 8
Magic Number,OpenUO.Core.IO,ZlibCompression,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\IO\ZlibCompression.cs,ZlibCompression,The following statement contains a magic number: IntPtr.Size == 8
Magic Number,OpenUO.Core.Patterns,GenericMethodCacheKey,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,GenerateHashCode,The following statement contains a magic number: result = (result*397) ^ _methodName.GetHashCode();
Magic Number,OpenUO.Core.Patterns,GenericMethodCacheKey,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,GenerateHashCode,The following statement contains a magic number: result = (result*397) ^ _genericTypes[i].GetHashCode();
Magic Number,OpenUO.Core.Patterns,GenericMethodCacheKey,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,GenerateHashCode,The following statement contains a magic number: result = (result*397) ^ _parameterTypes[i].GetHashCode();
Magic Number,OpenUO.Core.Patterns,Container,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Patterns\IoC\Container.cs,GetLazyAutomaticFactoryRequest,The following statement contains a magic number: var returnType = genericArguments[2];
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: value > -129 && value < 128
Magic Number,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following statement contains a magic number: value > -129 && value < 128
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: value > -129 && value < 128
Magic Number,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following statement contains a magic number: value > -129 && value < 128
Magic Number,OpenUO.Core.Reflection,FieldAccessor<TargetType;FieldType>,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\FieldAccessor.cs,ToString,The following statement contains a magic number: return "Property Invoker : " + getMethodHandler.Method.Name.Substring(4);
Magic Number,OpenUO.Core.Reflection,PropertyAccessor<TargetType;PropertyType>,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\PropertyAccesor.cs,ToString,The following statement contains a magic number: return "Property Invoker : " + getMethodHandler.Method.Name.Substring(4);
Magic Number,OpenUO.Core.Reflection,PropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\PropertyAccesor.cs,ToString,The following statement contains a magic number: return "Property Invoker : " + getMethodHandler.Method.Name.Substring(4);
Duplicate Code,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The method contains a code clone-set at the following line numbers (starting from the method definition): ((17' 39)' (56' 78))
Duplicate Code,OpenUO.Core,StreamExtensions,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Extensions\StreamExtensions.cs,ToFormattedString,The method contains a code clone-set at the following line numbers (starting from the method definition): ((17' 39)' (56' 78))
Missing Default,OpenUO.Core.Diagnostics.Tracing.Listeners,ConsoleOutputEventListener,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Diagnostics\Listeners\ConsoleOutputEventListener.cs,OnEventWritten,The following switch statement is missing a default case: switch (e.Level)              {                  case EventLevel.Informational:                      color = ConsoleColor.White;                      break;                  case EventLevel.Warning:                      color = ConsoleColor.Yellow;                      break;                  case EventLevel.Error:                  case EventLevel.Critical:                      color = ConsoleColor.Red;                      break;              }
Missing Default,OpenUO.Core.Reflection,BaseMethodInvoker,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BaseMethodInvoker.cs,EmitFastInt,The following switch statement is missing a default case: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
Missing Default,OpenUO.Core.Reflection,BasePropertyAccessor,D:\research\architectureSmells\repos\fdsprod_OpenUO\OpenUO.Core.Net45\Reflection\BasePropertyAccessor.cs,EmitFastInt,The following switch statement is missing a default case: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      return;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      return;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      return;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      return;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      return;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      return;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      return;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      return;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      return;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      return;              }
