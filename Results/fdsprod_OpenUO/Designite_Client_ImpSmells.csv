Implementation smell,Namespace,Class,File,Method,Description
Long Method,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The method has 111 lines of code.
Complex Method,Client.Graphics,Buffer<DataType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Buffer.cs,AddDirtyRange,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,Element,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\Element.cs,Render,Cyclomatic complexity of the method is 13
Complex Method,Client.Graphics,FrustumCull,C:\repos\fdsprod_OpenUO\Client\Graphics\FrustrumCull.cs,BoxIntersectsFrustum,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,FrustumCull,C:\repos\fdsprod_OpenUO\Client\Graphics\FrustrumCull.cs,AABBIntersectsFrustum,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,GetDeclaration,Cyclomatic complexity of the method is 10
Complex Method,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,DetermineUsage,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,ElementHash,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,CompareTo,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,AlphaBlendState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\AlphaBlendState.cs,ApplyState,Cyclomatic complexity of the method is 11
Complex Method,Client.Graphics,BitWiseTypeValidator,C:\repos\fdsprod_OpenUO\Client\Graphics\BitWiseTypeValidator.cs,Validate,Cyclomatic complexity of the method is 14
Complex Method,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,ApplyState,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,DeviceRenderState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DeviceRenderState.cs,ApplyState,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,DeviceRenderState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DeviceRenderState.cs,CompareTo,Cyclomatic complexity of the method is 11
Complex Method,Client.Graphics,StencilTestState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\StencilTestState.cs,ApplyState,Cyclomatic complexity of the method is 17
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestSphere,Cyclomatic complexity of the method is 8
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,Cyclomatic complexity of the method is 11
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,Cyclomatic complexity of the method is 11
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,Cyclomatic complexity of the method is 11
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,Cyclomatic complexity of the method is 11
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectSphere,Cyclomatic complexity of the method is 10
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectSphere,Cyclomatic complexity of the method is 10
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectWorldBox,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectWorldBox,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectWorldBox,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectWorldBox,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectWorldSphere,Cyclomatic complexity of the method is 9
Complex Method,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectWorldSphere,Cyclomatic complexity of the method is 9
Complex Method,Client.Diagnostics,PerformanceMonitor,C:\repos\fdsprod_OpenUO\Client\Diagnostics\PerformanceMonitor.cs,ToString,Cyclomatic complexity of the method is 8
Long Parameter List,Client.Graphics,Buffer<DataType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Buffer.cs,WriteBlock,The method has 6 parameters. Parameters: state' data' sourceStartIndex' writeOffsetBytes' copyElements' target
Long Parameter List,Client.Graphics,Camera3D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera3D.cs,ProjectFromCoordinate,The method has 6 parameters. Parameters: camera' is2D' screenPosition' projectDepth' position' targetSize
Long Parameter List,Client.Graphics,Implementation,C:\repos\fdsprod_OpenUO\Client\Graphics\Indices.cs,WriteBlock,The method has 6 parameters. Parameters: state' data' startIndex' start' length' target
Long Parameter List,Client.Graphics,Implementation,C:\repos\fdsprod_OpenUO\Client\Graphics\Indices.cs,WriteBlock,The method has 6 parameters. Parameters: state' data' startIndex' start' length' target
Long Parameter List,Client.Graphics,IVertices,C:\repos\fdsprod_OpenUO\Client\Graphics\Interfaces\IVertices.cs,Draw,The method has 6 parameters. Parameters: state' indices' primitiveType' primitveCount' startIndex' vertexOffset
Long Parameter List,Client.Graphics,TextureSamplerState,C:\repos\fdsprod_OpenUO\Client\Graphics\TextureSamplerState.cs,TextureSamplerState,The method has 5 parameters. Parameters: uv' min' mag' mip' maxAni
Long Parameter List,Client.Graphics,VertexElementAttribute,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexElementAttribute.cs,ExtractUsage,The method has 5 parameters. Parameters: elements' usage' index' format' offset
Long Parameter List,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The method has 6 parameters. Parameters: state' indices' primitiveType' primitveCount' startIndex' vertexOffset
Long Parameter List,Client.Graphics,Texture2D,C:\repos\fdsprod_OpenUO\Client\Graphics\Texture2D.cs,Texture2D,The method has 7 parameters. Parameters: context' width' height' levelCount' usage' format' pool
Long Parameter List,Client.Graphics,TextureBase,C:\repos\fdsprod_OpenUO\Client\Graphics\TextureBase.cs,TextureBase,The method has 7 parameters. Parameters: context' width' height' levelCount' usage' format' pool
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DeviceContext,The method has 5 parameters. Parameters: handle' backBufferWidth' backBufferHeight' fullScreen' verticalSync
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,Clear,The method has 5 parameters. Parameters: clearFlags' color' zdepth' stencil' rectangles
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,Clear,The method has 5 parameters. Parameters: clearFlags' color' zdepth' stencil' rectangles
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedPrimitive,The method has 6 parameters. Parameters: primitiveType' baseVertexIndex' minVertexIndex' numVertices' startIndex' primCount
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedUserPrimitives,The method has 7 parameters. Parameters: primitiveType' minimumVertexIndex' vertexCount' primitiveCount' indexData' indexDataFormat' vertexData
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedUserPrimitives,The method has 8 parameters. Parameters: primitiveType' startIndex' minimumVertexIndex' vertexCount' primitiveCount' indexData' indexDataFormat' vertexData
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedUserPrimitives,The method has 9 parameters. Parameters: primitiveType' startIndex' startVertex' minimumVertexIndex' vertexCount' primitiveCount' indexData' indexDataFormat' vertexData
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,ProcessVertices,The method has 6 parameters. Parameters: srcStartIndex' destIndex' vertexCount' destBufferRef' vertexDeclRef' flags
Long Parameter List,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,StretchRectangle,The method has 5 parameters. Parameters: sourceSurfaceRef' sourceRectRef' destSurfaceRef' destRectRef' filter
Long Parameter List,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,GetStackHeight,The method has 5 parameters. Parameters: worldHeight' stateHeight' cameraHeight' preCullerCount' postCullerCount
Long Parameter List,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,ValidateStackHeight,The method has 5 parameters. Parameters: worldHeight' stateHeight' cameraHeight' preCullerCount' postCullerCount
Long Parameter List,Client.Input,IInput,C:\repos\fdsprod_OpenUO\Client\Input\IInput.cs,AddBinding,The method has 6 parameters. Parameters: name' shift' control' alt' key' handler
Long Parameter List,Client.Input,IInput,C:\repos\fdsprod_OpenUO\Client\Input\IInput.cs,AddBinding,The method has 7 parameters. Parameters: name' shift' control' alt' key' beginHandler' endHandler
Long Parameter List,Client.Input,InputManager,C:\repos\fdsprod_OpenUO\Client\Input\InputManager.cs,AddBinding,The method has 6 parameters. Parameters: name' shift' control' alt' key' handler
Long Parameter List,Client.Input,InputManager,C:\repos\fdsprod_OpenUO\Client\Input\InputManager.cs,AddBinding,The method has 7 parameters. Parameters: name' shift' control' alt' key' beginHandler' endHandler
Long Parameter List,Client.Ultima,Facet,C:\repos\fdsprod_OpenUO\Client\Ultima\Facet.cs,Facet,The method has 6 parameters. Parameters: install' world' fileIndex' mapID' width' height
Long Identifier,Client,LifetimeCounters,C:\repos\fdsprod_OpenUO\Client\LifetimeCounters.cs,,The length of the parameter RenderStateDepthColourCullChanged is 33.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter PushMultiplyTranslateWorldMatrix is 32.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter PushMultiplyTranslateViewMatrix is 31.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter PushMultiplyTranslateProjectionMatrix is 37.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter DefaultCullerTestBoxPreCulledCount is 34.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter DefaultCullerTestBoxCulledCount is 31.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter DefaultCullerTestBoxPostCulledCount is 35.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter DefaultCullerTestSpherePreCulledCount is 37.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter DefaultCullerTestSphereCulledCount is 34.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter DefaultCullerTestSpherePostCulledCount is 38.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter ShaderConstantMatrixInverseCalculateCount is 41.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter ShaderConstantMatrixValueSetCount is 33.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter ShaderConstantMatrixTransposeCalculateCount is 43.
Long Identifier,Client.Graphics,DeviceCounters,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceCounters.cs,,The length of the parameter ShaderConstantMatrixMultiplyCalculateCount is 42.
Long Statement,Client.Graphics,Buffer<DataType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Buffer.cs,AddDirtyRange,The length of the statement  "                        throw new InvalidOperationException(sourceType.Name + "<" + sourceType.GetGenericArguments()[0].Name + "> source data must implement the IList<" + sourceType.GetGenericArguments()[0].Name + "> interface to set a dirty subrange"); " is 229.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M11 = (((provider.Value.M11 * source.Value.M11) + (provider.Value.M12 * source.Value.M21)) + (provider.Value.M13 * source.Value.M31)) + (provider.Value.M14 * source.Value.M41); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M12 = (((provider.Value.M11 * source.Value.M12) + (provider.Value.M12 * source.Value.M22)) + (provider.Value.M13 * source.Value.M32)) + (provider.Value.M14 * source.Value.M42); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M13 = (((provider.Value.M11 * source.Value.M13) + (provider.Value.M12 * source.Value.M23)) + (provider.Value.M13 * source.Value.M33)) + (provider.Value.M14 * source.Value.M43); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M14 = (((provider.Value.M11 * source.Value.M14) + (provider.Value.M12 * source.Value.M24)) + (provider.Value.M13 * source.Value.M34)) + (provider.Value.M14 * source.Value.M44); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M21 = (((provider.Value.M21 * source.Value.M11) + (provider.Value.M22 * source.Value.M21)) + (provider.Value.M23 * source.Value.M31)) + (provider.Value.M24 * source.Value.M41); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M22 = (((provider.Value.M21 * source.Value.M12) + (provider.Value.M22 * source.Value.M22)) + (provider.Value.M23 * source.Value.M32)) + (provider.Value.M24 * source.Value.M42); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M23 = (((provider.Value.M21 * source.Value.M13) + (provider.Value.M22 * source.Value.M23)) + (provider.Value.M23 * source.Value.M33)) + (provider.Value.M24 * source.Value.M43); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M24 = (((provider.Value.M21 * source.Value.M14) + (provider.Value.M22 * source.Value.M24)) + (provider.Value.M23 * source.Value.M34)) + (provider.Value.M24 * source.Value.M44); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M31 = (((provider.Value.M31 * source.Value.M11) + (provider.Value.M32 * source.Value.M21)) + (provider.Value.M33 * source.Value.M31)) + (provider.Value.M34 * source.Value.M41); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M32 = (((provider.Value.M31 * source.Value.M12) + (provider.Value.M32 * source.Value.M22)) + (provider.Value.M33 * source.Value.M32)) + (provider.Value.M34 * source.Value.M42); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M33 = (((provider.Value.M31 * source.Value.M13) + (provider.Value.M32 * source.Value.M23)) + (provider.Value.M33 * source.Value.M33)) + (provider.Value.M34 * source.Value.M43); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M34 = (((provider.Value.M31 * source.Value.M14) + (provider.Value.M32 * source.Value.M24)) + (provider.Value.M33 * source.Value.M34)) + (provider.Value.M34 * source.Value.M44); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M41 = (((provider.Value.M41 * source.Value.M11) + (provider.Value.M42 * source.Value.M21)) + (provider.Value.M43 * source.Value.M31)) + (provider.Value.M44 * source.Value.M41); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M42 = (((provider.Value.M41 * source.Value.M12) + (provider.Value.M42 * source.Value.M22)) + (provider.Value.M43 * source.Value.M32)) + (provider.Value.M44 * source.Value.M42); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M43 = (((provider.Value.M41 * source.Value.M13) + (provider.Value.M42 * source.Value.M23)) + (provider.Value.M43 * source.Value.M33)) + (provider.Value.M44 * source.Value.M43); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                        Value.M44 = (((provider.Value.M41 * source.Value.M14) + (provider.Value.M42 * source.Value.M24)) + (provider.Value.M43 * source.Value.M34)) + (provider.Value.M44 * source.Value.M44); " is 182.
Long Statement,Client.Graphics,MatrixCalc,C:\repos\fdsprod_OpenUO\Client\Graphics\MatrixCalc.cs,UpdateValue,The length of the statement  "                            float num = 1f / ((((provider.Value.M11 * num39) + (provider.Value.M12 * num38)) + (provider.Value.M13 * num37)) + (provider.Value.M14 * num36)); " is 145.
Long Statement,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,SetProjection,The length of the statement  "                    throw new InvalidOperationException("Projection matix must not modify the X/Y of positions on the z-axis. A zero vector multiplication should also have an output W of zero"); " is 174.
Long Statement,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,SetProjection,The length of the statement  "                _matrix *= Matrix.Translation(1 - (_region.X + _region.Z)' (_region.Y + _region.W) - 1' 0) * Matrix.Scaling(1.0f / (_region.Z - _region.X)' 1.0f / (_region.W - _region.Y)' 1); " is 175.
Long Statement,Client.Graphics,Resource,C:\repos\fdsprod_OpenUO\Client\Graphics\Resource.cs,EnableResourceTracking,The length of the statement  "                throw new InvalidOperationException("EnableResourceTracking can only be called before any resources have been created"); " is 120.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,GetDeclaration,The length of the statement  "					mapping = new VertexElement[] { new VertexElement(0' 0' DeclarationType.Float3' DeclarationMethod.Default' DeclarationUsage.Position' 0) }; " is 139.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,GetDeclaration,The length of the statement  "					mapping = new VertexElement[] { new VertexElement(0' 0' DeclarationType.Float4' DeclarationMethod.Default' DeclarationUsage.Position' 0) }; " is 139.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,GetDeclaration,The length of the statement  "										throw new ArgumentException(string.Format("Invlaid DeclarationType ({0}) specified in VertexElementAttribute for {1}.{2}"' format' type.FullName' f.Name)); " is 155.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,GetDeclaration,The length of the statement  "										throw new ArgumentException(string.Format("DeclarationType size mismatch in {4}.{5}' {0} requires a size of {1}' specified type {2} has size {3}"' format' formatSize' f.FieldType.FullName' Marshal.SizeOf(f.FieldType)' type.FullName' f.Name)); " is 242.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,BuildFormatList,The length of the statement  "			System.Reflection.FieldInfo[] enums = typeof(DeclarationType).GetFields(System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public); " is 151.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,ValidateFormat,The length of the statement  "				throw new InvalidOperationException(string.Format("Graphics device does not support vertex element format \'{0}\'' as used in vertex structure \'{1}\'"' format' type.FullName)); " is 177.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,DetermineFormat,The length of the statement  "			throw new ArgumentException("Field (" + field.FieldType.Name + ") " + field.DeclaringType.Name + "." + field.Name + " value mapping cannot be determined. Either set the DeclarationType with a [VertexElement()] attribute' or change the declaration to a supported type."); " is 270.
Long Statement,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,DetermineUsage,The length of the statement  "			throw new ArgumentException("Field (" + field.FieldType.Name + ") " + field.DeclaringType.Name + "." + field.Name + " usage mapping cannot be determined. Either set the DeclarationUsage with a [VertexElement()] attribute' or change the field name to a known usage type."); " is 272.
Long Statement,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,CreateSingleElementVertices,The length of the statement  "            VertexElement[] elements = new VertexElement[] { new VertexElement(0' 0' format' DeclarationMethod.Default' elementUsage' (byte)index) }; " is 137.
Long Statement,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The length of the statement  "                Context.DrawIndexedPrimitive(primitiveType' 0' indices.MinIndex' (indices.MaxIndex - indices.MinIndex) + 1' 0' primitives); " is 123.
Long Statement,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The length of the statement  "                Context.DrawIndexedPrimitive(primitiveType' vertexOffset' indices.MinIndex' (indices.MaxIndex - indices.MinIndex) + 1 - vertexOffset' startIndex' primitveCount); " is 161.
Long Statement,Client.Graphics,BitWiseTypeValidator,C:\repos\fdsprod_OpenUO\Client\Graphics\BitWiseTypeValidator.cs,Validate,The length of the statement  "            System.Reflection.PropertyInfo[] props = instance.GetType().GetProperties(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance); " is 155.
Long Statement,Client.Graphics,BitWiseTypeValidator,C:\repos\fdsprod_OpenUO\Client\Graphics\BitWiseTypeValidator.cs,Validate,The length of the statement  "                    System.Reflection.FieldInfo[] enums = props[i].PropertyType.GetFields(System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public); " is 149.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,Set,The length of the statement  "                throw new InvalidOperationException("World matrix at the bottom of the stack must stay an Identity Matrix' Please use PushWorldMatrix()"); " is 138.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num16 = (((matrix.M11 * Value.M11) + (matrix.M12 * Value.M21)) + (matrix.M13 * Value.M31)) + (matrix.M14 * Value.M41); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num15 = (((matrix.M11 * Value.M12) + (matrix.M12 * Value.M22)) + (matrix.M13 * Value.M32)) + (matrix.M14 * Value.M42); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num14 = (((matrix.M11 * Value.M13) + (matrix.M12 * Value.M23)) + (matrix.M13 * Value.M33)) + (matrix.M14 * Value.M43); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num13 = (((matrix.M11 * Value.M14) + (matrix.M12 * Value.M24)) + (matrix.M13 * Value.M34)) + (matrix.M14 * Value.M44); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num12 = (((matrix.M21 * Value.M11) + (matrix.M22 * Value.M21)) + (matrix.M23 * Value.M31)) + (matrix.M24 * Value.M41); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num11 = (((matrix.M21 * Value.M12) + (matrix.M22 * Value.M22)) + (matrix.M23 * Value.M32)) + (matrix.M24 * Value.M42); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num10 = (((matrix.M21 * Value.M13) + (matrix.M22 * Value.M23)) + (matrix.M23 * Value.M33)) + (matrix.M24 * Value.M43); " is 124.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num9 = (((matrix.M21 * Value.M14) + (matrix.M22 * Value.M24)) + (matrix.M23 * Value.M34)) + (matrix.M24 * Value.M44); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num8 = (((matrix.M31 * Value.M11) + (matrix.M32 * Value.M21)) + (matrix.M33 * Value.M31)) + (matrix.M34 * Value.M41); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num7 = (((matrix.M31 * Value.M12) + (matrix.M32 * Value.M22)) + (matrix.M33 * Value.M32)) + (matrix.M34 * Value.M42); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num6 = (((matrix.M31 * Value.M13) + (matrix.M32 * Value.M23)) + (matrix.M33 * Value.M33)) + (matrix.M34 * Value.M43); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num5 = (((matrix.M31 * Value.M14) + (matrix.M32 * Value.M24)) + (matrix.M33 * Value.M34)) + (matrix.M34 * Value.M44); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num4 = (((matrix.M41 * Value.M11) + (matrix.M42 * Value.M21)) + (matrix.M43 * Value.M31)) + (matrix.M44 * Value.M41); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num3 = (((matrix.M41 * Value.M12) + (matrix.M42 * Value.M22)) + (matrix.M43 * Value.M32)) + (matrix.M44 * Value.M42); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num2 = (((matrix.M41 * Value.M13) + (matrix.M42 * Value.M23)) + (matrix.M43 * Value.M33)) + (matrix.M44 * Value.M43); " is 123.
Long Statement,Client.Graphics,WorldStackProvider,C:\repos\fdsprod_OpenUO\Client\Graphics\WorldStackProvider.cs,PushMult,The length of the statement  "                    float num = (((matrix.M41 * Value.M14) + (matrix.M42 * Value.M24)) + (matrix.M43 * Value.M34)) + (matrix.M44 * Value.M44); " is 122.
Long Statement,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,InvokeReset,The length of the statement  "                            "{0} reference still alive' if object is not managed' consider calling dispose when the device context is resetting.\n\n{0} Created at:\n{1}"' " is 142.
Long Statement,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedPrimitive,The length of the statement  "            Result result = _device.DrawIndexedPrimitive(primitiveType' baseVertexIndex' minVertexIndex' numVertices' startIndex' primCount); " is 129.
Long Statement,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedUserPrimitives,The length of the statement  "            Result result = _device.DrawIndexedUserPrimitives<S' T>(primitiveType' minimumVertexIndex' vertexCount' primitiveCount' indexData' indexDataFormat' vertexData); " is 160.
Long Statement,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedUserPrimitives,The length of the statement  "            Result result = _device.DrawIndexedUserPrimitives<S' T>(primitiveType' startIndex' minimumVertexIndex' vertexCount' primitiveCount' indexData' indexDataFormat' vertexData); " is 172.
Long Statement,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,DrawIndexedUserPrimitives,The length of the statement  "            Result result = _device.DrawIndexedUserPrimitives<S' T>(primitiveType' startIndex' startVertex' minimumVertexIndex' vertexCount' primitiveCount' indexData' indexDataFormat' vertexData); " is 185.
Long Statement,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,SetRenderTarget,The length of the statement  "                Guard.AssertIsNotGreaterThan(string.Format("Must pass no more than {0} targets"' _capabilities.SimultaneousRTCount)' _capabilities.SimultaneousRTCount' targets.Length); " is 168.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,BeginCamera,The length of the statement  "                throw new ArgumentException("When pushing a camera' a render target size must be specified if a draw target isn't currently active"); " is 133.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,InvalidCamera,The length of the statement  "            throw new ArgumentNullException("DrawState.Camera == null.\nThe operation being performed requires a _camera to be active - this usually means there isn't an active draw target.\nNOTE: Drawing may not be performed directly in the Application Draw() method - no DrawTargets are active in this method' so direct rendering cannot be performed."); " is 343.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M11 = (((localMatrix.M11 * _world.Value.M11) + (localMatrix.M12 * _world.Value.M21)) + (localMatrix.M13 * _world.Value.M31)) + (localMatrix.M14 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M12 = (((localMatrix.M11 * _world.Value.M12) + (localMatrix.M12 * _world.Value.M22)) + (localMatrix.M13 * _world.Value.M32)) + (localMatrix.M14 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M13 = (((localMatrix.M11 * _world.Value.M13) + (localMatrix.M12 * _world.Value.M23)) + (localMatrix.M13 * _world.Value.M33)) + (localMatrix.M14 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M14 = (((localMatrix.M11 * _world.Value.M14) + (localMatrix.M12 * _world.Value.M24)) + (localMatrix.M13 * _world.Value.M34)) + (localMatrix.M14 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M21 = (((localMatrix.M21 * _world.Value.M11) + (localMatrix.M22 * _world.Value.M21)) + (localMatrix.M23 * _world.Value.M31)) + (localMatrix.M24 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M22 = (((localMatrix.M21 * _world.Value.M12) + (localMatrix.M22 * _world.Value.M22)) + (localMatrix.M23 * _world.Value.M32)) + (localMatrix.M24 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M23 = (((localMatrix.M21 * _world.Value.M13) + (localMatrix.M22 * _world.Value.M23)) + (localMatrix.M23 * _world.Value.M33)) + (localMatrix.M24 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M24 = (((localMatrix.M21 * _world.Value.M14) + (localMatrix.M22 * _world.Value.M24)) + (localMatrix.M23 * _world.Value.M34)) + (localMatrix.M24 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M31 = (((localMatrix.M31 * _world.Value.M11) + (localMatrix.M32 * _world.Value.M21)) + (localMatrix.M33 * _world.Value.M31)) + (localMatrix.M34 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M32 = (((localMatrix.M31 * _world.Value.M12) + (localMatrix.M32 * _world.Value.M22)) + (localMatrix.M33 * _world.Value.M32)) + (localMatrix.M34 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M33 = (((localMatrix.M31 * _world.Value.M13) + (localMatrix.M32 * _world.Value.M23)) + (localMatrix.M33 * _world.Value.M33)) + (localMatrix.M34 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M34 = (((localMatrix.M31 * _world.Value.M14) + (localMatrix.M32 * _world.Value.M24)) + (localMatrix.M33 * _world.Value.M34)) + (localMatrix.M34 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M41 = (((localMatrix.M41 * _world.Value.M11) + (localMatrix.M42 * _world.Value.M21)) + (localMatrix.M43 * _world.Value.M31)) + (localMatrix.M44 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M42 = (((localMatrix.M41 * _world.Value.M12) + (localMatrix.M42 * _world.Value.M22)) + (localMatrix.M43 * _world.Value.M32)) + (localMatrix.M44 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M43 = (((localMatrix.M41 * _world.Value.M13) + (localMatrix.M42 * _world.Value.M23)) + (localMatrix.M43 * _world.Value.M33)) + (localMatrix.M44 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M44 = (((localMatrix.M41 * _world.Value.M14) + (localMatrix.M42 * _world.Value.M24)) + (localMatrix.M43 * _world.Value.M34)) + (localMatrix.M44 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M11 = (((localMatrix.M11 * _world.Value.M11) + (localMatrix.M12 * _world.Value.M21)) + (localMatrix.M13 * _world.Value.M31)) + (localMatrix.M14 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M12 = (((localMatrix.M11 * _world.Value.M12) + (localMatrix.M12 * _world.Value.M22)) + (localMatrix.M13 * _world.Value.M32)) + (localMatrix.M14 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M13 = (((localMatrix.M11 * _world.Value.M13) + (localMatrix.M12 * _world.Value.M23)) + (localMatrix.M13 * _world.Value.M33)) + (localMatrix.M14 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M14 = (((localMatrix.M11 * _world.Value.M14) + (localMatrix.M12 * _world.Value.M24)) + (localMatrix.M13 * _world.Value.M34)) + (localMatrix.M14 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M21 = (((localMatrix.M21 * _world.Value.M11) + (localMatrix.M22 * _world.Value.M21)) + (localMatrix.M23 * _world.Value.M31)) + (localMatrix.M24 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M22 = (((localMatrix.M21 * _world.Value.M12) + (localMatrix.M22 * _world.Value.M22)) + (localMatrix.M23 * _world.Value.M32)) + (localMatrix.M24 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M23 = (((localMatrix.M21 * _world.Value.M13) + (localMatrix.M22 * _world.Value.M23)) + (localMatrix.M23 * _world.Value.M33)) + (localMatrix.M24 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M24 = (((localMatrix.M21 * _world.Value.M14) + (localMatrix.M22 * _world.Value.M24)) + (localMatrix.M23 * _world.Value.M34)) + (localMatrix.M24 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M31 = (((localMatrix.M31 * _world.Value.M11) + (localMatrix.M32 * _world.Value.M21)) + (localMatrix.M33 * _world.Value.M31)) + (localMatrix.M34 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M32 = (((localMatrix.M31 * _world.Value.M12) + (localMatrix.M32 * _world.Value.M22)) + (localMatrix.M33 * _world.Value.M32)) + (localMatrix.M34 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M33 = (((localMatrix.M31 * _world.Value.M13) + (localMatrix.M32 * _world.Value.M23)) + (localMatrix.M33 * _world.Value.M33)) + (localMatrix.M34 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M34 = (((localMatrix.M31 * _world.Value.M14) + (localMatrix.M32 * _world.Value.M24)) + (localMatrix.M33 * _world.Value.M34)) + (localMatrix.M34 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M41 = (((localMatrix.M41 * _world.Value.M11) + (localMatrix.M42 * _world.Value.M21)) + (localMatrix.M43 * _world.Value.M31)) + (localMatrix.M44 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M42 = (((localMatrix.M41 * _world.Value.M12) + (localMatrix.M42 * _world.Value.M22)) + (localMatrix.M43 * _world.Value.M32)) + (localMatrix.M44 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M43 = (((localMatrix.M41 * _world.Value.M13) + (localMatrix.M42 * _world.Value.M23)) + (localMatrix.M43 * _world.Value.M33)) + (localMatrix.M44 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,TestBox,The length of the statement  "            matrix.M44 = (((localMatrix.M41 * _world.Value.M14) + (localMatrix.M42 * _world.Value.M24)) + (localMatrix.M43 * _world.Value.M34)) + (localMatrix.M44 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M11 = (((localMatrix.M11 * _world.Value.M11) + (localMatrix.M12 * _world.Value.M21)) + (localMatrix.M13 * _world.Value.M31)) + (localMatrix.M14 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M12 = (((localMatrix.M11 * _world.Value.M12) + (localMatrix.M12 * _world.Value.M22)) + (localMatrix.M13 * _world.Value.M32)) + (localMatrix.M14 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M13 = (((localMatrix.M11 * _world.Value.M13) + (localMatrix.M12 * _world.Value.M23)) + (localMatrix.M13 * _world.Value.M33)) + (localMatrix.M14 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M14 = (((localMatrix.M11 * _world.Value.M14) + (localMatrix.M12 * _world.Value.M24)) + (localMatrix.M13 * _world.Value.M34)) + (localMatrix.M14 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M21 = (((localMatrix.M21 * _world.Value.M11) + (localMatrix.M22 * _world.Value.M21)) + (localMatrix.M23 * _world.Value.M31)) + (localMatrix.M24 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M22 = (((localMatrix.M21 * _world.Value.M12) + (localMatrix.M22 * _world.Value.M22)) + (localMatrix.M23 * _world.Value.M32)) + (localMatrix.M24 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M23 = (((localMatrix.M21 * _world.Value.M13) + (localMatrix.M22 * _world.Value.M23)) + (localMatrix.M23 * _world.Value.M33)) + (localMatrix.M24 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M24 = (((localMatrix.M21 * _world.Value.M14) + (localMatrix.M22 * _world.Value.M24)) + (localMatrix.M23 * _world.Value.M34)) + (localMatrix.M24 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M31 = (((localMatrix.M31 * _world.Value.M11) + (localMatrix.M32 * _world.Value.M21)) + (localMatrix.M33 * _world.Value.M31)) + (localMatrix.M34 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M32 = (((localMatrix.M31 * _world.Value.M12) + (localMatrix.M32 * _world.Value.M22)) + (localMatrix.M33 * _world.Value.M32)) + (localMatrix.M34 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M33 = (((localMatrix.M31 * _world.Value.M13) + (localMatrix.M32 * _world.Value.M23)) + (localMatrix.M33 * _world.Value.M33)) + (localMatrix.M34 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M34 = (((localMatrix.M31 * _world.Value.M14) + (localMatrix.M32 * _world.Value.M24)) + (localMatrix.M33 * _world.Value.M34)) + (localMatrix.M34 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M41 = (((localMatrix.M41 * _world.Value.M11) + (localMatrix.M42 * _world.Value.M21)) + (localMatrix.M43 * _world.Value.M31)) + (localMatrix.M44 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M42 = (((localMatrix.M41 * _world.Value.M12) + (localMatrix.M42 * _world.Value.M22)) + (localMatrix.M43 * _world.Value.M32)) + (localMatrix.M44 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M43 = (((localMatrix.M41 * _world.Value.M13) + (localMatrix.M42 * _world.Value.M23)) + (localMatrix.M43 * _world.Value.M33)) + (localMatrix.M44 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M44 = (((localMatrix.M41 * _world.Value.M14) + (localMatrix.M42 * _world.Value.M24)) + (localMatrix.M43 * _world.Value.M34)) + (localMatrix.M44 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M11 = (((localMatrix.M11 * _world.Value.M11) + (localMatrix.M12 * _world.Value.M21)) + (localMatrix.M13 * _world.Value.M31)) + (localMatrix.M14 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M12 = (((localMatrix.M11 * _world.Value.M12) + (localMatrix.M12 * _world.Value.M22)) + (localMatrix.M13 * _world.Value.M32)) + (localMatrix.M14 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M13 = (((localMatrix.M11 * _world.Value.M13) + (localMatrix.M12 * _world.Value.M23)) + (localMatrix.M13 * _world.Value.M33)) + (localMatrix.M14 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M14 = (((localMatrix.M11 * _world.Value.M14) + (localMatrix.M12 * _world.Value.M24)) + (localMatrix.M13 * _world.Value.M34)) + (localMatrix.M14 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M21 = (((localMatrix.M21 * _world.Value.M11) + (localMatrix.M22 * _world.Value.M21)) + (localMatrix.M23 * _world.Value.M31)) + (localMatrix.M24 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M22 = (((localMatrix.M21 * _world.Value.M12) + (localMatrix.M22 * _world.Value.M22)) + (localMatrix.M23 * _world.Value.M32)) + (localMatrix.M24 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M23 = (((localMatrix.M21 * _world.Value.M13) + (localMatrix.M22 * _world.Value.M23)) + (localMatrix.M23 * _world.Value.M33)) + (localMatrix.M24 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M24 = (((localMatrix.M21 * _world.Value.M14) + (localMatrix.M22 * _world.Value.M24)) + (localMatrix.M23 * _world.Value.M34)) + (localMatrix.M24 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M31 = (((localMatrix.M31 * _world.Value.M11) + (localMatrix.M32 * _world.Value.M21)) + (localMatrix.M33 * _world.Value.M31)) + (localMatrix.M34 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M32 = (((localMatrix.M31 * _world.Value.M12) + (localMatrix.M32 * _world.Value.M22)) + (localMatrix.M33 * _world.Value.M32)) + (localMatrix.M34 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M33 = (((localMatrix.M31 * _world.Value.M13) + (localMatrix.M32 * _world.Value.M23)) + (localMatrix.M33 * _world.Value.M33)) + (localMatrix.M34 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M34 = (((localMatrix.M31 * _world.Value.M14) + (localMatrix.M32 * _world.Value.M24)) + (localMatrix.M33 * _world.Value.M34)) + (localMatrix.M34 * _world.Value.M44); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M41 = (((localMatrix.M41 * _world.Value.M11) + (localMatrix.M42 * _world.Value.M21)) + (localMatrix.M43 * _world.Value.M31)) + (localMatrix.M44 * _world.Value.M41); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M42 = (((localMatrix.M41 * _world.Value.M12) + (localMatrix.M42 * _world.Value.M22)) + (localMatrix.M43 * _world.Value.M32)) + (localMatrix.M44 * _world.Value.M42); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M43 = (((localMatrix.M41 * _world.Value.M13) + (localMatrix.M42 * _world.Value.M23)) + (localMatrix.M43 * _world.Value.M33)) + (localMatrix.M44 * _world.Value.M43); " is 171.
Long Statement,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,IntersectBox,The length of the statement  "            matrix.M44 = (((localMatrix.M41 * _world.Value.M14) + (localMatrix.M42 * _world.Value.M24)) + (localMatrix.M43 * _world.Value.M34)) + (localMatrix.M44 * _world.Value.M44); " is 171.
Long Statement,Client.Diagnostics,PerformanceMonitor,C:\repos\fdsprod_OpenUO\Client\Diagnostics\PerformanceMonitor.cs,StopTimer,The length of the statement  "                    throw new Exception(string.Format("Monitor Id : {0} has not started.  StartTimer must be called before StopTimer can be called."' monitorId)); " is 142.
Long Statement,Client.Diagnostics,PerformanceMonitor,C:\repos\fdsprod_OpenUO\Client\Diagnostics\PerformanceMonitor.cs,ToString,The length of the statement  "                    builder.AppendFormat("{0}: {1}{2}"' key' TimeSpan.FromSeconds(timer.TotalTime.Seconds)' timer.Active ? " Active:True" : string.Empty); " is 134.
Complex Conditional,Client.Graphics,Buffer<DataType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Buffer.cs,AddDirtyRange,The conditional expression  "data is ICollection == false || !(startIndex == 0 && count == (data as ICollection).Count && !fillEntireRange)"  is complex.
Complex Conditional,Client.Graphics,ElementCamera,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\ElementCamera.cs,BuildView,The conditional expression  "tr.X != 1 || tr.Y != 1 ||                      bl.X != 0 || bl.Y != 0"  is complex.
Complex Conditional,Client.Graphics,Indices<TIndexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Indices.cs,Indices,The conditional expression  "indexType != typeof(Int16) &&                  indexType != typeof(UInt16) &&                  indexType != typeof(Int32) &&                  indexType != typeof(UInt32)"  is complex.
Complex Conditional,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,SetProjection,The conditional expression  "_region.X != 0 || _region.Y != 0 || _region.Z != 1 || _region.W != 1"  is complex.
Complex Conditional,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,CreateSingleElementVertices,The conditional expression  "typeof(float) != typeof(TVertexType) &&                  typeof(Vector2) != typeof(TVertexType) &&                  typeof(Vector3) != typeof(TVertexType) &&                  typeof(Vector4) != typeof(TVertexType) &&                  typeof(Half2) != typeof(TVertexType) &&                  typeof(Half4) != typeof(TVertexType)"  is complex.
Complex Conditional,Client.Graphics,BitWiseTypeValidator,C:\repos\fdsprod_OpenUO\Client\Graphics\BitWiseTypeValidator.cs,Validate,The conditional expression  "value.Equals(TextureFilter.PyramidalQuad) ||                          value.Equals(TextureFilter.GaussianQuad) ||                          (value.Equals(TextureFilter.Anisotropic) && props[i].Name == "MagFilter") ||                          (value.Equals(TextureFilter.Anisotropic) && props[i].Name == "MipFilter")"  is complex.
Complex Conditional,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,ValidateStackHeight,The conditional expression  "_world._top != worldHeight ||                  _renderStateStackIndex != stateHeight ||                  _cameraStack.Count != cameraHeight ||                  _preCullerCount != preCullerCount ||                  _postCullerCount != postCullerCount"  is complex.
Magic Number,Client,MathHelper,C:\repos\fdsprod_OpenUO\Client\MathHelper.cs,WrapAngle,The following statement contains a magic number: angle = (float)Math.IEEERemainder((double)angle' 6.2831854820251465);
Magic Number,Client,EngineModule,C:\repos\fdsprod_OpenUO\Client\EngineModule.cs,OnConfigRestoreDefaultsInvoked,The following statement contains a magic number: config.SetValue(ConfigSections.Client' ConfigKeys.GameWidth' 1024);
Magic Number,Client,EngineModule,C:\repos\fdsprod_OpenUO\Client\EngineModule.cs,OnConfigRestoreDefaultsInvoked,The following statement contains a magic number: config.SetValue(ConfigSections.Client' ConfigKeys.GameHeight' 768);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,BoundingFrustum,The following statement contains a magic number: _planes = new Plane[6];
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,BoundingFrustum,The following statement contains a magic number: _corners = new Vector3[8];
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,SetMatrix,The following statement contains a magic number: _planes[2] = top;
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,SetMatrix,The following statement contains a magic number: _planes[3] = bottom;
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,SetMatrix,The following statement contains a magic number: _planes[4] = near;
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,SetMatrix,The following statement contains a magic number: _planes[5] = far;
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRay(ref _planes[0]' ref _planes[2]' out ray);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[4]' ref ray' 0);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 3);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 3);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRay(ref _planes[3]' ref _planes[0]' out ray);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[4]' ref ray' 1);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 2);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 2);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRay(ref _planes[2]' ref _planes[1]' out ray);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[4]' ref ray' 4);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[4]' ref ray' 4);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 7);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 7);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRay(ref _planes[1]' ref _planes[3]' out ray);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[4]' ref ray' 5);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[4]' ref ray' 5);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 6);
Magic Number,Client.Graphics,BoundingFrustum,C:\repos\fdsprod_OpenUO\Client\Graphics\BoundingFrustum.cs,ComputeCorners,The following statement contains a magic number: ComputeRayIntersection(ref _planes[5]' ref ray' 6);
Magic Number,Client.Graphics,Camera3D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera3D.cs,ProjectFromCoordinate,The following statement contains a magic number: if (targetSize.X != 0)                  coordinate.X = ((screenPosition.X / targetSize.X) - 0.5f) * 2;
Magic Number,Client.Graphics,Camera3D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera3D.cs,ProjectFromCoordinate,The following statement contains a magic number: if (targetSize.Y != 0)                  coordinate.Y = ((screenPosition.Y / targetSize.Y) - 0.5f) * 2;
Magic Number,Client.Graphics,ElementCamera,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\ElementCamera.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[2] = _frustum.Left;
Magic Number,Client.Graphics,ElementCamera,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\ElementCamera.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[3] = _frustum.Right;
Magic Number,Client.Graphics,ElementCamera,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\ElementCamera.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[4] = _frustum.Bottom;
Magic Number,Client.Graphics,ElementCamera,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\ElementCamera.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[5] = _frustum.Top;
Magic Number,Client.Graphics,Element,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\Element.cs,Render,The following statement contains a magic number: if (_enabled)                  Render(state' 255);
Magic Number,Client.Graphics,Element,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\Element.cs,Render,The following statement contains a magic number: if (ClipsChildren)              {                  clearStencil = clipDepth == 255;                  clipDepth--;                    if (!_clipTest)                  {                      stencilState.Enabled = true;                      stencilState.ReferenceValue = clipDepth;                      stencilState.StencilPassOperation = StencilOperation.Replace;                  }                  else                      stencilState.StencilPassOperation = StencilOperation.Decrement;              }
Magic Number,Client.Graphics,Indices<TIndexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Indices.cs,GetIndexBuffer,The following statement contains a magic number: if (_indexBuffer == null)              {                  int size = 32;                    if (_buffer.CountKnown)                      size = _buffer.Count;                    Type indexType = BufferIndexType;                                    if (size == 0)                      throw new ArgumentException(string.Format("Indices<{0}> data size is zero"' typeof(TIndexType).Name));                    _indexBuffer = new IndexBuffer(Context' _buffer.Stride * size' Usage.WriteOnly' Pool.Managed' Is16bit);              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustum,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Near;                      frustumPlanes[1] = frustum.Far;                      frustumPlanes[2] = frustum.Left;                      frustumPlanes[3] = frustum.Right;                      frustumPlanes[4] = frustum.Bottom;                      frustumPlanes[5] = frustum.Top;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustum,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Near;                      frustumPlanes[1] = frustum.Far;                      frustumPlanes[2] = frustum.Left;                      frustumPlanes[3] = frustum.Right;                      frustumPlanes[4] = frustum.Bottom;                      frustumPlanes[5] = frustum.Top;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustum,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Near;                      frustumPlanes[1] = frustum.Far;                      frustumPlanes[2] = frustum.Left;                      frustumPlanes[3] = frustum.Right;                      frustumPlanes[4] = frustum.Bottom;                      frustumPlanes[5] = frustum.Top;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustum,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Near;                      frustumPlanes[1] = frustum.Far;                      frustumPlanes[2] = frustum.Left;                      frustumPlanes[3] = frustum.Right;                      frustumPlanes[4] = frustum.Bottom;                      frustumPlanes[5] = frustum.Top;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustumPlanes,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Far;                      frustumPlanes[1] = frustum.Left;                      frustumPlanes[2] = frustum.Right;                      frustumPlanes[3] = frustum.Bottom;                      frustumPlanes[4] = frustum.Top;                      frustumPlanes[5] = frustum.Near;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustumPlanes,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Far;                      frustumPlanes[1] = frustum.Left;                      frustumPlanes[2] = frustum.Right;                      frustumPlanes[3] = frustum.Bottom;                      frustumPlanes[4] = frustum.Top;                      frustumPlanes[5] = frustum.Near;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustumPlanes,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Far;                      frustumPlanes[1] = frustum.Left;                      frustumPlanes[2] = frustum.Right;                      frustumPlanes[3] = frustum.Bottom;                      frustumPlanes[4] = frustum.Top;                      frustumPlanes[5] = frustum.Near;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetFrustumPlanes,The following statement contains a magic number: if (frustumDirty || !_set || viewChanged)              {                  if (!_set)                  {                      SetProjection();                  }                    if (!_debugPauseCullPlaneUpdates)                  {                      Matrix m;                      Matrix.Multiply(ref viewMatrix' ref _matrix' out m);                      frustum.SetMatrix(ref m);                        frustumPlanes[0] = frustum.Far;                      frustumPlanes[1] = frustum.Left;                      frustumPlanes[2] = frustum.Right;                      frustumPlanes[3] = frustum.Bottom;                      frustumPlanes[4] = frustum.Top;                      frustumPlanes[5] = frustum.Near;                        frustumDirty = false;                  }              }
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetVerticalFovTangent,The following statement contains a magic number: return (float)Math.Tan(FieldOfView / 2);
Magic Number,Client.Graphics,Projection,C:\repos\fdsprod_OpenUO\Client\Graphics\Projection.cs,GetHorizontalFovTangent,The following statement contains a magic number: return (float)Math.Tan(FieldOfView / 2) * _aspect.GetValueOrDefault(_computedAspect);
Magic Number,Client.Graphics,VertexDeclarationBuilder,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,GetDeclaration,The following statement contains a magic number: while (index > _declarations.Length)  				Array.Resize(ref _declarations' _declarations.Length * 2);
Magic Number,Client.Graphics,ElementHash,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,ElementHash,The following statement contains a magic number: for (int i = 0; i < elements.Length; i++)  				{  					_hash ^= ((int)elements[i].Usage);  					_hash ^= ((int)elements[i].Method) << 3;  					_hash ^= ((int)elements[i].Type) << 6;  					_hash ^= ((int)elements[i].UsageIndex) << 8;  					_hash ^= ((int)elements[i].Stream) << 16;  					_hash ^= (int)elements[i].Offset;  					_hash ^= i;  				}
Magic Number,Client.Graphics,ElementHash,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,ElementHash,The following statement contains a magic number: for (int i = 0; i < elements.Length; i++)  				{  					_hash ^= ((int)elements[i].Usage);  					_hash ^= ((int)elements[i].Method) << 3;  					_hash ^= ((int)elements[i].Type) << 6;  					_hash ^= ((int)elements[i].UsageIndex) << 8;  					_hash ^= ((int)elements[i].Stream) << 16;  					_hash ^= (int)elements[i].Offset;  					_hash ^= i;  				}
Magic Number,Client.Graphics,ElementHash,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,ElementHash,The following statement contains a magic number: for (int i = 0; i < elements.Length; i++)  				{  					_hash ^= ((int)elements[i].Usage);  					_hash ^= ((int)elements[i].Method) << 3;  					_hash ^= ((int)elements[i].Type) << 6;  					_hash ^= ((int)elements[i].UsageIndex) << 8;  					_hash ^= ((int)elements[i].Stream) << 16;  					_hash ^= (int)elements[i].Offset;  					_hash ^= i;  				}
Magic Number,Client.Graphics,ElementHash,C:\repos\fdsprod_OpenUO\Client\Graphics\VertexDeclarationBuilder.cs,ElementHash,The following statement contains a magic number: for (int i = 0; i < elements.Length; i++)  				{  					_hash ^= ((int)elements[i].Usage);  					_hash ^= ((int)elements[i].Method) << 3;  					_hash ^= ((int)elements[i].Type) << 6;  					_hash ^= ((int)elements[i].UsageIndex) << 8;  					_hash ^= ((int)elements[i].Stream) << 16;  					_hash ^= (int)elements[i].Offset;  					_hash ^= i;  				}
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,CreateSingleElementVertices,The following statement contains a magic number: if (index >= 16 || index < 0)                  throw new ArgumentException("index");
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,GetVertexBuffer,The following statement contains a magic number: if (_vertexBuffer == null)              {                  int size = 32;                    if (_buffer.CountKnown)                      size = _buffer.Count;                    if (size == 0)                      throw new ArgumentException(string.Format("Vertices<{0}> data size is zero"' typeof(TVertexType).Name));                    _vertexBuffer = new VertexBuffer(Context' _buffer.Stride * size' Usage.WriteOnly' VertexFormat.None' Pool.Managed);                    if ((_usage & Usage.Dynamic) != Usage.Dynamic)                      _buffer.ClearBuffer();              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: if (indices != null)                  vertexCount = indices.MaxIndex + 1;              else              {                  switch (primitiveType)                  {                      case PrimitiveType.LineStrip:                          vertexCount = primitives * 2;                          break;                      case PrimitiveType.PointList:                      case PrimitiveType.LineList:                      case PrimitiveType.TriangleList:                          vertexCount = vertices;                          break;                      case PrimitiveType.TriangleFan:                      case PrimitiveType.TriangleStrip:                          vertexCount = primitives * 3;                          break;                  }              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: if (indices != null)                  vertexCount = indices.MaxIndex + 1;              else              {                  switch (primitiveType)                  {                      case PrimitiveType.LineStrip:                          vertexCount = primitives * 2;                          break;                      case PrimitiveType.PointList:                      case PrimitiveType.LineList:                      case PrimitiveType.TriangleList:                          vertexCount = vertices;                          break;                      case PrimitiveType.TriangleFan:                      case PrimitiveType.TriangleStrip:                          vertexCount = primitives * 3;                          break;                  }              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: if (indices != null)                  vertexCount = indices.MaxIndex + 1;              else              {                  switch (primitiveType)                  {                      case PrimitiveType.LineStrip:                          vertexCount = primitives * 2;                          break;                      case PrimitiveType.PointList:                      case PrimitiveType.LineList:                      case PrimitiveType.TriangleList:                          vertexCount = vertices;                          break;                      case PrimitiveType.TriangleFan:                      case PrimitiveType.TriangleStrip:                          vertexCount = primitives * 3;                          break;                  }              }
Magic Number,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following statement contains a magic number: if (indices != null)                  vertexCount = indices.MaxIndex + 1;              else              {                  switch (primitiveType)                  {                      case PrimitiveType.LineStrip:                          vertexCount = primitives * 2;                          break;                      case PrimitiveType.PointList:                      case PrimitiveType.LineList:                      case PrimitiveType.TriangleList:                          vertexCount = vertices;                          break;                      case PrimitiveType.TriangleFan:                      case PrimitiveType.TriangleStrip:                          vertexCount = primitives * 3;                          break;                  }              }
Magic Number,Client.Graphics,BitWiseTypeValidator,C:\repos\fdsprod_OpenUO\Client\Graphics\BitWiseTypeValidator.cs,Validate,The following statement contains a magic number: for (int i = 0; i < props.Length; i++)              {                  if (!props[i].CanRead || !props[i].CanWrite)                      continue;                    System.Collections.ArrayList values = new System.Collections.ArrayList();                  if (typeof(Enum).IsAssignableFrom(props[i].PropertyType))                  {                      System.Reflection.FieldInfo[] enums = props[i].PropertyType.GetFields(System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public);                      foreach (System.Reflection.FieldInfo field in enums)                      {                          values.Add(field.GetValue(null));                      }                  }                  else                  {                      if (typeof(bool) == props[i].PropertyType)                      {                          values.AddRange(new object[] { true' false });                      }                      else                      {                          if (typeof(byte) == props[i].PropertyType)                          {                              for (int b = 0; b < 256; b++)                                  values.Add((byte)b);                          }                          else                          {                              if (typeof(int) == props[i].PropertyType)                                  continue;                              throw new ArgumentException();                          }                      }                  }                    foreach (object value in values)                  {                      props[i].SetValue(instance' value' null);                        if (value.Equals(TextureFilter.PyramidalQuad) ||                          value.Equals(TextureFilter.GaussianQuad) ||                          (value.Equals(TextureFilter.Anisotropic) && props[i].Name == "MagFilter") ||                          (value.Equals(TextureFilter.Anisotropic) && props[i].Name == "MipFilter"))                          continue;//special cases :-)                        if (props[i].GetValue(instance' null).Equals(value) == false)                          throw new ArgumentException();                        for (int p = 0; p < props.Length; p++)                      {                          if (!props[p].CanRead || !props[p].CanWrite)                              continue;                          if (p != i)                          {                              if (props[p].GetValue(instance' null).Equals(defaults[p]) == false)                                  throw new ArgumentException();                          }                      }                  }                    props[i].SetValue(instance' defaults[i]' null);              }
Magic Number,Client.Graphics,Camera2D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera2D.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[2] = _frustum.Left;
Magic Number,Client.Graphics,Camera2D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera2D.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[3] = _frustum.Right;
Magic Number,Client.Graphics,Camera2D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera2D.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[4] = _frustum.Bottom;
Magic Number,Client.Graphics,Camera2D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera2D.cs,UpdateFrustum,The following statement contains a magic number: _frustumPlanes[5] = _frustum.Top;
Magic Number,Client.Graphics,Camera2D,C:\repos\fdsprod_OpenUO\Client\Graphics\Cameras\Camera2D.cs,GetViewMatrix,The following statement contains a magic number: if (_dirty)              {                  BuildView();                    float rotation = MathHelper.ToRadians(45);                    _viewMatrix = Matrix.Translation(_position) * Matrix.RotationZ(rotation);              }
Magic Number,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,GetCullMode,The following statement contains a magic number: Cull mode = (Cull)(((((_mode >> 6) & 3) ^ 2)) + 1);
Magic Number,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,GetCullMode,The following statement contains a magic number: Cull mode = (Cull)(((((_mode >> 6) & 3) ^ 2)) + 1);
Magic Number,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,GetCullMode,The following statement contains a magic number: Cull mode = (Cull)(((((_mode >> 6) & 3) ^ 2)) + 1);
Magic Number,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,ApplyState,The following statement contains a magic number: if ((current._mode & (~63)) != (_mode & (~63)))              {  #if DEBUG                  changed = true;  #endif                  Cull cull = CullMode;                  if (cull != current.CullMode)                  {                      device.SetRenderState(RenderState.CullMode' GetCullMode(reverseCull));                      current.CullMode = cull;                  }                    FillMode fill = FillMode;                  if (fill != current.FillMode)                  {                      device.SetRenderState(RenderState.FillMode' FillMode);                      current.FillMode = fill;                  }              }
Magic Number,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,ApplyState,The following statement contains a magic number: if ((current._mode & (~63)) != (_mode & (~63)))              {  #if DEBUG                  changed = true;  #endif                  Cull cull = CullMode;                  if (cull != current.CullMode)                  {                      device.SetRenderState(RenderState.CullMode' GetCullMode(reverseCull));                      current.CullMode = cull;                  }                    FillMode fill = FillMode;                  if (fill != current.FillMode)                  {                      device.SetRenderState(RenderState.FillMode' FillMode);                      current.FillMode = fill;                  }              }
Magic Number,Client.Graphics,DeviceRenderState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DeviceRenderState.cs,GetHashCode,The following statement contains a magic number: return StencilTest._op ^ StencilTest._mode ^ AlphaBlend._mode ^ (AlphaTest._mode | (DepthColourCull._mode << 16));
Magic Number,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,CalculatePrimitiveCount,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.PointList:                      primitiveCount = indexCount;                      break;                  case PrimitiveType.LineList:                      primitiveCount = indexCount / 2;                      break;                  case PrimitiveType.TriangleList:                      primitiveCount = indexCount / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitiveCount = indexCount - 1;                      break;                  default:                      primitiveCount = 0;                      break;              }
Magic Number,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,CalculatePrimitiveCount,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.PointList:                      primitiveCount = indexCount;                      break;                  case PrimitiveType.LineList:                      primitiveCount = indexCount / 2;                      break;                  case PrimitiveType.TriangleList:                      primitiveCount = indexCount / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitiveCount = indexCount - 1;                      break;                  default:                      primitiveCount = 0;                      break;              }
Magic Number,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,CalculateIndexCount,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.PointList:                      indexCount = primitiveCount;                      break;                  case PrimitiveType.LineList:                      indexCount = primitiveCount * 2;                      break;                  case PrimitiveType.TriangleList:                      indexCount = primitiveCount * 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      indexCount = primitiveCount + 1;                      break;                  default:                      indexCount = 0;                      break;              }
Magic Number,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,CalculateIndexCount,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.PointList:                      indexCount = primitiveCount;                      break;                  case PrimitiveType.LineList:                      indexCount = primitiveCount * 2;                      break;                  case PrimitiveType.TriangleList:                      indexCount = primitiveCount * 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      indexCount = primitiveCount + 1;                      break;                  default:                      indexCount = 0;                      break;              }
Magic Number,Client.Graphics,DeviceContext,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContext.cs,CalculateVertexCount,The following statement contains a magic number: switch (primitiveType)              {                  case PrimitiveType.PointList:                  case PrimitiveType.LineList:                      vertexCount = primitiveCount;                      break;                  case PrimitiveType.TriangleList:                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      vertexCount = primitiveCount * 2;                      break;                  default:                      vertexCount = 0;                      break;              }
Magic Number,Client.Graphics,DeviceContextManager,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContextManager.cs,DeviceContextManager,The following statement contains a magic number: int width = configuration.GetValue(ConfigSections.Client' ConfigKeys.GameWidth' 1024);
Magic Number,Client.Graphics,DeviceContextManager,C:\repos\fdsprod_OpenUO\Client\Graphics\DeviceContextManager.cs,DeviceContextManager,The following statement contains a magic number: int height = configuration.GetValue(ConfigSections.Client' ConfigKeys.GameHeight' 768);
Magic Number,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,DrawState,The following statement contains a magic number: _cameraStack = new Stack<ICamera>(16);
Magic Number,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,DrawState,The following statement contains a magic number: _world = new WorldStackProvider(128' this);
Magic Number,Client.Graphics.Elements,ElementRect,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\ElementRect.cs,PreDraw,The following statement contains a magic number: if (_dirty)              {                  _vertexData[0].Position = new Vector3(0' 0' 1);                  _vertexData[1].Position = new Vector3(1' 0' 1);                  _vertexData[2].Position = new Vector3(0' 1' 1);                  _vertexData[3].Position = new Vector3(1' 1' 1);                    WriteTextureCoords(                      ref _vertexData[0].TextureCoordinate'                      ref _vertexData[1].TextureCoordinate'                       ref _vertexData[2].TextureCoordinate'                       ref _vertexData[3].TextureCoordinate);                    WriteColours(                      ref _vertexData[0].Color'                       ref _vertexData[1].Color'                      ref _vertexData[2].Color'                       ref _vertexData[3].Color);                    if (_vertices == null)                      _vertices = new Vertices<VertexPositionColorTexture>(context' _vertexData);                  else                      _vertices.SetDirty();                                    _dirty = false;              }
Magic Number,Client.Graphics.Elements,ElementRect,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\ElementRect.cs,PreDraw,The following statement contains a magic number: if (_dirty)              {                  _vertexData[0].Position = new Vector3(0' 0' 1);                  _vertexData[1].Position = new Vector3(1' 0' 1);                  _vertexData[2].Position = new Vector3(0' 1' 1);                  _vertexData[3].Position = new Vector3(1' 1' 1);                    WriteTextureCoords(                      ref _vertexData[0].TextureCoordinate'                      ref _vertexData[1].TextureCoordinate'                       ref _vertexData[2].TextureCoordinate'                       ref _vertexData[3].TextureCoordinate);                    WriteColours(                      ref _vertexData[0].Color'                       ref _vertexData[1].Color'                      ref _vertexData[2].Color'                       ref _vertexData[3].Color);                    if (_vertices == null)                      _vertices = new Vertices<VertexPositionColorTexture>(context' _vertexData);                  else                      _vertices.SetDirty();                                    _dirty = false;              }
Magic Number,Client.Graphics.Elements,ElementRect,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\ElementRect.cs,PreDraw,The following statement contains a magic number: if (_dirty)              {                  _vertexData[0].Position = new Vector3(0' 0' 1);                  _vertexData[1].Position = new Vector3(1' 0' 1);                  _vertexData[2].Position = new Vector3(0' 1' 1);                  _vertexData[3].Position = new Vector3(1' 1' 1);                    WriteTextureCoords(                      ref _vertexData[0].TextureCoordinate'                      ref _vertexData[1].TextureCoordinate'                       ref _vertexData[2].TextureCoordinate'                       ref _vertexData[3].TextureCoordinate);                    WriteColours(                      ref _vertexData[0].Color'                       ref _vertexData[1].Color'                      ref _vertexData[2].Color'                       ref _vertexData[3].Color);                    if (_vertices == null)                      _vertices = new Vertices<VertexPositionColorTexture>(context' _vertexData);                  else                      _vertices.SetDirty();                                    _dirty = false;              }
Magic Number,Client.Graphics.Elements,ElementRect,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\ElementRect.cs,PreDraw,The following statement contains a magic number: if (_dirty)              {                  _vertexData[0].Position = new Vector3(0' 0' 1);                  _vertexData[1].Position = new Vector3(1' 0' 1);                  _vertexData[2].Position = new Vector3(0' 1' 1);                  _vertexData[3].Position = new Vector3(1' 1' 1);                    WriteTextureCoords(                      ref _vertexData[0].TextureCoordinate'                      ref _vertexData[1].TextureCoordinate'                       ref _vertexData[2].TextureCoordinate'                       ref _vertexData[3].TextureCoordinate);                    WriteColours(                      ref _vertexData[0].Color'                       ref _vertexData[1].Color'                      ref _vertexData[2].Color'                       ref _vertexData[3].Color);                    if (_vertices == null)                      _vertices = new Vertices<VertexPositionColorTexture>(context' _vertexData);                  else                      _vertices.SetDirty();                                    _dirty = false;              }
Magic Number,Client.Graphics.Elements,ElementRect,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\ElementRect.cs,PreDraw,The following statement contains a magic number: if (_dirty)              {                  _vertexData[0].Position = new Vector3(0' 0' 1);                  _vertexData[1].Position = new Vector3(1' 0' 1);                  _vertexData[2].Position = new Vector3(0' 1' 1);                  _vertexData[3].Position = new Vector3(1' 1' 1);                    WriteTextureCoords(                      ref _vertexData[0].TextureCoordinate'                      ref _vertexData[1].TextureCoordinate'                       ref _vertexData[2].TextureCoordinate'                       ref _vertexData[3].TextureCoordinate);                    WriteColours(                      ref _vertexData[0].Color'                       ref _vertexData[1].Color'                      ref _vertexData[2].Color'                       ref _vertexData[3].Color);                    if (_vertices == null)                      _vertices = new Vertices<VertexPositionColorTexture>(context' _vertexData);                  else                      _vertices.SetDirty();                                    _dirty = false;              }
Magic Number,Client.Graphics.Elements,ElementRect,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\ElementRect.cs,PreDraw,The following statement contains a magic number: if (_dirty)              {                  _vertexData[0].Position = new Vector3(0' 0' 1);                  _vertexData[1].Position = new Vector3(1' 0' 1);                  _vertexData[2].Position = new Vector3(0' 1' 1);                  _vertexData[3].Position = new Vector3(1' 1' 1);                    WriteTextureCoords(                      ref _vertexData[0].TextureCoordinate'                      ref _vertexData[1].TextureCoordinate'                       ref _vertexData[2].TextureCoordinate'                       ref _vertexData[3].TextureCoordinate);                    WriteColours(                      ref _vertexData[0].Color'                       ref _vertexData[1].Color'                      ref _vertexData[2].Color'                       ref _vertexData[3].Color);                    if (_vertices == null)                      _vertices = new Vertices<VertexPositionColorTexture>(context' _vertexData);                  else                      _vertices.SetDirty();                                    _dirty = false;              }
Magic Number,Client.Components,Console,C:\repos\fdsprod_OpenUO\Client\Components\Gumps\Console\Console.cs,GetHistory,The following statement contains a magic number: if (_lines.Count > 20)                  index = _lines.Count - 20;
Magic Number,Client.Components,Console,C:\repos\fdsprod_OpenUO\Client\Components\Gumps\Console\Console.cs,GetHistory,The following statement contains a magic number: if (_lines.Count > 20)                  index = _lines.Count - 20;
Magic Number,Client.Components,Console,C:\repos\fdsprod_OpenUO\Client\Components\Gumps\Console\Console.cs,GetHistory,The following statement contains a magic number: if (_lines.Count < 20)                  count = _lines.Count;
Magic Number,Client.Testing,TestRendering,C:\repos\fdsprod_OpenUO\Client\Testing\TestRendering.cs,TestRendering,The following statement contains a magic number: _elements = new TexturedElement[250];
Magic Number,Client.Testing,TestRendering,C:\repos\fdsprod_OpenUO\Client\Testing\TestRendering.cs,TestRendering,The following statement contains a magic number: for (int i = 0; i < _elements.Length; i++)              {                  _elements[i] = new TexturedElement(new SharpDX.Vector2(50' 50));                  _elements[i].Position = new Vector2(i * 20' i * 20);              }
Magic Number,Client.Testing,TestRendering,C:\repos\fdsprod_OpenUO\Client\Testing\TestRendering.cs,TestRendering,The following statement contains a magic number: for (int i = 0; i < _elements.Length; i++)              {                  _elements[i] = new TexturedElement(new SharpDX.Vector2(50' 50));                  _elements[i].Position = new Vector2(i * 20' i * 20);              }
Magic Number,Client.Testing,TestRendering,C:\repos\fdsprod_OpenUO\Client\Testing\TestRendering.cs,TestRendering,The following statement contains a magic number: for (int i = 0; i < _elements.Length; i++)              {                  _elements[i] = new TexturedElement(new SharpDX.Vector2(50' 50));                  _elements[i].Position = new Vector2(i * 20' i * 20);              }
Magic Number,Client.Testing,TestRendering,C:\repos\fdsprod_OpenUO\Client\Testing\TestRendering.cs,TestRendering,The following statement contains a magic number: for (int i = 0; i < _elements.Length; i++)              {                  _elements[i] = new TexturedElement(new SharpDX.Vector2(50' 50));                  _elements[i].Position = new Vector2(i * 20' i * 20);              }
Magic Number,Client.Ultima,World,C:\repos\fdsprod_OpenUO\Client\Ultima\World.cs,Draw,The following statement contains a magic number: Vector2 offset = new Vector2(position.X % 8' position.Y % 8);
Magic Number,Client.Ultima,World,C:\repos\fdsprod_OpenUO\Client\Ultima\World.cs,Draw,The following statement contains a magic number: Vector2 offset = new Vector2(position.X % 8' position.Y % 8);
Magic Number,Client.Ultima,World,C:\repos\fdsprod_OpenUO\Client\Ultima\World.cs,Draw,The following statement contains a magic number: int cellNodeX = (int)overCellX / 8;
Magic Number,Client.Ultima,World,C:\repos\fdsprod_OpenUO\Client\Ultima\World.cs,Draw,The following statement contains a magic number: int cellNodeY = (int)overCellY / 8;
Magic Number,Client.Ultima,World,C:\repos\fdsprod_OpenUO\Client\Ultima\World.cs,Draw,The following statement contains a magic number: if (nodesToDraw % 2 == 0)                  nodesToDraw++;
Missing Default,Client.Graphics,Element,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\Element.cs,GetDisplayMatrix,The following switch statement is missing a default case: switch (_verticalAlignment)              {                  case VerticalAlignment.Centre:                      matrix.M42 += (scale.Y - elementSize.Y) * 0.5f;                      break;                  case VerticalAlignment.Top:                      matrix.M42 += scale.Y - elementSize.Y;                      break;              }
Missing Default,Client.Graphics,Element,C:\repos\fdsprod_OpenUO\Client\Graphics\Elements\Element.cs,GetDisplayMatrix,The following switch statement is missing a default case: switch (_horizontalAlignment)              {                  case HorizontalAlignment.Centre:                      matrix.M41 += (scale.X - elementSize.X) * 0.5f;                      break;                  case HorizontalAlignment.Right:                      matrix.M41 += scale.X - elementSize.X;                      break;              }
Missing Default,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following switch statement is missing a default case: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Missing Default,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following switch statement is missing a default case: switch (primitiveType)                  {                      case PrimitiveType.LineStrip:                          vertexCount = primitives * 2;                          break;                      case PrimitiveType.PointList:                      case PrimitiveType.LineList:                      case PrimitiveType.TriangleList:                          vertexCount = vertices;                          break;                      case PrimitiveType.TriangleFan:                      case PrimitiveType.TriangleStrip:                          vertexCount = primitives * 3;                          break;                  }
Missing Default,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following switch statement is missing a default case: switch (primitiveType)              {                  case PrimitiveType.LineList:                  case PrimitiveType.LineStrip:                      Context.PerformanceMonitor.IncreaseCounter(DeviceCounters.LinesDrawn' primitives);                      break;                  case PrimitiveType.PointList:                      Context.PerformanceMonitor.IncreaseCounter(DeviceCounters.PointsDrawn' primitives);                      break;                  case PrimitiveType.TriangleList:                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      Context.PerformanceMonitor.IncreaseCounter(DeviceCounters.TrianglesDrawn' primitives);                      break;              }
Missing Default,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following switch statement is missing a default case: switch (primitiveType)              {                  case PrimitiveType.LineList:                      primitives = vertices / 2;                      break;                  case PrimitiveType.LineStrip:                      primitives = vertices - 1;                      break;                  case PrimitiveType.PointList:                      primitives = vertices;                      break;                  case PrimitiveType.TriangleList:                      primitives = vertices / 3;                      break;                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      primitives = vertices - 2;                      break;              }
Missing Default,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following switch statement is missing a default case: switch (primitiveType)                  {                      case PrimitiveType.LineStrip:                          vertexCount = primitives * 2;                          break;                      case PrimitiveType.PointList:                      case PrimitiveType.LineList:                      case PrimitiveType.TriangleList:                          vertexCount = vertices;                          break;                      case PrimitiveType.TriangleFan:                      case PrimitiveType.TriangleStrip:                          vertexCount = primitives * 3;                          break;                  }
Missing Default,Client.Graphics,Vertices<TVertexType>,C:\repos\fdsprod_OpenUO\Client\Graphics\Vertices.cs,Draw,The following switch statement is missing a default case: switch (primitiveType)              {                  case PrimitiveType.LineList:                  case PrimitiveType.LineStrip:                      Context.PerformanceMonitor.IncreaseCounter(DeviceCounters.LinesDrawn' primitives);                      break;                  case PrimitiveType.PointList:                      Context.PerformanceMonitor.IncreaseCounter(DeviceCounters.PointsDrawn' primitives);                      break;                  case PrimitiveType.TriangleList:                  case PrimitiveType.TriangleFan:                  case PrimitiveType.TriangleStrip:                      Context.PerformanceMonitor.IncreaseCounter(DeviceCounters.TrianglesDrawn' primitives);                      break;              }
Missing Default,Client.Graphics,DepthColourCullState,C:\repos\fdsprod_OpenUO\Client\Graphics\RenderState\DepthColourCullState.cs,GetCullMode,The following switch statement is missing a default case: switch (mode)                  {                      case Cull.Clockwise:                          return Cull.Counterclockwise;                      case Cull.Counterclockwise:                          return Cull.Clockwise;                  }
Missing Default,Client.Graphics,DrawState,C:\repos\fdsprod_OpenUO\Client\Graphics\DrawState.cs,BeginCamera,The following switch statement is missing a default case: switch (_internalState.DepthColourCull.CullMode)                  {                      case Cull.Counterclockwise:                          _internalState.DepthColourCull.CullMode = Cull.Clockwise;                          break;                      case Cull.Clockwise:                          _internalState.DepthColourCull.CullMode = Cull.Counterclockwise;                          break;                  }
