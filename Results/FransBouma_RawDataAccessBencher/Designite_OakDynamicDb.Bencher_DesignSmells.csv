Design smell,Namespace,Class,File,Cause
Unnecessary Abstraction,Oak,SingleAssociation,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: 
Unutilized Abstraction,Oak,AssociationByConventionsException,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,SqlQueryLog,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Bullet.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,Bullet,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Bullet.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,Changes,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Changes.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,DynamicModelExtensions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\DynamicModels.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,HelpfulExtensions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,MassiveObjectExtensions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Duplicate Abstraction,Oak,MassiveObjectExtensions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because two or more abstractions have identical names. The abstractions with identical names are: Oak.MassiveObjectExtensions' Massive.MassiveObjectExtensions
Duplicate Abstraction,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because two or more abstractions have identical names. The abstractions with identical names are: Oak.DynamicRepository' Massive.DynamicRepository
Unutilized Abstraction,Oak,DataAccessHelpers,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Duplicate Abstraction,Oak,DataAccessHelpers,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because two or more abstractions have identical names. The abstractions with identical names are: Oak.DataAccessHelpers' Massive.DataAccessHelpers
Duplicate Abstraction,Oak,DynamicQuery,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because two or more abstractions have identical names. The abstractions with identical names are: Oak.DynamicQuery' Massive.DynamicQuery
Unnecessary Abstraction,Oak,MemoizedMethod,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Memoize.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: Name' Arguments
Unutilized Abstraction,Oak,MemoizedMethod,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Memoize.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Imperative Abstraction,Oak,Memoize,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Memoize.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: DictionaryEqual
Unutilized Abstraction,Oak,Memoize,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Memoize.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,StrongParameters,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\StrongParameters.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Oak,Validations,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Massive,MassiveObjectExtensions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Massive,DataAccessHelpers,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,Massive,DynamicQuery,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Unutilized Abstraction,System,DynamicExtensions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\ObjectExtensions.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Deficient Encapsulation,Oak,AssociationByConventions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TableCache' ColumnCache' SchemaRepository
Deficient Encapsulation,Oak,AssociationByConventions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: TableCache' ColumnCache' SchemaRepository
Deficient Encapsulation,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ConsoleLogLock
Deficient Encapsulation,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: ConsoleLogLock
Deficient Encapsulation,Massive,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ConsoleLogLock
Deficient Encapsulation,Massive,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because the class declares global (public static) fields. Following fields are declared with public static modifiers: ConsoleLogLock
Insufficient Modularization,Oak,AssociationByConventions,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 30 methods
Insufficient Modularization,Oak,DynamicModels,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\DynamicModels.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 20 public methods
Cyclically-dependent Modularization,Oak,Prototype,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Prototype' Oak.GeminiInfo
Cyclically-dependent Modularization,Oak,Prototype,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Prototype' Oak.Gemini' Oak.GeminiInfo
Cyclically-dependent Modularization,Oak,Prototype,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Prototype' Oak.GeminiInfo' Oak.Gemini
Cyclically-dependent Modularization,Oak,Prototype,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Prototype' Oak.Gemini' Oak.GeminiInfo
Insufficient Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 51 public methods
Insufficient Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 70 methods
Insufficient Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e.' WMC) is: 118
Cyclically-dependent Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Gemini' Oak.GeminiInfo
Cyclically-dependent Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Gemini' Oak.GeminiInfo' Oak.Prototype
Cyclically-dependent Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Gemini' Oak.GeminiInfo' Oak.Prototype
Cyclically-dependent Modularization,Oak,Gemini,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Gemini.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.Gemini' Oak.GeminiInfo' Oak.Prototype
Cyclically-dependent Modularization,Oak,GeminiInfo,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\GeminiInfo.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.GeminiInfo' Oak.Gemini
Cyclically-dependent Modularization,Oak,GeminiInfo,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\GeminiInfo.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: Oak.GeminiInfo' Oak.Prototype' Oak.Gemini
Insufficient Modularization,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 33 public methods
Insufficient Modularization,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 42 methods
Insufficient Modularization,Massive,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 33 public methods
Insufficient Modularization,Massive,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 42 methods
Broken Hierarchy,Oak,HasManyThrough,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Association
Broken Hierarchy,Oak,HasManyAndBelongsTo,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Association
Broken Hierarchy,Oak,Association,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Gemini
Broken Hierarchy,Oak,SingleAssociation,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Association.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Association
Broken Hierarchy,Oak,DynamicDb,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\DynamicDb.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Gemini
Broken Hierarchy,Oak,DynamicModel,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\DynamicModel.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Gemini
Missing Hierarchy,Oak,GeminiInfo,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\GeminiInfo.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: Gemini' Prototype (in method "Parse" of class "GeminiInfo").
Missing Hierarchy,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: DynamicModel' Gemini (in method "GetAttributesToSave" of class "DynamicRepository").
Broken Hierarchy,Oak,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Gemini
Broken Hierarchy,Oak,Acceptance,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Validation
Broken Hierarchy,Oak,Exclusion,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Validation
Broken Hierarchy,Oak,Format,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Validation
Broken Hierarchy,Oak,Inclusion,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Validation
Broken Hierarchy,Oak,Numericality,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Validation
Broken Hierarchy,Oak,Length,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Validation.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Validation
Missing Hierarchy,Massive,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: DynamicModel' Gemini (in method "GetAttributesToSave" of class "DynamicRepository").
Broken Hierarchy,Massive,DynamicRepository,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\Oak\Massive.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Gemini
Broken Hierarchy,OakDynamicDb.Bencher,SalesOrderHeaderDto,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\SalesOrderHeaders.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Oak.Gemini
Broken Hierarchy,OakDynamicDb.Bencher,SalesOrderHeaders,C:\repos\FransBouma_RawDataAccessBencher\OakDynamicDb.Bencher\SalesOrderHeaders.cs,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): Massive.DynamicRepository
