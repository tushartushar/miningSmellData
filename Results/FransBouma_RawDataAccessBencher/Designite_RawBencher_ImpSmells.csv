Implementation smell,Namespace,Class,File,Method,Description
Long Method,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunBencher,The method has 111 lines of code.
Long Method,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The method has 240 lines of code.
Long Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Insert,The method has 142 lines of code.
Long Method,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,The method has 182 lines of code.
Complex Method,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,Cyclomatic complexity of the method is 11
Complex Method,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,Cyclomatic complexity of the method is 11
Complex Method,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,Cyclomatic complexity of the method is 11
Complex Method,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ProfileBenchers,Cyclomatic complexity of the method is 13
Complex Method,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunBencher,Cyclomatic complexity of the method is 17
Complex Method,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,Cyclomatic complexity of the method is 43
Complex Method,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,TryInvokeMember,Cyclomatic complexity of the method is 14
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CommonConstruct,Cyclomatic complexity of the method is 15
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,AddParam,Cyclomatic complexity of the method is 12
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetAutoMapper,Cyclomatic complexity of the method is 9
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Insert,Cyclomatic complexity of the method is 16
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,IsNew,Cyclomatic complexity of the method is 10
Complex Method,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,PocoData,Cyclomatic complexity of the method is 10
Complex Method,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,Cyclomatic complexity of the method is 19
Complex Method,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetConverter,Cyclomatic complexity of the method is 9
Long Parameter List,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,BencherBase,The method has 9 parameters. Parameters: salesOrderIdRetriever' insertedIdRetriever' usesChangeTracking' usesCaching' supportsEagerLoading' supportsAsync' supportsInserts' supportsSetFetch' supportsIndividualFetch
Long Parameter List,RawBencher.Benchers,FetchOnlyBencherBase<TFetch>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\FetchOnlyBencherBase.cs,FetchOnlyBencherBase,The method has 7 parameters. Parameters: salesOrderIdRetriever' usesChangeTracking' usesCaching' supportsEagerLoading' supportsAsync' supportsSetFetch' supportsIndividualFetch
Long Parameter List,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,All,The method has 5 parameters. Parameters: where' orderBy' limit' columns' args
Long Parameter List,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,Paged,The method has 6 parameters. Parameters: where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,Paged,The method has 8 parameters. Parameters: sql' primaryKey' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,BuildPagedResult,The method has 8 parameters. Parameters: sql' primaryKeyField' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,BuildPageQueries,The method has 6 parameters. Parameters: skip' take' sql' args' sqlCount' sqlPage
Long Parameter List,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,FindSplitPoint,The method has 5 parameters. Parameters: typeThis' typeNext' sql' r' pos
Long Parameter List,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Update,The method has 5 parameters. Parameters: tableName' primaryKeyName' poco' primaryKeyValue' columns
Long Parameter List,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,The method has 6 parameters. Parameters: sql' connString' ForceDateTimesToUtc' firstColumn' countColumns' r
Long Identifier,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,,The length of the parameter _asyncEagerLoadBenchmarkResults is 31.
Long Statement,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,PerformInsertSetBenchmark,The length of the statement  "				throw new InvalidOperationException($"The func to retrieve the id of an instance of '{typeof(TInsert).FullName}' hasn't been specified' data can't be verified' exiting."); " is 171.
Long Statement,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,PerformInsertSetBenchmark,The length of the statement  "				throw new InvalidOperationException($"The method 'CreateSetForInserts' returns a set of {setToInsert.Count()} elements while {amountToInsert} were requested' exiting"); " is 168.
Long Statement,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,PerformAsyncEagerLoadBenchmark,The length of the statement  "				// Currently not working (As of .NET Core 2.1' reports 0 bytes' as this method doesn't take into account allocs on other threads) " is 129.
Long Statement,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,DeleteInserted,The length of the statement  "				throw new InvalidOperationException("Bencher supports and participates in inserts' but doesn't delete the inserted data!"); " is 123.
Long Statement,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,VerifyGraphElement,The length of the statement  "			return resultContainer.NumberOfRowsAffectedPerType.Count == 2 && resultContainer.NumberOfRowsAffectedPerType.All(kvp=>kvp.Value > 0); " is 133.
Long Statement,RawBencher.Benchers,ChainCompiledBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\ChainCompiledBencher.cs,FetchIndividual,The length of the statement  "            return DataSource.From("[Sales].[SalesOrderHeader]"' new { SalesOrderId = key }).Compile().ToObject<SalesOrderHeader>().Execute(); " is 130.
Long Statement,RawBencher.Benchers,ChainBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\ChainBencher.cs,FetchIndividual,The length of the statement  "            return DataSource.From("[Sales].[SalesOrderHeader]"' new { SalesOrderId = key }).ToObject<SalesOrderHeader>().Execute(); " is 120.
Long Statement,RawBencher.Benchers,EntityFrameworkCoreDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreDTOBencher.cs,CreateFrameworkNameImpl,The length of the statement  "			return CreateFrameworkName("Entity Framework Core v{0} (v{1}) Poco DTO Graph"' typeof(Microsoft.EntityFrameworkCore.DbContext)); " is 128.
Long Statement,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,CreateSetForInserts,The length of the statement  "								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...  " is 151.
Long Statement,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,DeleteInserted,The length of the statement  "			// the above code is terribly slow' so we'll issue a direct SQL statement using SqlClient here' it otherwise takes multiple seconds for EF to delete the 1000 entities. " is 167.
Long Statement,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The length of the statement  "					// This is the bare minimum amount of work to do with materializing this resultset: it incorporates knowledge which columns " is 123.
Long Statement,RawBencher.Benchers,RawDbDataReaderBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\RawDbDataReaderBencher.cs,MaterializeSet,The length of the statement  "				// optimization: call cancel first' this will greatly reduce the time it takes to Close the datareader as we're not interested in " is 129.
Long Statement,RawBencher.Benchers,OrmLiteBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\OrmLiteBencher.cs,FetchIndividual,The length of the statement  "				toReturn = con.SqlList<SalesOrderHeader>(this.CommandText + " WHERE SalesOrderId=@p"' new { p = key }).FirstOrDefault(); " is 120.
Long Statement,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,CreateSetForInserts,The length of the statement  "								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...  " is 151.
Long Statement,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,DeleteInserted,The length of the statement  "				adapter.DeleteEntitiesDirectly(typeof(CreditCardEntity)' new RelationPredicateBucket(CreditCardFields.CreditCardId.GreaterThan(19237))); " is 136.
Long Statement,RawBencher.Benchers,RepoDbRawSqlBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\RepoDbRawSqlBencher.cs,FetchIndividual,The length of the statement  "                return connection.ExecuteQuery<SalesOrderHeader>(CommandText + " WHERE SalesOrderId = @SalesOrderId;"' new { SalesOrderId = key }).First(); " is 139.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new HandCodedBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 128.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new HandCodedBencherUsingGetFieldValue() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 146.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new RepoDbRawSqlBencher() { ConnectionStringToUse = ConnectionString' CommandText = SqlSelectCommandText }); " is 131.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new RepoDbPocoBencher() { ConnectionStringToUse = ConnectionString' CommandText = SqlSelectCommandText }); " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new HandCodedBencherUsingBoxing() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 139.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new HandCodedBencherUsingBoxingGetValue() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 147.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new RawDbDataReaderBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 134.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			RegisteredBenchers.Add(new NPocoBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 124.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new LLBLGenProNoChangeTrackingRawSQLPocoBencher(ConnectionString) { CommandText = SqlSelectCommandText }); " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new DapperBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 125.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new ChainBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 124.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new OrmLiteBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 126.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new DataTableBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 128.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new ChainCompiledBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 132.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new PetaPocoBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 127.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "            RegisteredBenchers.Add(new PetaPocoFastBencher() { CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString }); " is 131.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,Run,The length of the statement  "			// Uncomment the line below if you want to profile a bencher. Specify the bencher instance and follow the guides on the screen. " is 127.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,DisplayHeader,The length of the statement  "			Console.WriteLine("| Client OS                      : {0} ({1}bit)"' Environment.OSVersion' Environment.Is64BitOperatingSystem ? "64" : "32"); " is 142.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,DisplayHeader,The length of the statement  "			Console.WriteLine("| CLR version                    : {0} {1}"' PlatformServices.Default.Application.RuntimeFramework.Identifier'  " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ProfileBenchers,The length of the statement  "				Console.WriteLine("Running set benchmark for bencher '{0}' before profiling to warm up constructs"' b.CreateFrameworkName()); " is 125.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ProfileBenchers,The length of the statement  "						Console.WriteLine("Running set benchmark for profile for bencher: {0}. Change tracking: {1}"' b.CreateFrameworkName()' b.UsesChangeTracking); " is 141.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ProfileBenchers,The length of the statement  "						Console.WriteLine("Running individual fetch benchmark for profile for bencher: {0}. Change tracking: {1}"' b.CreateFrameworkName()' b.UsesChangeTracking); " is 154.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ProfileBenchers,The length of the statement  "						Console.WriteLine("Running eager load fetch benchmark for profile for bencher: {0}. Change tracking: {1}"' b.CreateFrameworkName()' b.UsesChangeTracking); " is 154.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ProfileBenchers,The length of the statement  "						Console.WriteLine("Running async eager load fetch benchmark for profile for bencher: {0}. Change tracking: {1}"' b.CreateFrameworkName()' b.UsesChangeTracking); " is 160.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,InitConnectionString,The length of the statement  "				ConnectionString = string.IsNullOrEmpty(connectionStringFromConfig.ConnectionString) ? ConnectionString : connectionStringFromConfig.ConnectionString; " is 150.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,FetchKeysForIndividualFetches,The length of the statement  "				KeysForIndividualFetches = conn.Query<int>("select top {=count} SalesOrderId from AdventureWorks.Sales.SalesOrderHeader order by SalesOrderNumber"' " is 147.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunMemoryAnalysisForBencher,The length of the statement  "					// sleep is to avoid hammering the network layer on the target server. If the target server is a VM' it might stall once or twice " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunMemoryAnalysisForBencher,The length of the statement  "					// during benching' which is not what we want at it can skew the results a lot. In a very short time' a lot of queries are executed " is 131.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunMemoryAnalysisForBencher,The length of the statement  "					// on the target server (LoopAmount * IndividualKeysAmount)' which will hurt performance on VMs with very fast frameworks in some " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunBencher,The length of the statement  "						// sleep is to avoid hammering the network layer on the target server. If the target server is a VM' it might stall once or twice " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunBencher,The length of the statement  "						// during benching' which is not what we want at it can skew the results a lot. In a very short time' a lot of queries are executed " is 131.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunBencher,The length of the statement  "						// on the target server (LoopAmount * IndividualKeysAmount)' which will hurt performance on VMs with very fast frameworks in some " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,WarmupDB,The length of the statement  "			IBencher dbWarmer = new DataTableBencher() {CommandText = SqlSelectCommandText' ConnectionStringToUse = ConnectionString}; " is 122.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,DisplayBencherInfo,The length of the statement  "			Console.WriteLine("{0}. Change tracking: {1}. Caching: {2}."' bencher.CreateFrameworkName()' bencher.UsesChangeTracking' bencher.UsesCaching); " is 142.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportSetResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements fetched: {1}.\tFetch took: {2:N2}ms.\tEnumerating result took: {3:N2}ms."' DateTime.Now' result.TotalNumberOfRowsAffected'  " is 170.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportIndividualResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements fetched individually: {1}.\tTotal time: {2:N2}ms.\tTime per element: {3:N2}ms"' DateTime.Now' KeysForIndividualFetches.Count'  " is 173.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportEagerLoadResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements fetched: {1} ({2}).\tFetch took: {3:N2}ms."' DateTime.Now' result.TotalNumberOfRowsAffected'  " is 140.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportEagerLoadResult,The length of the statement  "							  string.Join(" + "' result.NumberOfRowsAffectedPerType.Select(kvp => kvp.Value).ToArray())' result.ActionTimeInMilliseconds); " is 124.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportMemoryUsageSetResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements fetched: {1}.\tFetch took: {2:N2}ms.\tAllocated bytes: {3}."' DateTime.Now' result.TotalNumberOfRowsAffected'  " is 157.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportMemoryUsageIndividualResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements fetched individually: {1}.\tTotal time: {2:N2}ms.\tAllocated bytes per element: {3}."' DateTime.Now' KeysForIndividualFetches.Count'  " is 180.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportMemoryUsageEagerLoadResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements fetched: {1} ({2}).\tFetch took: {3:N2}ms. Allocated bytes: {3}."' DateTime.Now' result.TotalNumberOfRowsAffected'  " is 162.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportMemoryUsageEagerLoadResult,The length of the statement  "							  string.Join(" + "' result.NumberOfRowsAffectedPerType.Select(kvp => kvp.Value).ToArray())' result.NumberOfBytesAllocated); " is 122.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportInsertSetResult,The length of the statement  "            Console.WriteLine("[{0:HH:mm:ss}] # of elements inserted as set: {1} (batch size: {2}).\tSet insert took: {3:N2}ms."' DateTime.Now' result.TotalNumberOfRowsAffected' " is 165.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportMemoryUsageInsertSetResult,The length of the statement  "			Console.WriteLine("[{0:HH:mm:ss}] # of elements inserted as set: {1}.\tSet insert took: {2:N2}ms.\tAllocated bytes: {3}."' DateTime.Now' result.TotalNumberOfRowsAffected'  " is 170.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				var benchersToList = RegisteredBenchers.Where(b => b.SupportsSetFetch && !b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.SetFetchMean).ToList(); " is 152.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)\tEnum: {3:N2}ms ({4:N2}ms)"' bencher.CreateFrameworkName()' bencher.SetFetchMean' " is 153.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetBenchmarks / 1024'  " is 147.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				benchersToList = RegisteredBenchers.Where(b =>b.SupportsSetFetch && b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.SetFetchMean).ToList(); " is 146.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)\tEnum: {3:N2}ms ({4:N2}ms)"' bencher.CreateFrameworkName()' bencher.SetFetchMean' " is 153.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetBenchmarks / 1024'  " is 147.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				var benchersToList = RegisteredBenchers.Where(b =>b.SupportsIndividualFetch && !b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.IndividualFetchMean).ToList(); " is 165.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nNon-change tracking individual fetches ({0} elements' {1} runs)' no caching"' IndividualKeysAmount' LoopAmount); " is 133.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms) per individual fetch"' bencher.CreateFrameworkName()' bencher.IndividualFetchMean / IndividualKeysAmount' " is 177.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryIndividualBenchmarks / 1024'  " is 154.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				benchersToList = RegisteredBenchers.Where(b => b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.IndividualFetchMean).ToList(); " is 132.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nChange tracking individual fetches ({0} elements' {1} runs)' no caching"' IndividualKeysAmount' LoopAmount); " is 129.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms) per individual fetch"' bencher.CreateFrameworkName()' bencher.IndividualFetchMean / IndividualKeysAmount' " is 177.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryIndividualBenchmarks / 1024'  " is 154.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				var benchersToList = RegisteredBenchers.Where(b => b.SupportsEagerLoading && !b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.EagerLoadFetchMean).ToList(); " is 162.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nNon-change tracking fetches' eager load fetches' 3-node split graph' 1000 root elements ({0} runs)' no caching"' LoopAmount); " is 146.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)"' bencher.CreateFrameworkName()' bencher.EagerLoadFetchMean' bencher.EagerLoadFetchSD); " is 159.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryEagerLoadBenchmarks / 1024'  " is 153.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				benchersToList = RegisteredBenchers.Where(b => b.SupportsEagerLoading && b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.EagerLoadFetchMean).ToList(); " is 157.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nChange tracking fetches' eager load fetches' 3-node split graph' 1000 root elements ({0} runs)' no caching"' LoopAmount); " is 142.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)"' bencher.CreateFrameworkName()' bencher.EagerLoadFetchMean' bencher.EagerLoadFetchSD); " is 159.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryEagerLoadBenchmarks / 1024'  " is 153.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				benchersToList = RegisteredBenchers.Where(b => b.SupportsEagerLoading && b.SupportsAsync && b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.EagerLoadFetchMean).ToList(); " is 176.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nAsync change tracking fetches' eager load fetches' 3-node split graph' 1000 root elements ({0} runs)' no caching"' LoopAmount); " is 148.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)"' bencher.CreateFrameworkName()' bencher.AsyncEagerLoadFetchMean' bencher.AsyncEagerLoadFetchSD); " is 169.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryAsyncEagerLoadBenchmarks / 1024'  " is 158.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				benchersToList = RegisteredBenchers.Where(b => b.SupportsEagerLoading && b.SupportsAsync && !b.UsesChangeTracking && !b.UsesCaching).OrderBy(b => b.EagerLoadFetchMean).ToList(); " is 177.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nAsync Non-change tracking fetches' eager load fetches' 3-node split graph' 1000 root elements ({0} runs)' no caching"' LoopAmount); " is 152.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)"' bencher.CreateFrameworkName()' bencher.AsyncEagerLoadFetchMean' bencher.AsyncEagerLoadFetchSD); " is 169.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryAsyncEagerLoadBenchmarks / 1024'  " is 158.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				var benchersToList = RegisteredBenchers.Where(b => b.UsesChangeTracking && b.UsesCaching).OrderBy(b => b.SetFetchMean).ToList(); " is 128.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)\tEnum: {3:N2}ms ({4:N2}ms)"' bencher.CreateFrameworkName()' bencher.SetFetchMean' " is 153.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetBenchmarks / 1024'  " is 147.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "				var benchersToList = RegisteredBenchers.Where(b => b.UsesChangeTracking && b.UsesCaching).OrderBy(b => b.IndividualFetchMean).ToList(); " is 135.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "					Console.WriteLine("\nChange tracking individual fetches ({0} elements' {1} runs)' caching"' IndividualKeysAmount' LoopAmount); " is 126.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms) per individual fetch"' bencher.CreateFrameworkName()' bencher.IndividualFetchMean / IndividualKeysAmount' " is 177.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryIndividualBenchmarks / 1024'  " is 154.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "                    Console.WriteLine("\nSet inserts of {0} elements in one go ({1} runs with batchsize {2})"' InsertSetSize' LoopAmount' InsertBatchSizeDefault); " is 142.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:N2}ms ({2:N2}ms)"' bencher.CreateFrameworkName()' bencher.SetInsertMean' " is 127.
Long Statement,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The length of the statement  "						Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetInsertBenchmarks / 1024'  " is 153.
Long Statement,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,Paged,The length of the statement  "			return BuildPagedResult(where: where' orderBy: orderBy' columns: columns' pageSize: pageSize' currentPage: currentPage' args: args); " is 132.
Long Statement,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,BuildPagedResult,The length of the statement  "				query = string.Format("SELECT {0} FROM (SELECT ROW_NUMBER() OVER (ORDER BY {1}) AS Row' {0} FROM ({2}) AS PagedTable {3}) AS Paged "' columns' orderBy' sql' where); " is 164.
Long Statement,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,BuildPagedResult,The length of the statement  "				query = string.Format("SELECT {0} FROM (SELECT ROW_NUMBER() OVER (ORDER BY {1}) AS Row' {0} FROM {2} {3}) AS Paged "' columns' orderBy' TableName' where); " is 154.
Long Statement,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,KeyValues,The length of the statement  "				throw new InvalidOperationException("There's no DescriptorField set - do this in your constructor to describe the text value you want to see"); " is 143.
Long Statement,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,CreateUpdateWhereCommand,The length of the statement  "				stub = where.Trim().StartsWith("where"' StringComparison.OrdinalIgnoreCase) ? "UPDATE {0} SET {1} " : "UPDATE {0} SET {1} WHERE "; " is 130.
Long Statement,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,TryInvokeMember,The length of the statement  "				throw new InvalidOperationException("Please use named arguments for this type of query - the column name' orderby' columns' etc"); " is 130.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CommonConstruct,The length of the statement  "			else if (_providerName.IndexOf("SqlServerCe"' StringComparison.InvariantCultureIgnoreCase) >= 0) _dbType = DBType.SqlServerCE; " is 126.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CommonConstruct,The length of the statement  "			else if (_providerName.IndexOf("Npgsql"' StringComparison.InvariantCultureIgnoreCase) >= 0) _dbType = DBType.PostgreSQL; " is 120.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CommonConstruct,The length of the statement  "			if (_dbType == DBType.MySql && _connectionString != null && _connectionString.IndexOf("Allow User Variables=true") >= 0) " is 120.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,ProcessParams,The length of the statement  "						throw new ArgumentOutOfRangeException(string.Format("Parameter '@{0}' specified but only {1} parameters supplied (in `{2}`)"' paramIndex' args_src.Length' _sql)); " is 162.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,ProcessParams,The length of the statement  "						throw new ArgumentException(string.Format("Parameter '@{0}' specified but none of the passed arguments have a property with this name (in '{1}')"' param' _sql)); " is 161.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,SplitSqlForPaging,The length of the statement  "				sqlCount = sql.Substring(0' g.Index) + "COUNT(" + m.Groups[1].ToString().Trim() + ") " + sql.Substring(g.Index + g.Length); " is 123.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,BuildPageQueries,The length of the statement  "				sqlPage = string.Format("SELECT * FROM (SELECT ROW_NUMBER() OVER ({0}) peta_rn' {1}) peta_paged WHERE peta_rn>@{2} AND peta_rn<=@{3}"' " is 134.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Query,The length of the statement  "					var factory = pd.GetFactory(cmd.CommandText' _sharedConnection.ConnectionString' ForceDateTimesToUtc' 0' r.FieldCount' r) as Func<IDataReader' T>; " is 146.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetAutoMapper,The length of the statement  "							throw new InvalidOperationException(string.Format("Can't auto join {0} as {1} has more than one property of type {0}"' types[i]' types[j])); " is 140.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,FindSplitPoint,The length of the statement  "				return PocoData.ForType(typeThis).GetFactory(sql' _sharedConnection.ConnectionString' ForceDateTimesToUtc' pos' r.FieldCount - pos' r); " is 135.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,FindSplitPoint,The length of the statement  "				if (usedColumns.ContainsKey(fieldName) || (!pdThis.Columns.ContainsKey(fieldName) && pdNext.Columns.ContainsKey(fieldName))) " is 124.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,FindSplitPoint,The length of the statement  "					return pdThis.GetFactory(sql' _sharedConnection.ConnectionString' ForceDateTimesToUtc' firstColumn' pos - firstColumn' r); " is 122.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,FindSplitPoint,The length of the statement  "			throw new InvalidOperationException(string.Format("Couldn't find split point between {0} and {1}"' typeThis' typeNext)); " is 120.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CreateMultiPocoFactory,The length of the statement  "			var m = new DynamicMethod("petapoco_multipoco_factory"' typeof(TRet)' new Type[] { typeof(MultiPocoFactory)' typeof(IDataReader)' typeof(object) }' typeof(MultiPocoFactory)); " is 174.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CreateMultiPocoFactory,The length of the statement  "			il.Emit(OpCodes.Callvirt' Expression.GetFuncType(types.Concat(new Type[] { typeof(TRet) }).ToArray()).GetMethod("Invoke")); " is 123.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,CreateMultiPocoFactory,The length of the statement  "			return (Func<IDataReader' object' TRet>)m.CreateDelegate(typeof(Func<IDataReader' object' TRet>)' new MultiPocoFactory() { m_Delegates = dels }); " is 145.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Exists,The length of the statement  "			return FirstOrDefault<T>(string.Format("WHERE {0}=@0"' EscapeSqlIdentifier(PocoData.ForType(typeof(T)).TableInfo.PrimaryKey))' primaryKey) != null; " is 147.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Single,The length of the statement  "			return Single<T>(string.Format("WHERE {0}=@0"' EscapeSqlIdentifier(PocoData.ForType(typeof(T)).TableInfo.PrimaryKey))' primaryKey); " is 131.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,SingleOrDefault,The length of the statement  "			return SingleOrDefault<T>(string.Format("WHERE {0}=@0"' EscapeSqlIdentifier(PocoData.ForType(typeof(T)).TableInfo.PrimaryKey))' primaryKey); " is 140.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Delete,The length of the statement  "			var sql = string.Format("DELETE FROM {0} WHERE {1}=@0"' EscapeTableName(tableName)' EscapeSqlIdentifier(primaryKeyName)); " is 121.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,IsNew,The length of the statement  "					throw new ArgumentException(string.Format("The object doesn't have a property matching the primary key column name '{0}'"' primaryKeyName)); " is 140.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,IsNew,The length of the statement  "				throw new InvalidOperationException("IsNew() and Save() are only supported on tables with auto-increment/identity primary key columns"); " is 136.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,FormatCommand,The length of the statement  "			return FormatCommand(cmd.CommandText' (from IDataParameter parameter in cmd.Parameters select parameter.Value).ToArray()); " is 122.
Long Statement,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,The length of the statement  "					var m = new DynamicMethod("petapoco_factory_" + PocoFactories.Count.ToString()' type' new Type[] { typeof(IDataReader) }' true); " is 128.
Long Statement,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,The length of the statement  "							il.Emit(OpCodes.Newobj' type.GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new Type[0]' null)); " is 140.
Long Statement,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,The length of the statement  "							var fnOnLoaded = RecurseInheritedTypes<MethodInfo>(type' (x) => x.GetMethod("OnLoaded"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new Type[0]' null)); " is 184.
Long Statement,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetConverter,The length of the statement  "				if (forceDateTimesToUtc && converter == null && srcType == typeof(DateTime) && (dstType == typeof(DateTime) || dstType == typeof(DateTime?))) " is 141.
Complex Conditional,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetFactory,The conditional expression  "valuegetter != null  											&& valuegetter.ReturnType == srcType  											&& (valuegetter.ReturnType == dstType || valuegetter.ReturnType == Nullable.GetUnderlyingType(dstType))"  is complex.
Complex Conditional,PetaPoco,PocoData,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,GetConverter,The conditional expression  "forceDateTimesToUtc && converter == null && srcType == typeof(DateTime) && (dstType == typeof(DateTime) || dstType == typeof(DateTime?))"  is complex.
Magic Number,RawBencher.Benchers,BencherBase<TFetch;TInsert>,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\BencherBase.cs,VerifyGraphElement,The following statement contains a magic number: return resultContainer.NumberOfRowsAffectedPerType.Count == 2 && resultContainer.NumberOfRowsAffectedPerType.All(kvp=>kvp.Value > 0);
Magic Number,RawBencher.Benchers,EntityFrameworkCoreDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreDTOBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh)  					   .ProjectToSalesOrderHeaderDto().ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreDTOBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh)  					   .ProjectToSalesOrderHeaderDto().ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreDTOBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in ctx.SalesOrderHeaders  							  where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  							  select soh).ProjectToSalesOrderHeaderDto().ToListAsync();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreDTOBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in ctx.SalesOrderHeaders  							  where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  							  select soh).ProjectToSalesOrderHeaderDto().ToListAsync();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh)  							.Include(x => x.SalesOrderDetails)  							.Include(x => x.Customer)  							.ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh)  							.Include(x => x.SalesOrderDetails)  							.Include(x => x.Customer)  							.ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in ctx.SalesOrderHeaders  							  where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  							  select soh)  					.Include(x=>x.SalesOrderDetails)  					.Include(x=>x.Customer)  					.ToListAsync();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in ctx.SalesOrderHeaders  							  where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  							  select soh)  					.Include(x=>x.SalesOrderDetails)  					.Include(x=>x.Customer)  					.ToListAsync();
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn.Add(new CreditCard()  							 {  								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...   								 CardType = "Vista"'  								 ExpMonth = 11'  								 ExpYear=2018'  								 ModifiedDate = DateTime.Now  							 });
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn.Add(new CreditCard()  							 {  								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...   								 CardType = "Vista"'  								 ExpMonth = 11'  								 ExpYear=2018'  								 ModifiedDate = DateTime.Now  							 });
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn.Add(new CreditCard()  							 {  								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...   								 CardType = "Vista"'  								 ExpMonth = 11'  								 ExpYear=2018'  								 ModifiedDate = DateTime.Now  							 });
Magic Number,RawBencher.Benchers,EntityFrameworkCoreNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkCoreNormalBencher.cs,FetchInserted,The following statement contains a magic number: return ctx.CreditCards.Where(c => c.CreditCardId > 19237).ToList();
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.OrderDate = (DateTime)reader.GetValue(2);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.DueDate = (DateTime)reader.GetValue(3);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: object value = reader.GetValue(4);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.Status = (byte)reader.GetValue(5);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.OnlineOrderFlag = (bool)reader.GetValue(6);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.SalesOrderNumber = (string)reader.GetValue(7);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(8);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(9);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.CustomerID = (int)reader.GetValue(10);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(11);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(12);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.BillToAddressID = (int)reader.GetValue(13);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.ShipToAddressID = (int)reader.GetValue(14);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.ShipMethodID = (int)reader.GetValue(15);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(16);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(17);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(18);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.SubTotal = (decimal)reader.GetValue(19);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.TaxAmt = (decimal)reader.GetValue(20);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.Freight = (decimal)reader.GetValue(21);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.TotalDue = (decimal)reader.GetValue(22);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: value = reader.GetValue(23);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.Rowguid = (Guid)reader.GetValue(24);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxingGetValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxingGetValue.cs,MaterializeSet,The following statement contains a magic number: soh.ModifiedDate = (DateTime)reader.GetValue(25);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.OrderDate = reader.GetFieldValue<DateTime>(2);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.DueDate = reader.GetFieldValue<DateTime>(3);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.ShipDate = reader.GetFieldValue<DateTime?>(4);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(4)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.Status = reader.GetFieldValue<byte>(5);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.OnlineOrderFlag = reader.GetFieldValue<bool>(6);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.SalesOrderNumber = reader.GetFieldValue<string>(7);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.PurchaseOrderNumber = reader.GetFieldValue<string>(8);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(8)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.AccountNumber = reader.GetFieldValue<string>(9);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(9)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.CustomerID = reader.GetFieldValue<int>(10);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.SalesPersonID = reader.GetFieldValue<int?>(11);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(11)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.TerritoryID = reader.GetFieldValue<int?>(12);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(12)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.BillToAddressID = reader.GetFieldValue<int>(13);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.ShipToAddressID = reader.GetFieldValue<int>(14);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.ShipMethodID = reader.GetFieldValue<int>(15);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.CreditCardID = reader.GetFieldValue<int?>(16);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(16)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.CreditCardApprovalCode = reader.GetFieldValue<string>(17);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(17)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.CurrencyRateID = reader.GetFieldValue<int?>(18);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(18)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.SubTotal = reader.GetFieldValue<decimal>(19);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.TaxAmt = reader.GetFieldValue<decimal>(20);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.Freight = reader.GetFieldValue<decimal>(21);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.TotalDue = reader.GetFieldValue<decimal>(22);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.Comment = reader.GetFieldValue<string>(23);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(23)
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.Rowguid = reader.GetFieldValue<Guid>(24);
Magic Number,RawBencher.Benchers,HandCodedBencherUsingGetFieldValue,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingGetFieldValue.cs,MaterializeSet,The following statement contains a magic number: soh.ModifiedDate = reader.GetFieldValue<DateTime>(25);
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in db.SalesOrderHeaders                                 .LoadWith(x => x.SalesOrderDetails)                                 .LoadWith(x => x.Customer)                          where soh.SalesOrderID > 50000 && soh.SalesOrderID <= 51000                          select soh)                               .ToList();
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in db.SalesOrderHeaders                                 .LoadWith(x => x.SalesOrderDetails)                                 .LoadWith(x => x.Customer)                          where soh.SalesOrderID > 50000 && soh.SalesOrderID <= 51000                          select soh)                               .ToList();
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in db.SalesOrderHeaders                                  .LoadWith(x => x.SalesOrderDetails)                                  .LoadWith(x => x.Customer)                                where soh.SalesOrderID > 50000 && soh.SalesOrderID <= 51000                                select soh)                      .ToListAsync();
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in db.SalesOrderHeaders                                  .LoadWith(x => x.SalesOrderDetails)                                  .LoadWith(x => x.Customer)                                where soh.SalesOrderID > 50000 && soh.SalesOrderID <= 51000                                select soh)                      .ToListAsync();
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn[i] = new CreditCard()                  {                      CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)'                      CardType = "Vista"'                      ExpMonth = 11'                      ExpYear = 2018'                      ModifiedDate = DateTime.Now                  };
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn[i] = new CreditCard()                  {                      CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)'                      CardType = "Vista"'                      ExpMonth = 11'                      ExpYear = 2018'                      ModifiedDate = DateTime.Now                  };
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn[i] = new CreditCard()                  {                      CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)'                      CardType = "Vista"'                      ExpMonth = 11'                      ExpYear = 2018'                      ModifiedDate = DateTime.Now                  };
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,FetchInserted,The following statement contains a magic number: return db.CreditCards                      .Where(_ => _.CreditCardID > 19237)                     .ToList();
Magic Number,RawBencher.Benchers,LINQ2DBNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LINQ2DBNormalBencher.cs,DeleteInserted,The following statement contains a magic number: db.CreditCards.Delete(r => r.CreditCardID > 19237);
Magic Number,RawBencher.Benchers,LLBLGenProDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProDTOBencher.cs,FetchGraph,The following statement contains a magic number: var q = from soh in metaData.SalesOrderHeader  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh;
Magic Number,RawBencher.Benchers,LLBLGenProDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProDTOBencher.cs,FetchGraph,The following statement contains a magic number: var q = from soh in metaData.SalesOrderHeader  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh;
Magic Number,RawBencher.Benchers,LLBLGenProDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProDTOBencher.cs,FetchGraphAsync,The following statement contains a magic number: var q = from soh in metaData.SalesOrderHeader  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh;
Magic Number,RawBencher.Benchers,LLBLGenProDTOBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProDTOBencher.cs,FetchGraphAsync,The following statement contains a magic number: var q = from soh in metaData.SalesOrderHeader  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh;
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: object[] values = new object[26];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.OrderDate = (DateTime)values[2];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.DueDate = (DateTime)values[3];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.ShipDate = (DateTime?)values[4];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[4]!=DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.Status = (byte)values[5];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.OnlineOrderFlag = (bool)values[6];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.SalesOrderNumber = (string)values[7];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.PurchaseOrderNumber = (string)values[8];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[8] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.AccountNumber = (string)values[9];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[9] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.CustomerID = (int)values[10];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.SalesPersonID = (int?)values[11];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[11] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.TerritoryID = (int?)values[12];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[12] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.BillToAddressID = (int)values[13];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.ShipToAddressID = (int)values[14];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.ShipMethodID = (int)values[15];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.CreditCardID = (int?)values[16];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[16] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.CreditCardApprovalCode = (string)values[17];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[17] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.CurrencyRateID = (int?)values[18];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[18] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.SubTotal = (decimal)values[19];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.TaxAmt = (decimal)values[20];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.Freight = (decimal)values[21];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.TotalDue = (decimal)values[22];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.Comment = (string)values[23];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: values[23] != DBNull.Value
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.Rowguid = (Guid)values[24];
Magic Number,RawBencher.Benchers,HandCodedBencherUsingBoxing,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencherUsingBoxing.cs,MaterializeSet,The following statement contains a magic number: soh.ModifiedDate = (DateTime)values[25];
Magic Number,RawBencher.Benchers,RawDbDataReaderBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\RawDbDataReaderBencher.cs,MaterializeSet,The following statement contains a magic number: var headers = new List<object[]>(31000);
Magic Number,RawBencher.Benchers,NHibernateNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\NHibernateNormalBencher.cs,FetchGraph,The following statement contains a magic number: return session.Query<NH.Bencher.EntityClasses.SalesOrderHeader>()  					.Where(soh => soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000)  					.Fetch(x => x.Customer)  					.Fetch(x => x.SalesOrderDetails)  					.ToList();
Magic Number,RawBencher.Benchers,NHibernateNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\NHibernateNormalBencher.cs,FetchGraph,The following statement contains a magic number: return session.Query<NH.Bencher.EntityClasses.SalesOrderHeader>()  					.Where(soh => soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000)  					.Fetch(x => x.Customer)  					.Fetch(x => x.SalesOrderDetails)  					.ToList();
Magic Number,RawBencher.Benchers,NHibernateNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\NHibernateNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await session.Query<NH.Bencher.EntityClasses.SalesOrderHeader>()  							  .Where(soh => soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000)  							  .Fetch(x => x.Customer)  							  .Fetch(x => x.SalesOrderDetails)  							  .ToListAsync();
Magic Number,RawBencher.Benchers,NHibernateNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\NHibernateNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await session.Query<NH.Bencher.EntityClasses.SalesOrderHeader>()  							  .Where(soh => soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000)  							  .Fetch(x => x.Customer)  							  .Fetch(x => x.SalesOrderDetails)  							  .ToListAsync();
Magic Number,RawBencher.Benchers,LinqToSqlNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LinqToSqlNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh).ToList();
Magic Number,RawBencher.Benchers,LinqToSqlNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LinqToSqlNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  						where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  						select soh).ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  					   where soh.SalesOrderId > 50000 && soh.SalesOrderId <=51000  					   select soh)  							.Include(x=>x.SalesOrderDetails)  							.Include(x=>x.Customer)  							.ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkNormalBencher.cs,FetchGraph,The following statement contains a magic number: return (from soh in ctx.SalesOrderHeaders  					   where soh.SalesOrderId > 50000 && soh.SalesOrderId <=51000  					   select soh)  							.Include(x=>x.SalesOrderDetails)  							.Include(x=>x.Customer)  							.ToList();
Magic Number,RawBencher.Benchers,EntityFrameworkNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in ctx.SalesOrderHeaders  							  where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  							  select soh)  					.Include(x=>x.SalesOrderDetails)  					.Include(x=>x.Customer)  					.ToListAsync();
Magic Number,RawBencher.Benchers,EntityFrameworkNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\EntityFrameworkNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: return await (from soh in ctx.SalesOrderHeaders  							  where soh.SalesOrderId > 50000 && soh.SalesOrderId <= 51000  							  select soh)  					.Include(x=>x.SalesOrderDetails)  					.Include(x=>x.Customer)  					.ToListAsync();
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.ModifiedDate = reader.GetDateTime(25);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.OrderDate = reader.GetDateTime(2);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.DueDate = reader.GetDateTime(3);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.ShipDate = reader.GetDateTime(4);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(4)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.Status = reader.GetByte(5);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.OnlineOrderFlag = reader.GetBoolean(6);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.SalesOrderNumber = reader.GetString(7);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.PurchaseOrderNumber =  reader.GetString(8);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(8)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.AccountNumber = reader.GetString(9);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(9)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.CustomerID = reader.GetInt32(10);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.SalesPersonID = reader.GetInt32(11);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(11)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.TerritoryID = reader.GetInt32(12);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(12)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.BillToAddressID = reader.GetInt32(13);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.ShipToAddressID = reader.GetInt32(14);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.ShipMethodID = reader.GetInt32(15);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.CreditCardID = reader.GetInt32(16);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(16)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.CreditCardApprovalCode = reader.GetString(17);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(17)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.CurrencyRateID = reader.GetInt32(18);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(18)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.SubTotal = reader.GetDecimal(19);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.TaxAmt = reader.GetDecimal(20);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.Freight = reader.GetDecimal(21);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.TotalDue = reader.GetDecimal(22);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.Comment = reader.GetString(23);
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: !reader.IsDBNull(23)
Magic Number,RawBencher.Benchers,HandCodedBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\HandCodedBencher.cs,MaterializeSet,The following statement contains a magic number: soh.Rowguid = reader.GetGuid(24);
Magic Number,RawBencher.Benchers,LLBLGenProResultsetCachingBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProResultsetCachingBencher.cs,FetchIndividual,The following statement contains a magic number: var q = qf.SalesOrderHeader  							.Where(SalesOrderHeaderFields.SalesOrderId == key)  							.CacheResultset(10);
Magic Number,RawBencher.Benchers,LLBLGenProResultsetCachingBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProResultsetCachingBencher.cs,FetchSet,The following statement contains a magic number: var q = qf.SalesOrderHeader  						.CacheResultset(10);
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,FetchGraph,The following statement contains a magic number: var q = qf.SalesOrderHeader  								.Where((SalesOrderHeaderFields.SalesOrderId > 50000).And(SalesOrderHeaderFields.SalesOrderId <= 51000))  								.WithPath(SalesOrderHeaderEntity.PrefetchPathSalesOrderDetails' SalesOrderHeaderEntity.PrefetchPathCustomer);
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,FetchGraph,The following statement contains a magic number: var q = qf.SalesOrderHeader  								.Where((SalesOrderHeaderFields.SalesOrderId > 50000).And(SalesOrderHeaderFields.SalesOrderId <= 51000))  								.WithPath(SalesOrderHeaderEntity.PrefetchPathSalesOrderDetails' SalesOrderHeaderEntity.PrefetchPathCustomer);
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: var q = qf.SalesOrderHeader  								.Where((SalesOrderHeaderFields.SalesOrderId > 50000).And(SalesOrderHeaderFields.SalesOrderId <= 51000))  								.WithPath(SalesOrderHeaderEntity.PrefetchPathSalesOrderDetails' SalesOrderHeaderEntity.PrefetchPathCustomer);
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,FetchGraphAsync,The following statement contains a magic number: var q = qf.SalesOrderHeader  								.Where((SalesOrderHeaderFields.SalesOrderId > 50000).And(SalesOrderHeaderFields.SalesOrderId <= 51000))  								.WithPath(SalesOrderHeaderEntity.PrefetchPathSalesOrderDetails' SalesOrderHeaderEntity.PrefetchPathCustomer);
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn.Add(new CreditCardEntity()  							 {  								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...   								 CardType = "Vista"'  								 ExpMonth = 11'  								 ExpYear=2018'  								 ModifiedDate = DateTime.Now  							 });
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn.Add(new CreditCardEntity()  							 {  								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...   								 CardType = "Vista"'  								 ExpMonth = 11'  								 ExpYear=2018'  								 ModifiedDate = DateTime.Now  							 });
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,CreateSetForInserts,The following statement contains a magic number: toReturn.Add(new CreditCardEntity()  							 {  								 CardNumber = Guid.NewGuid().ToString("N").Substring(0' 24)' // we need a unique string' as there's a unique index on this field. This is semi unique...   								 CardType = "Vista"'  								 ExpMonth = 11'  								 ExpYear=2018'  								 ModifiedDate = DateTime.Now  							 });
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,FetchInserted,The following statement contains a magic number: adapter.FetchEntityCollection(toReturn' new RelationPredicateBucket(CreditCardFields.CreditCardId.GreaterThan(19237)));
Magic Number,RawBencher.Benchers,LLBLGenProNormalBencher,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Benchers\LLBLGenProNormalBencher.cs,DeleteInserted,The following statement contains a magic number: adapter.DeleteEntitiesDirectly(typeof(CreditCardEntity)' new RelationPredicateBucket(CreditCardFields.CreditCardId.GreaterThan(19237)));
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunMemoryAnalysisForBencher,The following statement contains a magic number: Thread.Sleep(400);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,RunBencher,The following statement contains a magic number: Thread.Sleep(400);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetBenchmarks / 1024'   										  bencher.MemorySetBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetBenchmarks / 1024'   										  bencher.MemorySetBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryIndividualBenchmarks / 1024'   										  bencher.MemoryIndividualBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryIndividualBenchmarks / 1024'   										  bencher.MemoryIndividualBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryEagerLoadBenchmarks / 1024'   										  bencher.MemoryEagerLoadBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryEagerLoadBenchmarks / 1024'   										  bencher.MemoryEagerLoadBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryAsyncEagerLoadBenchmarks / 1024'   										  bencher.MemoryAsyncEagerLoadBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryAsyncEagerLoadBenchmarks / 1024'   										  bencher.MemoryAsyncEagerLoadBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetBenchmarks / 1024'   										  bencher.MemorySetBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemoryIndividualBenchmarks / 1024'   										  bencher.MemoryIndividualBenchmarks);
Magic Number,RawBencher,BenchController,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\BenchController.cs,ReportResultStatistics,The following statement contains a magic number: Console.WriteLine("{0'-" + longestNameLength + "} : {1:0'0} KB ({2:0'0} bytes)"' bencher.CreateFrameworkName()' bencher.MemorySetInsertBenchmarks / 1024'   										  bencher.MemorySetInsertBenchmarks);
Magic Number,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,CreateUpdateCommand,The following statement contains a magic number: var keys = sbKeys.ToString().Substring(0' sbKeys.Length - 4);
Magic Number,VanillaMassive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\Massive.cs,CreateUpdateWhereCommand,The following statement contains a magic number: var keys = sbKeys.ToString().Substring(0' sbKeys.Length - 4);
Magic Number,PetaPoco,Database,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Database,The following statement contains a magic number: _sharedConnectionDepth = 2;
Magic Number,PetaPoco,Sql,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Build,The following statement contains a magic number: sql = "AND " + sql.Substring(6);
Magic Number,PetaPoco,Sql,D:\research\architectureSmells\repos\FransBouma_RawDataAccessBencher\RawBencher\PetaPoco.cs,Build,The following statement contains a magic number: sql = "' " + sql.Substring(9);
