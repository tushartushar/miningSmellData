Implementation smell,Namespace,Class,File,Method,Description
Long Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The method has 355 lines of code.
Long Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The method has 125 lines of code.
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,Cyclomatic complexity of the method is 222
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,Cyclomatic complexity of the method is 8
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,Cyclomatic complexity of the method is 14
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaStatusBreakdown,Cyclomatic complexity of the method is 28
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,Cyclomatic complexity of the method is 26
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,Cyclomatic complexity of the method is 35
Complex Method,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,Cyclomatic complexity of the method is 23
Long Parameter List,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The method has 18 parameters.
Long Parameter List,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The method has 8 parameters.
Long Parameter List,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The method has 6 parameters.
Long Parameter List,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The method has 14 parameters.
Long Parameter List,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The method has 6 parameters.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The length of the statement  "	if (username.Length == 0 || GeminiApp.Config.ApiKey.Length == 0 || !username.StartsWith (GeminiApp.Config.ApiKey' StringComparison.InvariantCultureIgnoreCase)) { " is 161.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The length of the statement  "			count = allItems.FindAll (s => s.Entity.SLAId.HasValue && s.Entity.SLAStatus == null || (s.Entity.SLAStatus.HasValue && s.Entity.SLAStatus.Value == Constants.SLAStatusGreen)).Count; " is 181.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The length of the statement  "			iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50))); " is 199.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,pieChart,The length of the statement  "	pie.tooltip.formatter = "function() {  return '<b>' + this.point.name + '</b> ' + Math.round(this.percentage) + '%'; } "; " is 121.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The length of the statement  "		tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit)); " is 124.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The length of the statement  "		tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit)); " is 125.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The length of the statement  "			iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50))); " is 181.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaStatusBreakdown,The length of the statement  "		var allIssues = GeminiContext.Issues.GetIssues (ItemFilterManager.TransformFilter (filter)' 0' Cache.CustomFields.GetAll ()' closedStatuses); " is 141.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaStatusBreakdown,The length of the statement  "		var allIssues = GeminiContext.Issues.GetIssues (ItemFilterManager.TransformFilter (filter)' 0' Cache.CustomFields.GetAll ()' closedStatuses); " is 141.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaStatusBreakdown,The length of the statement  "		Dictionary<int' GeckoboardModel.SlaStatusBreakdown> result = new Dictionary<int' GeckoboardModel.SlaStatusBreakdown> (); " is 120.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaStatusBreakdown,The length of the statement  "			iBuffer.Append (string.Format ("<tr> <td>{0}</td> <td title='breached' class='breached'>{1}</td><td title='red' class='red'>{2}</td><td title='amber' class='amber'>{3}</td><td title='green' class='green'>{4}</td> </tr>"' status.Value.SlaName' status.Value.Breached' status.Value.Red' status.Value.Amber' status.Value.Green)); " is 325.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The length of the statement  "	var allIssues = GeminiContext.Issues.GetIssues (ItemFilterManager.TransformFilter (filter)' 0' Cache.CustomFields.GetAll ()' closedStatuses); " is 141.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The length of the statement  "					var allEmailReplies = issue.Comments.FindAll (s => s.Entity.OriginatorType == IssueOriginatorType.Email).Select (s => s.Entity).OrderBy ("Created"); " is 148.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The length of the statement  "				var allEmailReplies = issue.Comments.FindAll (s => s.Entity.OriginatorType == IssueOriginatorType.Email).Select (s => s.Entity).OrderBy ("Created"); " is 148.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The length of the statement  "				var allEmailReplies = issue.Comments.FindAll (s => s.Entity.OriginatorType == IssueOriginatorType.Email).Select (s => s.Entity).OrderBy ("Created"); " is 148.
Long Statement,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The length of the statement  "		text = string.Format ("<div class='{0} count'>{1}</div>"' boardOption' timeDifference == 0 || numberOfComments == 0 ? "0d 0h 0m" : Helper.GetFriendlyDate (timeDifference / numberOfComments))' " is 191.
Magic Number,GeckoboardConnector,Helper,C:\repos\countersoft_App-GeckoboardConnector\Helper.cs,GetStartDayOfWeek,The following statement contains a magic number: if (diff < 0) {  	diff += 7;  }  
Magic Number,GeckoboardConnector,Helper,C:\repos\countersoft_App-GeckoboardConnector\Helper.cs,GetStartDayOfWeek,The following statement contains a magic number: diff += 7;  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The following statement contains a magic number: switch (boardOption) {  case "progress":  	issues = IssueManager.GetFiltered (filter' true);  	var total = issues.Count;  	closed = issues.Count (i => i.IsClosed);  	var remaining = total - closed;  	rag.item = new WallboardHelper.TextValue[3];  	rag.item [0] = new WallboardHelper.TextValue () {  		text = ResourceKeys.Total'  		value = total  	};  	rag.item [1] = new WallboardHelper.TextValue () {  		text = ResourceKeys.Open'  		value = remaining  	};  	rag.item [2] = new WallboardHelper.TextValue () {  		text = ResourceKeys.Closed'  		value = closed  	};  	result = rag;  	break;  case "opened-count":  	var open = IssueManager.GetFiltered (filter' true).Count (i => !i.IsClosed);  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='opened-count'>{0}</div>"' open.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "closed-count":  	closed = IssueManager.GetFiltered (filter' true).Count (i => i.IsClosed);  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='closed-count'>{0}</div>"' closed.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "breached-count":  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	var breached = IssueManager.GetFiltered (filter' true).Count;  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='breached-count count'>{0}</div>"' breached.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "red-count":  	filter.SLAStatus = Constants.SLAStatusRed.ToString ();  	var red = IssueManager.GetFiltered (filter' true).Count;  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='red-count count'>{0}</div>"' red.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "amber-count":  	filter.SLAStatus = Constants.SLAStatusAmber.ToString ();  	var amber = IssueManager.GetFiltered (filter' true).Count;  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='amber-count count'>{0}</div>"' amber.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "green-count":  	//filter.SLAStatus = Constants.SLAStatusGreen.ToString();  	filter.SLAItems = true;  	var allItems = IssueManager.GetFiltered (filter' true);  	int count = 0;  	if (allItems.Count > 0) {  		count = allItems.FindAll (s => s.Entity.SLAId.HasValue && s.Entity.SLAStatus == null || (s.Entity.SLAStatus.HasValue && s.Entity.SLAStatus.Value == Constants.SLAStatusGreen)).Count;  	}  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='green-count count'>{0}</div>"' count.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "all":  case "opened":  case "closed":  case "due-today":  case "due-tomorrow":  case "due-thisweek":  case "due-nextweek":  case "opened-recently":  case "closed-recently":  case "breached-total-list":  	result = items (filter' limit' boardOption);  	break;  case "workload":  	Dictionary<int' Pair<string' int>> resourcesGroup = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Resources) {  			if (!resourcesGroup.ContainsKey (resource.Entity.Id)) {  				resourcesGroup.Add (resource.Entity.Id' new Pair<string' int> (resource.Fullname' 0));  			}  			resourcesGroup [resource.Entity.Id].Value++;  		}  	}  	var workload = resourcesGroup.OrderByDescending (r => r.Value.Value);  	StringBuilder wBuffer = new StringBuilder ("<table class='workload-list'>");  	foreach (var key in workload) {  		wBuffer.Append (string.Format ("<tr><td>{0}</td><td>{1}</td></tr>"' key.Value.Key' key.Value.Value));  	}  	wBuffer.Append ("</table>");  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = wBuffer.ToString ()'  		type = 0  	};  	result = textW;  	break;  case "workload-pie":  	Dictionary<int' Pair<string' int>> resourcesGroupPie = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Resources) {  			if (!resourcesGroupPie.ContainsKey (resource.Entity.Id)) {  				resourcesGroupPie.Add (resource.Entity.Id' new Pair<string' int> (resource.Fullname' 0));  			}  			resourcesGroupPie [resource.Entity.Id].Value++;  		}  	}  	var workloadPie = resourcesGroupPie.OrderByDescending (r => r.Value.Value);  	var dataList = new List<List<object>> ();  	foreach (var key in workloadPie) {  		dataList.Add (new List<object> () {  			key.Value.Key'  			key.Value.Value  		});  	}  	result = pieChart (dataList);  	break;  case "progress-pie":  	issues = IssueManager.GetFiltered (filter' true);  	var totalProgressPie = issues.Count;  	var closedProgressPie = issues.Count (i => i.IsClosed);  	var remainingProgressPie = totalProgressPie - closedProgressPie;  	var dataListProgressPie = new List<List<object>> ();  	dataListProgressPie.Add (new List<object> () {  		ResourceKeys.Open'  		totalProgressPie  	});  	dataListProgressPie.Add (new List<object> () {  		ResourceKeys.Remaining'  		remainingProgressPie  	});  	dataListProgressPie.Add (new List<object> () {  		ResourceKeys.Closed'  		closedProgressPie  	});  	result = pieChart (dataListProgressPie);  	break;  case "workload-funnel":  	Dictionary<int' Pair<string' int>> resourcesGroupFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Resources) {  			if (!resourcesGroupFunnel.ContainsKey (resource.Entity.Id)) {  				resourcesGroupFunnel.Add (resource.Entity.Id' new Pair<string' int> (resource.Fullname' 0));  			}  			resourcesGroupFunnel [resource.Entity.Id].Value++;  		}  	}  	var workloadFunnel = resourcesGroupFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[workloadFunnel.Count ()];  	foreach (var key in workloadFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "type-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueTypeFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssueTypeFunnel.ContainsKey (issue.Entity.TypeId)) {  			resourcesIssueTypeFunnel.Add (issue.Entity.TypeId' new Pair<string' int> (issue.Type' 0));  		}  		resourcesIssueTypeFunnel [issue.Entity.TypeId].Value++;  	}  	var IssueTypesFunnel = resourcesIssueTypeFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueTypesFunnel.Count ()];  	foreach (var key in IssueTypesFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "status-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueStatusFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssueStatusFunnel.ContainsKey (issue.Entity.StatusId)) {  			resourcesIssueStatusFunnel.Add (issue.Entity.StatusId' new Pair<string' int> (issue.Status' 0));  		}  		resourcesIssueStatusFunnel [issue.Entity.StatusId].Value++;  	}  	var IssueStatusFunnel = resourcesIssueStatusFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueStatusFunnel.Count ()];  	foreach (var key in IssueStatusFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "component-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueComponentFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Components) {  			if (!resourcesIssueComponentFunnel.ContainsKey (resource.Entity.Id)) {  				resourcesIssueComponentFunnel.Add (resource.Entity.Id' new Pair<string' int> (resource.Entity.Name' 0));  			}  			resourcesIssueComponentFunnel [resource.Entity.Id].Value++;  		}  	}  	var IssueComponentFunnel = resourcesIssueComponentFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueComponentFunnel.Count ()];  	foreach (var key in IssueComponentFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "priority-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssuePriorityFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssuePriorityFunnel.ContainsKey (issue.Entity.PriorityId)) {  			resourcesIssuePriorityFunnel.Add (issue.Entity.PriorityId' new Pair<string' int> (issue.Priority' 0));  		}  		resourcesIssuePriorityFunnel [issue.Entity.PriorityId].Value++;  	}  	var IssuePriorityFunnel = resourcesIssuePriorityFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssuePriorityFunnel.Count ()];  	foreach (var key in IssuePriorityFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "severity-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueSeverityFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssueSeverityFunnel.ContainsKey (issue.Entity.SeverityId)) {  			resourcesIssueSeverityFunnel.Add (issue.Entity.SeverityId' new Pair<string' int> (issue.Severity' 0));  		}  		resourcesIssueSeverityFunnel [issue.Entity.SeverityId].Value++;  	}  	var IssueSeverityFunnel = resourcesIssueSeverityFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueSeverityFunnel.Count ()];  	foreach (var key in IssueSeverityFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "open-sla":  case "closed-sla":  	result = getSlaCount (boardOption' filter' restrictTo);  	break;  case "average-sla-response":  case "average-sla-closing":  	filter.OnlySLAItems = onlyIncludeSlaItems;  	result = getSlaTime (boardOption' filter' restrictTo);  	break;  case "average-sla-response-total":  case "average-sla-closing-total":  	filter.OnlySLAItems = onlyIncludeSlaItems;  	result = getSlaTimeTotal (boardOption' filter' restrictTo);  	break;  case "sla-status-breakdown-list":  case "sla-status-breakdown-pie":  	result = getSlaStatusBreakdown (boardOption' filter' restrictTo);  	break;  case "breached-sla-list":  	result = getItemsPerSla (boardOption' filter' limit' restrictTo);  	break;  default:  	result = "Unrecognized action specified: " + boardOption;  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The following statement contains a magic number: switch (boardOption) {  case "progress":  	issues = IssueManager.GetFiltered (filter' true);  	var total = issues.Count;  	closed = issues.Count (i => i.IsClosed);  	var remaining = total - closed;  	rag.item = new WallboardHelper.TextValue[3];  	rag.item [0] = new WallboardHelper.TextValue () {  		text = ResourceKeys.Total'  		value = total  	};  	rag.item [1] = new WallboardHelper.TextValue () {  		text = ResourceKeys.Open'  		value = remaining  	};  	rag.item [2] = new WallboardHelper.TextValue () {  		text = ResourceKeys.Closed'  		value = closed  	};  	result = rag;  	break;  case "opened-count":  	var open = IssueManager.GetFiltered (filter' true).Count (i => !i.IsClosed);  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='opened-count'>{0}</div>"' open.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "closed-count":  	closed = IssueManager.GetFiltered (filter' true).Count (i => i.IsClosed);  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='closed-count'>{0}</div>"' closed.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "breached-count":  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	var breached = IssueManager.GetFiltered (filter' true).Count;  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='breached-count count'>{0}</div>"' breached.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "red-count":  	filter.SLAStatus = Constants.SLAStatusRed.ToString ();  	var red = IssueManager.GetFiltered (filter' true).Count;  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='red-count count'>{0}</div>"' red.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "amber-count":  	filter.SLAStatus = Constants.SLAStatusAmber.ToString ();  	var amber = IssueManager.GetFiltered (filter' true).Count;  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='amber-count count'>{0}</div>"' amber.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "green-count":  	//filter.SLAStatus = Constants.SLAStatusGreen.ToString();  	filter.SLAItems = true;  	var allItems = IssueManager.GetFiltered (filter' true);  	int count = 0;  	if (allItems.Count > 0) {  		count = allItems.FindAll (s => s.Entity.SLAId.HasValue && s.Entity.SLAStatus == null || (s.Entity.SLAStatus.HasValue && s.Entity.SLAStatus.Value == Constants.SLAStatusGreen)).Count;  	}  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = string.Format ("<div class='green-count count'>{0}</div>"' count.ToString ())'  		type = 0  	};  	result = textW;  	break;  case "all":  case "opened":  case "closed":  case "due-today":  case "due-tomorrow":  case "due-thisweek":  case "due-nextweek":  case "opened-recently":  case "closed-recently":  case "breached-total-list":  	result = items (filter' limit' boardOption);  	break;  case "workload":  	Dictionary<int' Pair<string' int>> resourcesGroup = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Resources) {  			if (!resourcesGroup.ContainsKey (resource.Entity.Id)) {  				resourcesGroup.Add (resource.Entity.Id' new Pair<string' int> (resource.Fullname' 0));  			}  			resourcesGroup [resource.Entity.Id].Value++;  		}  	}  	var workload = resourcesGroup.OrderByDescending (r => r.Value.Value);  	StringBuilder wBuffer = new StringBuilder ("<table class='workload-list'>");  	foreach (var key in workload) {  		wBuffer.Append (string.Format ("<tr><td>{0}</td><td>{1}</td></tr>"' key.Value.Key' key.Value.Value));  	}  	wBuffer.Append ("</table>");  	textW.item = new WallboardHelper.TextType[1];  	textW.item [0] = new WallboardHelper.TextType () {  		text = wBuffer.ToString ()'  		type = 0  	};  	result = textW;  	break;  case "workload-pie":  	Dictionary<int' Pair<string' int>> resourcesGroupPie = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Resources) {  			if (!resourcesGroupPie.ContainsKey (resource.Entity.Id)) {  				resourcesGroupPie.Add (resource.Entity.Id' new Pair<string' int> (resource.Fullname' 0));  			}  			resourcesGroupPie [resource.Entity.Id].Value++;  		}  	}  	var workloadPie = resourcesGroupPie.OrderByDescending (r => r.Value.Value);  	var dataList = new List<List<object>> ();  	foreach (var key in workloadPie) {  		dataList.Add (new List<object> () {  			key.Value.Key'  			key.Value.Value  		});  	}  	result = pieChart (dataList);  	break;  case "progress-pie":  	issues = IssueManager.GetFiltered (filter' true);  	var totalProgressPie = issues.Count;  	var closedProgressPie = issues.Count (i => i.IsClosed);  	var remainingProgressPie = totalProgressPie - closedProgressPie;  	var dataListProgressPie = new List<List<object>> ();  	dataListProgressPie.Add (new List<object> () {  		ResourceKeys.Open'  		totalProgressPie  	});  	dataListProgressPie.Add (new List<object> () {  		ResourceKeys.Remaining'  		remainingProgressPie  	});  	dataListProgressPie.Add (new List<object> () {  		ResourceKeys.Closed'  		closedProgressPie  	});  	result = pieChart (dataListProgressPie);  	break;  case "workload-funnel":  	Dictionary<int' Pair<string' int>> resourcesGroupFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Resources) {  			if (!resourcesGroupFunnel.ContainsKey (resource.Entity.Id)) {  				resourcesGroupFunnel.Add (resource.Entity.Id' new Pair<string' int> (resource.Fullname' 0));  			}  			resourcesGroupFunnel [resource.Entity.Id].Value++;  		}  	}  	var workloadFunnel = resourcesGroupFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[workloadFunnel.Count ()];  	foreach (var key in workloadFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "type-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueTypeFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssueTypeFunnel.ContainsKey (issue.Entity.TypeId)) {  			resourcesIssueTypeFunnel.Add (issue.Entity.TypeId' new Pair<string' int> (issue.Type' 0));  		}  		resourcesIssueTypeFunnel [issue.Entity.TypeId].Value++;  	}  	var IssueTypesFunnel = resourcesIssueTypeFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueTypesFunnel.Count ()];  	foreach (var key in IssueTypesFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "status-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueStatusFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssueStatusFunnel.ContainsKey (issue.Entity.StatusId)) {  			resourcesIssueStatusFunnel.Add (issue.Entity.StatusId' new Pair<string' int> (issue.Status' 0));  		}  		resourcesIssueStatusFunnel [issue.Entity.StatusId].Value++;  	}  	var IssueStatusFunnel = resourcesIssueStatusFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueStatusFunnel.Count ()];  	foreach (var key in IssueStatusFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "component-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueComponentFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		foreach (var resource in issue.Components) {  			if (!resourcesIssueComponentFunnel.ContainsKey (resource.Entity.Id)) {  				resourcesIssueComponentFunnel.Add (resource.Entity.Id' new Pair<string' int> (resource.Entity.Name' 0));  			}  			resourcesIssueComponentFunnel [resource.Entity.Id].Value++;  		}  	}  	var IssueComponentFunnel = resourcesIssueComponentFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueComponentFunnel.Count ()];  	foreach (var key in IssueComponentFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "priority-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssuePriorityFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssuePriorityFunnel.ContainsKey (issue.Entity.PriorityId)) {  			resourcesIssuePriorityFunnel.Add (issue.Entity.PriorityId' new Pair<string' int> (issue.Priority' 0));  		}  		resourcesIssuePriorityFunnel [issue.Entity.PriorityId].Value++;  	}  	var IssuePriorityFunnel = resourcesIssuePriorityFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssuePriorityFunnel.Count ()];  	foreach (var key in IssuePriorityFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "severity-funnel":  	Dictionary<int' Pair<string' int>> resourcesIssueSeverityFunnel = new Dictionary<int' Pair<string' int>> ();  	issues = IssueManager.GetFiltered (filter);  	foreach (var issue in issues) {  		if (!resourcesIssueSeverityFunnel.ContainsKey (issue.Entity.SeverityId)) {  			resourcesIssueSeverityFunnel.Add (issue.Entity.SeverityId' new Pair<string' int> (issue.Severity' 0));  		}  		resourcesIssueSeverityFunnel [issue.Entity.SeverityId].Value++;  	}  	var IssueSeverityFunnel = resourcesIssueSeverityFunnel.OrderByDescending (r => r.Value.Value);  	funnel = new WallboardHelper.FunnelWidget ();  	funnel.percentage = "hide";  	funnel.item = new WallboardHelper.ValueLabel[IssueSeverityFunnel.Count ()];  	foreach (var key in IssueSeverityFunnel) {  		funnel.item [x++] = new WallboardHelper.ValueLabel {  			label = key.Value.Key'  			value = key.Value.Value  		};  	}  	result = funnel;  	break;  case "open-sla":  case "closed-sla":  	result = getSlaCount (boardOption' filter' restrictTo);  	break;  case "average-sla-response":  case "average-sla-closing":  	filter.OnlySLAItems = onlyIncludeSlaItems;  	result = getSlaTime (boardOption' filter' restrictTo);  	break;  case "average-sla-response-total":  case "average-sla-closing-total":  	filter.OnlySLAItems = onlyIncludeSlaItems;  	result = getSlaTimeTotal (boardOption' filter' restrictTo);  	break;  case "sla-status-breakdown-list":  case "sla-status-breakdown-pie":  	result = getSlaStatusBreakdown (boardOption' filter' restrictTo);  	break;  case "breached-sla-list":  	result = getItemsPerSla (boardOption' filter' limit' restrictTo);  	break;  default:  	result = "Unrecognized action specified: " + boardOption;  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The following statement contains a magic number: rag.item = new WallboardHelper.TextValue[3];  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,Get,The following statement contains a magic number: rag.item [2] = new WallboardHelper.TextValue () {  	text = ResourceKeys.Closed'  	value = closed  };  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The following statement contains a magic number: foreach (var item in result) {  	iBuffer.Append (string.Format ("<tr class='sla-label'><td colspan='2'>{0}</td></tr>"' slaFormatted [item.Key]));  	foreach (var issue in item.Value) {  		iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  	}  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The following statement contains a magic number: foreach (var item in result) {  	iBuffer.Append (string.Format ("<tr class='sla-label'><td colspan='2'>{0}</td></tr>"' slaFormatted [item.Key]));  	foreach (var issue in item.Value) {  		iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  	}  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The following statement contains a magic number: foreach (var issue in item.Value) {  	iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The following statement contains a magic number: foreach (var issue in item.Value) {  	iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The following statement contains a magic number: iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getItemsPerSla,The following statement contains a magic number: iBuffer.Append (string.Format ("<tr class='sla-value' title='{0}'><td>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "closed-recently") {  	if (filter.IncludeClosed) {  		filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyClosedIssues;  		issues = IssueManager.GetFiltered (filter' true);  		tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  	}  	else  		tmp_issues = new List<IssueDto> ();  }  else if (option == "opened-recently") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyCreatedIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "closed-recently") {  	if (filter.IncludeClosed) {  		filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyClosedIssues;  		issues = IssueManager.GetFiltered (filter' true);  		tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  	}  	else  		tmp_issues = new List<IssueDto> ();  }  else if (option == "opened-recently") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyCreatedIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "closed-recently") {  	if (filter.IncludeClosed) {  		filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyClosedIssues;  		issues = IssueManager.GetFiltered (filter' true);  		tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  	}  	else  		tmp_issues = new List<IssueDto> ();  }  else if (option == "opened-recently") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyCreatedIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "opened-recently") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyCreatedIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "opened-recently") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyCreatedIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "opened-recently") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.RecentlyCreatedIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "due-nextweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: filter.InitialDueDate = monday.AddDays (7).ToShortDateString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: filter.FinalDueDate = monday.AddDays (13).ToShortDateString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (option == "due-thisweek") {  	DateTime input = DateTime.Today;  	int delta = DayOfWeek.Monday - input.DayOfWeek;  	DateTime monday = input.AddDays (delta);  	filter.InitialDueDate = monday.ToShortDateString ();  	filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-tomorrow") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTomorrowIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "due-today") {  	filter.SystemFilter = IssuesFilter.SystemFilterTypes.DueTodayIssues;  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "closed") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "opened") {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.FindAll (i => !i.IsClosed).OrderByDescending (i => i.Created).Take ((limit == 0 ? issues.Count : limit));  }  else if (option == "breached-total-list") {  	filter.OnlySLAItems = true;  	filter.SLAStatus = Constants.SLAStatusBreach.ToString ();  	if (limit > 0) {  		filter.MaxItemsToReturn = limit;  	}  	tmp_issues = IssueManager.GetFiltered (filter' true);  }  else {  	issues = IssueManager.GetFiltered (filter' true);  	tmp_issues = issues.OrderByDescending (i => i.Revised).Take ((limit == 0 ? issues.Count : limit));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: filter.FinalDueDate = monday.AddDays (7).ToShortDateString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (tmp_issues.Count () > 0) {  	foreach (var issue in tmp_issues) {  		iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  	}  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: if (tmp_issues.Count () > 0) {  	foreach (var issue in tmp_issues) {  		iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  	}  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: foreach (var issue in tmp_issues) {  	iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: foreach (var issue in tmp_issues) {  	iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,items,The following statement contains a magic number: iBuffer.Append (string.Format ("<tr><td title='{0}'>{1}</td><td title='{2}'>{3}</td></tr>"' issue.IssueKey' issue.IssueKey.ToMaxMore (15)' issue.Title' issue.Title.ToMaxMore (50)));  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following statement contains a magic number: filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following statement contains a magic number: filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "today") {  	filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.CreatedBefore = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "today") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  }  else if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "yesterday") {  	filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  }  else if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "this-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  	filter.FinalClosedDate = todayDateTime.ToString ();  }  else if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: if (restrictTo == "last-week") {  	filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  	filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  }  else if (restrictTo == "last-month") {  	filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  }  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Magic Number,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following statement contains a magic number: filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  
Missing Default,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaStatusBreakdown,The following switch statement is missing a default case: switch (issue.SLAStatus) {  case Constants.SLAStatusBreach:  	statusBreakdown.Breached++;  	break;  case Constants.SLAStatusRed:  	statusBreakdown.Red++;  	break;  case Constants.SLAStatusAmber:  	statusBreakdown.Amber++;  	break;  case Constants.SLAStatusGreen:  	statusBreakdown.Green++;  	break;  case null:  	statusBreakdown.Green++;  	break;  }  
Missing Default,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaCount,The following switch statement is missing a default case: switch (boardOption) {  case "open-sla":  	filter.IncludeClosed = false;  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "closed-sla":  	filter.IncludeClosed = true;  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Missing Default,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTime,The following switch statement is missing a default case: switch (boardOption) {  case "average-sla-response":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
Missing Default,GeckoboardConnector,GeckoboardController,C:\repos\countersoft_App-GeckoboardConnector\GeckoboardConnector.cs,getSlaTimeTotal,The following switch statement is missing a default case: switch (boardOption) {  case "average-sla-response-total":  	if (restrictTo == "today") {  		filter.CreatedAfter = filter.CreatedBefore = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.CreatedBefore = filter.CreatedAfter = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.CreatedBefore = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.CreatedAfter = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.CreatedBefore = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.CreatedAfter = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.CreatedBefore = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  case "average-sla-closing-total":  	filter.Statuses = string.Join ("|"' closedStatuses);  	if (restrictTo == "today") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.ToString ();  	}  	else if (restrictTo == "yesterday") {  		filter.FinalClosedDate = filter.InitialClosedDate = todayDateTime.Date.AddDays (-1).ToString ();  	}  	else if (restrictTo == "this-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "this-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime).ToString ();  		filter.FinalClosedDate = todayDateTime.ToString ();  	}  	else if (restrictTo == "last-week") {  		filter.InitialClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).ToString ();  		filter.FinalClosedDate = Helper.GetStartDayOfWeek (todayDateTime.AddDays (-7)).AddDays (6).ToString ();  	}  	else if (restrictTo == "last-month") {  		filter.InitialClosedDate = Helper.GetStartDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  		filter.FinalClosedDate = Helper.GetLastDayOfMonth (todayDateTime.AddMonths (-1)).ToString ();  	}  	break;  }  
