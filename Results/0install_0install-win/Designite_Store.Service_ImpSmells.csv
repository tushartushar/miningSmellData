Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,GetTempDir,The length of the statement  "                    acl.AddAccessRule(new FileSystemAccessRule(callingIdentity.User' FileSystemRights.Modify' InheritanceFlags.ContainerInherit | InheritanceFlags.ObjectInherit' PropagationFlags.None' AccessControlType.Allow)); " is 207.
Long Statement,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,GetTempDir,The length of the statement  "                    Log.Error(string.Format(Resources.FailedToCreateTempDir' callingIdentity.Name' DirectoryPath) + Environment.NewLine + ex.Message); " is 130.
Long Statement,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,DeleteTempDir,The length of the statement  "                    Log.Error(string.Format(Resources.FailedToRemoveTempDir' callingIdentity.Name' DirectoryPath) + Environment.NewLine + ex.Message); " is 130.
Long Statement,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,VerifyAndAdd,The length of the statement  "                    Log.Info(string.Format(Resources.SuccessfullyAddedImplementation' callingIdentity.Name' expectedDigest.AvailableDigests.FirstOrDefault()' DirectoryPath)); " is 154.
Long Statement,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,VerifyAndAdd,The length of the statement  "                    Log.Warn(string.Format(Resources.FailedToAddImplementation' callingIdentity.Name' expectedDigest.AvailableDigests.FirstOrDefault()' DirectoryPath) + Environment.NewLine + ex.Message); " is 183.
Long Statement,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,Remove,The length of the statement  "                if (removed) Log.Info(string.Format(Resources.SuccessfullyRemovedImplementation' callingIdentity.Name' manifestDigest' DirectoryPath)); " is 135.
Empty Catch Block,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,DeleteTempDir,The method has an empty catch block.
Empty Catch Block,ZeroInstall.Store.Service,SecureStore,C:\repos\0install_0install-win\src\Store.Service\SecureStore.cs,VerifyAndAdd,The method has an empty catch block.
Empty Catch Block,ZeroInstall.Store.Service,StoreService,C:\repos\0install_0install-win\src\Store.Service\StoreService.cs,OnStop,The method has an empty catch block.
Empty Catch Block,ZeroInstall.Store.Service,StoreService,C:\repos\0install_0install-win\src\Store.Service\StoreService.cs,LogHandler,The method has an empty catch block.
Empty Catch Block,ZeroInstall.Store.Service,StoreService,C:\repos\0install_0install-win\src\Store.Service\StoreService.cs,LogHandler,The method has an empty catch block.
Magic Number,ZeroInstall.Store.Service,Program,C:\repos\0install_0install-win\src\Store.Service\Program.cs,Main,The following statement contains a magic number: if (AppMutex.Probe(mutexName + "-update")) return 999;
Magic Number,ZeroInstall.Store.Service,StoreService,C:\repos\0install_0install-win\src\Store.Service\StoreService.cs,OnStart,The following statement contains a magic number: try              {                  _serverChannel = new IpcServerChannel(                      new Hashtable                      {                          {"name"' IpcStore.IpcPortName}'                          {"portName"' IpcStore.IpcPortName}'                          {"secure"' true}' {"impersonate"' true} // Use identity of client in server threads                      }'                      new BinaryServerFormatterSinkProvider {TypeFilterLevel = TypeFilterLevel.Full} // Allow deserialization of custom types  #if !__MonoCS__                      ' IpcStore.IpcAcl  #endif                  );                  _clientChannel = new IpcClientChannel(                      new Hashtable                      {                          {"name"' IpcStore.IpcPortName + ".Callback"}                      }'                      new BinaryClientFormatterSinkProvider());                    ChannelServices.RegisterChannel(_serverChannel' ensureSecurity: false);                  ChannelServices.RegisterChannel(_clientChannel' ensureSecurity: false);                  _store = CreateStore();                  _objRef = RemotingServices.Marshal(_store' IpcStore.IpcObjectUri' typeof(IStore));                    // Prevent the service from expiring on Windows 10                  var lease = (ILease)RemotingServices.GetLifetimeService(_store);                  lease.Renew(TimeSpan.FromDays(365));              }                  #region Error handling              catch (IOException ex)              {                  Log.Error("Failed to open cache directory:" + Environment.NewLine + ex);                  ExitCode = UnableToWriteToDevice;                  Stop();              }              catch (UnauthorizedAccessException ex)              {                  Log.Error("Failed to open cache directory:" + Environment.NewLine + ex);                  ExitCode = AccessDenied;                  Stop();              }              catch (RemotingException ex)              {                  Log.Error("Failed to open IPC connection:" + Environment.NewLine + ex);                  ExitCode = InvalidHandle;                  Stop();              }              catch (SecurityException ex)              {                  Log.Error("Failed to open IPC connection:" + Environment.NewLine + ex);                  ExitCode = InvalidHandle;                  Stop();              }
Magic Number,ZeroInstall.Store.Service,StoreService,C:\repos\0install_0install-win\src\Store.Service\StoreService.cs,LogHandler,The following statement contains a magic number: const int maxMessageLength = 16000;
