Implementation smell,Namespace,Class,File,Method,Description
Complex Method,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateScores,Cyclomatic complexity of the method is 15
Complex Method,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,HandleInput,Cyclomatic complexity of the method is 15
Complex Method,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,HandleMouse,Cyclomatic complexity of the method is 18
Long Statement,VocaluxeLib.PartyModes.Challenge,CChallengeRounds,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CChallengeRounds.cs,_GetMatchingCombination,The length of the statement  "            // It may happen' that there are only players that already sung against each other. So create a 2nd best option with the most number of players that should sing in it " is 166.
Long Statement,VocaluxeLib.PartyModes.Challenge,CChallengeRounds,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CChallengeRounds.cs,_GetMatchingCombination,The length of the statement  "            // And select the combination that minimizes the sum of the number of songs sung (--> favor rounds with players that sung less than others) " is 139.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeSongs,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeSongs.cs,_SetAllowedOptions,The length of the statement  "            AllowedSongModes = new EGameMode[] { EGameMode.TR_GAMEMODE_NORMAL' EGameMode.TR_GAMEMODE_SHORTSONG' EGameMode.TR_GAMEMODE_MEDLEY }; " is 131.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,SetDefaults,The length of the statement  "            if (CBase.Config.GetTabs() == EOffOn.TR_CONFIG_ON && _ScreenSongOptions.Sorting.SongSorting != ESongSorting.TR_CONFIG_NONE) " is 123.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateSongList,The length of the statement  "                    GameData.Songs.AddRange(avSongs.Where(song => song.AvailableGameModes.Contains(EGameMode.TR_GAMEMODE_MEDLEY)).Select(song => song.ID)); " is 135.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateSongList,The length of the statement  "                    CBase.Songs.SortSongs(GameData.Sorting' EOffOn.TR_CONFIG_ON' CBase.Config.GetIgnoreArticles() 'String.Empty' EDuetOptions.NoDuets' -1); " is 135.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateSongList,The length of the statement  "                    GameData.Songs.AddRange(avSongs.Where(song => song.AvailableGameModes.Contains(EGameMode.TR_GAMEMODE_MEDLEY)).Select(song => song.ID)); " is 135.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateSongList,The length of the statement  "                    CBase.Songs.SortSongs(oldSorting' CBase.Config.GetTabs()' CBase.Config.GetIgnoreArticles()' String.Empty' EDuetOptions.NoDuets' -1); " is 132.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateScores,The length of the statement  "                    var row = new CResultTableRow { PlayerID = GameData.ProfileIDs[i]' NumPlayed = 0' NumWon = 0' NumSingPoints = 0' NumGamePoints = 0 }; " is 133.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_GetPointsForPlayer,The length of the statement  "                var stat = new SStats {ProfileID = results[i].ProfileID' SingPoints = (int)Math.Round(results[i].Points)' Won = 0' GamePoints = 0}; " is 131.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeConfig,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeConfig.cs,Init,The length of the statement  "            _ThemeSelectSlides = new string[] { _SelectSlideNumPlayers' _SelectSlideNumMics' _SelectSlideNumRounds' _SelectSlideNumJokers' _SelectSlideRefillJokers }; " is 154.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeConfig,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeConfig.cs,_SetRoundSteps,The length of the statement  "            if (_PartyMode.GameData.NumPlayerAtOnce < 1 || _PartyMode.GameData.NumPlayer < 1 || _PartyMode.GameData.NumPlayerAtOnce > _PartyMode.GameData.NumPlayer) " is 152.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,Init,The length of the statement  "                    _TextPosition' _TextPlayerName' _TextNumPlayed' _TextWon' _TextSingPoints' _TextGamePoints' _TextNextPlayer' _TextPopupReallyExit' _TextRoundNumber' " is 148.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,Init,The length of the statement  "                    _ButtonNextRound' _ButtonBack' _ButtonExit' _ButtonPopupYes' _ButtonPopupNo' _ButtonPlayerScrollDown' _ButtonPlayerScrollUp' _ButtonRoundsScrollDown' " is 149.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The length of the statement  "                      ((_PartyMode.GameData.NumPlayerAtOnce * _Statics[_StaticNextPlayer].Rect.W) + ((_PartyMode.GameData.NumPlayerAtOnce - 1) * 15)) / 2; " is 132.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerContents,The length of the statement  "                    Guid id = _PartyMode.GameData.ProfileIDs[_PartyMode.GameData.Rounds[_PartyMode.GameData.CurrentRoundNr - 1].Players[i]]; " is 120.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The length of the statement  "                        float x = numberX + 15 + (CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow * (column - row * numPlayerInOneRow) + " is 148.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateRoundsTable,The length of the statement  "                    if (_PartyMode.GameData.Rounds.Count > i + _RoundsTableOffset && _PartyMode.GameData.Rounds[i + _RoundsTableOffset].Players.Count > p) " is 134.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateRoundsTable,The length of the statement  "                            CBase.Profiles.GetPlayerName(_PartyMode.GameData.ProfileIDs[_PartyMode.GameData.Rounds[i + _RoundsTableOffset].Players[p]]); " is 124.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateRoundsTable,The length of the statement  "            _Buttons[_ButtonRoundsScrollDown].Visible = _PartyMode.GameData.Rounds.Count - _NumRoundsVisible - _RoundsTableOffset > 0; " is 122.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildPlayerTable,The length of the statement  "            _PlayerTableScrollArea = new SRectF {X = _Texts[_TextPosition].X' Y = _Texts[_TextPosition].Y' W = _Texts[_TextGamePoints].X - _Texts[_TextPosition].X}; " is 152.
Long Statement,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdatePlayerTable,The length of the statement  "            _Buttons[_ButtonPlayerScrollDown].Visible = _PartyMode.GameData.ProfileIDs.Count - _NumPlayerVisible - _PlayerTableOffset > 0; " is 126.
Magic Number,VocaluxeLib.PartyModes.Challenge,CChallengeRounds,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CChallengeRounds.cs,_BuildRounds,The following statement contains a magic number: i < numRounds * 10
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: _ScreenSongOptions.Selection.NumJokers = new int[] {5' 5};
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: _ScreenSongOptions.Selection.NumJokers = new int[] {5' 5};
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: GameData = new SData              {                  NumPlayer = 4'                  NumPlayerAtOnce = 2'                  NumRounds = 12'                  NumJokers = 5'                  RefillJokers = true'                  CurrentRoundNr = 1'                  ProfileIDs = new List<Guid>()'                  Sorting = CBase.Config.GetSongSorting()'                  SongSource = ESongSource.TR_SONGSOURCE_ALLSONGS'                  PlaylistID = 0'                  CategoryIndex = 0'                  GameMode = EGameMode.TR_GAMEMODE_NORMAL'                  NumMedleySongs = 5'                  Results = null'                  Songs = new List<int>()              };
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: GameData = new SData              {                  NumPlayer = 4'                  NumPlayerAtOnce = 2'                  NumRounds = 12'                  NumJokers = 5'                  RefillJokers = true'                  CurrentRoundNr = 1'                  ProfileIDs = new List<Guid>()'                  Sorting = CBase.Config.GetSongSorting()'                  SongSource = ESongSource.TR_SONGSOURCE_ALLSONGS'                  PlaylistID = 0'                  CategoryIndex = 0'                  GameMode = EGameMode.TR_GAMEMODE_NORMAL'                  NumMedleySongs = 5'                  Results = null'                  Songs = new List<int>()              };
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: GameData = new SData              {                  NumPlayer = 4'                  NumPlayerAtOnce = 2'                  NumRounds = 12'                  NumJokers = 5'                  RefillJokers = true'                  CurrentRoundNr = 1'                  ProfileIDs = new List<Guid>()'                  Sorting = CBase.Config.GetSongSorting()'                  SongSource = ESongSource.TR_SONGSOURCE_ALLSONGS'                  PlaylistID = 0'                  CategoryIndex = 0'                  GameMode = EGameMode.TR_GAMEMODE_NORMAL'                  NumMedleySongs = 5'                  Results = null'                  Songs = new List<int>()              };
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: GameData = new SData              {                  NumPlayer = 4'                  NumPlayerAtOnce = 2'                  NumRounds = 12'                  NumJokers = 5'                  RefillJokers = true'                  CurrentRoundNr = 1'                  ProfileIDs = new List<Guid>()'                  Sorting = CBase.Config.GetSongSorting()'                  SongSource = ESongSource.TR_SONGSOURCE_ALLSONGS'                  PlaylistID = 0'                  CategoryIndex = 0'                  GameMode = EGameMode.TR_GAMEMODE_NORMAL'                  NumMedleySongs = 5'                  Results = null'                  Songs = new List<int>()              };
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,CPartyModeChallenge,The following statement contains a magic number: GameData = new SData              {                  NumPlayer = 4'                  NumPlayerAtOnce = 2'                  NumRounds = 12'                  NumJokers = 5'                  RefillJokers = true'                  CurrentRoundNr = 1'                  ProfileIDs = new List<Guid>()'                  Sorting = CBase.Config.GetSongSorting()'                  SongSource = ESongSource.TR_SONGSOURCE_ALLSONGS'                  PlaylistID = 0'                  CategoryIndex = 0'                  GameMode = EGameMode.TR_GAMEMODE_NORMAL'                  NumMedleySongs = 5'                  Results = null'                  Songs = new List<int>()              };
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateScores,The following statement contains a magic number: GameData.Results[GameData.CurrentRoundNr - 2' p] = (int)Math.Round(players[p].Points);
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_GetPointsForPlayer,The following statement contains a magic number: res.GamePoints = i * 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeConfig,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeConfig.cs,_RebuildSlides,The following statement contains a magic number: i <= 10
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: float x = (float)CBase.Settings.GetRenderW() / 2 -                        ((_PartyMode.GameData.NumPlayerAtOnce * _Statics[_StaticNextPlayer].Rect.W) + ((_PartyMode.GameData.NumPlayerAtOnce - 1) * 15)) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: float x = (float)CBase.Settings.GetRenderW() / 2 -                        ((_PartyMode.GameData.NumPlayerAtOnce * _Statics[_StaticNextPlayer].Rect.W) + ((_PartyMode.GameData.NumPlayerAtOnce - 1) * 15)) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: float x = (float)CBase.Settings.GetRenderW() / 2 -                        ((_PartyMode.GameData.NumPlayerAtOnce * _Statics[_StaticNextPlayer].Rect.W) + ((_PartyMode.GameData.NumPlayerAtOnce - 1) * 15)) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: const float staticY = 590;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: const float textY = 550;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: _NextPlayerTexts[i].X = x + _Statics[_StaticNextPlayer].Rect.W / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_UpdateNextPlayerPositions,The following statement contains a magic number: x += _Statics[_StaticNextPlayer].Rect.W + 15;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_CreateRoundsTable,The following statement contains a magic number: i < 5
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_CreateRoundsTable,The following statement contains a magic number: column < 3
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_CreateRoundsTable,The following statement contains a magic number: row < 2
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: const int numPlayerInOneRow = 3;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: _NumRoundsVisible = _PartyMode.GameData.NumPlayerAtOnce <= numPlayerInOneRow ? 5 : 3;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: _NumRoundsVisible = _PartyMode.GameData.NumPlayerAtOnce <= numPlayerInOneRow ? 5 : 3;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: _RoundsTableScrollArea.W = CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float x = numberX + 15 + (CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow * (column - row * numPlayerInOneRow) +                                    ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float x = numberX + 15 + (CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow * (column - row * numPlayerInOneRow) +                                    ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float x = numberX + 15 + (CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow * (column - row * numPlayerInOneRow) +                                    ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float x = numberX + 15 + (CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow * (column - row * numPlayerInOneRow) +                                    ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float maxw = ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2 - 5;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float maxw = ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2 - 5;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: float maxw = ((CBase.Settings.GetRenderW() - _Texts[_TextRoundNumber].X - 20) / numPlayerInThisRow) / 2 - 5;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: numberY = numberY + 2 * delta;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildRoundsTable,The following statement contains a magic number: numberY = numberY + delta / 2;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildPlayerTable,The following statement contains a magic number: float delta = _Texts[_TextPosition].Rect.H * 1.2f;
Magic Number,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,_BuildPlayerTable,The following statement contains a magic number: i < 10
Missing Default,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_PrepareSongSelection,The following switch statement is missing a default case: switch (GameData.SongSource)              {                  case ESongSource.TR_SONGSOURCE_ALLSONGS:                      _ScreenSongOptions.Sorting.SongSorting = CBase.Config.GetSongSorting();                      _ScreenSongOptions.Sorting.Tabs = CBase.Config.GetTabs();                      _ScreenSongOptions.Sorting.FilterPlaylistID = -1;                        _ScreenSongOptions.Selection.CategoryIndex = -1;                      _ScreenSongOptions.Selection.CategoryChangeAllowed = true;                      break;                    case ESongSource.TR_SONGSOURCE_CATEGORY:                      _ScreenSongOptions.Sorting.SongSorting = GameData.Sorting;                      _ScreenSongOptions.Sorting.Tabs = EOffOn.TR_CONFIG_ON;                      _ScreenSongOptions.Sorting.FilterPlaylistID = -1;                        _ScreenSongOptions.Selection.CategoryIndex = GameData.CategoryIndex;                      _ScreenSongOptions.Selection.CategoryChangeAllowed = false;                      break;                    case ESongSource.TR_SONGSOURCE_PLAYLIST:                      _ScreenSongOptions.Sorting.SongSorting = CBase.Config.GetSongSorting();                      _ScreenSongOptions.Sorting.Tabs = EOffOn.TR_CONFIG_OFF;                      _ScreenSongOptions.Sorting.FilterPlaylistID = GameData.PlaylistID;                        _ScreenSongOptions.Selection.CategoryChangeAllowed = false;                      break;              }
Missing Default,VocaluxeLib.PartyModes.Challenge,CPartyModeChallenge,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyModeChallenge.cs,_UpdateSongList,The following switch statement is missing a default case: switch (GameData.SongSource)              {                  case ESongSource.TR_SONGSOURCE_PLAYLIST:                      for (int i = 0; i < CBase.Playlist.GetSongCount(GameData.PlaylistID); i++)                      {                          int id = CBase.Playlist.GetSong(GameData.PlaylistID' i).SongID;                          if (CBase.Songs.GetSongByID(id).AvailableGameModes.Contains(EGameMode.TR_GAMEMODE_MEDLEY))                              GameData.Songs.Add(id);                      }                      break;                    case ESongSource.TR_SONGSOURCE_ALLSONGS:                      ReadOnlyCollection<CSong> avSongs = CBase.Songs.GetSongs();                      GameData.Songs.AddRange(avSongs.Where(song => song.AvailableGameModes.Contains(EGameMode.TR_GAMEMODE_MEDLEY)).Select(song => song.ID));                      break;                    case ESongSource.TR_SONGSOURCE_CATEGORY:                      //Save old sorting to roll it back after getting songs for configured category                      ESongSorting oldSorting = CBase.Config.GetSongSorting();                      CBase.Songs.SortSongs(GameData.Sorting' EOffOn.TR_CONFIG_ON' CBase.Config.GetIgnoreArticles() 'String.Empty' EDuetOptions.NoDuets' -1);                        CBase.Songs.SetCategory(GameData.CategoryIndex);                      avSongs = CBase.Songs.GetVisibleSongs();                      GameData.Songs.AddRange(avSongs.Where(song => song.AvailableGameModes.Contains(EGameMode.TR_GAMEMODE_MEDLEY)).Select(song => song.ID));                        CBase.Songs.SetCategory(-1);                      CBase.Songs.SortSongs(oldSorting' CBase.Config.GetTabs()' CBase.Config.GetIgnoreArticles()' String.Empty' EDuetOptions.NoDuets' -1);                      break;              }
Missing Default,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeConfig,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeConfig.cs,HandleInput,The following switch statement is missing a default case: switch (keyEvent.Key)                  {                      case Keys.Back:                      case Keys.Escape:                          _PartyMode.Back();                          break;                        case Keys.Enter:                          _UpdateSlides();                            if (_Buttons[_ButtonBack].Selected)                              _PartyMode.Back();                            if (_Buttons[_ButtonNext].Selected)                              _PartyMode.Next();                          break;                        case Keys.Left:                          _UpdateSlides();                          break;                        case Keys.Right:                          _UpdateSlides();                          break;                  }
Missing Default,VocaluxeLib.PartyModes.Challenge,CPartyScreenChallengeMain,D:\research\architectureSmells\repos\Vocaluxe_Vocaluxe\PartyModes\PartyModeChallenge\CPartyScreenChallengeMain.cs,HandleInput,The following switch statement is missing a default case: switch (keyEvent.Key)                  {                      case Keys.Back:                      case Keys.Escape:                          if (!_ExitPopupVisible)                          {                              if (_PartyMode.GameData.CurrentRoundNr == 1)                                  _PartyMode.Back();                              else                                  _ShowPopup(true);                          }                          else                              _ShowPopup(false);                          break;                        case Keys.Enter:                          if (!_ExitPopupVisible)                          {                              if (_Buttons[_ButtonNextRound].Selected)                                  _PartyMode.Next();                              if (_Buttons[_ButtonBack].Selected && _PartyMode.GameData.CurrentRoundNr == 1)                                  _PartyMode.Back();                              if (_Buttons[_ButtonExit].Selected && _PartyMode.GameData.CurrentRoundNr > 1)                                  _ShowPopup(true);                              if (_Buttons[_ButtonPlayerScrollUp].Selected)                                  _ScrollPlayerTable(-1);                              if (_Buttons[_ButtonPlayerScrollDown].Selected)                                  _ScrollPlayerTable(1);                              if (_Buttons[_ButtonRoundsScrollUp].Selected)                                  _ScrollRoundsTable(-1);                              if (_Buttons[_ButtonRoundsScrollDown].Selected)                                  _ScrollRoundsTable(1);                          }                          else                          {                              if (_Buttons[_ButtonPopupYes].Selected)                                  _EndParty();                              if (_Buttons[_ButtonPopupNo].Selected)                                  _ShowPopup(false);                          }                          break;                  }
