Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Benchmark.LinearAlgebra,DenseMatrixProduct,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseMatrixProduct.cs,DenseMatrixProduct,The following statement contains a magic number: new[] { 8' 64' 128 }
Magic Number,Benchmark.LinearAlgebra,DenseMatrixProduct,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseMatrixProduct.cs,DenseMatrixProduct,The following statement contains a magic number: new[] { 8' 64' 128 }
Magic Number,Benchmark.LinearAlgebra,DenseMatrixProduct,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseMatrixProduct.cs,DenseMatrixProduct,The following statement contains a magic number: new[] { 8' 64' 128 }
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _a = Generate.Normal(N' 2.0' 10.0);
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _a = Generate.Normal(N' 2.0' 10.0);
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _b = Generate.Normal(N' 200.0' 10.0);
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _b = Generate.Normal(N' 200.0' 10.0);
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _ac = Generate.Map2(_a' Generate.Normal(N' 2.0' 10.0)' (a' i) => new Complex(a' i));
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _ac = Generate.Map2(_a' Generate.Normal(N' 2.0' 10.0)' (a' i) => new Complex(a' i));
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _bc = Generate.Map2(_b' Generate.Normal(N' 200.0' 10.0)' (b' i) => new Complex(b' i));
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following statement contains a magic number: _bc = Generate.Map2(_b' Generate.Normal(N' 200.0' 10.0)' (b' i) => new Complex(b' i));
Magic Number,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,ProviderScaleArrays,The following statement contains a magic number: LinearAlgebraControl.Provider.ScaleArray(2.0' _a' r);
Magic Number,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following statement contains a magic number: var realSinusoidal = Generate.Sinusoidal(N' 32' -2.0' 2.0);
Magic Number,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following statement contains a magic number: var realSinusoidal = Generate.Sinusoidal(N' 32' -2.0' 2.0);
Magic Number,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following statement contains a magic number: var realSinusoidal = Generate.Sinusoidal(N' 32' -2.0' 2.0);
Magic Number,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following statement contains a magic number: var imagSawtooth = Generate.Sawtooth(N' 32' -20.0' 20.0);
Magic Number,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following statement contains a magic number: var imagSawtooth = Generate.Sawtooth(N' 32' -20.0' 20.0);
Magic Number,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following statement contains a magic number: var imagSawtooth = Generate.Sawtooth(N' 32' -20.0' 20.0);
Missing Default,Benchmark.LinearAlgebra,DenseMatrixProduct,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseMatrixProduct.cs,Setup,The following switch statement is missing a default case: switch (Provider)              {                  case ProviderId.Managed:                      Control.UseManaged();                      break;                  case ProviderId.NativeMKLAutoHigh:                      Control.UseNativeMKL(MklConsistency.Auto' MklPrecision.Double' MklAccuracy.High);                      break;                  case ProviderId.NativeMKLAutoLow:                      Control.UseNativeMKL(MklConsistency.Auto' MklPrecision.Double' MklAccuracy.Low);                      break;                  case ProviderId.NativeMKLAvx2High:                      Control.UseNativeMKL(MklConsistency.AVX2' MklPrecision.Double' MklAccuracy.High);                      break;                  case ProviderId.NativeMKLAvx2Low:                      Control.UseNativeMKL(MklConsistency.AVX2' MklPrecision.Double' MklAccuracy.Low);                      break;              }
Missing Default,Benchmark.LinearAlgebra,DenseVector,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\LinearAlgebra\DenseVector.cs,Setup,The following switch statement is missing a default case: switch (Provider)              {                  case ProviderId.Managed:                      Control.UseManaged();                      break;                  case ProviderId.ManagedReference:                      Control.UseManagedReference();                      break;                  case ProviderId.NativeMKL:                      Control.UseNativeMKL(MklConsistency.Auto' MklPrecision.Double' MklAccuracy.High);                      break;              }
Missing Default,Benchmark.Transforms,FFT,D:\research\architectureSmells\repos\mathnet_mathnet-numerics\src\Benchmark\Transforms\FFT.cs,GlobalSetup,The following switch statement is missing a default case: switch (Provider)              {                  case ProviderId.Managed:                      Control.UseManaged();                      break;                  case ProviderId.NativeMKL:                      Control.UseNativeMKL(MklConsistency.Auto' MklPrecision.Double' MklAccuracy.High);                      break;              }
