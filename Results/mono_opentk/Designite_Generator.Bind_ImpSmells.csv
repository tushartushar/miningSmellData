Implementation smell,Namespace,Class,File,Method,Description
Long Method,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,CreateBody,The method has 177 lines of code.
Long Method,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,The method has 202 lines of code.
Complex Method,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,GenerateParameterString,Cyclomatic complexity of the method is 17
Complex Method,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,WriteDefinitions,Cyclomatic complexity of the method is 10
Complex Method,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,WriteDocumentation,Cyclomatic complexity of the method is 11
Complex Method,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteBindings,Cyclomatic complexity of the method is 8
Complex Method,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteDocumentation,Cyclomatic complexity of the method is 12
Complex Method,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteEnums,Cyclomatic complexity of the method is 11
Complex Method,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,TranslateReturnType,Cyclomatic complexity of the method is 8
Complex Method,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,TranslateParameters,Cyclomatic complexity of the method is 8
Complex Method,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,WrapParameters,Cyclomatic complexity of the method is 11
Complex Method,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,CreateBody,Cyclomatic complexity of the method is 29
Complex Method,Bind,JavaSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\JavaSpecWriter.cs,GenerateParameterString,Cyclomatic complexity of the method is 15
Complex Method,Bind,JavaSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\JavaSpecWriter.cs,WriteDocumentation,Cyclomatic complexity of the method is 11
Complex Method,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,Cyclomatic complexity of the method is 26
Complex Method,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,SetGeneratorMode,Cyclomatic complexity of the method is 8
Complex Method,Bind,EnumProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\EnumProcessor.cs,TranslateEnumName,Cyclomatic complexity of the method is 11
Complex Method,Bind,EnumProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\EnumProcessor.cs,TranslateConstantName,Cyclomatic complexity of the method is 8
Complex Method,Bind,XmlSpecReader,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\XmlSpecReader.cs,ReadEnums,Cyclomatic complexity of the method is 11
Complex Method,Bind.Structures,Type,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Type.cs,Translate,Cyclomatic complexity of the method is 12
Complex Method,Bind.Structures,Function,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Function.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Bind.Structures,Constant,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Constant.cs,TranslateConstantWithReference,Cyclomatic complexity of the method is 9
Complex Method,Bind.Structures,Parameter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,ToString,Cyclomatic complexity of the method is 14
Complex Method,Bind.Structures,ParameterCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,BuildCallStringCache,Cyclomatic complexity of the method is 10
Long Statement,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteDelegates,The length of the statement  "            Trace.WriteLine(String.Format("Writing delegates to:\t{0}.{1}.{2}"' Settings.OutputNamespace' Settings.OutputClass' Settings.DelegatesClass)); " is 142.
Long Statement,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteImports,The length of the statement  "            Trace.WriteLine(String.Format("Writing imports to:\t{0}.{1}.{2}"' Settings.OutputNamespace' Settings.OutputClass' Settings.ImportsClass)); " is 138.
Long Statement,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteEnums,The length of the statement  "                Trace.WriteLine(String.Format("Writing enums to:\t{0}.{1}.{2}"' Settings.OutputNamespace' Settings.OutputClass' Settings.NestedEnumsClass)); " is 140.
Long Statement,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteEnums,The length of the statement  "                            select Settings.GLClass + (function.Extension != "Core" ? ("." + function.Extension) : "") + "." + function.TrimmedName) " is 120.
Long Statement,Bind,CSharpSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CSharpSpecWriter.cs,WriteEnums,The length of the statement  "                            Char.IsDigit(c.Value[0]) ? c.Value : c.Value.StartsWith(Settings.ConstantPrefix) ? c.Value : Settings.ConstantPrefix + c.Value' " is 127.
Long Statement,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,The length of the statement  "                                Settings.Compatibility |= val.ToLower() == "simple_enums" ? Settings.Legacy.NoAdvancedEnumProcessing : Settings.Legacy.None;" is 124.
Long Statement,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,The length of the statement  "                                //Settings.Compatibility |= b[1].ToLower().Contains("novoid") ? Settings.Legacy.TurnVoidPointersToIntPtr : Settings.Legacy.None;" is 128.
Long Statement,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,The length of the statement  "                                Settings.Compatibility |= val.ToLower() == "permutations" ? Settings.Legacy.GenerateAllPermutations : Settings.Legacy.None;" is 123.
Long Statement,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,The length of the statement  "                                Settings.Compatibility |= val.ToLower() == "keep_untyped_enums" ? Settings.Legacy.KeepUntypedEnums : Settings.Legacy.None;" is 122.
Long Statement,Bind,EnumProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\EnumProcessor.cs,ReplaceConstant,The length of the statement  "                XPathNavigator constant_override = enum_override.SelectSingleNode(String.Format("token[@name='{0}']"' c.OriginalName)) ?? " is 121.
Long Statement,Bind.Structures,Type,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Type.cs,Translate,The length of the statement  "            XPathNavigator enum_override = overrides.SelectSingleNode(String.Format("/signatures/replace/enum[@name='{0}']/name"' CurrentType));" is 132.
Long Statement,Bind.Structures,FunctionCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Function.cs,AddChecked,The length of the statement  "                    if ((existing.Parameters.HasUnsignedParameters && !unsignedFunctions.IsMatch(existing.Name) && unsignedFunctions.IsMatch(f.Name)) ||" is 132.
Long Statement,Bind.Structures,FunctionCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Function.cs,AddChecked,The length of the statement  "                        (!existing.Parameters.HasUnsignedParameters && unsignedFunctions.IsMatch(existing.Name) && !unsignedFunctions.IsMatch(f.Name)))" is 127.
Long Statement,Bind.Structures,Constant,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Constant.cs,TranslateConstantWithReference,The length of the statement  "                else if (auxEnums != null && auxEnums.ContainsKey(c.Reference) && auxEnums[c.Reference].ConstantCollection.ContainsKey(c.Value))" is 128.
Long Statement,Bind.Structures,Parameter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,ToString,The length of the statement  "                if (!override_unsafe_setting && ((Settings.Compatibility & Settings.Legacy.NoPublicUnsafeFunctions) != Settings.Legacy.None))" is 125.
Long Statement,Bind.Structures,Parameter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,Translate,The length of the statement  "                    (!String.IsNullOrEmpty(PreviousType) && PreviousType.ToLower().Contains("void"))) /*|| CurrentType.Contains("IntPtr"))*/" is 120.
Complex Conditional,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,TrimName,The conditional expression  "m.Value[m.Length - 1] == 'v' && EndingsAddV.IsMatch(name) &&                          !name.StartsWith("Get") && !name.StartsWith("MatrixIndex")"  is complex.
Complex Conditional,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,SetGeneratorMode,The conditional expression  "arg == "gl" || arg == "gl2" || arg == "gl3" || arg == "gl4""  is complex.
Complex Conditional,Bind,BindStreamWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\BindStreamWriter.cs,WriteLine,The conditional expression  "Environment.OSVersion.Platform == PlatformID.Win32Windows ||                 Environment.OSVersion.Platform == PlatformID.Win32NT ||                 Environment.OSVersion.Platform == PlatformID.Win32S ||                 Environment.OSVersion.Platform == PlatformID.WinCE"  is complex.
Complex Conditional,Bind,EnumProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\EnumProcessor.cs,TranslateConstantName,The conditional expression  "is_after_digit && (c == 'D' || c == 'R' || c == 'G' || c == 'B' || c == 'A')"  is complex.
Complex Conditional,Bind.Structures,FunctionCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Function.cs,AddChecked,The conditional expression  "(existing.Parameters.HasUnsignedParameters && !unsignedFunctions.IsMatch(existing.Name) && unsignedFunctions.IsMatch(f.Name)) ||                         (!existing.Parameters.HasUnsignedParameters && unsignedFunctions.IsMatch(existing.Name) && !unsignedFunctions.IsMatch(f.Name))"  is complex.
Magic Number,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,GenerateParameterString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,GenerateParameterString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,GenerateCallString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,CppSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\CppSpecWriter.cs,GenerateCallString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,WrapVoidPointers,The following statement contains a magic number: func.Parameters[index].Array = 2;
Magic Number,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,WrapVoidPointers,The following statement contains a magic number: func.Parameters[index].Array = 3;
Magic Number,Bind,JavaSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\JavaSpecWriter.cs,GenerateParameterString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,JavaSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\JavaSpecWriter.cs,GenerateParameterString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,JavaSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\JavaSpecWriter.cs,GenerateGenericTypeString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,JavaSpecWriter,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\JavaSpecWriter.cs,GenerateGenericTypeString,The following statement contains a magic number: sb.Remove(sb.Length - 2' 2);
Magic Number,Bind,MainClass,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Main.cs,Main,The following statement contains a magic number: Console.WriteLine("Bindings generated in {0} seconds."' ticks / (double)10000000.0);
Magic Number,Bind,DocProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\DocProcessor.cs,ProcessFile,The following statement contains a magic number: int eqn_start = equation + 4;
Magic Number,Bind,DocProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\DocProcessor.cs,ProcessFile,The following statement contains a magic number: int eqn_end = removed.IndexOf(":-->") - equation - 4;
Magic Number,Bind,DocProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\DocProcessor.cs,ProcessFile,The following statement contains a magic number: eqn_end = removed.IndexOf(": -->") - equation - 4;
Magic Number,Bind,EnumProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\EnumProcessor.cs,TranslateConstantValue,The following statement contains a magic number: value = value.Substring(0' value.Length - 3);
Magic Number,Bind,Utilities,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Utilities.cs,ResolveName,The following statement contains a magic number: return s.Substring (2);
Magic Number,Bind,Utilities,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Utilities.cs,GetGL2Extension,The following statement contains a magic number: ext.Length > 2
Magic Number,Bind,XmlSpecReader,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\XmlSpecReader.cs,ReadCSTypeMap,The following statement contains a magic number: words.Length < 2
Magic Number,Bind.Structures,FunctionBody,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Function.cs,Unindent,The following statement contains a magic number: indent = indent.Substring(4);
Magic Number,Bind.Structures,FunctionBody,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Function.cs,Unindent,The following statement contains a magic number: indent.Length >= 4
Magic Number,Bind.Structures,ParameterCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,BuildToStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Magic Number,Bind.Structures,ParameterCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,BuildToStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Magic Number,Bind.Structures,ParameterCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,BuildCallStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Magic Number,Bind.Structures,ParameterCollection,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Parameter.cs,BuildCallStringCache,The following statement contains a magic number: sb.Replace("' "' ")"' sb.Length - 2' 2);
Missing Default,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,TranslateParameters,The following switch statement is missing a default case: switch (node.Name)                              {                                  case "type":                                      d.Parameters[i].CurrentType = (string)node.TypedValue;                                      break;                                  case "name":                                      d.Parameters[i].Name = (string)node.TypedValue;                                      break;                                  case "flow":                                      d.Parameters[i].Flow = Parameter.GetFlowDirection((string)node.TypedValue);                                      break;                              }
Missing Default,Bind,FuncProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\FuncProcessor.cs,WrapReturnType,The following switch statement is missing a default case: switch (func.ReturnType.WrapperType)              {                  case WrapperTypes.StringReturnType:                      func.ReturnType.QualifiedType = "String";                      break;              }
Missing Default,Bind,EnumProcessor,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\EnumProcessor.cs,ReplaceConstant,The following switch statement is missing a default case: switch (node.Name)                          {                              case "name": c.Name = (string)node.TypedValue; break;                              case "value": c.Value = (string)node.TypedValue; break;                              case "reference": c.Reference = (string)node.TypedValue; break;                          }
Missing Default,Bind,XmlSpecReader,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\XmlSpecReader.cs,ReadDelegates,The following switch statement is missing a default case: switch (param.Name)                      {                          case "returns":                              d.ReturnType.CurrentType = param.GetAttribute("type"' String.Empty);                              break;                            case "param":                              Parameter p = new Parameter();                              p.CurrentType = param.GetAttribute("type"' String.Empty);                              p.Name = param.GetAttribute("name"' String.Empty);                                string element_count = param.GetAttribute("elementcount"' String.Empty);                              if (String.IsNullOrEmpty(element_count))                                  element_count = param.GetAttribute("count"' String.Empty);                              if (!String.IsNullOrEmpty(element_count))                                  p.ElementCount = Int32.Parse(element_count);                                p.Flow = Parameter.GetFlowDirection(param.GetAttribute("flow"' String.Empty));                                d.Parameters.Add(p);                              break;                      }
Missing Default,Bind.Structures,Type,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Type.cs,GetCLSCompliantType,The following switch statement is missing a default case: switch (CurrentType)                 {                     case "UInt16":                     case "ushort":                         return "Int16";                     case "UInt32":                     case "uint":                         return "Int32";                     case "UInt64":                     case "ulong":                         return "Int64";                     case "SByte":                     case "sbyte":                         return "Byte";                     case "UIntPtr":                         return "IntPtr";                 }
Missing Default,Bind.Structures,Type,C:\research\architectureSmells\repos\mono_opentk\Source\Bind\Structures\Type.cs,Translate,The following switch statement is missing a default case: switch (CurrentType.ToLower())                     {                         case "string": QualifiedType = "String"; break;                     }
