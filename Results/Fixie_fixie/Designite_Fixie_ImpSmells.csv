Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Fixie.Internal,ClassRunner,C:\repos\Fixie_fixie\src\Fixie\Internal\ClassRunner.cs,Run,Cyclomatic complexity of the method is 9
Long Statement,Fixie.Execution,ExecutionEnvironment,C:\repos\Fixie_fixie\src\Fixie\Execution\ExecutionEnvironment.cs,Create,The length of the statement  "            return (T)appDomain.CreateInstanceAndUnwrap(typeof(T).Assembly.FullName' typeof(T).FullName' false' 0' null' args' null' null); " is 127.
Long Statement,Fixie,Case,C:\repos\Fixie_fixie\src\Fixie\Case.cs,GetName,The length of the statement  "                name = $"{name}<{string.Join("' "' Method.GetGenericArguments().Select(x => x.IsGenericParameter ? x.Name : x.FullName))}>"; " is 124.
Long Statement,Fixie.Internal,ConventionDiscoverer,C:\repos\Fixie_fixie\src\Fixie\Internal\ConventionDiscoverer.cs,GetConstructor,The length of the statement  "                $"Could not construct an instance of type '{type.FullName}'.  Expected to find exactly 1 public constructor' but found {constructors.Length}."); " is 144.
Long Statement,Fixie.Internal,GenericArgumentResolver,C:\repos\Fixie_fixie\src\Fixie\Internal\GenericArgumentResolver.cs,ResolveTypeArguments,The length of the statement  "            return genericArguments.Select(genericArgument => ResolveTypeArgument(genericArgument' parameterTypes' parameters)).ToArray(); " is 126.
Long Statement,Fixie.Internal,Runner,C:\repos\Fixie_fixie\src\Fixie\Internal\Runner.cs,GetTypeAndNestedTypes,The length of the statement  "            foreach (var nested in type.GetNestedTypes(BindingFlags.Public | BindingFlags.NonPublic).SelectMany(GetTypeAndNestedTypes)) " is 123.
Magic Number,Fixie.Internal,ObjectExtensions,C:\repos\Fixie_fixie\src\Fixie\Internal\ObjectExtensions.cs,ShortStringLiteral,The following statement contains a magic number: const int trimLength = 15;
Magic Number,Fixie.Reports,XUnitXmlReport,C:\repos\Fixie_fixie\src\Fixie\Reports\XUnitXmlReport.cs,Assembly,The following statement contains a magic number: return new XElement("assembly"'                  new XAttribute("name"' assemblyResult.Name)'                  new XAttribute("run-date"' now.ToString("yyyy-MM-dd"))'                  new XAttribute("run-time"' now.ToString("HH:mm:ss"))'                  new XAttribute("configFile"' AppDomain.CurrentDomain.SetupInformation.ConfigurationFile)'                  new XAttribute("time"' Seconds(assemblyResult.Duration))'                  new XAttribute("total"' assemblyResult.Total)'                  new XAttribute("passed"' assemblyResult.Passed)'                  new XAttribute("failed"' assemblyResult.Failed)'                  new XAttribute("skipped"' assemblyResult.Skipped)'                  new XAttribute("environment"' String.Format("{0}-bit .NET {1}"' IntPtr.Size * 8' Environment.Version))'                  new XAttribute("test-framework"' Framework.Version)'                  classResults.Select(Class));
