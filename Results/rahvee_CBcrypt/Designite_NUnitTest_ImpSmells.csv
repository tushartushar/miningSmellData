Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			 *   4. The client generates ChallengeResponse from clientKey and serverChallengeDeserialized. Sends ChallengeResponse to server " is 127.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			var jsonSettings = new JsonSerializerSettings() { TypeNameHandling = TypeNameHandling.All' Formatting = Formatting.Indented }; " is 126.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			// If the user is allowed to "save password" in their GUI' you should use CBCrypt.GenerateHighCostSecret to fetch a byte " is 120.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			var clientKey = new CBCryptKey(CBCryptHostId: serverChallengeDeserialized.CBCryptHostId' username: "syndrome"' password: "kronos"); " is 131.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			// Now since this is just a Unit Test' using a hard-coded CBCryptHostId' username' and password' we want to confirm that we " is 123.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			// have determinstically recreated the same keypair that we've previously generated for testing.  So we check as follows: " is 121.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			Assert.IsTrue(clientPrivateBase64 == @"MIIB8wIBADCB4wYHKoZIzj0CATCB1wIBATAsBgcqhkjOPQEBAiEA/////wAAAAEAAAAAAAAAAAAAAAD///////////////8wWwQg/////wAAAAEAAAAAAAAAAAAAAAD///////////////wEIFrGNdiqOpPns+u9VXaYhrxlHQawzFOw9jvOPD4n0mBLAxUAxJ02CIbnBJNqZnjhE50mt4GffpAEIQNrF9Hy4SxCR/i85uVjpEDydwN9gS3rM6D0oTlF2JjClgIhAP////8AAAAA//////////+85vqtpxeehPO5ysL8YyVRAgEBBIIBBjCCAQICAQEEIAqo5o7QbH4BQhMfctkCYZ9r5HpP3MKYsHTDVeLURVXcoIHaMIHXAgEBMCwGByqGSM49AQECIQD/////AAAAAQAAAAAAAAAAAAAAAP///////////////zBbBCD/////AAAAAQAAAAAAAAAAAAAAAP///////////////AQgWsY12Ko6k+ez671VdpiGvGUdBrDMU7D2O848PifSYEsDFQDEnTYIhucEk2pmeOETnSa3gZ9+kAQhA2sX0fLhLEJH+Lzm5WOkQPJ3A32BLeszoPShOUXYmMKWAiEA/////wAAAAD//////////7zm+q2nF56E87nKwvxjJVECAQE="'"clientPrivateBase64"); " is 736.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			Assert.IsTrue(clientPublicBase64 == @"MIIBKjCB4wYHKoZIzj0CATCB1wIBATAsBgcqhkjOPQEBAiEA/////wAAAAEAAAAAAAAAAAAAAAD///////////////8wWwQg/////wAAAAEAAAAAAAAAAAAAAAD///////////////wEIFrGNdiqOpPns+u9VXaYhrxlHQawzFOw9jvOPD4n0mBLAxUAxJ02CIbnBJNqZnjhE50mt4GffpAEIQNrF9Hy4SxCR/i85uVjpEDydwN9gS3rM6D0oTlF2JjClgIhAP////8AAAAA//////////+85vqtpxeehPO5ysL8YyVRAgEBA0IABDaM1UPl14Gq5yM4T4zpl2KPaB9CGiMhjNJv/PmMJC0dh/ayytfoGZ0CuS7EiHLK37Y5rq5Q10FOsK2z6UjYugY="'"clientPublicBase64"); " is 466.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			 *   4. The client generates ChallengeResponse from clientKey and serverChallengeDeserialized. Sends ChallengeResponse to server " is 127.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			var challengeResponseDeserialized = (ChallengeResponse)JsonConvert.DeserializeObject(challengeResponseStringAgain' jsonSettings); " is 129.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			Assert.IsTrue(serverChallenge.TryValidateChallengeResponse(challengeResponseDeserialized)' "Failed TryValidateChallengeResponse"); " is 130.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			// Now we have verified the challengeResponse' which means the client really has the private key associated to the exposed public key. " is 134.
Long Statement,NUnitTest,Test,C:\research\architectureSmells\repos\rahvee_CBcrypt\CBcrypt\NUnitTest\Test.cs,Test_CBCrypt_Server_Client_Handshake,The length of the statement  "			// We only need to check our database (or whatever) to ensure the client public key exposed in this session matches the client public " is 133.
