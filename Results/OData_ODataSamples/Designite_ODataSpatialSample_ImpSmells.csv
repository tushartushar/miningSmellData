Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.Spatial,GeographyFactory,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\SpatialFactory.cs,Point,The method has 5 parameters. Parameters: coordinateSystem' latitude' longitude' z' m
Long Parameter List,Microsoft.Spatial,GeographyFactory,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\SpatialFactory.cs,LineString,The method has 5 parameters. Parameters: coordinateSystem' latitude' longitude' z' m
Long Parameter List,Microsoft.Spatial,GeometryFactory,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\SpatialFactory.cs,Point,The method has 5 parameters. Parameters: coordinateSystem' x' y' z' m
Long Parameter List,Microsoft.Spatial,GeometryFactory,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\SpatialFactory.cs,LineString,The method has 5 parameters. Parameters: coordinateSystem' x' y' z' m
Long Statement,ODataSpatialSample,Program,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Program.cs,Main,The length of the statement  "            Query(client' "Customers?&$filter=geo.intersects(Location' geography'SRID=4326;POLYGON((0 0' 0 1.5' 1.5 1.5' 1.5 0' 0 0))')"); " is 126.
Complex Conditional,ODataSpatialSample.Controllers,CustomersController,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Controllers\CustomersController.cs,IsIntersection,The conditional expression  "point.Latitude < minLat || point.Latitude > maxLat ||                  point.Longitude < minLon || point.Longitude > maxLon"  is complex.
Magic Number,ODataSpatialSample.Controllers,CustomersController,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Controllers\CustomersController.cs,BindGeoIntersections,The following statement contains a magic number: Debug.Assert(2 == node.Parameters.Count());
Magic Number,ODataSpatialSample,Program,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Program.cs,BuildDatabase,The following statement contains a magic number: var customers = Enumerable.Range(1' 7).Select(e => new Customer              {                  Id = e'                  Name = names[e - 1]'                  DbLocation = DbGeography.FromText(String.Format("POINT({0} {1} {2} {3})"' e' e' e' e))'                  DbLineString = DbGeography.FromText(lineStrings[e - 1])              });
Magic Number,ODataSpatialSample,Program,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Program.cs,CreatePolygon,The following statement contains a magic number: GeographyPolygon polygonValue =                  GeographyFactory.Polygon()                      .Ring(0' 0)                      .LineTo(5' 0)                      .LineTo(5' 5)                      .LineTo(0' 5)                      .Build();
Magic Number,ODataSpatialSample,Program,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Program.cs,CreatePolygon,The following statement contains a magic number: GeographyPolygon polygonValue =                  GeographyFactory.Polygon()                      .Ring(0' 0)                      .LineTo(5' 0)                      .LineTo(5' 5)                      .LineTo(0' 5)                      .Build();
Magic Number,ODataSpatialSample,Program,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Program.cs,CreatePolygon,The following statement contains a magic number: GeographyPolygon polygonValue =                  GeographyFactory.Polygon()                      .Ring(0' 0)                      .LineTo(5' 0)                      .LineTo(5' 5)                      .LineTo(0' 5)                      .Build();
Magic Number,ODataSpatialSample,Program,C:\research\architectureSmells\repos\OData_ODataSamples\WebApiClassic\ODataSpatialSample\ODataSpatialSample\Program.cs,CreatePolygon,The following statement contains a magic number: GeographyPolygon polygonValue =                  GeographyFactory.Polygon()                      .Ring(0' 0)                      .LineTo(5' 0)                      .LineTo(5' 5)                      .LineTo(0' 5)                      .Build();
