Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NHibernateQueryableSample,Program,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Program.cs,RunClient,The length of the statement  "            Console.WriteLine("GET top 2 customers from Redmond and having all orders with amount greater than or equal to 10...\n"); " is 121.
Long Statement,NHibernateQueryableSample,Program,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Program.cs,RunClient,The length of the statement  "            HttpResponseMessage response = client.GetAsync("/Customers?$top=2&$skip=0&$orderby=Name desc' City asc&$filter=City eq 'Redmond' and Orders/all(o: o/Amount ge 10)").Result; " is 172.
Long Statement,NHibernateQueryableSample.Models,CustomersSessionFactory,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomersSessionFactory.cs,SeedDatabase,The length of the statement  "                    session.SaveOrUpdate(new Customer { Name = "Raghu"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 100' Quantity = 10 } } }); " is 174.
Long Statement,NHibernateQueryableSample.Models,CustomersSessionFactory,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomersSessionFactory.cs,SeedDatabase,The length of the statement  "                    session.SaveOrUpdate(new Customer { Name = "Ram"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 10' Quantity = 10 } } }); " is 171.
Magic Number,NHibernateQueryableSample.Models,CustomerMap,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomerMap.cs,CustomerMap,The following statement contains a magic number: Map(x => x.Address).Column("Address").Not.Nullable().Length(127);
Magic Number,NHibernateQueryableSample.Models,CustomerMap,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomerMap.cs,CustomerMap,The following statement contains a magic number: Map(x => x.City).Column("City").Not.Nullable().Length(127);
Magic Number,NHibernateQueryableSample.Models,CustomerMap,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomerMap.cs,CustomerMap,The following statement contains a magic number: Map(x => x.State).Column("State").Not.Nullable().Length(127);
Magic Number,NHibernateQueryableSample.Models,CustomersSessionFactory,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomersSessionFactory.cs,SeedDatabase,The following statement contains a magic number: using (var session = sessionFactory.OpenSession())              {                  using (var transaction = session.BeginTransaction())                  {                      session.SaveOrUpdate(new Customer { Name = "Raghu"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 100' Quantity = 10 } } });                      session.SaveOrUpdate(new Customer { Name = "Ram"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 10' Quantity = 10 } } });                      transaction.Commit();                  }                  session.Close();              }
Magic Number,NHibernateQueryableSample.Models,CustomersSessionFactory,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomersSessionFactory.cs,SeedDatabase,The following statement contains a magic number: using (var session = sessionFactory.OpenSession())              {                  using (var transaction = session.BeginTransaction())                  {                      session.SaveOrUpdate(new Customer { Name = "Raghu"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 100' Quantity = 10 } } });                      session.SaveOrUpdate(new Customer { Name = "Ram"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 10' Quantity = 10 } } });                      transaction.Commit();                  }                  session.Close();              }
Magic Number,NHibernateQueryableSample.Models,CustomersSessionFactory,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomersSessionFactory.cs,SeedDatabase,The following statement contains a magic number: using (var session = sessionFactory.OpenSession())              {                  using (var transaction = session.BeginTransaction())                  {                      session.SaveOrUpdate(new Customer { Name = "Raghu"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 100' Quantity = 10 } } });                      session.SaveOrUpdate(new Customer { Name = "Ram"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 10' Quantity = 10 } } });                      transaction.Commit();                  }                  session.Close();              }
Magic Number,NHibernateQueryableSample.Models,CustomersSessionFactory,C:\repos\OData_ODataSamples\WebApi\v3\NHibernateQueryableSample\NHibernateQueryableSample\Models\CustomersSessionFactory.cs,SeedDatabase,The following statement contains a magic number: using (var session = sessionFactory.OpenSession())              {                  using (var transaction = session.BeginTransaction())                  {                      session.SaveOrUpdate(new Customer { Name = "Raghu"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 100' Quantity = 10 } } });                      session.SaveOrUpdate(new Customer { Name = "Ram"' City = "Redmond"' Address = "Address Line"' State = "WA"' Orders = new[] { new Order { Amount = 10' Quantity = 10 } } });                      transaction.Commit();                  }                  session.Close();              }
