Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MqttLib,Mqtt,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Mqtt.cs,qosManager_MessageReceived,Cyclomatic complexity of the method is 14
Complex Method,MqttLib.Core.Messages,MessageFactory,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MessageFactory.cs,CreateMessage,Cyclomatic complexity of the method is 12
Complex Method,MqttLib.Core,QoSManager,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\QoSManager.cs,ProcessReceivedMessage,Cyclomatic complexity of the method is 8
Complex Method,MqttLib.MatchTree,TopicNode<T>,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\MatchTree\TopicNode.cs,CollectMatches,Cyclomatic complexity of the method is 9
Long Parameter List,MqttLib,IMqttConnectDisconnect,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\IMqttConnectDisconnect.cs,Connect,The method has 5 parameters. Parameters: willTopic' willQoS' willMsg' willRetain' cleanStart
Long Parameter List,MqttLib,Mqtt,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Mqtt.cs,Mqtt,The method has 5 parameters. Parameters: connString' clientID' username' password' store
Long Parameter List,MqttLib,Mqtt,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Mqtt.cs,Connect,The method has 5 parameters. Parameters: willTopic' willQoS' willMsg' willRetain' cleanStart
Long Parameter List,MqttLib,MqttClientFactory,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\MqttClientFactory.cs,CreateClient,The method has 5 parameters. Parameters: connString' clientId' username' password' persistence
Long Parameter List,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,MqttConnectMessage,The method has 5 parameters. Parameters: clientID' username' password' keepAlive' cleanStart
Long Parameter List,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,MqttConnectMessage,The method has 9 parameters. Parameters: clientID' username' password' keepAlive' willTopic' willPayload' willQos' willRetained' cleanStart
Long Parameter List,MqttLib.Core.Messages,MqttPublishMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttPublishMessage.cs,MqttPublishMessage,The method has 5 parameters. Parameters: id' topic' payload' qos' retained
Long Statement,MqttLib.Core,StreamFactory,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\StreamFactory.cs,CreateStream,The length of the statement  "            if( locScheme < 0 ) throw new MalformedConnectionStringException("Could not find " + DIV_SCHEME + " in the connection string"); " is 127.
Virtual Method Call from Constructor,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,MqttMessage,The constructor "MqttMessage" calls a virtual method "ConstructFromStream".
Magic Number,MqttLib,Mqtt,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Mqtt.cs,DoConnect,The following statement contains a magic number: int keepAliveInterval = 1000 * _keepAlive;
Magic Number,MqttLib,Mqtt,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Mqtt.cs,Publish,The following statement contains a magic number: int kmillis = 1000 * _keepAlive;
Magic Number,MqttLib.Core.Messages,MessageFactory,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MessageFactory.cs,CreateMessage,The following statement contains a magic number: MessageType messageType = (MessageType)((header & 0xf0) >> 4);
Magic Number,MqttLib.Core.Messages,MqttConnackMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnackMessage.cs,ConstructFromStream,The following statement contains a magic number: byte[] buffer = new byte[2];
Magic Number,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,SetConnectVariableHeaderCommon,The following statement contains a magic number: base.variableHeaderLength = (                protocolDesc.Length + //Length of the protocol description                3 +                   //Connect Flags + Keep alive                _clientID.Length +    // Length of the client ID string                2                     // The length of the length of the clientID              );
Magic Number,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,SetConnectVariableHeaderCommon,The following statement contains a magic number: base.variableHeaderLength = (                protocolDesc.Length + //Length of the protocol description                3 +                   //Connect Flags + Keep alive                _clientID.Length +    // Length of the client ID string                2                     // The length of the length of the clientID              );
Magic Number,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,SetConnectVariableHeaderCommon,The following statement contains a magic number: base.variableHeaderLength += _username.Length + 2;
Magic Number,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,SetConnectVariableHeaderCommon,The following statement contains a magic number: base.variableHeaderLength += _password.Length + 2;
Magic Number,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,MqttConnectMessage,The following statement contains a magic number: _connectFlags = (byte)(                0x04 | // LWT enabled                (willRetained ? 0x20 : 0) | // LWT is retained?                (cleanStart ? 0x02 : 0) | // Clean Start                (_containsPassword ? 0x40 : 0) |                  (_containsUsername ? 0x80 : 0) |                ((byte)willQos) << 3        // LWT QoS              );
Magic Number,MqttLib.Core.Messages,MqttConnectMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttConnectMessage.cs,MqttConnectMessage,The following statement contains a magic number: base.variableHeaderLength += (                _willTopic.Length +                _willPayload.Length +                4              );
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,ConstructHeader,The following statement contains a magic number: msgType = (MessageType)((header & 0xf0) >> 4);
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,DecodeVariableHeaderLength,The following statement contains a magic number: value += (digit & 127) * multiplier;
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,DecodeVariableHeaderLength,The following statement contains a magic number: multiplier *= 128;
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,EncodeVariableHeaderLength,The following statement contains a magic number: digit = (byte)(length % 128);
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,EncodeVariableHeaderLength,The following statement contains a magic number: length /= 128;
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,Serialise,The following statement contains a magic number: byte header = (byte)((byte)msgType << 4);
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,Serialise,The following statement contains a magic number: header |= 8;
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,WriteToStream,The following statement contains a magic number: str.WriteByte((byte)(val >> 8));
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,ReadUshortFromStream,The following statement contains a magic number: byte[] data = new byte[2];
Magic Number,MqttLib.Core.Messages,MqttMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttMessage.cs,ReadUshortFromStream,The following statement contains a magic number: return (ushort)((data[0] << 8) + data[1]);
Magic Number,MqttLib.Core.Messages,MqttPublishMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttPublishMessage.cs,MqttPublishMessage,The following statement contains a magic number: base.variableHeaderLength =            2 + GetUTF8StringLength(topic) +    // Topic + length            (qos == QoS.BestEfforts ? 0 : 2) +  // Message ID for QoS > 0            payload.Length;
Magic Number,MqttLib.Core.Messages,MqttPublishMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttPublishMessage.cs,MqttPublishMessage,The following statement contains a magic number: base.variableHeaderLength =            2 + GetUTF8StringLength(topic) +    // Topic + length            (qos == QoS.BestEfforts ? 0 : 2) +  // Message ID for QoS > 0            payload.Length;
Magic Number,MqttLib.Core.Messages,MqttPublishMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttPublishMessage.cs,ConstructFromStream,The following statement contains a magic number: payloadLen -= (GetUTF8StringLength(_topic) + 2);
Magic Number,MqttLib.Core.Messages,MqttPublishMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttPublishMessage.cs,ConstructFromStream,The following statement contains a magic number: payloadLen -= 2;
Magic Number,MqttLib.Core.Messages,MqttSubackMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttSubackMessage.cs,ConstructFromStream,The following statement contains a magic number: int qosCount = variableHeaderLength - 2;
Magic Number,MqttLib.Core.Messages,MqttSubscribeMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttSubscribeMessage.cs,MqttSubscribeMessage,The following statement contains a magic number: payloadLength += (2 + GetUTF8StringLength(s.Topic) + 1);
Magic Number,MqttLib.Core.Messages,MqttSubscribeMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttSubscribeMessage.cs,MqttSubscribeMessage,The following statement contains a magic number: this.variableHeaderLength = (                                              2 + // Length of message ID                                              payloadLength // Length of the payload                                          );
Magic Number,MqttLib.Core.Messages,MqttUnsubscribeMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttUnsubscribeMessage.cs,MqttUnsubscribeMessage,The following statement contains a magic number: payloadLength += (2 + GetUTF8StringLength(topic));
Magic Number,MqttLib.Core.Messages,MqttUnsubscribeMessage,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\Messages\MqttUnsubscribeMessage.cs,MqttUnsubscribeMessage,The following statement contains a magic number: variableHeaderLength = 2 + payloadLength;
Magic Number,MqttLib.Core,QoSManager,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Core\QoSManager.cs,MessageDaemon,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MqttLib.Logger,FileLog,D:\research\architectureSmells\repos1\stevenlovegrove_MqttDotNet\MqttLib\Logger\FileLog.cs,OpenFile,The following statement contains a magic number: tempLogFile.Length / 1024 >= MaxSize
