Implementation smell,Namespace,Class,File,Method,Description
Complex Method,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,newFrame,Cyclomatic complexity of the method is 11
Long Parameter List,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,drawHeaderForBox,The method has 5 parameters.
Long Statement,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The length of the statement  "						text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name; " is 127.
Long Statement,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,Camera_Initialized,The length of the statement  "		WriteableBitmap bitmap = new WriteableBitmap ((int)camera.PreviewResolution.Width' (int)camera.PreviewResolution.Height); " is 121.
Empty Catch Block,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The method has an empty catch block.
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: foreach (Face face in faces) {  	if (face.responsePending || (face.response != null && String.IsNullOrEmpty (face.response.error)))  		continue;  	try {  		Dictionary<String' object> parameters = new Dictionary<string' object> ();  		parameters ["username"] = username;  		parameters ["password"] = password;  		MemoryStream imageStream = new MemoryStream ();  		face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  		parameters ["image"] = imageStream.ToArray ();  		String url = "http://" + ipAddress + "/recognize";  		PostRequest request = new PostRequest (url' parameters' delegate (Response response) {  			face.response = response;  			face.responsePending = false;  		});  		request.submit ();  		face.responsePending = true;  	}  	catch (Exception) {  	}  }  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: foreach (Face face in faces) {  	if (face.responsePending || (face.response != null && String.IsNullOrEmpty (face.response.error)))  		continue;  	try {  		Dictionary<String' object> parameters = new Dictionary<string' object> ();  		parameters ["username"] = username;  		parameters ["password"] = password;  		MemoryStream imageStream = new MemoryStream ();  		face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  		parameters ["image"] = imageStream.ToArray ();  		String url = "http://" + ipAddress + "/recognize";  		PostRequest request = new PostRequest (url' parameters' delegate (Response response) {  			face.response = response;  			face.responsePending = false;  		});  		request.submit ();  		face.responsePending = true;  	}  	catch (Exception) {  	}  }  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: foreach (Face face in faces) {  	if (face.responsePending || (face.response != null && String.IsNullOrEmpty (face.response.error)))  		continue;  	try {  		Dictionary<String' object> parameters = new Dictionary<string' object> ();  		parameters ["username"] = username;  		parameters ["password"] = password;  		MemoryStream imageStream = new MemoryStream ();  		face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  		parameters ["image"] = imageStream.ToArray ();  		String url = "http://" + ipAddress + "/recognize";  		PostRequest request = new PostRequest (url' parameters' delegate (Response response) {  			face.response = response;  			face.responsePending = false;  		});  		request.submit ();  		face.responsePending = true;  	}  	catch (Exception) {  	}  }  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: try {  	Dictionary<String' object> parameters = new Dictionary<string' object> ();  	parameters ["username"] = username;  	parameters ["password"] = password;  	MemoryStream imageStream = new MemoryStream ();  	face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  	parameters ["image"] = imageStream.ToArray ();  	String url = "http://" + ipAddress + "/recognize";  	PostRequest request = new PostRequest (url' parameters' delegate (Response response) {  		face.response = response;  		face.responsePending = false;  	});  	request.submit ();  	face.responsePending = true;  }  catch (Exception) {  }  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: try {  	Dictionary<String' object> parameters = new Dictionary<string' object> ();  	parameters ["username"] = username;  	parameters ["password"] = password;  	MemoryStream imageStream = new MemoryStream ();  	face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  	parameters ["image"] = imageStream.ToArray ();  	String url = "http://" + ipAddress + "/recognize";  	PostRequest request = new PostRequest (url' parameters' delegate (Response response) {  		face.response = response;  		face.responsePending = false;  	});  	request.submit ();  	face.responsePending = true;  }  catch (Exception) {  }  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: try {  	Dictionary<String' object> parameters = new Dictionary<string' object> ();  	parameters ["username"] = username;  	parameters ["password"] = password;  	MemoryStream imageStream = new MemoryStream ();  	face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  	parameters ["image"] = imageStream.ToArray ();  	String url = "http://" + ipAddress + "/recognize";  	PostRequest request = new PostRequest (url' parameters' delegate (Response response) {  		face.response = response;  		face.responsePending = false;  	});  	request.submit ();  	face.responsePending = true;  }  catch (Exception) {  }  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  
Magic Number,StalkR,FaceRecognizer,C:\repos\Phog_StalkR\StalkR\FaceRecognizer.cs,recognize,The following statement contains a magic number: face.image.SaveJpeg (imageStream' 256' 256' 0' 100);  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,MainPage,The following statement contains a magic number: previewTransform.Rotation = 90;  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,drawHeaderForBox,The following statement contains a magic number: transform.X = x + (width - BOX_WIDTH) / 2;  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,drawHeaderForBox,The following statement contains a magic number: border.Background = new SolidColorBrush (Color.FromArgb (128' 0' 0' 0));  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,drawHeaderForBox,The following statement contains a magic number: textBlock.FontSize = 36;  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: this.Dispatcher.BeginInvoke (delegate () {  	recognizer.newFrame (rectangles' detectorBitmap);  	if (camera == null)  		return;  	WriteableBitmap rectBitmap = new WriteableBitmap (detectorBitmap.PixelWidth' detectorBitmap.PixelHeight);  	using (rectBitmap.GetBitmapContext ()) {  		rectBitmap.Clear (Colors.Transparent);  		foreach (Face face in recognizer.faces) {  			Rectangle rect = face.rectangle;  			int width = Convert.ToInt32 (rect.width ());  			int height = Convert.ToInt32 (rect.height ());  			int x = Convert.ToInt32 (rect.x ());  			int y = Convert.ToInt32 (rect.y ());  			String text = "...";  			if (face.response != null)  				text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  			drawHeaderForBox (rectBitmap' x' y - 20' width' text);  		}  		double milliseconds = (DateTime.Now - frameStart).TotalMilliseconds;  		drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  		frameStart = DateTime.Now;  		rectBitmap.Invalidate ();  	}  	recognizer.recognize (username.Text' password.Password' ipAddress.Text);  	overlayBrush.ImageSource = rectBitmap;  	camera.GetPreviewBufferArgb32 (bitmap.Pixels);  	detectFaces (bitmap);  });  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: this.Dispatcher.BeginInvoke (delegate () {  	recognizer.newFrame (rectangles' detectorBitmap);  	if (camera == null)  		return;  	WriteableBitmap rectBitmap = new WriteableBitmap (detectorBitmap.PixelWidth' detectorBitmap.PixelHeight);  	using (rectBitmap.GetBitmapContext ()) {  		rectBitmap.Clear (Colors.Transparent);  		foreach (Face face in recognizer.faces) {  			Rectangle rect = face.rectangle;  			int width = Convert.ToInt32 (rect.width ());  			int height = Convert.ToInt32 (rect.height ());  			int x = Convert.ToInt32 (rect.x ());  			int y = Convert.ToInt32 (rect.y ());  			String text = "...";  			if (face.response != null)  				text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  			drawHeaderForBox (rectBitmap' x' y - 20' width' text);  		}  		double milliseconds = (DateTime.Now - frameStart).TotalMilliseconds;  		drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  		frameStart = DateTime.Now;  		rectBitmap.Invalidate ();  	}  	recognizer.recognize (username.Text' password.Password' ipAddress.Text);  	overlayBrush.ImageSource = rectBitmap;  	camera.GetPreviewBufferArgb32 (bitmap.Pixels);  	detectFaces (bitmap);  });  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: this.Dispatcher.BeginInvoke (delegate () {  	recognizer.newFrame (rectangles' detectorBitmap);  	if (camera == null)  		return;  	WriteableBitmap rectBitmap = new WriteableBitmap (detectorBitmap.PixelWidth' detectorBitmap.PixelHeight);  	using (rectBitmap.GetBitmapContext ()) {  		rectBitmap.Clear (Colors.Transparent);  		foreach (Face face in recognizer.faces) {  			Rectangle rect = face.rectangle;  			int width = Convert.ToInt32 (rect.width ());  			int height = Convert.ToInt32 (rect.height ());  			int x = Convert.ToInt32 (rect.x ());  			int y = Convert.ToInt32 (rect.y ());  			String text = "...";  			if (face.response != null)  				text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  			drawHeaderForBox (rectBitmap' x' y - 20' width' text);  		}  		double milliseconds = (DateTime.Now - frameStart).TotalMilliseconds;  		drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  		frameStart = DateTime.Now;  		rectBitmap.Invalidate ();  	}  	recognizer.recognize (username.Text' password.Password' ipAddress.Text);  	overlayBrush.ImageSource = rectBitmap;  	camera.GetPreviewBufferArgb32 (bitmap.Pixels);  	detectFaces (bitmap);  });  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: using (rectBitmap.GetBitmapContext ()) {  	rectBitmap.Clear (Colors.Transparent);  	foreach (Face face in recognizer.faces) {  		Rectangle rect = face.rectangle;  		int width = Convert.ToInt32 (rect.width ());  		int height = Convert.ToInt32 (rect.height ());  		int x = Convert.ToInt32 (rect.x ());  		int y = Convert.ToInt32 (rect.y ());  		String text = "...";  		if (face.response != null)  			text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  		drawHeaderForBox (rectBitmap' x' y - 20' width' text);  	}  	double milliseconds = (DateTime.Now - frameStart).TotalMilliseconds;  	drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  	frameStart = DateTime.Now;  	rectBitmap.Invalidate ();  }  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: using (rectBitmap.GetBitmapContext ()) {  	rectBitmap.Clear (Colors.Transparent);  	foreach (Face face in recognizer.faces) {  		Rectangle rect = face.rectangle;  		int width = Convert.ToInt32 (rect.width ());  		int height = Convert.ToInt32 (rect.height ());  		int x = Convert.ToInt32 (rect.x ());  		int y = Convert.ToInt32 (rect.y ());  		String text = "...";  		if (face.response != null)  			text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  		drawHeaderForBox (rectBitmap' x' y - 20' width' text);  	}  	double milliseconds = (DateTime.Now - frameStart).TotalMilliseconds;  	drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  	frameStart = DateTime.Now;  	rectBitmap.Invalidate ();  }  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: using (rectBitmap.GetBitmapContext ()) {  	rectBitmap.Clear (Colors.Transparent);  	foreach (Face face in recognizer.faces) {  		Rectangle rect = face.rectangle;  		int width = Convert.ToInt32 (rect.width ());  		int height = Convert.ToInt32 (rect.height ());  		int x = Convert.ToInt32 (rect.x ());  		int y = Convert.ToInt32 (rect.y ());  		String text = "...";  		if (face.response != null)  			text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  		drawHeaderForBox (rectBitmap' x' y - 20' width' text);  	}  	double milliseconds = (DateTime.Now - frameStart).TotalMilliseconds;  	drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  	frameStart = DateTime.Now;  	rectBitmap.Invalidate ();  }  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: foreach (Face face in recognizer.faces) {  	Rectangle rect = face.rectangle;  	int width = Convert.ToInt32 (rect.width ());  	int height = Convert.ToInt32 (rect.height ());  	int x = Convert.ToInt32 (rect.x ());  	int y = Convert.ToInt32 (rect.y ());  	String text = "...";  	if (face.response != null)  		text = face.response.friend == null || face.response.friend.first_name == String.Empty ? "?" : face.response.friend.first_name;  	drawHeaderForBox (rectBitmap' x' y - 20' width' text);  }  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: drawHeaderForBox (rectBitmap' x' y - 20' width' text);  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,detectFaces,The following statement contains a magic number: drawHeaderForBox (rectBitmap' 2' 0' 140' String.Format ("{0} ms"' Math.Floor (milliseconds)));  
Magic Number,StalkR,MainPage,C:\repos\Phog_StalkR\StalkR\MainPage.xaml.cs,showDetails,The following statement contains a magic number: panoramaRoot.DefaultItem = (PanoramaItem)panoramaRoot.Items [2];  
