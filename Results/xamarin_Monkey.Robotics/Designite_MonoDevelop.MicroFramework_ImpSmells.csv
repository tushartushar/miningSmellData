Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The method has 112 lines of code.
Long Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The method has 143 lines of code.
Long Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The method has 107 lines of code.
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,Step,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,LoadAssembly,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,CallToString,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OverloadResolve,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OverloadResolve,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,TryCast,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetRealObject,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetMembers,Cyclomatic complexity of the method is 23
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,TargetObjectToObject,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetHoistedLocalVariables,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetLocals,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,UpdateAssemblies,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,LoadAssemblies,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.SPOT.Debugger,PdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Pdbx.cs,Open,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,FindPEForDll,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.SPOT.Debugger,CorDebugChain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugChain.cs,CorDebugChain,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.SPOT.Debugger,CorDebugAssembly,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAssembly.cs,CorDebugAssembly,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.SPOT.Debugger,CorDebugStepper,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugStepper.cs,ShouldBreak,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.SPOT.Debugger,CorDebugBacktrace,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBacktrace.cs,CreateFrame,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write10_Assembly,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write9_Class,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write8_Method,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read11_PdbxFile,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read7_IL,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read4_Token,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read6_Field,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,Cyclomatic complexity of the method is 9
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,LogMessage,The method has 5 parameters. Parameters: pAppDomain' pThread' lLevel' pLogSwitchName' pMessage
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,LogSwitch,The method has 6 parameters. Parameters: pAppDomain' pThread' lLevel' ulReason' pLogSwitchName' pParentName
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,Exception,The method has 6 parameters. Parameters: pAppDomain' pThread' pFrame' nOffset' dwEventType' dwFlags
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,RuntimeInvoke,The method has 5 parameters. Parameters: corEvaluationContext' function' typeArgs' thisObj' arguments
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,HasMethod,The method has 6 parameters. Parameters: gctx' gtargetType' methodName' ggenericArgTypes' gargTypes' flags
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,RuntimeInvoke,The method has 7 parameters. Parameters: gctx' gtargetType' gtarget' methodName' ggenericArgTypes' gargTypes' gargValues
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OverloadResolve,The method has 6 parameters. Parameters: ctx' methodName' type' argtypes' flags' throwIfNotFound
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,IsApplicable,The method has 5 parameters. Parameters: ctx' method' types' error' matchCount
Long Parameter List,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OverloadResolve,The method has 6 parameters. Parameters: ctx' typeName' methodName' argtypes' candidates' throwIfNotFound
Long Parameter List,MonoDevelop.MicroFramework,FieldValueReference,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\FieldValueReference.cs,FieldValueReference,The method has 6 parameters. Parameters: ctx' thisobj' type' field' vname' vflags
Long Parameter List,MonoDevelop.MicroFramework,PropertyValueReference,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\FieldValueReference.cs,PropertyValueReference,The method has 5 parameters. Parameters: ctx' prop' thisobj' declaringType' index
Long Parameter List,Microsoft.SPOT.Debugger,PdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Pdbx.cs,Open,The method has 5 parameters. Parameters: name' version' assemblyPaths' assemblyDirectories' fIsTargetBigEndian
Long Parameter List,Microsoft.SPOT.Debugger,Kernel32,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,DuplicateHandle,The method has 7 parameters. Parameters: hSourceProcessHandle' hSourceHandle' hTargetProcessHandle' lpTargetHandle' dwDesiredAccess' bInheritHandle' dwOptions
Long Parameter List,Microsoft.SPOT.Debugger,Kernel32,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,CreateThread,The method has 6 parameters. Parameters: lpsa' cbStack' lpStartAddr' lpvThreadParam' fdwCreate' threadId
Long Parameter List,Microsoft.SPOT.Debugger,ICorDebugManagedCallback,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,LogMessage,The method has 5 parameters. Parameters: pAppDomain' pThread' lLevel' pLogSwitchName' pMessage
Long Parameter List,Microsoft.SPOT.Debugger,ICorDebugManagedCallback,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,LogSwitch,The method has 6 parameters. Parameters: pAppDomain' pThread' lLevel' ulReason' pLogSwitchName' pParentName
Long Parameter List,Microsoft.SPOT.Debugger,ICorDebugManagedCallback,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,Exception,The method has 6 parameters. Parameters: pAppDomain' pThread' pFrame' nOffset' dwEventType' dwFlags
Long Parameter List,Microsoft.SPOT.Debugger,ManagedCallbackDebugMessage,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,ManagedCallbackDebugMessage,The method has 5 parameters. Parameters: thread' appDomain' switchName' message' level
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write11_PdbxFile,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write10_Assembly,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write9_Class,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write8_Method,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write7_IL,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write4_Token,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Parameter List,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write6_Field,The method has 5 parameters. Parameters: n' ns' o' isNullable' needType
Long Identifier,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,,The length of the parameter CAppDomainIdForNoAppDomainSupport is 33.
Long Identifier,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,,The length of the parameter SCRATCH_PAD_INDEX_NOT_INITIALIZED is 33.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,OnRun,The length of the statement  "				deployEngine.Deployment_Execute (listOfAseemblies' false' (str) => OnDebuggerOutput (false' "Deploy: " + str + Environment.NewLine)); " is 133.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,CallToString,The length of the statement  "//					foreach (ValueReference evals in GetMembers(ctx' co.ExactType' null' BindingFlags.Public | BindingFlags.Static)) { " is 121.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,CallToString,The length of the statement  "				var met = OverloadResolve (cctx' "ToString"' targetType' new CorDebugType[0]' BindingFlags.Public | BindingFlags.Instance' false); " is 130.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OverloadResolve,The length of the statement  "					if (met.Name == methodName || (!ctx.CaseSensitive && met.Name.Equals (methodName' StringComparison.CurrentCultureIgnoreCase))) { " is 128.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,IsEnum,The length of the statement  "			return (targetType.Type == CorElementType.ELEMENT_TYPE_VALUETYPE || targetType.Type == CorElementType.ELEMENT_TYPE_CLASS) && targetType.Base != null && GetTypeName (ctx' targetType.Base) == "System.Enum"; " is 204.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,CreateValue,The length of the statement  "//			ctx.WriteDebuggerError (new NotSupportedException (String.Format ("Unable to create value for type: {0}"' value.GetType ()))); " is 131.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,Unbox,The length of the statement  "			TypeDefinition ptype = new TypeDefinition (""' ctx.Adapter.GetTypeName (ctx' bval.ExactType)' Mono.Cecil.TypeAttributes.Class); " is 127.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,Unbox,The length of the statement  "				foreach (var field in ptype.Fields.Where(f=>(f.Attributes & Mono.Cecil.FieldAttributes.Static) == 0)) // GetFields (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)) { " is 188.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetEnumMembers,The length of the statement  "//			foreach (var field in type.Fields.Where(f=>(f.Attributes & Mono.Cecil.FieldAttributes.Static) > 0 && (f.Attributes & Mono.Cecil.FieldAttributes.Public) > 0)) { " is 164.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,HasMember,The length of the statement  "					var getter = prop.GetMethod == null ? null : prop.GetMethod.Attributes.HasFlag (Mono.Cecil.MethodAttributes.Private) ? prop.GetMethod : null; " is 141.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,IsClosureReferenceLocal,The length of the statement  "			return local.Name.Length == 0 || local.Name [0] == '<' || local.Name.StartsWith ("$locvar"' StringComparison.Ordinal) || " is 120.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,IsGeneratedTemporaryLocal,The length of the statement  "			return local.Name != null && (local.Name.StartsWith ("CS$"' StringComparison.Ordinal) || local.Name.StartsWith ("<>t__"' StringComparison.Ordinal)); " is 148.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetLocals,The length of the statement  "					foreach (var gv in GetHoistedLocalVariables (ctx' new VariableValueReference (ctx' vref' var.Name' ObjectValueFlags.Variable))) { " is 129.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OnGetTypeDisplayData,The length of the statement  "				mems.AddRange (t.Fields);// (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance)); " is 122.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OnGetTypeDisplayData,The length of the statement  "				mems.AddRange (t.Properties);//GetProperties (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance)); " is 139.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OnGetTypeDisplayData,The length of the statement  "//					var atts = m.CustomAttributes.FirstOrDefault (arg => arg.AttributeType.Name == "DebuggerBrowsableAttribute" ||arg.AttributeType.Name == "CompilerGeneratedAttribute"); " is 173.
Long Statement,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OnGetTypeDisplayData,The length of the statement  "				return new TypeDisplayData (proxyType' valueDisplayString' typeDisplayString' nameDisplayString' isCompilerGenerated' memberData); " is 130.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,DirectoryCopy,The length of the statement  "			MonoDevelop.MacInterop.AppleScript.Run("do shell script \"cp -R \\\"" + sourceDirName + "\\\" \\\"" + destDirName + "\\\"\" with administrator privileges"); " is 156.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,The length of the statement  "				   !File.Exists("/Library/Frameworks/Mono.framework/External/xbuild-frameworks/.NETMicroFramework/v4.3/Microsoft.SPOT.Hardware.PWM.dll")) " is 134.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,The length of the statement  "					DirectoryCopy(Path.Combine(addInFolder' "files"' "xbuild-framework/")' "/Library/Frameworks/Mono.framework/External/xbuild-frameworks/"); " is 137.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,The length of the statement  "				if(!Directory.Exists("/Library/Frameworks/Mono.framework/Versions/Current/lib/mono/xbuild/Microsoft/.NET Micro Framework")) " is 123.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,The length of the statement  "				   (GetChecksum("/Library/Frameworks/Microsoft .NET Micro Framework/v4.3/Tools/MetaDataProcessor.exe") != GetChecksum(Path.Combine(addInFolder' "files/frameworks/Microsoft .NET Micro Framework/v4.3/Tools/MetaDataProcessor.exe")))) " is 227.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,The length of the statement  "					MonoDevelop.MacInterop.AppleScript.Run("do shell script \"chmod +x \\\"/Library/Frameworks/Microsoft .NET Micro Framework/v4.3/Tools/MetaDataProcessor.exe\\\"\" with administrator privileges"); " is 193.
Long Statement,MonoDevelop.MicroFramework,StartupHandler,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\StartupHandler.cs,Run,The length of the statement  "					MessageService.ShowMessage("MicroFramework .Net AddIn succesfully installed. Please restart Xamarin Studio to finish installation."); " is 133.
Long Statement,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,UpdateAssemblies,The length of the statement  "			List<ManagedCallbacks.ManagedCallback> callbacks = new System.Collections.Generic.List<ManagedCallbacks.ManagedCallback> (); " is 124.
Long Statement,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,UpdateAssemblies,The length of the statement  "					callbacks.Add (new ManagedCallbacks.ManagedCallbackAssembly (assembly' ManagedCallbacks.ManagedCallbackAssembly.EventType.UnloadModule)); " is 137.
Long Statement,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,UpdateAssemblies,The length of the statement  "					callbacks.Add (new ManagedCallbacks.ManagedCallbackAssembly (assembly' ManagedCallbacks.ManagedCallbackAssembly.EventType.UnloadAssembly)); " is 139.
Long Statement,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,UpdateAssemblies,The length of the statement  "					callbacks.Insert (index' new ManagedCallbacks.ManagedCallbackAssembly (assembly' ManagedCallbacks.ManagedCallbackAssembly.EventType.LoadAssembly)); " is 147.
Long Statement,Microsoft.SPOT.Debugger,CorDebugAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAppDomain.cs,UpdateAssemblies,The length of the statement  "					callbacks.Insert (index + 1' new ManagedCallbacks.ManagedCallbackAssembly (assembly' ManagedCallbacks.ManagedCallbackAssembly.EventType.LoadModule)); " is 149.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,EnqueueStartupEventsAndWait,The length of the statement  "			EnqueueEvent (new ManagedCallbacks.ManagedCallbackProcess (this' ManagedCallbacks.ManagedCallbackProcess.EventType.CreateProcess)); " is 131.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,EnqueueStartupEventsAndWait,The length of the statement  "			EnqueueEvent (new ManagedCallbacks.ManagedCallbackAppDomain (appDomain' ManagedCallbacks.ManagedCallbackAppDomain.EventType.CreateAppDomain)); " is 142.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,StartDebugging,The length of the statement  "							ManagedCallbacks.ManagedCallbackProcess mc = new ManagedCallbacks.ManagedCallbackProcess (this' ManagedCallbacks.ManagedCallbackProcess.EventType.ExitProcess); " is 159.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AddThread,The length of the statement  "					Engine.SetExecutionMode (WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_NoCompaction | WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_PauseTimers' 0); " is 178.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AddThread,The length of the statement  "				EnqueueEvent (new ManagedCallbacks.ManagedCallbackThread (thread' ManagedCallbacks.ManagedCallbackThread.EventType.CreateThread)); " is 130.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,RemoveThread,The length of the statement  "						Engine.SetExecutionMode (0' WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_NoCompaction | WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_PauseTimers); " is 178.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,RemoveThread,The length of the statement  "					EnqueueEvent (new ManagedCallbacks.ManagedCallbackThread (thread' ManagedCallbacks.ManagedCallbackThread.EventType.ExitThread)); " is 128.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,CreateProcess,The length of the statement  "				throw new Exception (String.Format ("\"{0}\" does not appear to be a valid Micro Framework device name"' deployDeviceName)); " is 124.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,LoadAssemblies,The length of the statement  "				PlatformInfo platformInfo = new PlatformInfo (asyVersion); // by not spcifying any runtime information' we will look for the most suitable version " is 146.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,LoadAssemblies,The length of the statement  "					Pdbx.PdbxFile pdbxFile = resolver.Resolve (reply.Name' reply.m_version' Engine.IsTargetBigEndian); //Pdbx.PdbxFile.Open(reply.Name' reply.m_version' assemblyPaths); " is 164.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,CreateAppDomainFromId,The length of the statement  "			EnqueueEvent (new ManagedCallbacks.ManagedCallbackAppDomain (appDomain' ManagedCallbacks.ManagedCallbackAppDomain.EventType.CreateAppDomain)); " is 142.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,RemoveAppDomain,The length of the statement  "			EnqueueEvent (new ManagedCallbacks.ManagedCallbackAppDomain (appDomain' ManagedCallbacks.ManagedCallbackAppDomain.EventType.ExitAppDomain)); " is 140.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,OnDetach,The length of the statement  "			m_engine.SetExecutionMode (0' WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_SourceLevelDebugging' out iCurrent); " is 127.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,OnMessage,The length of the statement  "					EnqueueEvent (new ManagedCallbacks.ManagedCallbackDebugMessage ((CorDebugThread)m_threads [0]' (CorDebugAppDomain)m_appDomains [0]' "TinyCLR_Message"' text' LoggingLevelEnum.LStatusLevel0)); " is 190.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ResolveBuiltInType,The length of the statement  "				AddBuiltInType (Microsoft.SPOT.Debugger.ReflectionDefinition.Kind.REFLECTION_TYPE_DELAYED' assmCorLib' "System.RuntimeType"); " is 125.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ResolveBuiltInType,The length of the statement  "				AddBuiltInType (Microsoft.SPOT.Debugger.ReflectionDefinition.Kind.REFLECTION_ASSEMBLY' assmCorLib' "System.Reflection.Assembly"); " is 129.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ResolveBuiltInType,The length of the statement  "				AddBuiltInType (Microsoft.SPOT.Debugger.ReflectionDefinition.Kind.REFLECTION_FIELD' assmCorLib' "System.Reflection.RuntimeFieldInfo"); " is 134.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ResolveBuiltInType,The length of the statement  "				AddBuiltInType (Microsoft.SPOT.Debugger.ReflectionDefinition.Kind.REFLECTION_METHOD' assmCorLib' "System.Reflection.RuntimeMethodInfo"); " is 136.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ResolveBuiltInType,The length of the statement  "				AddBuiltInType (Microsoft.SPOT.Debugger.ReflectionDefinition.Kind.REFLECTION_CONSTRUCTOR' assmCorLib' "System.Reflection.RuntimeConstructorInfo"); " is 146.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ResolveBuiltInType,The length of the statement  "				AddBuiltInType (Microsoft.SPOT.Debugger.RuntimeDataType.DATATYPE_TRANSPARENT_PROXY' assmCorLib' "System.Runtime.Remoting.Proxies.__TransparentProxy"); " is 150.
Long Statement,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,DebugAssert,The length of the statement  "			VsPackage.MessageCentre.InternalErrorMsg (condition' String.Format ("message: {0}\r\nDetailed Message: {1}"' message' detailedMessage)); " is 136.
Long Statement,Microsoft.SPOT.Debugger,TinyCLR_TypeSystem,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\TinyCLR_TypeSystem.cs,CorDebugClassFromTypeIndex,The length of the statement  "				uint typedef = TinyCLR_TypeSystem.CLR_TkFromType (TinyCLR_TypeSystem.CLR_TABLESENUM.TBL_TypeDef' TinyCLR_TypeSystem.IdxFromIndex (typeIndex)); " is 142.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_FIRST_CHANCE)); " is 165.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_USER_FIRST_CHANCE)); " is 170.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_CATCH_HANDLER_FOUND)); " is 172.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "				Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_FIRST_CHANCE)); " is 165.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "						Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' frame.IP_TinyCLR' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_USER_FIRST_CHANCE)); " is 168.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_CATCH_HANDLER_FOUND)); " is 172.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Debug.Assert (internalFrame != null && internalFrame.FrameInternalType == CorDebugInternalFrameType.STUBFRAME_FUNC_EVAL); " is 121.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' 0' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_CATCH_HANDLER_FOUND)); " is 155.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The length of the statement  "					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' null' uint.MaxValue' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_UNHANDLED)); " is 156.
Long Statement,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionCaught,The length of the statement  "			Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackExceptionUnwind (thread' frame' CorDebugExceptionUnwindCallbackType.DEBUG_EXCEPTION_INTERCEPTED)); " is 156.
Long Statement,Microsoft.SPOT.Debugger,CorDebugFrame,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugFrame.cs,AppDomainIdFromCall,The length of the statement  "				WireProtocol.Commands.Debugging_Thread_Stack.Reply.CallEx callEx = call as WireProtocol.Commands.Debugging_Thread_Stack.Reply.CallEx; " is 133.
Long Statement,Microsoft.SPOT.Debugger,CorDebugFrame,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugFrame.cs,GetStackFrameValue,The length of the statement  "			return CorDebugValue.CreateValue (this.Engine.GetStackFrameValue (m_chain.Thread.Id' m_depthTinyCLR' kind' dwIndex)' this.AppDomain); " is 133.
Long Statement,Microsoft.SPOT.Debugger,CorDebugValueObject,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugValue.cs,GetFieldValue,The length of the statement  "			return CreateValue (m_rtv.GetField (0' TinyCLR_TypeSystem.ClassMemberIndexFromCLRToken (metadataToken' m_class.Assembly))); " is 123.
Long Statement,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,The length of the statement  "                            Process.EnqueueEvent(new ManagedCallbacks.ManagedCallbackEval(m_threadReal' this' ManagedCallbacks.ManagedCallbackEval.EventType.EvalComplete)); " is 144.
Long Statement,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,The length of the statement  "                            Process.EnqueueEvent(new ManagedCallbacks.ManagedCallbackEval(m_threadReal' this' ManagedCallbacks.ManagedCallbackEval.EventType.EvalException));                              " is 145.
Long Statement,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,The length of the statement  "                             * If we do not give VS a EvalComplete message within 3 seconds of them calling ICorDebugEval::Abort then VS will attempt a RudeAbort " is 132.
Long Statement,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,The length of the statement  "                             * and will display a scary error message about a serious internal debugger error and ignore all future debugging requests' among other bad things. " is 146.
Long Statement,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,The length of the statement  "                            Process.EnqueueEvent(new ManagedCallbacks.ManagedCallbackEval(m_threadReal' this' ManagedCallbacks.ManagedCallbackEval.EventType.EvalComplete)); " is 144.
Long Statement,Microsoft.SPOT.Debugger,CorDebugAssembly,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugAssembly.cs,SetJmcStatus,The length of the statement  "				if (this.Process.Engine.Info_SetJMC (fJMC' ReflectionDefinition.Kind.REFLECTION_ASSEMBLY' TinyCLR_TypeSystem.IndexFromIdxAssemblyIdx (this.Idx))) { " is 147.
Long Statement,Microsoft.SPOT.Debugger,ManagedCallbackException,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,DispatchThreadEvent,The length of the statement  "				callback.Exception (m_thread.AppDomain' m_thread' m_frame' m_ip' m_type' (uint)CorDebugExceptionFlags.DEBUG_EXCEPTION_CAN_BE_INTERCEPTED); " is 138.
Long Statement,Microsoft.SPOT.Debugger,DebugPort,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\DebugPort.cs,GetDeviceProcess,The length of the statement  "			VsPackage.MessageCentre.StartProgressMsg(String.Format(DiagnosticStrings.StartDeviceSearch' deviceName' eachSecondRetryMaxCount)); " is 130.
Long Statement,Microsoft.SPOT.Debugger,CorDebugStepper,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugStepper.cs,ShouldBreak,The length of the statement  "					if (this.Process.Engine.Capabilities.ExceptionFilters && breakpointDef.m_depthExceptionHandler == BreakpointDef.c_DEPTH_STEP_INTERCEPT) { " is 137.
Long Statement,Microsoft.SPOT.Debugger,CorDebugStepper,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugStepper.cs,ShouldBreak,The length of the statement  "					if (this.Process.Engine.Capabilities.ExceptionFilters & breakpointDef.m_depthExceptionHandler == BreakpointDef.c_DEPTH_STEP_EXCEPTION_HANDLER) { " is 144.
Long Statement,Microsoft.SPOT.Debugger,CorDebugStepper,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugStepper.cs,ShouldBreak,The length of the statement  "			if (m_ranges != null && reason == CorDebugStepReason.STEP_NORMAL && breakpointDef.m_depth == this.Debugging_Execution_BreakpointDef.m_depth) { " is 142.
Long Statement,Microsoft.SPOT.Debugger,CorDebugType,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugType.cs,GetTypeInfo,The length of the statement  "			return Class.Assembly.MetaData != null ? Class.Assembly.MetaData.LookupToken ((int)Class.PdbxClass.Token.CLR) as TypeDefinition : null; " is 135.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write10_Assembly,The length of the statement  "            Write2_VersionStruct(@"Version"' @""' ((global::Microsoft.SPOT.Debugger.Pdbx.Assembly.VersionStruct)o.@Version)' false); " is 120.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write10_Assembly,The length of the statement  "                global::Microsoft.SPOT.Debugger.Pdbx.Class[] a = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])((global::Microsoft.SPOT.Debugger.Pdbx.Class[])o.@Classes); " is 154.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write9_Class,The length of the statement  "                global::Microsoft.SPOT.Debugger.Pdbx.Field[] a = (global::Microsoft.SPOT.Debugger.Pdbx.Field[])((global::Microsoft.SPOT.Debugger.Pdbx.Field[])o.@Fields); " is 153.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write9_Class,The length of the statement  "                global::Microsoft.SPOT.Debugger.Pdbx.Method[] a = (global::Microsoft.SPOT.Debugger.Pdbx.Method[])((global::Microsoft.SPOT.Debugger.Pdbx.Method[])o.@Methods); " is 157.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write8_Method,The length of the statement  "            WriteElementStringRaw(@"HasByteCode"' @""' System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@HasByteCode))); " is 141.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write8_Method,The length of the statement  "                global::Microsoft.SPOT.Debugger.Pdbx.IL[] a = (global::Microsoft.SPOT.Debugger.Pdbx.IL[])((global::Microsoft.SPOT.Debugger.Pdbx.IL[])o.@ILMap); " is 143.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write2_VersionStruct,The length of the statement  "            WriteElementStringRaw(@"Major"' @""' System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Major))); " is 127.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write2_VersionStruct,The length of the statement  "            WriteElementStringRaw(@"Minor"' @""' System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Minor))); " is 127.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write2_VersionStruct,The length of the statement  "            WriteElementStringRaw(@"Build"' @""' System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Build))); " is 127.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationWriterPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Write2_VersionStruct,The length of the statement  "            WriteElementStringRaw(@"Revision"' @""' System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Revision))); " is 133.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read11_PdbxFile,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id1_PdbxFile && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 181.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read11_PdbxFile,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id3_Assembly && (object)Reader.NamespaceURI == (object)id2_Item)) " is 124.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_Assembly && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 181.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id4_FileName && (object)Reader.NamespaceURI == (object)id2_Item)) " is 124.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The length of the statement  "                    else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id5_Version && (object)Reader.NamespaceURI == (object)id2_Item)) " is 128.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The length of the statement  "                    else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id6_Token && (object)Reader.NamespaceURI == (object)id2_Item)) " is 126.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The length of the statement  "                                            a_3_0 = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])EnsureArrayIndex(a_3_0' ca_3_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Class)); a_3_0[ca_3_0++] = Read9_Class(true' true); " is 181.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The length of the statement  "                            o.@Classes = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])ShrinkArray(a_3_0' ca_3_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Class)' false); " is 145.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id8_Class && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 178.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id6_Token && (object)Reader.NamespaceURI == (object)id2_Item)) " is 121.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The length of the statement  "                                            a_1_0 = (global::Microsoft.SPOT.Debugger.Pdbx.Field[])EnsureArrayIndex(a_1_0' ca_1_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Field)); a_1_0[ca_1_0++] = Read6_Field(true' true); " is 181.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The length of the statement  "                            o.@Fields = (global::Microsoft.SPOT.Debugger.Pdbx.Field[])ShrinkArray(a_1_0' ca_1_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Field)' false); " is 144.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The length of the statement  "                                            a_2_0 = (global::Microsoft.SPOT.Debugger.Pdbx.Method[])EnsureArrayIndex(a_2_0' ca_2_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Method)); a_2_0[ca_2_0++] = Read8_Method(true' true); " is 184.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The length of the statement  "                            o.@Methods = (global::Microsoft.SPOT.Debugger.Pdbx.Method[])ShrinkArray(a_2_0' ca_2_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Method)' false); " is 147.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id12_Method && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 180.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id6_Token && (object)Reader.NamespaceURI == (object)id2_Item)) " is 121.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The length of the statement  "                    else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id13_HasByteCode && (object)Reader.NamespaceURI == (object)id2_Item)) " is 133.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The length of the statement  "                                            a_2_0 = (global::Microsoft.SPOT.Debugger.Pdbx.IL[])EnsureArrayIndex(a_2_0' ca_2_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.IL)); a_2_0[ca_2_0++] = Read7_IL(true' true); " is 172.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The length of the statement  "                            o.@ILMap = (global::Microsoft.SPOT.Debugger.Pdbx.IL[])ShrinkArray(a_2_0' ca_2_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.IL)' false); " is 137.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read7_IL,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id15_IL && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 176.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read7_IL,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id16_CLR && (object)Reader.NamespaceURI == (object)id2_Item)) " is 120.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read7_IL,The length of the statement  "                    else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id17_TinyCLR && (object)Reader.NamespaceURI == (object)id2_Item)) " is 129.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read4_Token,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id6_Token && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 178.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read4_Token,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id16_CLR && (object)Reader.NamespaceURI == (object)id2_Item)) " is 120.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read4_Token,The length of the statement  "                    else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id17_TinyCLR && (object)Reader.NamespaceURI == (object)id2_Item)) " is 129.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read6_Field,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id10_Field && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 179.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read6_Field,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id6_Token && (object)Reader.NamespaceURI == (object)id2_Item)) " is 121.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The length of the statement  "                if (xsiType == null || ((object)((System.Xml.XmlQualifiedName)xsiType).Name == (object)id18_VersionStruct && (object)((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_Item)) " is 187.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The length of the statement  "                o = (global::Microsoft.SPOT.Debugger.Pdbx.Assembly.VersionStruct)System.Activator.CreateInstance(typeof(global::Microsoft.SPOT.Debugger.Pdbx.Assembly.VersionStruct)' System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.CreateInstance | System.Reflection.BindingFlags.NonPublic' null' new object[0]' null); " is 365.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The length of the statement  "                    if (!paramsRead[0] && ((object)Reader.LocalName == (object)id19_Major && (object)Reader.NamespaceURI == (object)id2_Item)) " is 122.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The length of the statement  "                    else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id20_Minor && (object)Reader.NamespaceURI == (object)id2_Item)) " is 127.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The length of the statement  "                    else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id21_Build && (object)Reader.NamespaceURI == (object)id2_Item)) " is 127.
Long Statement,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The length of the statement  "                    else if (!paramsRead[3] && ((object)Reader.LocalName == (object)id22_Revision && (object)Reader.NamespaceURI == (object)id2_Item)) " is 130.
Complex Conditional,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetMembers,The conditional expression  "mi == null || mi.Parameters.Count != 0 || mi.IsAbstract || !mi.IsVirtual || mi.IsStatic"  is complex.
Empty Catch Block,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,TryCast,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetIndexerReference,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetMembers,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetHoistedThisReference,The method has an empty catch block.
Empty Catch Block,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,OnGetParameters,The method has an empty catch block.
Empty Catch Block,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,DetachFromEngine,The method has an empty catch block.
Empty Catch Block,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,GetDeviceState,The method has an empty catch block.
Empty Catch Block,Microsoft.SPOT.Debugger,PdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Pdbx.cs,TryPdbxFile,The method has an empty catch block.
Magic Number,MonoDevelop.MicroFramework,MicroFrameworkDebuggerSession,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,Step,The following statement contains a magic number: try {  				if (stepper != null) {  					//stepper.IsActive ();//no meaning?  					CorDebugFrame frame = activeThread.ActiveFrame;  					var reader = frame.Function.Assembly.DebugData;  					if (reader == null) {  						RawContinue (into);  						return;  					}      					var met = new MethodSymbols (new MetadataToken (frame.Function.Token));  					//Ugliest hack ever  					if(reader is Mono.Cecil.Mdb.MdbReader) {  						for(int i = 0; i < 100; i++)  							met.Variables.Add(new VariableDefinition(null));  					}  					reader.Read (met);    					if (met == null || met.Instructions.Count == 0) {  						RawContinue (into);  						return;  					}    					// Find the current line  					var range = new COR_DEBUG_STEP_RANGE ();  					int currentLine = -1;  					foreach (var sp in met.Instructions) {  						if (sp.Offset > frame.IP) {  							if (currentLine == -1) {  								currentLine = sp.SequencePoint.StartLine;  								range.startOffset = frame.IP;  								range.endOffset = (uint)sp.Offset;  							} else {  								if (sp.SequencePoint.StartLine == currentLine) {  									range.endOffset = (uint)sp.Offset;  								} else {  									break;  								}  							}  						}  					}  					if (currentLine == -1) {  						RawContinue (into);  						return;  					}  					stepper.StepRange (into' new[] { range });    					ClearEvalStatus ();  					process.Continue ();  				}  			} catch (Exception e) {  				OnDebuggerOutput (true' e.ToString ());  			}
Magic Number,MonoDevelop.MicroFramework,DocInfo,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\MicroFrameworkDebuggerSession.cs,AddMethod,The following statement contains a magic number: foreach (var instr in methodSymbols.Instructions) {  					if (instr.SequencePoint.StartLine > 0 && instr.SequencePoint.StartLine < startLine)  						startLine = instr.SequencePoint.StartLine;  					if (instr.SequencePoint.EndLine < 1000000 && instr.SequencePoint.EndLine > endLine)  						endLine = instr.SequencePoint.EndLine;  				}
Magic Number,MonoDevelop.MicroFramework,ExecutionTargetsManager,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\ExecutionTargetsManager.cs,StartListening,The following statement contains a magic number: timer = new System.Threading.Timer(new System.Threading.TimerCallback(updateTargetsList)' null' 1000' 1000);
Magic Number,MonoDevelop.MicroFramework,ExecutionTargetsManager,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\ExecutionTargetsManager.cs,StartListening,The following statement contains a magic number: timer = new System.Threading.Timer(new System.Threading.TimerCallback(updateTargetsList)' null' 1000' 1000);
Magic Number,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,GetHoistedIteratorLocalName,The following statement contains a magic number: if (field.Name.StartsWith ("<$>"' StringComparison.Ordinal)) {  				return field.Name.Substring (3);  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,EnsureProcessIsInInitializedState,The following statement contains a magic number: if (!IsDeviceInInitializeState ()) {  				bool fSucceeded = false;  				VsPackage.MessageCentre.StartProgressMsg (DiagnosticStrings.Rebooting);    				AttachToEngine ();    				m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    				DetachFromEngine ();    				for (int retries = 0; retries < 5; retries++) {  					if (AttachToEngine () != null) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyCLR) {  							if (IsDeviceInInitializeState ()) {  								fSucceeded = true;  								break;  							} else {  								m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    								Thread.Sleep (400);  							}  						} else if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0); // tell tinybooter to enter CLR  							Thread.Sleep (200);  						} else {  							Thread.Sleep (300);  						}  					}  				}                    				if (!ShuttingDown && !fSucceeded) {  					VsPackage.MessageCentre.StopProgressMsg ();  					throw new Exception (DiagnosticStrings.CouldNotReconnect);  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,EnsureProcessIsInInitializedState,The following statement contains a magic number: if (!IsDeviceInInitializeState ()) {  				bool fSucceeded = false;  				VsPackage.MessageCentre.StartProgressMsg (DiagnosticStrings.Rebooting);    				AttachToEngine ();    				m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    				DetachFromEngine ();    				for (int retries = 0; retries < 5; retries++) {  					if (AttachToEngine () != null) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyCLR) {  							if (IsDeviceInInitializeState ()) {  								fSucceeded = true;  								break;  							} else {  								m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    								Thread.Sleep (400);  							}  						} else if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0); // tell tinybooter to enter CLR  							Thread.Sleep (200);  						} else {  							Thread.Sleep (300);  						}  					}  				}                    				if (!ShuttingDown && !fSucceeded) {  					VsPackage.MessageCentre.StopProgressMsg ();  					throw new Exception (DiagnosticStrings.CouldNotReconnect);  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,EnsureProcessIsInInitializedState,The following statement contains a magic number: if (!IsDeviceInInitializeState ()) {  				bool fSucceeded = false;  				VsPackage.MessageCentre.StartProgressMsg (DiagnosticStrings.Rebooting);    				AttachToEngine ();    				m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    				DetachFromEngine ();    				for (int retries = 0; retries < 5; retries++) {  					if (AttachToEngine () != null) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyCLR) {  							if (IsDeviceInInitializeState ()) {  								fSucceeded = true;  								break;  							} else {  								m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    								Thread.Sleep (400);  							}  						} else if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0); // tell tinybooter to enter CLR  							Thread.Sleep (200);  						} else {  							Thread.Sleep (300);  						}  					}  				}                    				if (!ShuttingDown && !fSucceeded) {  					VsPackage.MessageCentre.StopProgressMsg ();  					throw new Exception (DiagnosticStrings.CouldNotReconnect);  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,EnsureProcessIsInInitializedState,The following statement contains a magic number: if (!IsDeviceInInitializeState ()) {  				bool fSucceeded = false;  				VsPackage.MessageCentre.StartProgressMsg (DiagnosticStrings.Rebooting);    				AttachToEngine ();    				m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    				DetachFromEngine ();    				for (int retries = 0; retries < 5; retries++) {  					if (AttachToEngine () != null) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyCLR) {  							if (IsDeviceInInitializeState ()) {  								fSucceeded = true;  								break;  							} else {  								m_engine.RebootDevice (Engine.RebootOption.RebootClrWaitForDebugger);    								Thread.Sleep (400);  							}  						} else if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0); // tell tinybooter to enter CLR  							Thread.Sleep (200);  						} else {  							Thread.Sleep (300);  						}  					}  				}                    				if (!ShuttingDown && !fSucceeded) {  					VsPackage.MessageCentre.StopProgressMsg ();  					throw new Exception (DiagnosticStrings.CouldNotReconnect);  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AttachToEngine,The following statement contains a magic number: int c_maxRetries = 30;
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AttachToEngine,The following statement contains a magic number: int c_retrySleepTime = 300;
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AttachToEngine,The following statement contains a magic number: for (int retry = 0; retry < c_maxRetries; retry++) {  				if (ShuttingDown)  					break;                    				try {  					lock (this) {  						if (m_engine == null) {  #if USE_CONNECTION_MANAGER                              m_engine = m_port.DebugPortSupplier.Manager.Connect(m_portDefinition);  #else  							m_engine = new Engine (PortDefinition);  #endif  							m_engine.StopDebuggerOnConnect = true;  							m_engine.Start ();    							m_engine.OnMessage += new MessageEventHandler (OnMessage);  							m_engine.OnCommand += new CommandEventHandler (OnCommand);  							m_engine.OnNoise += new NoiseEventHandler (OnNoise);  							m_engine.OnProcessExit += new EventHandler (OnProcessExit);  						} else {  							m_engine.ThrowOnCommunicationFailure = false;  							m_engine.StopDebuggerOnConnect = true;                          						}  					}    					if (m_engine.TryToConnect (0' 100' true' ConnectionSource.Unknown)) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0);  							Thread.Sleep (500);  						}  						m_engine.ThrowOnCommunicationFailure = true;  						m_engine.SetExecutionMode (WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_SourceLevelDebugging' 0);  						break;  					} else {  						// only detach-reattach after 10 retries (10 seconds)  						if ((retry % 10) == 9)  							DetachFromEngine ();  						Thread.Sleep (c_retrySleepTime);  					}  				} catch {  					DetachFromEngine ();    					if (!ShuttingDown) {  						Thread.Sleep (c_retrySleepTime);  					}  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AttachToEngine,The following statement contains a magic number: for (int retry = 0; retry < c_maxRetries; retry++) {  				if (ShuttingDown)  					break;                    				try {  					lock (this) {  						if (m_engine == null) {  #if USE_CONNECTION_MANAGER                              m_engine = m_port.DebugPortSupplier.Manager.Connect(m_portDefinition);  #else  							m_engine = new Engine (PortDefinition);  #endif  							m_engine.StopDebuggerOnConnect = true;  							m_engine.Start ();    							m_engine.OnMessage += new MessageEventHandler (OnMessage);  							m_engine.OnCommand += new CommandEventHandler (OnCommand);  							m_engine.OnNoise += new NoiseEventHandler (OnNoise);  							m_engine.OnProcessExit += new EventHandler (OnProcessExit);  						} else {  							m_engine.ThrowOnCommunicationFailure = false;  							m_engine.StopDebuggerOnConnect = true;                          						}  					}    					if (m_engine.TryToConnect (0' 100' true' ConnectionSource.Unknown)) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0);  							Thread.Sleep (500);  						}  						m_engine.ThrowOnCommunicationFailure = true;  						m_engine.SetExecutionMode (WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_SourceLevelDebugging' 0);  						break;  					} else {  						// only detach-reattach after 10 retries (10 seconds)  						if ((retry % 10) == 9)  							DetachFromEngine ();  						Thread.Sleep (c_retrySleepTime);  					}  				} catch {  					DetachFromEngine ();    					if (!ShuttingDown) {  						Thread.Sleep (c_retrySleepTime);  					}  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AttachToEngine,The following statement contains a magic number: for (int retry = 0; retry < c_maxRetries; retry++) {  				if (ShuttingDown)  					break;                    				try {  					lock (this) {  						if (m_engine == null) {  #if USE_CONNECTION_MANAGER                              m_engine = m_port.DebugPortSupplier.Manager.Connect(m_portDefinition);  #else  							m_engine = new Engine (PortDefinition);  #endif  							m_engine.StopDebuggerOnConnect = true;  							m_engine.Start ();    							m_engine.OnMessage += new MessageEventHandler (OnMessage);  							m_engine.OnCommand += new CommandEventHandler (OnCommand);  							m_engine.OnNoise += new NoiseEventHandler (OnNoise);  							m_engine.OnProcessExit += new EventHandler (OnProcessExit);  						} else {  							m_engine.ThrowOnCommunicationFailure = false;  							m_engine.StopDebuggerOnConnect = true;                          						}  					}    					if (m_engine.TryToConnect (0' 100' true' ConnectionSource.Unknown)) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0);  							Thread.Sleep (500);  						}  						m_engine.ThrowOnCommunicationFailure = true;  						m_engine.SetExecutionMode (WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_SourceLevelDebugging' 0);  						break;  					} else {  						// only detach-reattach after 10 retries (10 seconds)  						if ((retry % 10) == 9)  							DetachFromEngine ();  						Thread.Sleep (c_retrySleepTime);  					}  				} catch {  					DetachFromEngine ();    					if (!ShuttingDown) {  						Thread.Sleep (c_retrySleepTime);  					}  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,AttachToEngine,The following statement contains a magic number: for (int retry = 0; retry < c_maxRetries; retry++) {  				if (ShuttingDown)  					break;                    				try {  					lock (this) {  						if (m_engine == null) {  #if USE_CONNECTION_MANAGER                              m_engine = m_port.DebugPortSupplier.Manager.Connect(m_portDefinition);  #else  							m_engine = new Engine (PortDefinition);  #endif  							m_engine.StopDebuggerOnConnect = true;  							m_engine.Start ();    							m_engine.OnMessage += new MessageEventHandler (OnMessage);  							m_engine.OnCommand += new CommandEventHandler (OnCommand);  							m_engine.OnNoise += new NoiseEventHandler (OnNoise);  							m_engine.OnProcessExit += new EventHandler (OnProcessExit);  						} else {  							m_engine.ThrowOnCommunicationFailure = false;  							m_engine.StopDebuggerOnConnect = true;                          						}  					}    					if (m_engine.TryToConnect (0' 100' true' ConnectionSource.Unknown)) {  						if (m_engine.ConnectionSource == ConnectionSource.TinyBooter) {  							m_engine.ExecuteMemory (0);  							Thread.Sleep (500);  						}  						m_engine.ThrowOnCommunicationFailure = true;  						m_engine.SetExecutionMode (WireProtocol.Commands.Debugging_Execution_ChangeConditions.c_SourceLevelDebugging' 0);  						break;  					} else {  						// only detach-reattach after 10 retries (10 seconds)  						if ((retry % 10) == 9)  							DetachFromEngine ();  						Thread.Sleep (c_retrySleepTime);  					}  				} catch {  					DetachFromEngine ();    					if (!ShuttingDown) {  						Thread.Sleep (c_retrySleepTime);  					}  				}  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,CreateProcess,The following statement contains a magic number: CorDebugProcess process = pPort.GetDeviceProcess (deployDeviceName' 60);
Magic Number,Microsoft.SPOT.Debugger,ScratchPadArea,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugProcess.cs,ReserveScratchBlock,The following statement contains a magic number: if (index < 0) {  					index = m_scratchPad.Length;  					ReallocScratchPad (m_scratchPad.Length + 50);  				}
Magic Number,Microsoft.SPOT.Debugger,TokenMap,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Pdbx.cs,StringToUInt32,The following statement contains a magic number: if (s.StartsWith("0x"))                      s = s.Remove(0' 2);
Magic Number,Microsoft.SPOT.Debugger,TinyCLR_TypeSystem,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\TinyCLR_TypeSystem.cs,IdxAssemblyFromIndex,The following statement contains a magic number: return idx >> 16;
Magic Number,Microsoft.SPOT.Debugger,TinyCLR_TypeSystem,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\TinyCLR_TypeSystem.cs,IndexFromIdxAssemblyIdx,The following statement contains a magic number: return idxAssm << 16 | idx;
Magic Number,Microsoft.SPOT.Debugger,TinyCLR_TypeSystem,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\TinyCLR_TypeSystem.cs,IndexFromIdxAssemblyIdx,The following statement contains a magic number: return idxAssm << 16;
Magic Number,Microsoft.SPOT.Debugger,TinyCLR_TypeSystem,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\TinyCLR_TypeSystem.cs,CLR_TypeFromTk,The following statement contains a magic number: return (CLR_TABLESENUM)(tk >> 24);
Magic Number,Microsoft.SPOT.Debugger,TinyCLR_TypeSystem,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\TinyCLR_TypeSystem.cs,CLR_TkFromType,The following statement contains a magic number: return ((((uint)tbl) << 24) & 0xFF000000) | (data & 0x00FFFFFF);
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionToUint,The following statement contains a magic number: return (((uint)v.Major & 0xFFFF) << 16) | (((uint)v.Minor & 0xFFFF));
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionFromUint,The following statement contains a magic number: return new Version (  				(int)(u >> 16) & 0xFFFF'  				(int)(u) & 0xFFFF);
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionFromPropertyString,The following statement contains a magic number: if (components.Length > 4)  				throw new VersionFormatException (vs);
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionFromPropertyString,The following statement contains a magic number: try {  				int major = 0;  				int minor = 0;  				int build = 0;  				int rev = 0;    				major = Int32.Parse (components [0]);  				if (components.Length > 1)  					minor = Int32.Parse (components [1]);  				if (components.Length > 2)  					minor = Int32.Parse (components [2]);  				if (components.Length > 3)  					minor = Int32.Parse (components [3]);    				return new Version (major' minor' build' rev);  			} catch (Exception) {  				throw new VersionFormatException (vs);  			}
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionFromPropertyString,The following statement contains a magic number: try {  				int major = 0;  				int minor = 0;  				int build = 0;  				int rev = 0;    				major = Int32.Parse (components [0]);  				if (components.Length > 1)  					minor = Int32.Parse (components [1]);  				if (components.Length > 2)  					minor = Int32.Parse (components [2]);  				if (components.Length > 3)  					minor = Int32.Parse (components [3]);    				return new Version (major' minor' build' rev);  			} catch (Exception) {  				throw new VersionFormatException (vs);  			}
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionFromPropertyString,The following statement contains a magic number: try {  				int major = 0;  				int minor = 0;  				int build = 0;  				int rev = 0;    				major = Int32.Parse (components [0]);  				if (components.Length > 1)  					minor = Int32.Parse (components [1]);  				if (components.Length > 2)  					minor = Int32.Parse (components [2]);  				if (components.Length > 3)  					minor = Int32.Parse (components [3]);    				return new Version (major' minor' build' rev);  			} catch (Exception) {  				throw new VersionFormatException (vs);  			}
Magic Number,Microsoft.SPOT.Debugger,Utility,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\Utility.cs,VersionFromPropertyString,The following statement contains a magic number: try {  				int major = 0;  				int minor = 0;  				int build = 0;  				int rev = 0;    				major = Int32.Parse (components [0]);  				if (components.Length > 1)  					minor = Int32.Parse (components [1]);  				if (components.Length > 2)  					minor = Int32.Parse (components [2]);  				if (components.Length > 3)  					minor = Int32.Parse (components [3]);    				return new Version (major' minor' build' rev);  			} catch (Exception) {  				throw new VersionFormatException (vs);  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugFunction,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugFunction.cs,GetMethodSymbols,The following statement contains a magic number: if(Assembly.DebugData is Mono.Cecil.Mdb.MdbReader) {  				for(int i = 0; i < 100; i++)  					methodSymols.Variables.Add(new VariableDefinition(null));  			}
Magic Number,Microsoft.SPOT.Debugger,DebugPort,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\DebugPort.cs,TryAddProcess,The following statement contains a magic number: switch(m_portFilter)  			{  				case PortFilter.TcpIp:  					for(int retry = 0; retry < 5; retry++)  					{  						try  						{  							portDefinition = PortDefinition.CreateInstanceForTcp(name);  							break;  						}  						catch(System.Net.Sockets.SocketException)  						{  							System.Threading.Thread.Sleep(1000);  						}  					}  					break;  			}
Magic Number,Microsoft.SPOT.Debugger,DebugPort,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\DebugPort.cs,TryAddProcess,The following statement contains a magic number: switch(m_portFilter)  			{  				case PortFilter.TcpIp:  					for(int retry = 0; retry < 5; retry++)  					{  						try  						{  							portDefinition = PortDefinition.CreateInstanceForTcp(name);  							break;  						}  						catch(System.Net.Sockets.SocketException)  						{  							System.Threading.Thread.Sleep(1000);  						}  					}  					break;  			}
Magic Number,Microsoft.SPOT.Debugger,DebugPort,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\DebugPort.cs,GetDeviceProcess,The following statement contains a magic number: for(int i = 0; i < eachSecondRetryMaxCount && process == null; i++)  			{  				VsPackage.MessageCentre.DeployDot();  				System.Threading.Thread.Sleep(1000);  				process = this.InternalGetDeviceProcess(deviceName);  			}
Magic Number,Microsoft.SPOT.Debugger,CorDebugBacktrace,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBacktrace.cs,CreateFrame,The following statement contains a magic number: if (frame.FrameType == CorFrameType.ILFrame) {  				if (frame.Function != null) {  					uint tk = TinyCLR_TypeSystem.SymbollessSupport.TinyCLRTokenFromMethodDefToken (frame.Function.Token);  					uint md = TinyCLR_TypeSystem.ClassMemberIndexFromTinyCLRToken (tk' frame.Function.Assembly);  					method = session.Engine.GetMethodName (md' true);  					var reader = frame.Function.Assembly.DebugData;  					if (reader != null) {  						var sim = new MethodSymbols (new Mono.Cecil.MetadataToken (frame.Function.Token));  						//Ugliest hack ever  						if(reader is Mono.Cecil.Mdb.MdbReader) {  							for(int i = 0; i < 100; i++)  								sim.Variables.Add(new VariableDefinition(null));  						}  						reader.Read (sim);  						InstructionSymbol prevSp = new InstructionSymbol (-1' null);  						foreach (var sp in sim.Instructions) {  							if (sp.Offset > frame.IP)  								break;  							prevSp = sp;  						}  						if (prevSp.Offset != -1) {  							line = prevSp.SequencePoint.StartLine;  							file = prevSp.SequencePoint.Document.Url;  						}  					}  				}  				lang = "Managed";  			}  //			else if(frame.FrameType == CorFrameType.NativeFrame)  //			{  //				frame.GetNativeIP(out address);  //				method = "<Unknown>";  //				lang = "Native";  //			}  			else if (frame.FrameType == CorFrameType.InternalFrame) {  				switch (((CorDebugInternalFrame)frame).FrameInternalType) {  				case CorDebugInternalFrameType.STUBFRAME_M2U:  					method = "[Managed to Native Transition]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_U2M:  					method = "[Native to Managed Transition]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_LIGHTWEIGHT_FUNCTION:  					method = "[Lightweight Method Call]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_APPDOMAIN_TRANSITION:  					method = "[Application Domain Transition]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_FUNC_EVAL:  					method = "[Function Evaluation]";  					break;  				}  			}
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The following statement contains a magic number: bool[] paramsRead = new bool[4];
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The following statement contains a magic number: while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)              {                  if (Reader.NodeType == System.Xml.XmlNodeType.Element)                  {                      if (!paramsRead[0] && ((object)Reader.LocalName == (object)id4_FileName && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@FileName = Reader.ReadElementString();                          }                          paramsRead[0] = true;                      }                      else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id5_Version && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          o.@Version = Read2_VersionStruct(true);                          paramsRead[1] = true;                      }                      else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id6_Token && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          o.@Token = Read4_Token(false' true);                          paramsRead[2] = true;                      }                      else if (((object)Reader.LocalName == (object)id7_Classes && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          if (!ReadNull())                          {                              global::Microsoft.SPOT.Debugger.Pdbx.Class[] a_3_0 = null;                              int ca_3_0 = 0;                              if ((Reader.IsEmptyElement))                              {                                  Reader.Skip();                              }                              else                              {                                  Reader.ReadStartElement();                                  Reader.MoveToContent();                                  int whileIterations2 = 0;                                  int readerCount2 = ReaderCount;                                  while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)                                  {                                      if (Reader.NodeType == System.Xml.XmlNodeType.Element)                                      {                                          if (((object)Reader.LocalName == (object)id8_Class && (object)Reader.NamespaceURI == (object)id2_Item))                                          {                                              a_3_0 = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])EnsureArrayIndex(a_3_0' ca_3_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Class)); a_3_0[ca_3_0++] = Read9_Class(true' true);                                          }                                          else                                          {                                              UnknownNode(null' @":Class");                                          }                                      }                                      else                                      {                                          UnknownNode(null' @":Class");                                      }                                      Reader.MoveToContent();                                      CheckReaderCount(ref whileIterations2' ref readerCount2);                                  }                                  ReadEndElement();                              }                              o.@Classes = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])ShrinkArray(a_3_0' ca_3_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Class)' false);                          }                      }                      else                      {                          UnknownNode((object)o' @":FileName' :Version' :Token' :Classes");                      }                  }                  else                  {                      UnknownNode((object)o' @":FileName' :Version' :Token' :Classes");                  }                  Reader.MoveToContent();                  CheckReaderCount(ref whileIterations1' ref readerCount1);              }
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read10_Assembly,The following statement contains a magic number: while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)              {                  if (Reader.NodeType == System.Xml.XmlNodeType.Element)                  {                      if (!paramsRead[0] && ((object)Reader.LocalName == (object)id4_FileName && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@FileName = Reader.ReadElementString();                          }                          paramsRead[0] = true;                      }                      else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id5_Version && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          o.@Version = Read2_VersionStruct(true);                          paramsRead[1] = true;                      }                      else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id6_Token && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          o.@Token = Read4_Token(false' true);                          paramsRead[2] = true;                      }                      else if (((object)Reader.LocalName == (object)id7_Classes && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          if (!ReadNull())                          {                              global::Microsoft.SPOT.Debugger.Pdbx.Class[] a_3_0 = null;                              int ca_3_0 = 0;                              if ((Reader.IsEmptyElement))                              {                                  Reader.Skip();                              }                              else                              {                                  Reader.ReadStartElement();                                  Reader.MoveToContent();                                  int whileIterations2 = 0;                                  int readerCount2 = ReaderCount;                                  while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)                                  {                                      if (Reader.NodeType == System.Xml.XmlNodeType.Element)                                      {                                          if (((object)Reader.LocalName == (object)id8_Class && (object)Reader.NamespaceURI == (object)id2_Item))                                          {                                              a_3_0 = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])EnsureArrayIndex(a_3_0' ca_3_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Class)); a_3_0[ca_3_0++] = Read9_Class(true' true);                                          }                                          else                                          {                                              UnknownNode(null' @":Class");                                          }                                      }                                      else                                      {                                          UnknownNode(null' @":Class");                                      }                                      Reader.MoveToContent();                                      CheckReaderCount(ref whileIterations2' ref readerCount2);                                  }                                  ReadEndElement();                              }                              o.@Classes = (global::Microsoft.SPOT.Debugger.Pdbx.Class[])ShrinkArray(a_3_0' ca_3_0' typeof(global::Microsoft.SPOT.Debugger.Pdbx.Class)' false);                          }                      }                      else                      {                          UnknownNode((object)o' @":FileName' :Version' :Token' :Classes");                      }                  }                  else                  {                      UnknownNode((object)o' @":FileName' :Version' :Token' :Classes");                  }                  Reader.MoveToContent();                  CheckReaderCount(ref whileIterations1' ref readerCount1);              }
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read9_Class,The following statement contains a magic number: bool[] paramsRead = new bool[3];
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read8_Method,The following statement contains a magic number: bool[] paramsRead = new bool[3];
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read7_IL,The following statement contains a magic number: bool[] paramsRead = new bool[2];
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read4_Token,The following statement contains a magic number: bool[] paramsRead = new bool[2];
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The following statement contains a magic number: bool[] paramsRead = new bool[4];
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The following statement contains a magic number: while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)              {                  if (Reader.NodeType == System.Xml.XmlNodeType.Element)                  {                      if (!paramsRead[0] && ((object)Reader.LocalName == (object)id19_Major && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Major = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[0] = true;                      }                      else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id20_Minor && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Minor = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[1] = true;                      }                      else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id21_Build && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Build = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[2] = true;                      }                      else if (!paramsRead[3] && ((object)Reader.LocalName == (object)id22_Revision && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Revision = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[3] = true;                      }                      else                      {                          UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                      }                  }                  else                  {                      UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                  }                  Reader.MoveToContent();                  CheckReaderCount(ref whileIterations11' ref readerCount11);              }
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The following statement contains a magic number: while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)              {                  if (Reader.NodeType == System.Xml.XmlNodeType.Element)                  {                      if (!paramsRead[0] && ((object)Reader.LocalName == (object)id19_Major && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Major = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[0] = true;                      }                      else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id20_Minor && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Minor = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[1] = true;                      }                      else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id21_Build && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Build = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[2] = true;                      }                      else if (!paramsRead[3] && ((object)Reader.LocalName == (object)id22_Revision && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Revision = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[3] = true;                      }                      else                      {                          UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                      }                  }                  else                  {                      UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                  }                  Reader.MoveToContent();                  CheckReaderCount(ref whileIterations11' ref readerCount11);              }
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The following statement contains a magic number: while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)              {                  if (Reader.NodeType == System.Xml.XmlNodeType.Element)                  {                      if (!paramsRead[0] && ((object)Reader.LocalName == (object)id19_Major && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Major = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[0] = true;                      }                      else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id20_Minor && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Minor = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[1] = true;                      }                      else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id21_Build && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Build = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[2] = true;                      }                      else if (!paramsRead[3] && ((object)Reader.LocalName == (object)id22_Revision && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Revision = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[3] = true;                      }                      else                      {                          UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                      }                  }                  else                  {                      UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                  }                  Reader.MoveToContent();                  CheckReaderCount(ref whileIterations11' ref readerCount11);              }
Magic Number,Microsoft.SPOT.Debugger.Serialization.PdbxFile,XmlSerializationReaderPdbxFile,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\PdbxFile.cs,Read2_VersionStruct,The following statement contains a magic number: while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None)              {                  if (Reader.NodeType == System.Xml.XmlNodeType.Element)                  {                      if (!paramsRead[0] && ((object)Reader.LocalName == (object)id19_Major && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Major = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[0] = true;                      }                      else if (!paramsRead[1] && ((object)Reader.LocalName == (object)id20_Minor && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Minor = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[1] = true;                      }                      else if (!paramsRead[2] && ((object)Reader.LocalName == (object)id21_Build && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Build = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[2] = true;                      }                      else if (!paramsRead[3] && ((object)Reader.LocalName == (object)id22_Revision && (object)Reader.NamespaceURI == (object)id2_Item))                      {                          {                              o.@Revision = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());                          }                          paramsRead[3] = true;                      }                      else                      {                          UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                      }                  }                  else                  {                      UnknownNode((object)o' @":Major' :Minor' :Build' :Revision");                  }                  Reader.MoveToContent();                  CheckReaderCount(ref whileIterations11' ref readerCount11);              }
Missing Default,MonoDevelop.MicroFramework,MicroFrameworkObjectValueAdaptor,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\MicroFrameworkObjectValueAdaptor.cs,IsAssignableFrom,The following switch statement is missing a default case: switch (ctype.Type) {  			case CorElementType.ELEMENT_TYPE_ARRAY:  			case CorElementType.ELEMENT_TYPE_SZARRAY:  			case CorElementType.ELEMENT_TYPE_BYREF:  			case CorElementType.ELEMENT_TYPE_PTR:  				return false;  			}
Missing Default,Microsoft.SPOT.Debugger,CLREventsBreakpoint,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBreakpointStepper.cs,ExceptionThrown,The following switch statement is missing a default case: switch (breakpointDef.m_depthExceptionHandler) {  				case BreakpointDef.c_DEPTH_EXCEPTION_FIRST_CHANCE:  					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_FIRST_CHANCE));  					break;  				case BreakpointDef.c_DEPTH_EXCEPTION_USERS_CHANCE:  					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_USER_FIRST_CHANCE));  					break;  				case BreakpointDef.c_DEPTH_EXCEPTION_HANDLER_FOUND:  					Process.EnqueueEvent (new ManagedCallbacks.ManagedCallbackException (thread' frame' breakpointDef.m_IP' CorDebugExceptionCallbackType.DEBUG_EXCEPTION_CATCH_HANDLER_FOUND));  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,CorDebugEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugEval.cs,EndEval,The following switch statement is missing a default case: switch (resultType)                      {                          case EvalResult.Complete:                              Process.EnqueueEvent(new ManagedCallbacks.ManagedCallbackEval(m_threadReal' this' ManagedCallbacks.ManagedCallbackEval.EventType.EvalComplete));                              break;                            case EvalResult.Exception:                              Process.EnqueueEvent(new ManagedCallbacks.ManagedCallbackEval(m_threadReal' this' ManagedCallbacks.ManagedCallbackEval.EventType.EvalException));                                                           break;                            case EvalResult.Abort:                              fKillThread = true;                              /* WARNING!!!!                               * If we do not give VS a EvalComplete message within 3 seconds of them calling ICorDebugEval::Abort then VS will attempt a RudeAbort                               * and will display a scary error message about a serious internal debugger error and ignore all future debugging requests' among other bad things.                               */                              Process.EnqueueEvent(new ManagedCallbacks.ManagedCallbackEval(m_threadReal' this' ManagedCallbacks.ManagedCallbackEval.EventType.EvalComplete));                              break;                      }
Missing Default,Microsoft.SPOT.Debugger,ManagedCallbackThread,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,DispatchThreadEvent,The following switch statement is missing a default case: switch (m_eventType) {  				case EventType.CreateThread:  					callback.CreateThread (m_thread.AppDomain' m_thread);  					break;    				case EventType.ExitThread:  					callback.ExitThread (m_thread.AppDomain' m_thread);  					break;    				case EventType.NameChange:  					callback.NameChange (m_thread.AppDomain' m_thread);  					break;    				case EventType.Other:  					Debug.Assert (false' "Invalid ManagedCallbackThread event");  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,ManagedCallbackEval,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,DispatchThreadEvent,The following switch statement is missing a default case: switch (m_eventType) {  				case EventType.EvalComplete:  					callback.EvalComplete (m_thread.AppDomain' m_thread' m_eval);  					break;    				case EventType.EvalException:  					callback.EvalException (m_thread.AppDomain' m_thread' m_eval);  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,ManagedCallbackProcess,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,Dispatch,The following switch statement is missing a default case: switch (m_eventType) {  				case EventType.CreateProcess:  					callback.CreateProcess (m_process);  					break;  				case EventType.ExitProcess:  					callback.ExitProcess (m_process);  					break;  				case EventType.ControlCTrap:  					callback.ControlCTrap (m_process);  					break;  				case EventType.Other:  					Debug.Assert (false' "Invalid ManagedCallbackProcess event");  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,ManagedCallbackAppDomain,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,Dispatch,The following switch statement is missing a default case: switch (m_eventType) {  				case EventType.CreateAppDomain:  					callback.CreateAppDomain (m_appDomain.Process' m_appDomain);  					break;  				case EventType.ExitAppDomain:  					callback.ExitAppDomain (m_appDomain.Process' m_appDomain);  					break;  				case EventType.Other:  					Debug.Assert (false' "Invalid ManagedCallbackAppDomain event");  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,ManagedCallbackAssembly,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,Dispatch,The following switch statement is missing a default case: switch (m_eventType) {  				case EventType.LoadAssembly:  					callback.LoadAssembly (m_assembly.AppDomain' m_assembly);  					break;    				case EventType.LoadModule:  					callback.LoadModule (m_assembly.AppDomain' m_assembly);  					break;    				case EventType.UnloadAssembly:  					callback.UnloadAssembly (m_assembly.AppDomain' m_assembly);  					break;    				case EventType.UnloadModule:  					callback.UnloadModule (m_assembly.AppDomain' m_assembly);  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,ManagedCallbackClass,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\ManagedCallbacks.cs,Dispatch,The following switch statement is missing a default case: switch (m_eventType) {  				case EventType.LoadClass:  					callback.LoadClass (appDomain' m_class);  					break;    				case EventType.UnloadClass:  					callback.UnloadClass (appDomain' m_class);  					break;  				}
Missing Default,Microsoft.SPOT.Debugger,DebugPort,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\DebugPort.cs,TryAddProcess,The following switch statement is missing a default case: switch(m_portFilter)  			{  				case PortFilter.TcpIp:  					for(int retry = 0; retry < 5; retry++)  					{  						try  						{  							portDefinition = PortDefinition.CreateInstanceForTcp(name);  							break;  						}  						catch(System.Net.Sockets.SocketException)  						{  							System.Threading.Thread.Sleep(1000);  						}  					}  					break;  			}
Missing Default,Microsoft.SPOT.Debugger,CorDebugBacktrace,C:\repos\xamarin_Monkey.Robotics\Source\Xamarin Studio Microframework Add-in\Add-In Project\MonoDevelop.MicroFramework\Debug\CorDebugBacktrace.cs,CreateFrame,The following switch statement is missing a default case: switch (((CorDebugInternalFrame)frame).FrameInternalType) {  				case CorDebugInternalFrameType.STUBFRAME_M2U:  					method = "[Managed to Native Transition]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_U2M:  					method = "[Native to Managed Transition]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_LIGHTWEIGHT_FUNCTION:  					method = "[Lightweight Method Call]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_APPDOMAIN_TRANSITION:  					method = "[Application Domain Transition]";  					break;  				case CorDebugInternalFrameType.STUBFRAME_FUNC_EVAL:  					method = "[Function Evaluation]";  					break;  				}
