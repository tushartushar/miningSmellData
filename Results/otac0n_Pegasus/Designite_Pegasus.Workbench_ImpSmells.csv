Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,MarkTokens,Cyclomatic complexity of the method is 8
Long Statement,Pegasus.Workbench.Pipeline,CsCompiler,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Pipeline\CsCompiler.cs,Compile,The length of the statement  "                var @namespace = grammar.Settings.Where(s => s.Key.Name == SettingName.Namespace).Select(s => s.Value.ToString()).SingleOrDefault() ?? "Parsers"; " is 145.
Long Statement,Pegasus.Workbench.Pipeline,CsCompiler,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Pipeline\CsCompiler.cs,Compile,The length of the statement  "                var @className = grammar.Settings.Where(s => s.Key.Name == SettingName.ClassName).Select(s => s.Value.ToString()).SingleOrDefault() ?? "Parser"; " is 144.
Long Statement,Pegasus.Workbench.Pipeline,WarningsPerformanceTracer,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Pipeline\TestParser.cs,ReportPerformance,The length of the statement  "                        new CompilerError(string.Empty' 0' 0' string.Empty' $"Recommendation: Add the -memoize flag to `{stat.Name}`. (Saves {stat.EstimatedTotalTimeSaved})") { IsWarning = true })' " is 173.
Long Statement,Pegasus.Workbench.Pipeline,WarningsPerformanceTracer,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Pipeline\TestParser.cs,ReportPerformance,The length of the statement  "                        new CompilerError(string.Empty' 0' 0' string.Empty' $"Recommendation: Remove -memoize flag from `{stat.Name}`. (Saves {stat.EstimatedTotalTimeSaved.Negate()})") { IsWarning = true })) " is 183.
Long Statement,Pegasus.Workbench,FileUtilities,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\FileUtilities.cs,ReadAllTextAsync,The length of the statement  "            using (var stream = new FileStream(path' FileMode.Open' FileAccess.Read' FileShare.Read' bufferSize: BufferSize' useAsync: true)) " is 129.
Long Statement,Pegasus.Workbench,FileUtilities,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\FileUtilities.cs,ReadAllTextAsync,The length of the statement  "            using (var reader = new StreamReader(stream' Encoding.Default' detectEncodingFromByteOrderMarks: true' bufferSize: BufferSize' leaveOpen: true)) " is 144.
Long Statement,Pegasus.Workbench,FileUtilities,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\FileUtilities.cs,WriteAllTextAsync,The length of the statement  "            using (var stream = new FileStream(path' FileMode.Create' FileAccess.Write' FileShare.None' bufferSize: BufferSize' useAsync: true)) " is 132.
Long Statement,Pegasus.Workbench,MainWindow,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\MainWindow.xaml.cs,FocusError,The length of the statement  "            // 1. Run the app' switch to both the grammar and the test tabs' to make sure each TextEditor control is shown at least once. " is 125.
Long Statement,Pegasus.Workbench,MainWindow,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\MainWindow.xaml.cs,SaveOrDiscard,The length of the statement  "            var result = MessageBox.Show(string.Format(CultureInfo.CurrentCulture' Properties.Resources.SaveChangesToFile' Path.GetFileName(this.ViewModel.GrammarFileName))' this.Title' MessageBoxButton.YesNoCancel); " is 204.
Long Statement,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,MarkTokens,The length of the statement  "                    line.Words.Add(new TextWord(document' line' offset - line.Offset' line.Offset + line.Length - offset' this.GetColorFor(null)' true)); " is 133.
Long Statement,Pegasus.Workbench,Tutorial,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Tutorial.cs,FindAll,The length of the statement  "                var path = Path.Combine(Path.GetDirectoryName(Uri.UnescapeDataString(new UriBuilder(assembly.CodeBase).Path))' "Tutorials"); " is 124.
Complex Conditional,Pegasus.Workbench,CompilerErrorListEqualityComparer,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\AppViewModel.cs,Equals,The conditional expression  "x != null && y != null && x.Count == 0 && y.Count == 0"  is complex.
Magic Number,Pegasus.Workbench.Pipeline,WarningsPerformanceTracer,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Pipeline\TestParser.cs,ReportPerformance,The following statement contains a magic number: this.Recommendations = Enumerable.Concat(                      stats.Where(stat => !stat.IsCached && stat.EstimatedTotalTimeSaved > TimeSpan.Zero).Select(stat =>                          new CompilerError(string.Empty' 0' 0' string.Empty' $"Recommendation: Add the -memoize flag to `{stat.Name}`. (Saves {stat.EstimatedTotalTimeSaved})") { IsWarning = true })'                      stats.Where(stat => stat.IsCached && stat.EstimatedTotalTimeSaved < -TimeSpan.FromMilliseconds(10)).Select(stat =>                          new CompilerError(string.Empty' 0' 0' string.Empty' $"Recommendation: Remove -memoize flag from `{stat.Name}`. (Saves {stat.EstimatedTotalTimeSaved.Negate()})") { IsWarning = true }))                      .ToList();
Magic Number,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following statement contains a magic number: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
Magic Number,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following statement contains a magic number: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
Magic Number,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following statement contains a magic number: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
Magic Number,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following statement contains a magic number: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
Magic Number,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following statement contains a magic number: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
Magic Number,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following statement contains a magic number: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
Magic Number,Pegasus.Workbench,Tutorial,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\Tutorial.cs,FindAll,The following statement contains a magic number: return LazyInitializer.EnsureInitialized(ref allTutorials' () =>              {                  var assembly = Assembly.GetExecutingAssembly();                    var resourcePrefix = assembly.GetName().Name + ".Tutorials.";                  var path = Path.Combine(Path.GetDirectoryName(Uri.UnescapeDataString(new UriBuilder(assembly.CodeBase).Path))' "Tutorials");                    string Load(string name)                  {                      using (var stream = assembly.GetManifestResourceStream(resourcePrefix + name))                      using (var reader = new StreamReader(stream' Encoding.Default' true' 1024' true))                      {                          return reader.ReadToEnd();                      }                  }                    var resources = assembly.GetManifestResourceNames();                  var tutorialFiles = (from r in resources                                       where r.StartsWith(resourcePrefix' StringComparison.Ordinal)                                       select r.Substring(resourcePrefix.Length)).ToLookup(r => Path.GetExtension(r));                  return (from peg in tutorialFiles[".peg"]                          let name = Path.GetFileNameWithoutExtension(peg)                          join txt in tutorialFiles[".txt"]                          on name equals Path.GetFileNameWithoutExtension(txt)                          select new Tutorial(name' Load(peg)' Load(txt)' Path.Combine(path' peg))).ToList().AsReadOnly();              });
Missing Default,Pegasus.Workbench,MainWindow,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\MainWindow.xaml.cs,SaveOrDiscard,The following switch statement is missing a default case: switch (result)              {                  case MessageBoxResult.Yes:                      this.ViewModel.Save.Execute(null);                      goto case MessageBoxResult.No;                    case MessageBoxResult.No:                      result = MessageBoxResult.OK;                      break;              }
Missing Default,Pegasus.Workbench,PegasusHighlightingStrategy,C:\research\architectureSmells\repos\otac0n_Pegasus\Pegasus.Workbench\PegasusHighlightingStrategy.cs,GetColorFor,The following switch statement is missing a default case: switch (name)              {                  case "String":                      return new HighlightColor(Color.FromArgb(163' 21' 21)' false' false);                    case "RuleName":                      return new HighlightColor(Color.FromArgb(43' 145' 175)' false' false);                    case "Keyword":                      return new HighlightColor(Color.Blue' false' false);                    case "Comment":                      return new HighlightColor(Color.DarkGreen' false' false);              }
