Implementation smell,Namespace,Class,File,Method,Description
Long Method,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,LexFileArguments,The method has 100 lines of code.
Complex Method,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,Parser,Cyclomatic complexity of the method is 10
Complex Method,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,GetUsageString,Cyclomatic complexity of the method is 9
Long Identifier,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,GetUsageString,The length of the parameter minimumNumberOfCharsForHelpText is 31.
Long Statement,BrightstarDB.Server.Runner,ProjectInstaller,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\ProjectInstaller.cs,InitializeComponent,The length of the statement  "            this.serviceInstaller1.Description = "The BrightstarDB server provides an HTTP(S) endpoint which can be connected to fr" + " is 122.
Long Statement,BrightstarDB.Server.Runner,Service,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\Service.cs,OnStart,The length of the statement  "            Parser.ParseArguments(args' serviceArgs' new ErrorReporter(s=>Logging.BrightstarTraceSource.TraceEvent(TraceEventType.Error' (int)ServerEventId.InvalidArguments' s))); " is 167.
Complex Conditional,CommandLine,Argument,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,ParseValue,The conditional expression  "(stringData != null || type == typeof(bool)) && (stringData == null || stringData.Length > 0)"  is complex.
Complex Conditional,CommandLine,Argument,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,AppendValue,The conditional expression  "value is string || value is int || value is uint || value.GetType().IsEnum"  is complex.
Empty Catch Block,CommandLine,Argument,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,ParseValue,The method has an empty catch block.
Magic Number,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,ArgumentsUsage,The following statement contains a magic number: if (screenWidth == 0)                  screenWidth = 80;
Magic Number,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,ParseArgumentList,The following statement contains a magic number: if (args != null)              {                  foreach (string argument in args)                  {                      if (argument.Length > 0)                      {                          switch (argument[0])                          {                              case '-':                              case '/':                                  int endIndex = argument.IndexOfAny(new char[] { ':'' '+'' '-' }' 1);                                  string option = argument.Substring(1' endIndex == -1 ? argument.Length - 1 : endIndex - 1);                                  string optionArgument;                                  if (option.Length + 1 == argument.Length)                                  {                                      optionArgument = null;                                  }                                  else if (argument.Length > 1 + option.Length && argument[1 + option.Length] == ':')                                  {                                      optionArgument = argument.Substring(option.Length + 2);                                  }                                  else                                  {                                      optionArgument = argument.Substring(option.Length + 1);                                  }                                    Argument arg = (Argument)this.argumentMap[option];                                  if (arg == null)                                  {                                      ReportUnrecognizedArgument(argument);                                      hadError = true;                                  }                                  else                                  {                                      hadError |= !arg.SetValue(optionArgument' destination);                                  }                                  break;                              case '@':                                  string[] nestedArguments;                                  hadError |= LexFileArguments(argument.Substring(1)' out nestedArguments);                                  hadError |= ParseArgumentList(nestedArguments' destination);                                  break;                              default:                                  if (this.defaultArgument != null)                                  {                                      hadError |= !this.defaultArgument.SetValue(argument' destination);                                  }                                  else                                  {                                      ReportUnrecognizedArgument(argument);                                      hadError = true;                                  }                                  break;                          }                      }                  }              }
Magic Number,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,GetUsageString,The following statement contains a magic number: const int minimumNumberOfCharsForHelpText = 10;
Magic Number,CommandLine,Parser,C:\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Runner\CommandLineArguments.cs,GetUsageString,The following statement contains a magic number: const int minimumHelpTextColumn = 5;
