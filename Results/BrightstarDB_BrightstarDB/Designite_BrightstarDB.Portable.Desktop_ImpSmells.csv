Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,BrightstarDB,ConfigurationProvider,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\ConfigurationProvider.cs,,The length of the parameter StatsUpdateTransactionCountName is 31.
Long Identifier,BrightstarDB,ConfigurationProvider,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\ConfigurationProvider.cs,,The length of the parameter DefaultTransactionFlushTripleCount is 34.
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetOutputStream,The following statement contains a magic number: switch (mode)              {                  case FileMode.Append:                      return new FileStream(pathName' System.IO.FileMode.Append' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Create:                      return new FileStream(pathName' System.IO.FileMode.Create' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.CreateNew:                      return new FileStream(pathName' System.IO.FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Open:                      return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.OpenOrCreate:                      return new FileStream(pathName' System.IO.FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read'                                            4096);                  case FileMode.Truncate:                      return new FileStream(pathName' System.IO.FileMode.Truncate' FileAccess.Write' FileShare.Read' 4096);                  default:                      throw new ArgumentException("Invalid file mode"' "mode");              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetOutputStream,The following statement contains a magic number: switch (mode)              {                  case FileMode.Append:                      return new FileStream(pathName' System.IO.FileMode.Append' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Create:                      return new FileStream(pathName' System.IO.FileMode.Create' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.CreateNew:                      return new FileStream(pathName' System.IO.FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Open:                      return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.OpenOrCreate:                      return new FileStream(pathName' System.IO.FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read'                                            4096);                  case FileMode.Truncate:                      return new FileStream(pathName' System.IO.FileMode.Truncate' FileAccess.Write' FileShare.Read' 4096);                  default:                      throw new ArgumentException("Invalid file mode"' "mode");              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetOutputStream,The following statement contains a magic number: switch (mode)              {                  case FileMode.Append:                      return new FileStream(pathName' System.IO.FileMode.Append' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Create:                      return new FileStream(pathName' System.IO.FileMode.Create' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.CreateNew:                      return new FileStream(pathName' System.IO.FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Open:                      return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.OpenOrCreate:                      return new FileStream(pathName' System.IO.FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read'                                            4096);                  case FileMode.Truncate:                      return new FileStream(pathName' System.IO.FileMode.Truncate' FileAccess.Write' FileShare.Read' 4096);                  default:                      throw new ArgumentException("Invalid file mode"' "mode");              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetOutputStream,The following statement contains a magic number: switch (mode)              {                  case FileMode.Append:                      return new FileStream(pathName' System.IO.FileMode.Append' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Create:                      return new FileStream(pathName' System.IO.FileMode.Create' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.CreateNew:                      return new FileStream(pathName' System.IO.FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Open:                      return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.OpenOrCreate:                      return new FileStream(pathName' System.IO.FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read'                                            4096);                  case FileMode.Truncate:                      return new FileStream(pathName' System.IO.FileMode.Truncate' FileAccess.Write' FileShare.Read' 4096);                  default:                      throw new ArgumentException("Invalid file mode"' "mode");              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetOutputStream,The following statement contains a magic number: switch (mode)              {                  case FileMode.Append:                      return new FileStream(pathName' System.IO.FileMode.Append' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Create:                      return new FileStream(pathName' System.IO.FileMode.Create' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.CreateNew:                      return new FileStream(pathName' System.IO.FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Open:                      return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.OpenOrCreate:                      return new FileStream(pathName' System.IO.FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read'                                            4096);                  case FileMode.Truncate:                      return new FileStream(pathName' System.IO.FileMode.Truncate' FileAccess.Write' FileShare.Read' 4096);                  default:                      throw new ArgumentException("Invalid file mode"' "mode");              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetOutputStream,The following statement contains a magic number: switch (mode)              {                  case FileMode.Append:                      return new FileStream(pathName' System.IO.FileMode.Append' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Create:                      return new FileStream(pathName' System.IO.FileMode.Create' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.CreateNew:                      return new FileStream(pathName' System.IO.FileMode.CreateNew' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.Open:                      return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Write' FileShare.Read' 4096);                  case FileMode.OpenOrCreate:                      return new FileStream(pathName' System.IO.FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read'                                            4096);                  case FileMode.Truncate:                      return new FileStream(pathName' System.IO.FileMode.Truncate' FileAccess.Write' FileShare.Read' 4096);                  default:                      throw new ArgumentException("Invalid file mode"' "mode");              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,GetInputStream,The following statement contains a magic number: return new FileStream(pathName' System.IO.FileMode.Open' FileAccess.Read' FileShare.ReadWrite' 4096);
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,RenameFile,The following statement contains a magic number: if (fileInfo.Exists)              {                  WrapSharingViolations(() => fileInfo.MoveTo(storeDataFile)' retryCount: 50' waitTime: 500);              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,RenameFile,The following statement contains a magic number: if (fileInfo.Exists)              {                  WrapSharingViolations(() => fileInfo.MoveTo(storeDataFile)' retryCount: 50' waitTime: 500);              }
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,CopyFile,The following statement contains a magic number: WrapSharingViolations(()=>fileInfo.CopyTo(destinationFilePath' overwrite)' retryCount:50' waitTime:500);
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,CopyFile,The following statement contains a magic number: WrapSharingViolations(()=>fileInfo.CopyTo(destinationFilePath' overwrite)' retryCount:50' waitTime:500);
Magic Number,BrightstarDB.Storage,PersistenceManager,C:\repos\BrightstarDB_BrightstarDB\src\portable\BrightstarDB.Portable.Desktop\BrightstarDB\Storage\PersistenceManager.cs,IsSharingViolation,The following statement contains a magic number: return (hr == -2147024864);
