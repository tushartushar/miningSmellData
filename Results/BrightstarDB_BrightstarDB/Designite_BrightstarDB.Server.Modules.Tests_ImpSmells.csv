Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetFails,The method has 8 parameters. Parameters: expectedStatusCode' brightstar' storeName' query' defaultGraphUris' namedGraphUris' formats' accept
Long Parameter List,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetSucceeds,The method has 7 parameters. Parameters: brightstar' storeName' query' defaultGraphUris' namedGraphUris' formats' accept
Long Parameter List,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestFormPostSucceeds,The method has 7 parameters. Parameters: storeName' query' defaultGraphUris' namedGraphUris' accept' expectedQueryFormat' brightstarSetup
Long Parameter List,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestSparqlPostSucceeds,The method has 7 parameters. Parameters: storeName' query' defaultGraphUris' namedGraphUris' accept' expectedQueryFormat' brightstarSetup
Long Identifier,BrightstarDB.Server.Modules.Tests,StaticPermissionsProvidersTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StaticPermissionsProvidersTests.cs,,The length of the parameter SystemPermissionsConfiguration is 30.
Long Statement,BrightstarDB.Server.Modules.Tests.Authentication,BasicAuthProviderSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\Authentication\BasicAuthProviderSpec.cs,TestAccessRequiresBasicAuthentication,The length of the statement  "            var bootstrapper = new FakeNancyBootstrapper(mockBrightstar.Object' new BasicAuthAuthenticationProvider(new BasicAuthenticationConfiguration(userValidator.Object' "test"))' " is 172.
Long Statement,BrightstarDB.Server.Modules.Tests.Authentication,BasicAuthProviderSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\Authentication\BasicAuthProviderSpec.cs,TestAccessUsingBasicAuthentication,The length of the statement  "            var bootstrapper = new FakeNancyBootstrapper(mockBrightstar.Object' new BasicAuthAuthenticationProvider(new BasicAuthenticationConfiguration(userValidator.Object' "test"))' " is 172.
Long Statement,BrightstarDB.Server.Modules.Tests.Authentication,BasicAuthProviderSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\Authentication\BasicAuthProviderSpec.cs,TestAccessRequiresValidatedPassword,The length of the statement  "            var bootstrapper = new FakeNancyBootstrapper(mockBrightstar.Object' new BasicAuthAuthenticationProvider(new BasicAuthenticationConfiguration(userValidator.Object' "test"))' " is 172.
Long Statement,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestViewHistoryPermissionRequired,The length of the statement  "            permissionsService.Setup(x=>x.HasStorePermission(null' "foo"' StorePermissions.ViewHistory)).Returns(false).Verifiable(); " is 121.
Long Statement,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestLinkExistsConstraint,The length of the statement  "            Assert.That("<hello>; rel=first' <yello.xml>; rel=second"' Is.Not.Null.And.Matches(new LinkExistsConstraint("second"' "yello.xml")).And.Matches(new LinkExistsConstraint("first"' "hello"))); " is 189.
Long Statement,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPointRangeByDate,The length of the statement  "            brightstarService.Setup(s => s.GetCommitPoints("foo"' It.IsAny<DateTime>()' It.IsAny<DateTime>()' It.IsAny<int>()' It.IsAny<int>())) " is 132.
Long Statement,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPointRangeByDate,The length of the statement  "                        Is.Not.Null.And.Matches(new LinkExistsConstraint("next"' String.Format("commits?latest={0}&earliest={1}&skip=10"' latest' earliest)))); " is 135.
Long Statement,BrightstarDB.Server.Modules.Tests,ConfigurationSectionHandlerSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\ConfigurationSectionHandlerSpec.cs,TestSimpleConfigurationSection,The length of the statement  "            Assert.That(config.StorePermissionsProvider.GetStorePermissions(mockUser.Object' "foo")' Is.EqualTo(StorePermissions.All)); " is 123.
Long Statement,BrightstarDB.Server.Modules.Tests,ConfigurationSectionHandlerSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\ConfigurationSectionHandlerSpec.cs,TestSimpleConfigurationSection,The length of the statement  "            Assert.That(config.SystemPermissionsProvider.GetPermissionsForUser(mockUser.Object)' Is.EqualTo(SystemPermissions.All)); " is 120.
Long Statement,BrightstarDB.Server.Modules.Tests,ConfigurationSectionHandlerSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\ConfigurationSectionHandlerSpec.cs,TestFallbackDefaults,The length of the statement  "            Assert.That(config.StorePermissionsProvider.GetStorePermissions(mockUser.Object' "foo")' Is.EqualTo(StorePermissions.Read|StorePermissions.Export)); " is 148.
Long Statement,BrightstarDB.Server.Modules.Tests,ConfigurationSectionHandlerSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\ConfigurationSectionHandlerSpec.cs,TestFallbackDefaults,The length of the statement  "            Assert.That(config.SystemPermissionsProvider.GetPermissionsForUser(mockUser.Object)' Is.EqualTo(SystemPermissions.ListStores)); " is 127.
Long Statement,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestGetNamedGraph,The length of the statement  "                        It.IsAny<IEnumerable<string>>()' null' It.IsAny<SparqlResultsFormat>()' RdfFormat.RdfXml' out expectedFormat)).Returns(mockResultsStream).Verifiable(); " is 151.
Long Statement,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestRetrieveDefaultGraph,The length of the statement  "                        It.Is<IEnumerable<string>>(x=>x.First().Equals(Constants.DefaultGraphUri))' null' It.IsAny<SparqlResultsFormat>()' RdfFormat.RdfXml' out expectedFormat)).Returns(mockResultsStream).Verifiable(); " is 194.
Long Statement,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestPutUpdatesNamedGraph,The length of the statement  "                It.Is<string>(p=>SpaceNormalizedStringsAreEqual(@"DROP SILENT GRAPH <http://example.org/g>; INSERT DATA { GRAPH <http://example.org/g> { <http://example.org/s> <http://example.org/p> <http://example.org/o> . } }"'p))' " is 217.
Long Statement,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestPutCreatesNewNamedGraph,The length of the statement  "                It.Is<string>(p=>SpaceNormalizedStringsAreEqual(@"DROP SILENT GRAPH <http://example.org/g>; INSERT DATA { GRAPH <http://example.org/g> { <http://example.org/s> <http://example.org/p> <http://example.org/o> . } }"' p))' " is 218.
Long Statement,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestPutUpdatesDefaultGraph,The length of the statement  "                It.Is<string>(p=>SpaceNormalizedStringsAreEqual(@"DROP SILENT DEFAULT; INSERT DATA { <http://example.org/s> <http://example.org/p> <http://example.org/o> . }"' p))' " is 164.
Long Statement,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestDeleteNamedGraph,The length of the statement  "            brightstar.Setup(s=>s.ExecuteUpdate("foo"' "DROP GRAPH <http://example.org/g1>"' true' "Drop Graph http://example.org/g1")) " is 123.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateExportJob,The length of the statement  "            Assert.That(request' Has.Property("JobParameters").EqualTo(new Dictionary<string' string>{{"FileName"' "exportFile.nt"}' {"GraphUri"' null}' {"Format"' RdfFormat.NQuads.MediaTypes[0]}})); " is 187.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateExportJob,The length of the statement  "            Assert.That(request' Has.Property("JobParameters").EqualTo(new Dictionary<string' string>{{"FileName"' "exportFile.rdf"}' {"GraphUri"' "http://some/graph/uri"}' {"Format"' RdfFormat.NQuads.MediaTypes[0]}})); " is 207.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateExportJob,The length of the statement  "            Assert.That(request' Has.Property("JobParameters").EqualTo(new Dictionary<string' string> { { "FileName"' "exportFile.rdf" }' { "GraphUri"' "http://some/graph/uri" }' {"Format"' RdfFormat.NTriples.MediaTypes[0]}})); " is 215.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateExportJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateExportJob(null)' Throws.TypeOf<ArgumentNullException>().With.Property("ParamName").EqualTo("exportFileName")); " is 149.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateExportJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateExportJob("")' Throws.TypeOf<ArgumentException>().With.Property("ParamName").EqualTo("exportFileName")); " is 143.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateExportJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateExportJob("foo"' "")' Throws.TypeOf<ArgumentException>().With.Property("ParamName").EqualTo("graphUri")); " is 144.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateImportJob,The length of the statement  "            Assert.That(request' Has.Property("JobParameters").EqualTo(new Dictionary<string' string>{ {"FileName"' "importFile.nt"}' {"DefaultGraphUri"' null}})); " is 151.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateImportJob,The length of the statement  "            Assert.That(request' Has.Property("JobParameters").EqualTo(new Dictionary<string' string> { { "FileName"' "importFile.rdf" }' { "DefaultGraphUri"' "http://some/graph/uri" } })); " is 177.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateImportJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateImportJob(null)' Throws.TypeOf(typeof(ArgumentNullException)).With.Property("ParamName").EqualTo("importFileName")); " is 155.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateImportJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateImportJob("")' Throws.TypeOf(typeof(ArgumentException)).With.Property("ParamName").EqualTo("importFileName")); " is 149.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateImportJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateImportJob("foo"' "")' Throws.TypeOf(typeof(ArgumentException)).With.Property("ParamName").EqualTo("defaultGraphUri")); " is 157.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateSparqlUpdateJob,The length of the statement  "            Assert.That(request' Has.Property("JobParameters").EqualTo(new Dictionary<string' string>{{"UpdateExpression"' "expression"}})); " is 128.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateSparqlUpdateJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateSparqlUpdateJob(null)' Throws.TypeOf<ArgumentNullException>().With.Property("ParamName").EqualTo("updateExpression")); " is 157.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateSparqlUpdateJob,The length of the statement  "            Assert.That(()=>JobRequestObject.CreateSparqlUpdateJob("")' Throws.TypeOf<ArgumentException>().With.Property("ParamName").EqualTo("updateExpression")); " is 151.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateSparqlUpdateJob,The length of the statement  "            Assert.That(() => JobRequestObject.CreateSparqlUpdateJob(" ")' Throws.TypeOf<ArgumentException>().With.Property("ParamName").EqualTo("updateExpression")); " is 154.
Long Statement,BrightstarDB.Server.Modules.Tests,JobRequestObjectSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobRequestObjectSpec.cs,TestCreateJobWithLabelInConstructor,The length of the statement  "            var snapshotRequest = JobRequestObject.CreateSnapshotJob("storeToSnapshot"' PersistenceType.AppendOnly' label:"SnapshotJob"); " is 125.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostExportJob,The length of the statement  "            brightstar.Setup(s=>s.StartExport("foo"' "export.nt"' null' It.Is<RdfFormat>(r=>r.DefaultExtension.Equals(RdfFormat.NQuads.DefaultExtension))' "ExportJob")).Returns(mockJobInfo.Object).Verifiable(); " is 198.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostExportGraphJob,The length of the statement  "            brightstar.Setup(s => s.StartExport("foo"' "export.nt"' "http://some/graph/uri"' It.Is<RdfFormat>(r=>r.DefaultExtension.Equals(RdfFormat.NTriples.DefaultExtension))' "ExportJob")).Returns(mockJobInfo.Object).Verifiable(); " is 221.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostExportGraphJob,The length of the statement  "            var requestObject = JobRequestObject.CreateExportJob("export.nt"' "http://some/graph/uri"' RdfFormat.NTriples' "ExportJob"); " is 124.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostImportJob,The length of the statement  "            brightstar.Setup(s=>s.StartImport("foo"' "import.nt"' null' "ImportJob"' null)).Returns(mockJobInfo.Object).Verifiable(); " is 121.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostImportGraphJob,The length of the statement  "            brightstar.Setup(s => s.StartImport("foo"' "import.nt"' "http://import/graph/uri"' "ImportGraphJob"' null)).Returns(mockJobInfo.Object).Verifiable(); " is 149.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostImportWithFormatOverride,The length of the statement  "            brightstar.Setup(s => s.StartImport("foo"' "import.nt"' null' "ImportJob"' It.Is<RdfFormat>(f=>f.MatchesMediaType(RdfFormat.RdfXml)))).Returns(mockJobInfo.Object).Verifiable(); " is 176.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostImportJobRequiresUpdatePermissions,The length of the statement  "            AssertPermissionRequired(JobRequestObject.CreateImportJob("import.nt"' "http://some/graph/uri")' StorePermissions.TransactionUpdate); " is 133.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostSparqlUpdateJob,The length of the statement  "            brightstar.Setup(s => s.ExecuteUpdate("foo"' "update expression"' false'"SparqlUpdateJob")).Returns(mockJobInfo.Object).Verifiable(); " is 133.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostSnapshotJobRequiresAdminPermissions,The length of the statement  "            AssertPermissionRequired(JobRequestObject.CreateSnapshotJob("bar"' PersistenceType.AppendOnly' 123)' StorePermissions.Admin); " is 125.
Long Statement,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostSnapshotJobRequiresAdminPermissions,The length of the statement  "            AssertPermissionRequired(JobRequestObject.CreateSnapshotJob("bletch"' PersistenceType.Rewrite)' StorePermissions.Admin); " is 120.
Long Statement,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryWithFormatOverride,The length of the statement  "                s.ExecuteQuery("foo"' SparqlQueryString' null' null' It.IsAny<SparqlResultsFormat>()' It.IsAny<RdfFormat>()' out format)) " is 121.
Long Statement,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryWithFormatOverrideFromBrowser,The length of the statement  "                s.ExecuteQuery("foo"' SparqlQueryString' null' null' It.IsAny<SparqlResultsFormat>()' It.IsAny<RdfFormat>()' out format)) " is 121.
Long Statement,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryWithIfModifiedSince,The length of the statement  "                s => s.ExecuteQuery("foo"' SparqlQueryString' (IEnumerable<string>)null' It.IsNotNull<DateTime?>()' SparqlResultsFormat.Xml'  It.IsAny<RdfFormat>()' out format)) " is 161.
Long Statement,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestPostQueryWithIfModifiedSince,The length of the statement  "                s => s.ExecuteQuery("foo"' SparqlQueryString' (IEnumerable<string>)null' It.IsNotNull<DateTime?>()' SparqlResultsFormat.Xml'  It.IsAny<RdfFormat>()' out format)) " is 161.
Long Statement,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestFormPostSucceeds,The length of the statement  "            brightstar.Setup(s => s.ExecuteQuery(storeName' query' defaultGraphUris' null' expectedQueryFormat'  It.IsAny<RdfFormat>()' out format)) " is 136.
Long Statement,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestSparqlPostSucceeds,The length of the statement  "            brightstar.Setup(s => s.ExecuteQuery(storeName' query' defaultGraphUris' null' expectedQueryFormat'  It.IsAny<RdfFormat>()' out format)) " is 136.
Long Statement,BrightstarDB.Server.Modules.Tests,StaticPermissionsProvidersTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StaticPermissionsProvidersTests.cs,TestLoadStorePermissionsConfiguration,The length of the statement  "            Assert.That(config.StorePermissionsProvider.GetStorePermissions(alice' "bar")' Is.EqualTo(StorePermissions.Read|StorePermissions.Export)); " is 138.
Long Statement,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithDateRange,The length of the statement  "            Assert.That(response.Headers["Link"]' new LinkExistsConstraint("next"' String.Format("statistics?latest={0}&earliest={1}&skip=10"' now.ToString("s")' lastWeek.ToString("s")))); " is 176.
Long Statement,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithEarliestFilterOnly,The length of the statement  "            brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' It.IsInRange(lastWeek.AddSeconds(-1.0)' lastWeek.AddSeconds(1.0)' Range.Inclusive)' 0' 11)) " is 155.
Long Statement,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithEarliestFilterOnly,The length of the statement  "            Assert.That(response.Headers["Link"]' new LinkExistsConstraint("next"' String.Format("statistics?earliest={0}&skip=10"' lastWeek.ToString("s")))); " is 146.
Long Statement,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithLatestFilterOnly,The length of the statement  "            brightstar.Setup(s => s.GetStatistics("foo"' It.IsInRange(now.AddSeconds(-1.0)' now.AddSeconds(1.0)' Range.Inclusive)' DateTime.MinValue' 0' 11)) " is 145.
Long Statement,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithLatestFilterOnly,The length of the statement  "            Assert.That(response.Headers["Link"]' new LinkExistsConstraint("next"' String.Format("statistics?latest={0}&skip=10"' now.ToString("s")))); " is 139.
Long Statement,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsRequiresViewHistoryPermissions,The length of the statement  "            permissions.Setup(s => s.HasStorePermission(null' "foo"' StorePermissions.Read)).Returns(true); // to ensure that we are explicitly NOT using Read permissions " is 158.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestGetHtmlReturnsOk,The length of the statement  "                new Browser(new FakeNancyBootstrapper(mockBrightstar.Object' new FallbackStorePermissionsProvider(StorePermissions.All' StorePermissions.All)' " is 142.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestGetReturnsCorsHeader,The length of the statement  "                new Browser(new FakeNancyBootstrapper(mockBrightstar.Object' new FallbackStorePermissionsProvider(StorePermissions.All' StorePermissions.All)' " is 142.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestCorsHeaderOnInternalServerErrors,The length of the statement  "                new Browser(new FakeNancyBootstrapper(mockBrightstar.Object' new FallbackStorePermissionsProvider(StorePermissions.All' StorePermissions.All)' " is 142.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestGetRequiresListStoresPermissions,The length of the statement  "            var app = new Browser(new FakeNancyBootstrapper(brightstar.Object' new FallbackStorePermissionsProvider(StorePermissions.All' StorePermissions.All)' systemPermissions.Object)); " is 176.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestPostToCreateStore,The length of the statement  "            mockBrightstar.Setup(s => s.CreateStore("foo"' PersistenceType.AppendOnly)).Verifiable("Expected CreateStore to be called"); " is 124.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestPostToCreateStore,The length of the statement  "            var app = new Browser(new FakeNancyBootstrapper(mockBrightstar.Object' new FallbackStorePermissionsProvider(StorePermissions.All' StorePermissions.All)' new FallbackSystemPermissionsProvider(SystemPermissions.All' SystemPermissions.CreateStore))); " is 247.
Long Statement,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestPostRequiresCreateStorePermission,The length of the statement  "                new Browser(new FakeNancyBootstrapper(brightstar.Object' new FallbackStorePermissionsProvider(StorePermissions.All' StorePermissions.All)' " is 138.
Long Statement,BrightstarDB.Server.Modules.Tests,StoreUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoreUrlSpec.cs,TestHeadExistingStoreReturnsOk,The length of the statement  "            Nancy.StaticConfiguration.DisableErrorTraces = true; // NOTE: If error tracing is disabled Nancy throws a NullReferenceException on a HEAD request " is 146.
Long Statement,BrightstarDB.Server.Modules.Tests,StoreUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoreUrlSpec.cs,TestHeadExistingStoreReturnsOk,The length of the statement  "            Assert.That(response.StatusCode' Is.EqualTo(HttpStatusCode.OK)' "Response status code was: {0}\nResponse body was: {1}"' " is 120.
Long Statement,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactions,The length of the statement  "            brightstarService.Setup(b => b.GetTransactions("foo"' 0' 11)).Returns((string storeName' int skip' int take) => mockTranscations.Skip(skip).Take(take)).Verifiable(); " is 165.
Long Statement,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactionsPagingLinks,The length of the statement  "            brightstarService.Setup(b => b.GetTransactions("foo"' 10' 11)).Returns((string storeName' int skip' int take) => mockTranscations.Skip(skip).Take(take)).Verifiable(); " is 166.
Long Statement,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The length of the statement  "            Assert.That(transaction' Has.Property("StartTime").EqualTo(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc)).Using<DateTime>((x'y)=> x.ToUniversalTime().CompareTo(y.ToUniversalTime()))); " is 194.
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPoints,The following statement contains a magic number: var commitPoints = MockCommitPoints("foo"' 10);
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPoints,The following statement contains a magic number: Assert.That(responseList.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestCommitPointResultHasNextPageLink,The following statement contains a magic number: var commitPoints = MockCommitPoints("foo"' 11);
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestCommitPointResultHasNextPageLink,The following statement contains a magic number: Assert.That(responseList.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestCommitPointResultHasPreviousAndFirstPageLink,The following statement contains a magic number: var commitPoints = MockCommitPoints("foo"' 21);
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestCommitPointResultHasPreviousAndFirstPageLink,The following statement contains a magic number: Assert.That(responseList.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestFinalPageOfCommitPointResultsHasNoNextPageLink,The following statement contains a magic number: var commitPoints = MockCommitPoints("foo"' 21);
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPointByTimestamp,The following statement contains a magic number: Assert.That(responseObject.Id' Is.EqualTo(10UL));
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPointRangeByDate,The following statement contains a magic number: var commitPoints = MockCommitPoints("foo"' 11);
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestGetCommitPointRangeByDate,The following statement contains a magic number: Assert.That(responseList.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestPostCommitRequiresAdministratorPrivileges,The following statement contains a magic number: var response = app.Post("/foo/commits"' with =>              {                  with.JsonBody(new CommitPointResponseModel { Id = 123' StoreName = "foo" });                  with.Accept(Json);              });
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestPostCommitPointToRevert,The following statement contains a magic number: brightstarService.Setup(s => s.GetCommitPoint("foo"' 123)).Returns(mockCommitPoint).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestPostCommitPointToRevert,The following statement contains a magic number: var response = browser.Post("/foo/commits"' with =>                  {                      with.JsonBody(new CommitPointResponseModel {Id = 123' StoreName = "foo"});                      with.Accept(Json);                  });
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,TestCannotRevertIfCommitPointNotFound,The following statement contains a magic number: var response = browser.Post("/foo/commits"' with =>              {                  with.JsonBody(new CommitPointResponseModel { Id = 123' StoreName = "foo" });                  with.Accept(Json);              });
Magic Number,BrightstarDB.Server.Modules.Tests,CommitPointsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\CommitPointsUrlSpec.cs,MockCommitPoints,The following statement contains a magic number: mock.Setup(m => m.Id).Returns((ulong) (count - i)*10);
Magic Number,BrightstarDB.Server.Modules.Tests,GraphsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\GraphsUrlSpec.cs,TestListGraphsAsJson,The following statement contains a magic number: Assert.That(jobs.Count' Is.EqualTo(2));
Magic Number,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostSnapshotJob,The following statement contains a magic number: TestValidPost("/foo/jobs"' JobRequestObject.CreateSnapshotJob("bar"' PersistenceType.AppendOnly' 123' "SnapshotJob")'                  (b' m) =>                      {                          var mockCommitPoint = new Mock<ICommitPointInfo>();                          b.Setup(s => s.GetCommitPoint("foo"' 123)).Returns(mockCommitPoint.Object);                          b.Setup(s=>s.CreateSnapshot("foo"' "bar"' PersistenceType.AppendOnly' It.IsAny<ICommitPointInfo>()' "SnapshotJob"))                              .Returns(m.Object)                              .Verifiable();                      });
Magic Number,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostSnapshotJob,The following statement contains a magic number: TestValidPost("/foo/jobs"' JobRequestObject.CreateSnapshotJob("bar"' PersistenceType.AppendOnly' 123' "SnapshotJob")'                  (b' m) =>                      {                          var mockCommitPoint = new Mock<ICommitPointInfo>();                          b.Setup(s => s.GetCommitPoint("foo"' 123)).Returns(mockCommitPoint.Object);                          b.Setup(s=>s.CreateSnapshot("foo"' "bar"' PersistenceType.AppendOnly' It.IsAny<ICommitPointInfo>()' "SnapshotJob"))                              .Returns(m.Object)                              .Verifiable();                      });
Magic Number,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestPostSnapshotJobRequiresAdminPermissions,The following statement contains a magic number: AssertPermissionRequired(JobRequestObject.CreateSnapshotJob("bar"' PersistenceType.AppendOnly' 123)' StorePermissions.Admin);
Magic Number,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestListJobs,The following statement contains a magic number: brightstar.Setup(s => s.GetJobInfo("foo"' 0' 11)).Returns(MockJobInfo(11)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestListJobs,The following statement contains a magic number: brightstar.Setup(s => s.GetJobInfo("foo"' 0' 11)).Returns(MockJobInfo(11)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,JobsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\JobsUrlSpec.cs,TestListJobs,The following statement contains a magic number: Assert.That(jobs.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryOnValidCommitPoint,The following statement contains a magic number: brightstar.Setup(                  s =>                  s.ExecuteQuery(It.Is<ICommitPointInfo>(c => c.Id.Equals(123))' SparqlQueryString' null'                                 SparqlResultsFormat.Xml'  It.IsAny<RdfFormat>()' out format))                        .Returns(new MemoryStream(Encoding.UTF8.GetBytes("mock results")))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryOnValidCommitPoint,The following statement contains a magic number: commitPoint.Setup(c => c.Id).Returns(123);
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryOnValidCommitPoint,The following statement contains a magic number: brightstar.Setup(s => s.GetCommitPoint("foo"' 123L)).Returns(commitPoint.Object);
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestGetQueryOnInvalidCommitPoint,The following statement contains a magic number: brightstar.Setup(s => s.GetCommitPoint("foo"' 123L)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestPostQueryOnValidCommitPoint,The following statement contains a magic number: brightstar.Setup(                  s =>                  s.ExecuteQuery(It.Is<ICommitPointInfo>(c => c.Id.Equals(123))' SparqlQueryString' (IEnumerable<string>)null'                                 SparqlResultsFormat.Xml'  It.IsAny<RdfFormat>()' out format))                        .Returns(new MemoryStream(Encoding.UTF8.GetBytes("mock results")))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestPostQueryOnValidCommitPoint,The following statement contains a magic number: commitPoint.Setup(c => c.Id).Returns(123);
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestPostQueryOnValidCommitPoint,The following statement contains a magic number: brightstar.Setup(s => s.GetCommitPoint("foo"' 123L)).Returns(commitPoint.Object);
Magic Number,BrightstarDB.Server.Modules.Tests,SparqlUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\SparqlUrlSpec.cs,TestPostQueryOnInvalidCommitPoint,The following statement contains a magic number: brightstar.Setup(s => s.GetCommitPoint("foo"' 123L)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpecBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,MockStatistics,The following statement contains a magic number: mock.Setup(s => s.CommitId).Returns((ulong) (count - i)*10);
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpecBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,MockStatistics,The following statement contains a magic number: mock.Setup(s => s.TotalTripleCount).Returns((ulong)(count - i)*1000);
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpecBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,MockStatistics,The following statement contains a magic number: mock.Setup(s => s.PredicateTripleCounts)                      .Returns(new Dictionary<string' ulong> {{"http://some/predicate"' (ulong) (count - i)*1000}});
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithoutOptions,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 0' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithoutOptions,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 0' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithoutOptions,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithTake,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 0' 3))                        .Returns(MockStatistics(3))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithTake,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 0' 3))                        .Returns(MockStatistics(3))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithTake,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithDateRange,The following statement contains a magic number: DateTime lastWeek = now.AddDays(-7);
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithDateRange,The following statement contains a magic number: brightstar.Setup(                  s => s.GetStatistics("foo"'                                       It.IsInRange(now.AddSeconds(-1.0)' now.AddSeconds(1.0)' Range.Inclusive)'                                       It.IsInRange(lastWeek.AddSeconds(-1.0)' lastWeek.AddSeconds(1.0)' Range.Inclusive)'                                       0' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithDateRange,The following statement contains a magic number: brightstar.Setup(                  s => s.GetStatistics("foo"'                                       It.IsInRange(now.AddSeconds(-1.0)' now.AddSeconds(1.0)' Range.Inclusive)'                                       It.IsInRange(lastWeek.AddSeconds(-1.0)' lastWeek.AddSeconds(1.0)' Range.Inclusive)'                                       0' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithDateRange,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithEarliestFilterOnly,The following statement contains a magic number: DateTime lastWeek = now.AddDays(-7);
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithEarliestFilterOnly,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' It.IsInRange(lastWeek.AddSeconds(-1.0)' lastWeek.AddSeconds(1.0)' Range.Inclusive)' 0' 11))                  .Returns(MockStatistics(11))                  .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithEarliestFilterOnly,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' It.IsInRange(lastWeek.AddSeconds(-1.0)' lastWeek.AddSeconds(1.0)' Range.Inclusive)' 0' 11))                  .Returns(MockStatistics(11))                  .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithEarliestFilterOnly,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithLatestFilterOnly,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' It.IsInRange(now.AddSeconds(-1.0)' now.AddSeconds(1.0)' Range.Inclusive)' DateTime.MinValue' 0' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithLatestFilterOnly,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' It.IsInRange(now.AddSeconds(-1.0)' now.AddSeconds(1.0)' Range.Inclusive)' DateTime.MinValue' 0' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithLatestFilterOnly,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithPaging,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 10' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithPaging,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 10' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithPaging,The following statement contains a magic number: brightstar.Setup(s => s.GetStatistics("foo"' DateTime.MaxValue' DateTime.MinValue' 10' 11))                        .Returns(MockStatistics(11))                        .Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,StatisticsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StatisticsUrlSpec.cs,TestGetStatisticsWithPaging,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,StoresUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\StoresUrlSpec.cs,TestGetReturnsJsonArray,The following statement contains a magic number: Assert.That(responseContent.Stores.Count' Is.EqualTo(3));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactions,The following statement contains a magic number: var mockTranscations = MockTransactionInfo(11);
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactions,The following statement contains a magic number: brightstarService.Setup(b => b.GetTransactions("foo"' 0' 11)).Returns((string storeName' int skip' int take) => mockTranscations.Skip(skip).Take(take)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactions,The following statement contains a magic number: Assert.That(transactionList.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactionsPagingLinks,The following statement contains a magic number: var mockTranscations = MockTransactionInfo(21);
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactionsPagingLinks,The following statement contains a magic number: brightstarService.Setup(b => b.GetTransactions("foo"' 10' 11)).Returns((string storeName' int skip' int take) => mockTranscations.Skip(skip).Take(take)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactionsPagingLinks,The following statement contains a magic number: brightstarService.Setup(b => b.GetTransactions("foo"' 10' 11)).Returns((string storeName' int skip' int take) => mockTranscations.Skip(skip).Take(take)).Verifiable();
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestGetTransactionsPagingLinks,The following statement contains a magic number: Assert.That(transactionList.Count' Is.EqualTo(10));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: mockTransaction.Setup(t => t.Id).Returns(123);
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: mockTransaction.Setup(t => t.StartTime).Returns(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: mockTransaction.Setup(t => t.StartTime).Returns(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: mockTransaction.Setup(t => t.StartTime).Returns(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: mockTransaction.Setup(t => t.StartTime).Returns(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: mockTransaction.Setup(t => t.StartTime).Returns(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: brightstarService.Setup(s => s.GetTransactions("foo"' 0' 11))                               .Returns(new List<ITransactionInfo> {mockTransaction.Object});
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: Assert.That(transaction' Has.Property("Id").EqualTo(123));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: Assert.That(transaction' Has.Property("StartTime").EqualTo(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc)).Using<DateTime>((x'y)=> x.ToUniversalTime().CompareTo(y.ToUniversalTime())));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: Assert.That(transaction' Has.Property("StartTime").EqualTo(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc)).Using<DateTime>((x'y)=> x.ToUniversalTime().CompareTo(y.ToUniversalTime())));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: Assert.That(transaction' Has.Property("StartTime").EqualTo(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc)).Using<DateTime>((x'y)=> x.ToUniversalTime().CompareTo(y.ToUniversalTime())));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: Assert.That(transaction' Has.Property("StartTime").EqualTo(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc)).Using<DateTime>((x'y)=> x.ToUniversalTime().CompareTo(y.ToUniversalTime())));
Magic Number,BrightstarDB.Server.Modules.Tests,TransactionsUrlSpec,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.Server.Modules.Tests\TransactionsUrlSpec.cs,TestTransactionResponseObject,The following statement contains a magic number: Assert.That(transaction' Has.Property("StartTime").EqualTo(new DateTime(2013' 09' 29' 11' 38' 00' DateTimeKind.Utc)).Using<DateTime>((x'y)=> x.ToUniversalTime().CompareTo(y.ToUniversalTime())));
