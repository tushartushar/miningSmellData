Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BrightstarDB.PerformanceBenchmarks.Models,MyEntityContext,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks.Desktop\Models\MyEntityContext.cs,MyEntityContext,The method has 5 parameters.
Long Parameter List,BrightstarDB.PerformanceBenchmarks,OperationReport,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\BenchmarkReport.cs,OperationReport,The method has 6 parameters.
Long Parameter List,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,MakeTriple,The method has 7 parameters.
Long Statement,BrightstarDB.PerformanceBenchmarks,Program,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks.Desktop\Program.cs,Main,The length of the statement  "			Console.Error.WriteLine ("Unhandled exception while running benchmark {0}. Details follow.\n{1}"' benchmark.GetType ().FullName' ex); " is 133.
Long Statement,BrightstarDB.PerformanceBenchmarks,Program,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks.Desktop\Program.cs,GetBenchmarks,The length of the statement  "	foreach (var t in typeof(BenchmarkBase).Assembly.GetTypes ().Where (t => t.IsSubclassOf (typeof(BenchmarkBase)) && !t.IsAbstract)) { " is 132.
Long Statement,BrightstarDB.PerformanceBenchmarks,EntityFrameworkFoafBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\EntityFrameworkActorsBenchmark.cs,Setup,The length of the statement  "	Report.LogOperationCompleted ("populate"' String.Format ("Create {0} person records with 10 foaf:knows links each"' _personCount)' cycleCount' end.Subtract (start).TotalMilliseconds); " is 183.
Long Statement,BrightstarDB.PerformanceBenchmarks,EntityFrameworkFoafBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\EntityFrameworkActorsBenchmark.cs,RunMix,The length of the statement  "	TryOperation (LinqFindByName' "linq-find-by-name"' "Retrieve all entities with a particular GivenName property value."); " is 120.
Long Statement,BrightstarDB.PerformanceBenchmarks,EntityFrameworkFoafBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\EntityFrameworkActorsBenchmark.cs,RunMix,The length of the statement  "	TryOperation (SparqlFindByName' "sparql-find-by-name"' "Retrieve all properties of all entities with a particular foaf:givenName using a SPARQL query with a triple pattern."); " is 175.
Long Statement,BrightstarDB.PerformanceBenchmarks,EntityFrameworkFoafBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\EntityFrameworkActorsBenchmark.cs,RunMix,The length of the statement  "	TryOperation (SparqlFilterByName' "sparql-filter-by-name"' "Retrieve all properties of all entities with a particular foaf:givenName using a SPARQL query with a FILTER."); " is 171.
Long Statement,BrightstarDB.PerformanceBenchmarks,EntityFrameworkFoafBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\EntityFrameworkActorsBenchmark.cs,SparqlFilterByName,The length of the statement  "	const string queryTemplate = "PREFIX foaf: <http://xmlns.com/foaf/0.1/> SELECT ?s ?p ?o WHERE {{ ?s ?p ?o . ?s a foaf:Person . ?s foaf:givenName ?v1 . FILTER (?v1 = \"{0}\") }}"; " is 178.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,Setup,The length of the statement  "	Report.LogOperationCompleted ("Create Taxonomy"' string.Format ("Created {0} triples"' tripleCount)' tripleCount' end.Subtract (start).TotalMilliseconds); " is 154.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,Setup,The length of the statement  "	Report.LogOperationCompleted ("Create Documents"' string.Format ("created {0} triples"' tripleCount)' tripleCount' end.Subtract (start).TotalMilliseconds); " is 155.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,MakeTriple,The length of the statement  "	sb.AppendLine (string.Format (TriplePattern' MakeResourceUri (subjContainer' subjId)' MakeResourceUri (predContainer' predId)' MakeResourceUri (objContainer' objId))); " is 167.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "		var result = XDocument.Load (Service.ExecuteQuery (StoreName' "select * where { <http://example.org/taxonomybenchmark/documents/" + docId + "> ?p ?o }")); " is 154.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "	Report.LogOperationCompleted ("random-lookup-by-docid"' string.Format ("Fetched all properties for {0} randomly selected documents documents"' cycleCount)' cycleCount' end.Subtract (start).TotalMilliseconds); " is 208.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "		var result = XDocument.Load (Service.ExecuteQuery (StoreName' "select * where { <http://example.org/taxonomybenchmark/documents/" + docId + "> ?p ?o }")); " is 154.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "	Report.LogOperationCompleted ("repeated-lookup-by-docid"' string.Format ("Fetched all properties of the same document repeatedly")' cycleCount' end.Subtract (start).TotalMilliseconds); " is 184.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "		var result = XDocument.Load (Service.ExecuteQuery (StoreName' "select * where { <http://example.org/taxonomybenchmark/documents/" + docId + "> ?p ?o }")); " is 154.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "	Report.LogOperationCompleted ("single-thread-metadata-lookup"' string.Format ("Single thread retrieving all properties of a randomly selected document"' cycleCount)' cycleCount' end.Subtract (start).TotalMilliseconds); " is 218.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "	Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4)); " is 257.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The length of the statement  "	Report.LogOperationCompleted ("parallel-document-metadata-lookup"' "4 parallel tasks retrieving all properties of randomly selected documents"' cycleCount' end.Subtract (start).TotalMilliseconds); " is 196.
Long Statement,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,GetDocumentMetadata,The length of the statement  "		var result = XDocument.Load (Service.ExecuteQuery (StoreName' "select * where { <http://example.org/taxonomybenchmark/documents/" + docId + "> ?p ?o }")); " is 154.
Magic Number,BrightstarDB.PerformanceBenchmarks,Program,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks.Desktop\Program.cs,Main,The following statement contains a magic number: if (args.Length != 3) {  	Usage ();  	return;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,EntityFrameworkFoafBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\EntityFrameworkActorsBenchmark.cs,CreatePerson,The following statement contains a magic number: _last10 [personNumber % 10] = p;  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,Setup,The following statement contains a magic number: _numDocs = TestScale * 20000;  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,Setup,The following statement contains a magic number: tripleCount = CreateDocumentsInBatches (10' _numDocs / 10);  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,Setup,The following statement contains a magic number: tripleCount = CreateDocumentsInBatches (10' _numDocs / 10);  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,MakeTaxonomyNode,The following statement contains a magic number: return 2;  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int i = 0; i < batchSize; i++) {  	var sb = new StringBuilder ();  	for (int j = 0; j < batchItemCount; j++) {  		var classification = new List<String> () {  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  			string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  		};  		tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  		docId++;  	}  	InsertData (sb.ToString ());  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,CreateDocumentsInBatches,The following statement contains a magic number: for (int j = 0; j < batchItemCount; j++) {  	var classification = new List<String> () {  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))'  		string.Format (template' rnd.Next (10)' rnd.Next (100)' rnd.Next (100))  	};  	tripleCount += MakeDocumentNode (docId.ToString ()' classification' sb);  	docId++;  }  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: cycleCount = 40000;  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
Magic Number,BrightstarDB.PerformanceBenchmarks,TaxonomyDocumentBenchmark,F:\newReposMay17\BrightstarDB_BrightstarDB\src\benchmarking\BrightstarDB.PerformanceBenchmarks\TaxonomyDocumentBenchmark.cs,RunMix,The following statement contains a magic number: Parallel.Invoke (() => GetDocumentMetadata (new Random (1)' cycleCount / 4)' () => GetDocumentMetadata (new Random (2)' cycleCount / 4)' () => GetDocumentMetadata (new Random (3)' cycleCount / 4)' () => GetDocumentMetadata (new Random (4)' cycleCount / 4));  
