Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,SendTransactions,Cyclomatic complexity of the method is 8
Long Parameter List,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,ProcessQuery,The method has 5 parameters. Parameters: storeId' query' ifNotModifiedSince' format' resultStream
Long Parameter List,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,SendTransactions,The method has 5 parameters. Parameters: context' messageSink' transactionsToSend' storeId' prevId
Long Statement,BrightstarDB.ClusterNode,NodeComms,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeComms.cs,HandleClientRequest,The length of the statement  "                        var endsync = new Message("endsync"' new[] { syncOk ? "OK" : "FAIL" }); // TODO: Body could provide some check - e.g. # messages sent in sync ? " is 143.
Empty Catch Block,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,Stop,The method has an empty catch block.
Empty Catch Block,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,Stop,The method has an empty catch block.
Magic Number,BrightstarDB.ClusterNode,ClusterSparqlTransaction,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\ClusterSparqlTransaction.cs,FromMessage,The following statement contains a magic number: var txn = new ClusterSparqlTransaction                            {                                StoreId = args[0]'                                JobId = Guid.Parse(args[1])'                                PrevTxnId = Guid.Parse(args[2])'                            };
Magic Number,BrightstarDB.ClusterNode,ClusterUpdateTransaction,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\ClusterUpdateTransaction.cs,FromMessage,The following statement contains a magic number: var txn = new ClusterUpdateTransaction                            {                                StoreId = args[0]'                                JobId = Guid.Parse(args[1])'                                PrevTxnId = Guid.Parse(args[2])'                            };
Magic Number,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,InitializeStores,The following statement contains a magic number: _serverCore.GetRecentTransactions(s' 100' TimeSpan.FromDays(7.0))
Magic Number,BrightstarDB.ClusterNode,NodeCore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeCore.cs,InitializeStores,The following statement contains a magic number: _serverCore.GetRecentTransactions(s' 100' TimeSpan.FromDays(7.0))
Missing Default,BrightstarDB.ClusterNode,NodeComms,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeComms.cs,HandleClientRequest,The following switch statement is missing a default case: switch (msg.Header.ToLowerInvariant())              {                  case "ping":                      SendMessage(clientStream' new Message("pong"' String.Empty));                      break;                  case "master":                      {                          var configuration = MasterConfiguration.FromMessage(msg);                          bool handledOk = _requestHandler.SetMaster(configuration);                          SendMessage(clientStream' handledOk ? Message.ACK : Message.NAK);                          break;                      }                  case "slaveof":                      {                          var args = msg.Args.Split(' ');                          bool handledOk = _requestHandler.SlaveOf(args[0]' Int32.Parse(args[1]));                          SendMessage(clientStream' handledOk ? Message.ACK : Message.NAK);                          break;                      }                  case "sync":                      {                          var dict = new Dictionary<string' string>();                          using (var reader = msg.GetContentReader())                          {                              string line;                              while ((line = reader.ReadLine()) != null)                              {                                  var args = line.Split('|');                                  var storeName = args[0];                                  var txnId = args[1];                                  dict.Add(storeName' txnId);                              }                          }                            var syncOk = _requestHandler.SyncSlave(                              dict'                              new SyncContext {Connection = tcpClient}'                              (context' message) => SendMessageAndWaitForAck(context.Connection' message));                            // Send endsync message                          var endsync = new Message("endsync"' new[] { syncOk ? "OK" : "FAIL" }); // TODO: Body could provide some check - e.g. # messages sent in sync ?                          SendMessage(clientStream' endsync);                          break;                      }                  case "listen":                      {                          AddSlave(tcpClient);                          break;                      }              }
Missing Default,BrightstarDB.ClusterNode,NodeComms,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeComms.cs,HandleSyncMessage,The following switch statement is missing a default case: switch (msg.Header.ToLowerInvariant())              {                  case "txn":                      var txn = ClusterUpdateTransaction.FromMessage(msg);                      handledOk = _requestHandler.ProcessSyncTransaction(txn);                      break;                  case "+store":                      handledOk = _requestHandler.CreateStore(msg.Args);                      break;                  case "-store":                      handledOk = _requestHandler.DeleteStore(msg.Args);                      break;                  case "endsync":                      var syncStatus = msg.Args.Split(' ')[0];                      _requestHandler.SlaveSyncCompleted(syncStatus);                      handledOk = true;                      break;                }
Missing Default,BrightstarDB.ClusterNode,NodeComms,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.ClusterNode\NodeComms.cs,HandleTransactionMessage,The following switch statement is missing a default case: switch (txnMessage.Header.ToLowerInvariant())              {                  case "txn":                      var updateTransaction = ClusterUpdateTransaction.FromMessage(txnMessage);                      handledOk = _requestHandler.ProcessSlaveTransaction(updateTransaction);                      break;                  case "spu":                      var sparqlTransaction = ClusterSparqlTransaction.FromMessage(txnMessage);                      handledOk = _requestHandler.ProcessSlaveTransaction(sparqlTransaction);                      break;                  case "+store":                      handledOk = _requestHandler.CreateStore(txnMessage.Args);                      break;                  case "-store":                      handledOk = _requestHandler.DeleteStore(txnMessage.Args);                      break;              }
