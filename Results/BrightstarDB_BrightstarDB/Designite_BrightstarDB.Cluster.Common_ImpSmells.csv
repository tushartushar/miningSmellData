Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,Message,The method has 5 parameters. Parameters: header' args' buff' offset' count
Long Parameter List,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,Message,The method has 5 parameters. Parameters: header' args' buff' offset' count
Long Parameter List,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,ReadBytes,The method has 7 parameters. Parameters: inputStream' buff' start' count' maxRetries' retry' totalBytesRead
Magic Number,BrightstarDB.Cluster.Common,MasterConfiguration,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\MasterConfiguration.cs,FromMessage,The following statement contains a magic number: using (var reader = msg.GetContentReader())              {                  string line;                  while((line = reader.ReadLine()) != null)                  {                      var nvp = line.Split(':');                      if (nvp.Length == 2)                      {                          switch (nvp[0].ToLowerInvariant())                          {                              case "writequorum":                                  ret.WriteQuorum = Int32.Parse(nvp[1]);                                  break;                          }                      }                  }              }
Magic Number,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,WriteTo,The following statement contains a magic number: outputStream.Write(BitConverter.GetBytes(totalLength)' 0' 4);
Magic Number,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,Read,The following statement contains a magic number: try              {                  var lenBuff = new byte[4];                  inputStream.Read(lenBuff' 0' 4);                  int len = BitConverter.ToInt32(lenBuff' 0);                  var contentBuff = new byte[len];                  var bytesRead = ReadBytes(inputStream' contentBuff' 0' len' 10);                  //var bytesRead = inputStream.Read(contentBuff' 0' len);                  if (bytesRead < len)                  {                      throw new FormatException("Truncated message received");                  }                      var headerNewline = IndexOf((byte) '\n'' contentBuff' 0);                  var header = Encoding.UTF8.GetString(contentBuff' 0' headerNewline);                  var argsNewline = IndexOf((byte) '\n'' contentBuff' headerNewline + 1);                  var args = Encoding.UTF8.GetString(contentBuff' headerNewline + 1' argsNewline - headerNewline - 1);                    if (len > argsNewline)                  {                      return new Message(header' args' contentBuff' argsNewline + 1' len - argsNewline - 1);                  }                  return new Message(header' args);              }              catch (Exception ex)              {                  throw new Exception("Error reading message"' ex);              }
Magic Number,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,Read,The following statement contains a magic number: try              {                  var lenBuff = new byte[4];                  inputStream.Read(lenBuff' 0' 4);                  int len = BitConverter.ToInt32(lenBuff' 0);                  var contentBuff = new byte[len];                  var bytesRead = ReadBytes(inputStream' contentBuff' 0' len' 10);                  //var bytesRead = inputStream.Read(contentBuff' 0' len);                  if (bytesRead < len)                  {                      throw new FormatException("Truncated message received");                  }                      var headerNewline = IndexOf((byte) '\n'' contentBuff' 0);                  var header = Encoding.UTF8.GetString(contentBuff' 0' headerNewline);                  var argsNewline = IndexOf((byte) '\n'' contentBuff' headerNewline + 1);                  var args = Encoding.UTF8.GetString(contentBuff' headerNewline + 1' argsNewline - headerNewline - 1);                    if (len > argsNewline)                  {                      return new Message(header' args' contentBuff' argsNewline + 1' len - argsNewline - 1);                  }                  return new Message(header' args);              }              catch (Exception ex)              {                  throw new Exception("Error reading message"' ex);              }
Magic Number,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,Read,The following statement contains a magic number: try              {                  var lenBuff = new byte[4];                  inputStream.Read(lenBuff' 0' 4);                  int len = BitConverter.ToInt32(lenBuff' 0);                  var contentBuff = new byte[len];                  var bytesRead = ReadBytes(inputStream' contentBuff' 0' len' 10);                  //var bytesRead = inputStream.Read(contentBuff' 0' len);                  if (bytesRead < len)                  {                      throw new FormatException("Truncated message received");                  }                      var headerNewline = IndexOf((byte) '\n'' contentBuff' 0);                  var header = Encoding.UTF8.GetString(contentBuff' 0' headerNewline);                  var argsNewline = IndexOf((byte) '\n'' contentBuff' headerNewline + 1);                  var args = Encoding.UTF8.GetString(contentBuff' headerNewline + 1' argsNewline - headerNewline - 1);                    if (len > argsNewline)                  {                      return new Message(header' args' contentBuff' argsNewline + 1' len - argsNewline - 1);                  }                  return new Message(header' args);              }              catch (Exception ex)              {                  throw new Exception("Error reading message"' ex);              }
Magic Number,BrightstarDB.Cluster.Common,Message,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\Message.cs,ReadBytes,The following statement contains a magic number: if (bytesRead < count)              {                  Thread.Sleep(5*retry);                  ReadBytes(inputStream' buff' start+bytesRead' count-bytesRead' retry+1);              }
Magic Number,BrightstarDB.Cluster.Common,MessageReader,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\MessageReader.cs,ReadMessages,The following statement contains a magic number: while (keepGoing)              {                  if (_socketStream.DataAvailable)                  {                      var msg = Message.Read(_socketStream);                      var response = _messageHandler(msg);                      response.ResponseMessage.WriteTo(_socketStream);                      _socketStream.Flush();                      keepGoing = _socket.Connected && !response.CloseConnection;                  }                  else                  {                      Thread.Sleep(10); // Wait a bit for new data                  }              }
Missing Default,BrightstarDB.Cluster.Common,MasterConfiguration,C:\repos\BrightstarDB_BrightstarDB\src\cluster\BrightstarDB.Cluster.Common\MasterConfiguration.cs,FromMessage,The following switch statement is missing a default case: switch (nvp[0].ToLowerInvariant())                          {                              case "writequorum":                                  ret.WriteQuorum = Int32.Parse(nvp[1]);                                  break;                          }
