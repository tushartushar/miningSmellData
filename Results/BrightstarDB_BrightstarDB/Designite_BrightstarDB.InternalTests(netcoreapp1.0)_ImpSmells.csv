Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,CompareNodes,Cyclomatic complexity of the method is 13
Long Parameter List,BrightstarDB.InternalTests,NoopParser,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\NTriplesParserTests.cs,Triple,The method has 10 parameters. Parameters: subject' subjectIsBNode' predicate' predicateIsBNode' obj' objectIsBNode' isLiteral' dataType' langCode' graphUri
Long Parameter List,BrightstarDB.InternalTests,LoggingTripleSink,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\NTriplesParserTests.cs,Triple,The method has 10 parameters. Parameters: subject' subjectIsBNode' predicate' predicateIsBNode' obj' objIsBNode' objIsLiteral' dataType' langCode' graphUri
Long Parameter List,BrightstarDB.InternalTests,ValidatorImportSink,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,Triple,The method has 10 parameters. Parameters: subject' subjectIsBNode' predicate' predicateIsBNode' obj' objIsBNode' objIsLiteral' dataType' langCode' graphUri
Long Parameter List,BrightstarDB.InternalTests,ValidatorSink,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,Triple,The method has 10 parameters. Parameters: subject' subjectIsBNode' predicate' predicateIsBNode' obj' objIsBNode' objIsLiteral' dataType' langCode' graphUri
Long Parameter List,BrightstarDB.InternalTests,TriplesValidator,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,Triple,The method has 10 parameters. Parameters: subject' subjectIsBNode' predicate' predicateIsBNode' obj' objIsBNode' objIsLiteral' dataType' langCode' graphUri
Long Parameter List,BrightstarDB.InternalTests,TriplesValidator,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,Stringify,The method has 6 parameters. Parameters: s' p' o' isLit' dt' lc
Long Parameter List,BrightstarDB.InternalTests.BPlusTreeTests,TestUtils,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\TestUtils.cs,OpenPageStore,The method has 5 parameters. Parameters: fileName' readOnly' persistenceType' txnId' profiler
Long Parameter List,BrightstarDB.Tests.BPlusTreeTests,MemoryPageStore,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\MemoryPageStore.cs,Write,The method has 7 parameters. Parameters: commitId' pageId' buff' srcOffset' pageOffset' len' profiler
Long Statement,BrightstarDB.InternalTests,BrightstarQueryProcessorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrightstarQueryProcessorTests.cs,InitializeDocTagStore,The length of the statement  "                const string sparql = "SELECT ?doc ?cat WHERE { ?doc <http://www.bs.com/tag> <http://www.bs.com/category/1> . ?doc <http://www.bs.com/tag> ?cat . }"; " is 149.
Long Statement,BrightstarDB.InternalTests,BrightstarQueryProcessorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrightstarQueryProcessorTests.cs,TestBrutalJoin,The length of the statement  "            const string sparql = "SELECT ?doc ?cat WHERE { ?doc <http://www.bs.com/tag> <http://www.bs.com/category/1> . ?doc <http://www.bs.com/tag> ?cat . }"; " is 149.
Long Statement,BrightstarDB.InternalTests,BrightstarQueryProcessorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrightstarQueryProcessorTests.cs,TestTwoHop,The length of the statement  "            const string sparql = @"SELECT ?relatedDoc ?cat WHERE { <http://www.bs.com/doc/123> <http://www.bs.com/tag> ?cat. ?relatedDoc <http://www.bs.com/tag> ?cat . }"; " is 160.
Long Statement,BrightstarDB.InternalTests,BrokenStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrokenStoreTests.cs,FindWorkingTransaction,The length of the statement  "                Console.WriteLine("Transaction #{0}: Start: {1}' Status: {2}' JobId: {3}"' i' txnInfo.TransactionStartTime' txnInfo.TransactionStatus' txnInfo.JobId); " is 150.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObjectStore,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestOpenDataObjectStore,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestOpenDataObjectStoreWithNamespaceMappings,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestOpenDataObjectStoreWithNamespaceMappings,The length of the statement  "            store = context.OpenStore(storeName' new Dictionary<string' string> { {"people"' "http://www.networkedplanet.com/people/"}}); " is 125.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestOpenDataObjectStoreWithNamespaceMappingsEmbedded,The length of the statement  "            store = context.OpenStore(storeName' new Dictionary<string' string> { { "people"' "http://www.networkedplanet.com/people/" } }); " is 128.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObjectWithUri,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObjectWithString,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObject,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObjectWithIdentity,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObjectWithCurie,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCreateDataObjectWithCurie,The length of the statement  "            store = context.OpenStore(storeName' new Dictionary<string' string> { { "people"' "http://www.networkedplanet.com/people/" } }); " is 128.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestSaveAndFetchDataObject,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestSavedDataObjectPropertyIsSameAfterSave,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestLocalStateAfterSetProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestSetSamePropertyResultsInOnlyOneProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemovePropertyPersisted,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestAddAndRemovePropertyPersisted,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestSetSamePropertyResultsInOnlyOnePropertyAfterSave,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectFluentApi,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectList,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestAddProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCurieObjectGetProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestTypedObjectGetProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestCurieObjectGetPropertyPersisted,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestSetPropertyDataObject,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetProperties,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveSpecificValueProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetRelatedProxies,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetRelatedProxiesWithSafeCurie,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestAnonymousDataObjects,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveProperty2,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestOptimisticLocking,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectProperties,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectPropertiesUsingMappings,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectPropertiesUsingMappings,The length of the statement  "            var store = context.OpenStore(storeId' new Dictionary<string' string> { { "products"' "http://www.networkedplanet.com/products/" } }); " is 134.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectPropertiesUsingMappings,The length of the statement  "            store = context.OpenStore(storeId' new Dictionary<string' string> { { "products"' "http://www.networkedplanet.com/products/" }}); " is 129.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectDeleteObjectsUsedInProperties,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectDeleteObjectsUsedInProperties,The length of the statement  "            var allCategories = store.BindDataObjectsWithSparql("SELECT ?cat WHERE {?cat a <http://www.networkedplanet.com/schemas/category>}").ToList(); " is 141.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectDeleteObjectsUsedInProperties,The length of the statement  "            allCategories = store.BindDataObjectsWithSparql("SELECT ?cat WHERE {?cat a <http://www.networkedplanet.com/schemas/category>}").ToList(); " is 137.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveLiteralProperty,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestQueryLessThan,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestQueryLessThan,The length of the statement  "            const string lowpay = "SELECT ?p ?s WHERE { ?p a <http://example.org/schema/person> . ?p <http://example.org/schema/salary> ?s . FILTER (?s < 50000)  }"; " is 153.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestQueryGreaterThan,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + Configuration.StoreLocation + "\\")); " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestQueryGreaterThan,The length of the statement  "            const string highPay = "SELECT ?p ?s WHERE { ?p a <http://example.org/schema/person> . ?p <http://example.org/schema/salary> ?s . FILTER (?s>50000)  }"; " is 152.
Long Statement,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestUpdateGraphTargetting,The length of the statement  "            var store4 = context.OpenStore(storeName' prefixes' updateGraph: inferredGraphUri' defaultDataSet:new string[]{inferredGraphUri}); " is 130.
Long Statement,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,SetUp,The length of the statement  "            _config = ConfigurationLoader.LoadConfiguration(Path.Combine(TestContext.CurrentContext.TestDirectory' TestConfiguration.DataLocation ' "dataObjectStoreConfig.ttl")); " is 166.
Long Statement,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestPeopleStoreConfiguration,The length of the statement  "            var sparql = parser.ParseFromString("SELECT ?p ?o ?g FROM NAMED <http://example.org/people> WHERE { GRAPH ?g { <http://example.org/alice> ?p ?o } }"); " is 150.
Long Statement,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestDataObjectRetrieval,The length of the statement  "            IDataObjectStore doStore = new SparqlDataObjectStore(query' update' namespaceMappings' false' "http://example.org/people"' null' null); " is 135.
Long Statement,BrightstarDB.InternalTests,OptimiserTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\OptimiserTests.cs,InitializeDocTagStore,The length of the statement  "                const string sparql = "SELECT ?doc ?cat WHERE { ?doc <http://www.bs.com/tag> <http://www.bs.com/category/1> . ?doc <http://www.bs.com/tag> ?cat . }"; " is 149.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestLookupByIdentifierAndType,The length of the statement  "                    "select ?t where { ?t <http://www.networkedplanet.com/model/isa> <http://www.networkedplanet.com/types/person> . FILTER ( ?t = <http://www.networkedplanet.com/people/10> ) }"; " is 175.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestJoinTwoSingleVarClauses,The length of the statement  "            store.InsertTriple("http://theforce.net/data/entry/1"'"http://theforce.net/schema/category"' "http://theforce.net/data/category/1"' false'null' null' Constants.DefaultGraphUri); " is 177.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestJoinTwoSingleVarClauses,The length of the statement  "            store.InsertTriple("http://theforce.net/data/entry/1"' "http://theforce.net/schema/fromPlanet"' "http://theforce.net/data/planet/1"' false' null' null' Constants.DefaultGraphUri); " is 179.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestJoinTwoSingleVarClauses,The length of the statement  "            store.InsertTriple("http://theforce.net/data/planet/1"' "http://theforce.net/schema/inSector"' "http://theforce.net/data/sector/1"' false' null' null' Constants.DefaultGraphUri); " is 178.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            initialData.AppendLine("<http://www.examplevocab.com/schema/Department> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2000/01/rdf-schema#Class> ."); " is 171.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            initialData.AppendLine("<http://www.example.com/jobRole/development> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.examplevocab.com/schema/JobRole> . "); " is 169.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            initialData.AppendLine("<http://www.example.com/jobRole/sales> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.examplevocab.com/schema/JobRole> . "); " is 163.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            initialData.AppendLine("<http://www.example.com/jobRole/marketing> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.examplevocab.com/schema/JobRole> . "); " is 167.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            initialData.AppendLine("<http://www.example.com/jobRole/administration> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.examplevocab.com/schema/JobRole> . "); " is 172.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            initialData.AppendLine("<http://www.example.com/jobRole/management> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.examplevocab.com/schema/JobRole> . "); " is 168.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/people/person{0}> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.examplevocab.com/schema/Person> ."' i)); " is 182.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/people/person{0}> <http://www.examplevocab.com/schema/personHasSkill> <http://www.example.com/skills/cSharp> ."' i)); " is 179.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentCountry> <http://www.example.com/countries/country{0}> ."' i));  //each department is located inits own country                " is 246.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/development> ."' e)); " is 201.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/development> ."' e)); " is 201.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/sales> ."' e)); " is 195.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/sales> ."' e)); " is 195.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/marketing> ."' e)); " is 199.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/marketing> ."' e)); " is 199.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/administration> ."' e)); " is 204.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/administration> ."' e)); " is 204.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/management> ."' e)); " is 200.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/departments/department{0}> <http://www.examplevocab.com/schema/departmentEmploymentRecord> <http://www.example.com/depemplrec/depemplrec{1}> ."' d' e)); " is 214.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/management> ."' e)); " is 200.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "                initialData.AppendLine(string.Format("<http://www.example.com/depemplrec/depemplrec{0}> <http://www.examplevocab.com/schema/departmentEmployee> <http://www.example.com/people/person{0}> ."' e)); " is 194.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The length of the statement  "            var result = XDocument.Load(client.ExecuteQuery(storeName' "SELECT count(?employee) as ?ugh WHERE {?employeerecord <http://www.examplevocab.com/schema/departmentEmployeeRole> <http://www.example.com/jobRole/administration> . ?employeerecord <http://www.examplevocab.com/schema/departmentEmployee> ?employee  }  ")); " is 315.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestSparqlLimit,The length of the statement  "            store.InsertTriple("http://theforce.net/data/entry/1"' "http://theforce.net/schema/category"' "http://theforce.net/data/category/1"' false' null' null' Constants.DefaultGraphUri); " is 179.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestSparqlLimit,The length of the statement  "            store.InsertTriple("http://theforce.net/data/entry/1"' "http://theforce.net/schema/fromPlanet"' "http://theforce.net/data/planet/1"' false' null' null' Constants.DefaultGraphUri); " is 179.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestSparqlLimit,The length of the statement  "            store.InsertTriple("http://theforce.net/data/entry/2"' "http://theforce.net/schema/category"' "http://theforce.net/data/category/1"' false' null' null' Constants.DefaultGraphUri); " is 179.
Long Statement,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,TestSparqlLimit,The length of the statement  "            store.InsertTriple("http://theforce.net/data/entry/2"' "http://theforce.net/schema/fromPlanet"' "http://theforce.net/data/planet/1"' false' null' null' Constants.DefaultGraphUri); " is 179.
Long Statement,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestRepeatedSmallUnitsOfWork,The length of the statement  "            IDataObjectContext context = new EmbeddedDataObjectContext(new ConnectionString("type=embedded;storesDirectory=" + BrightstarDB.Configuration.StoreLocation + "\\")); " is 165.
Long Statement,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithLargeLiteralProperty,The length of the statement  "                    store.InsertTriple("http://www.networkedplanet.com/people/person" + i' "http://www.networkedplanet.com/model/hasSkill"' Text + j' true' RdfDatatypes.String' "en"' Constants.DefaultGraphUri.ToString()); " is 201.
Long Statement,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert10000TriplesWithUniqueSubjectAndUniqueLiteral,The length of the statement  "                store.InsertTriple("http://www.networkedplanet.com/people/person" + i' "http://www.networkedplanet.com/model/hasSkill"' Text + i' true' RdfDatatypes.String' "en"' Constants.DefaultGraphUri.ToString()); " is 201.
Long Statement,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithSubjectAndObjectReuse,The length of the statement  "                    store.InsertTriple("http://www.networkedplanet.com/people/person" + i' "http://www.networkedplanet.com/model/hasSkill"' "http://www.networkedplanet.com/skills/skill" + j' false' null' null' Constants.DefaultGraphUri.ToString()); " is 228.
Long Statement,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestIntersectQueryPerformance,The length of the statement  "                "SELECT ?doc WHERE { ?doc <http://www.bs.com/tag> <http://www.bs.com/category/1> . ?doc <http://www.bs.com/tag> <http://www.bs.com/category/2> . }"; " is 148.
Long Statement,BrightstarDB.InternalTests,ValidatorImportSink,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,Triple,The length of the statement  "                    Assert.IsTrue(_store.Match(t.Subject' t.Predicate' t.Object' t.IsLiteral' t.DataType' t.LangCode' t.Graph).Count() == 1' " is 120.
Long Statement,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The length of the statement  "            predicates = new Dictionary<string' ulong>{{"http://example.org/p1"' 2}' {"http://example.org/p2"' 2}' {"http://example.org/p3"' 3}}; " is 133.
Long Statement,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTimespan,The length of the statement  "            statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))'0UL' new Dictionary<string' ulong>())' " is 139.
Long Statement,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The length of the statement  "            statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))' 0UL' new Dictionary<string' ulong>())' " is 140.
Long Statement,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestSnapshotStore,The length of the statement  "            var results = snapshot1.ExecuteSparqlQuery("SELECT ?l WHERE { ?s <http://example.org/name> ?l }"' SparqlResultsFormat.Xml); " is 123.
Long Statement,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInserts,The length of the statement  "                    result = store.ExecuteSparqlQuery("SELECT COUNT(?x) WHERE { ?x a <http://www.example.org/schema/Entity>}"' SparqlResultsFormat.Xml); " is 132.
Long Statement,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInserts,The length of the statement  "            result = store.ExecuteSparqlQuery("SELECT COUNT(?x) WHERE { ?x a <http://www.example.org/schema/Entity>}"' SparqlResultsFormat.Xml); " is 132.
Long Statement,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInsertsRepeatable,The length of the statement  "                    result = store.ExecuteSparqlQuery("SELECT COUNT(?x) WHERE { ?x a <http://www.example.org/schema/Entity>}"' SparqlResultsFormat.Xml); " is 132.
Long Statement,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInsertsRepeatable,The length of the statement  "            result = store.ExecuteSparqlQuery("SELECT COUNT(?x) WHERE { ?x a <http://www.example.org/schema/Entity>}"' SparqlResultsFormat.Xml); " is 132.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,CreateStore,The length of the statement  "            using (_storeManager.CreateStore(Configuration.StoreLocation + Path.DirectorySeparatorChar + sid' false' withTransactionLog)) " is 125.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransaction,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestExportJob,The length of the statement  "                    Assert.Fail("Export job failed with a transaction error. Message={0}. Exception Detail={1}"' status.Information' status.ExceptionDetail); " is 137.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPreconditionFails,The length of the statement  "            const string preconds = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/core/version> ""1""^^<http://www.w3.org/2000/01/rdf-schema#integer>"; " is 171.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPreconditionFails,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np> .\n " is 143.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The length of the statement  "                  <http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/core/version> ""1""^^<http://www.w3.org/2000/01/rdf-schema#integer> ."; " is 147.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The length of the statement  "            Assert.IsTrue(jobStatus.JobStatus == JobStatus.CompletedOk' "Initial insert failed: {0} : {1}"' jobStatus.Information' jobStatus.ExceptionDetail); " is 146.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The length of the statement  "            const string preconds = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/core/version> ""1""^^<http://www.w3.org/2000/01/rdf-schema#integer>"; " is 171.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 141.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The length of the statement  "            Assert.IsTrue(jobStatus.JobStatus == JobStatus.CompletedOk' "Transaction execution failed: {0} : {1}"' jobStatus.Information' jobStatus.ExceptionDetail); " is 153.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePrecondition,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np> .\n " is 143.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePrecondition,The length of the statement  "                  <http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/core/version> ""1""^^<http://www.w3.org/2000/01/rdf-schema#integer> ."; " is 147.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePrecondition,The length of the statement  "                @"<http://www.networkedplanet.com/people/kal> <http://www.newtorkedplanet.com/types/worksfor> <http://wwww.networkedplanet.com/companies/np> .\n " is 144.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePrecondition,The length of the statement  "                  <http://www.networkedplanet.com/people/kal> <http://www.networkedplanet.com/core/version> ""1""^^<http://wwww.w3.org/2000/01/rdf-schema#integer> ."; " is 148.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePreconditionFails,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np> .\n " is 143.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePreconditionFails,The length of the statement  "                  <http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/core/version> ""1""^^<http://www.w3.org/2000/01/rdf-schema#integer> ."; " is 147.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePreconditionFails,The length of the statement  "                @"<http://www.networkedplanet.com/people/kal> <http://www.newtorkedplanet.com/types/worksfor> <http://wwww.networkedplanet.com/companies/np> .\n " is 144.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithNonExistsancePreconditionFails,The length of the statement  "                  <http://www.networkedplanet.com/people/kal> <http://www.networkedplanet.com/core/version> ""1""^^<http://wwww.w3.org/2000/01/rdf-schema#integer> ."; " is 148.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestReadTransactionList,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 141.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestReadTransactionList,The length of the statement  "            data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 148.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestRecoverTransactionData,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestFailedTransactionAppearsInTransactionList,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np"; " is 140.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestFailedTransactionAppearsInTransactionList,The length of the statement  "            data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 148.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestGetErrorMessage,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies"; " is 157.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestGetErrorMessage,The length of the statement  "            Assert.IsTrue(jobStatus.ExceptionDetail.Message.Contains("Syntax error in triples to add.")' "Unexpected job message: '{0}'"' jobStatus.ExceptionDetail.Message); " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeleteStoreAfterQuery,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeleteStoreAfterUpdate,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 141.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The length of the statement  "            var results = storeWorker.Query("select * where { ?a ?b ?c }"' SparqlResultsFormat.Xml' new[] { Constants.DefaultGraphUri }); " is 125.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The length of the statement  "                @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 141.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The length of the statement  "            results = storeWorker.Query("select * where { ?a ?b ?c }"' SparqlResultsFormat.Xml' new[] { Constants.DefaultGraphUri }); " is 121.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The length of the statement  "            Assert.AreEqual(JobStatus.CompletedOk' jobStatus.JobStatus' "Import failed: {0} : {1}"' jobStatus.Information' jobStatus.ExceptionDetail); " is 138.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The length of the statement  "            var queryResult = storeWorker.Query("select * where { ?a ?b ?c }"' SparqlResultsFormat.Xml' new[] { Constants.DefaultGraphUri }); " is 129.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The length of the statement  "            var cachedResult = storeWorker.Query("select * where { ?a ?b ?c }"' SparqlResultsFormat.Xml' new[] { Constants.DefaultGraphUri }); " is 130.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The length of the statement  "            cachedResult = storeWorker.Query("select * where { ?a ?b ?c }"' SparqlResultsFormat.Xml' new[] { Constants.DefaultGraphUri }); " is 126.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionLogCreatedWhenLoggingEnabled,The length of the statement  "            Assert.IsTrue(File.Exists(txnHeadersFile)' "Expected transactionheaders.bs file to be created when store is initially created"); " is 128.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionLogCreatedWhenLoggingEnabled,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestNoTransactionLogWhenLoggingDisabled,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTouchingTransactionHeadersEnablesLogging,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeletingTransactionHeadersDisablesLogging,The length of the statement  "            Assert.IsTrue(File.Exists(txnHeadersFile)' "Expected transactionheaders.bs file to be created when store is initially created"); " is 128.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeletingTransactionHeadersDisablesLogging,The length of the statement  "            const string data = @"<http://www.networkedplanet.com/people/gra> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 161.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeletingTransactionHeadersDisablesLogging,The length of the statement  "            const string data2 = @"<http://www.networkedplanet.com/people/kal> <http://www.networkedplanet.com/types/worksfor> <http://www.networkedplanet.com/companies/np>"; " is 162.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeletingTransactionHeadersDisablesLogging,The length of the statement  "            Assert.IsFalse(File.Exists(txnHeadersFile)' "Did not expect transactionheaders.bs to reappear after second transaction"); " is 121.
Long Statement,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeletingTransactionHeadersDisablesLogging,The length of the statement  "                Assert.AreEqual(logLength' txnStream.Length' "Expected transaction log file to be unchanged in size by second transaction"); " is 124.
Long Statement,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestRemoveBySubjectPredicateLiteralDoesNotRemoveUriMatches,The length of the statement  "            c.RemoveBySubjectPredicateLiteral("http://example.org/s"' "http://example.org/p"' "http://example.org/o"' RdfDatatypes.String' null); " is 133.
Long Statement,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The length of the statement  "            Assert.AreEqual(1' c.GetMatches(new Triple{Subject = "http://example.org/s"' Predicate = "http://example.org/p"' Object = "http://example.org/o"' Graph = Constants.DefaultGraphUri}).Count()' " is 190.
Long Statement,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The length of the statement  "            Assert.AreEqual(2' c.GetMatches(new Triple{Subject = "http://example.org/s"' Predicate = "http://example.org/p"' Object = "http://example.org/o"' Graph = null}).Count()' " is 169.
Long Statement,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The length of the statement  "            Assert.AreEqual(3' c.GetMatches(new Triple { Subject = "http://example.org/s"' Predicate = "http://example.org/p"' Object = null' Graph = Constants.DefaultGraphUri }).Count()' " is 175.
Long Statement,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The length of the statement  "            Assert.AreEqual(2' c.GetMatches(new Triple { Subject = "http://example.org/s"' Predicate = null' Object = "http://example.org/o"' Graph = Constants.DefaultGraphUri }).Count()' " is 175.
Long Statement,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The length of the statement  "            Assert.AreEqual(2' c.GetMatches(new Triple { Subject = null' Predicate = "http://example.org/p"' Object = "http://example.org/o"' Graph = Constants.DefaultGraphUri }).Count()' " is 175.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteInRandomOrder,The length of the statement  "                    Assert.IsFalse(tree.Search((ulong)deleteList[i]'value' null)' "Search returned key {0} after it was supposed to be deleted"' deleteList[i]); " is 140.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,TestBuildSingleInternalNode,The length of the statement  "            RunTest((pageStore' pageStoreName' persistenceType)=>BuildAndScan(pageStore' pageStoreName' persistenceType' 200)' "TestBuildSingleInternalNode"); " is 146.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,TestBuildFullTree,The length of the statement  "            RunTest((pageStore' pageStoreName' persistenceType)=>BuildAndScan(pageStore' pageStoreName'persistenceType' 20000)' "TestBuildFullTree"); " is 137.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,RunTest,The length of the statement  "            //testAction(TestUtils.CreateEmptyPageStore(baseFileName + "_append")' baseFileName + "_append"' PersistenceType.AppendOnly); " is 125.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,RunTest,The length of the statement  "            testAction(TestUtils.CreateEmptyPageStore(baseFileName + "_rewrite"' PersistenceType.Rewrite)' baseFileName + "_rewrite"' PersistenceType.Rewrite); " is 147.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,ValidateScan,The length of the statement  "                Assert.AreEqual((ulong) ix' BitConverter.ToUInt64(keyValuePair.Key' 0)' "Unexpected key at index {0} in test store {1}"' ix' pageStoreName); " is 140.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,ValidateScan,The length of the statement  "                Assert.AreEqual(ix' BitConverter.ToInt32(keyValuePair.Value' 0)' "Unexpected value at index {0} in test store {1}"' ix' pageStoreName); " is 135.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,ValidateSearch,The length of the statement  "                Assert.IsTrue(tree.Search((ulong) key' value' null)' "Could not find entry for key {0} in store {1}"' key' pageStoreName); " is 122.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,ValidateSearch,The length of the statement  "                Assert.AreEqual(key' BitConverter.ToInt32(value' 0)' "Incorrect value found for key {0} in store {1}"' key' pageStoreName); " is 123.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,ResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ResourceIndexTests.cs,TestAssertLongLiteral,The length of the statement  "            Assert.AreEqual(resourceId' resourceIndex.GetResourceId(longStringValue' true' "http://example.org/datatypes/string"' "en-us"' true)); " is 134.
Long Statement,BrightstarDB.InternalTests.BPlusTreeTests,ResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ResourceIndexTests.cs,TestAssertLongLiteral,The length of the statement  "            Assert.AreNotEqual(StoreConstants.NullUlong' resourceIndex.GetResourceId("http://example.org/datatypes/string"' false' null' null' true)); " is 138.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,JoinOperatorWithGraphAndUnion,The length of the statement  "					ImportGraph("data-r2/algebra/join-combo-graph-1.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/algebra/join-combo-graph-1.ttl")); " is 163.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,ComplexOptionalSemantics2,The length of the statement  "					ImportGraph("data-r2/optional/complex-data-1.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/optional/complex-data-1.ttl")); " is 157.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,ComplexOptionalSemantics3,The length of the statement  "					ImportGraph("data-r2/optional/complex-data-1.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/optional/complex-data-1.ttl")); " is 157.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,ComplexOptionalSemantics4,The length of the statement  "					ImportGraph("data-r2/optional/complex-data-1.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/optional/complex-data-1.ttl")); " is 157.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph05,The length of the statement  "					ImportGraph("data-r2/graph/data-g2.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g2.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph06,The length of the statement  "					ImportGraph("data-r2/graph/data-g2.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g2.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph07,The length of the statement  "					ImportGraph("data-r2/graph/data-g2.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g2.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph08,The length of the statement  "					ImportGraph("data-r2/graph/data-g2.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g2.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph09,The length of the statement  "					ImportGraph("data-r2/graph/data-g4.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g4.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph10,The length of the statement  "					ImportGraph("data-r2/graph/data-g3.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g3.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph10b,The length of the statement  "					ImportGraph("data-r2/graph/data-g3-dup.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g3-dup.ttl")); " is 145.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph11,The length of the statement  "					ImportGraph("data-r2/graph/data-g1.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g1.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph11,The length of the statement  "					ImportGraph("data-r2/graph/data-g2.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g2.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph11,The length of the statement  "					ImportGraph("data-r2/graph/data-g3.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g3.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,Graph11,The length of the statement  "					ImportGraph("data-r2/graph/data-g4.ttl"' new Uri(@"file:///D:/Projects/brightstar/working/sparql-test-suite/data-r2/graph/data-g4.ttl")); " is 137.
Long Statement,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,CompareResultGraphs,The length of the statement  "            var resultSet = expectedResultGraph.GetUriNode(new Uri("http://www.w3.org/2001/sw/DataAccess/tests/result-set#ResultSet")); " is 123.
Empty Catch Block,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateAndUpdatePage,The method has an empty catch block.
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,BinaryPageStoreTests,The following statement contains a magic number: _testBuffer1 = new byte[4088];
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,BinaryPageStoreTests,The following statement contains a magic number: _testBuffer2 = new byte[4088];
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,BinaryPageStoreTests,The following statement contains a magic number: BitConverter.GetBytes(i).CopyTo(_testBuffer1' (int)i * 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,BinaryPageStoreTests,The following statement contains a magic number: BitConverter.GetBytes(i*2).CopyTo(_testBuffer2' (int) i*8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,BinaryPageStoreTests,The following statement contains a magic number: BitConverter.GetBytes(i*2).CopyTo(_testBuffer2' (int) i*8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,BinaryPageStoreTests,The following statement contains a magic number: i < 511
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestNewPageIsWriteable,The following statement contains a magic number: var p = new BinaryFilePage(1ul' 16' 1ul);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestPageReadFromStreamIsNotWriteable,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestPageReadFromStreamIsNotWriteable,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateFromStream,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateFromStream,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestMakePageWriteable,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestMakePageWriteable,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestMakePageWriteable,The following statement contains a magic number: p = p.MakeWriteable(2ul);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestMakePageWriteable,The following statement contains a magic number: Assert.That(p.SecondTransactionId' Is.EqualTo(2ul));
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestWriteToPage,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestWriteToPage,The following statement contains a magic number: var p = new BinaryFilePage(ms' 1ul' 16' 2ul' false);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestWriteToPage,The following statement contains a magic number: p = p.MakeWriteable(2ul);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestWriteToPage,The following statement contains a magic number: p.SetData(BitConverter.GetBytes(2ul));
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestWriteToPage,The following statement contains a magic number: Assert.That(BitConverter.ToUInt64(p.SecondBuffer' 0)' Is.EqualTo(2ul));
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: byte[]pageData = new byte[32];
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(firstTxnId)' 0' pageData' 0' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(firstData)' 0' pageData' 8' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(firstData)' 0' pageData' 8' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(secondTxnId)' 0' pageData' 16' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(secondTxnId)' 0' pageData' 16' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(secondData)' 0' pageData' 24' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,MakeTestPage,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes(secondData)' 0' pageData' 24' 8);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateAndUpdatePage,The following statement contains a magic number: Assert.AreEqual(8192L' fs.Length);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateAndUpdatePage,The following statement contains a magic number: Assert.AreEqual(8192L' fs.Length);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateAndUpdatePage,The following statement contains a magic number: page = pageStore.GetWriteablePage(2' page);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateAndUpdatePage,The following statement contains a magic number: pageStore.MarkDirty(2' 1ul);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,TestCreateAndUpdatePage,The following statement contains a magic number: pageStore.Commit(2' null);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,CreateEmptyPageStore,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,BinaryPageStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BinaryPageStoreTests.cs,CreateEmptyPageStore,The following statement contains a magic number: return new BinaryFilePageStore(_pm' fileName' 4096' false' 0' 1' false);
Magic Number,BrightstarDB.InternalTests,BrightstarQueryProcessorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrightstarQueryProcessorTests.cs,InitializeDocTagStore,The following statement contains a magic number: store.InsertTriple("http://www.bs.com/doc/" + i'                      "http://www.bs.com/tag"'                      "http://www.bs.com/category/" + rand.Next(50)' false' null' null' Constants.DefaultGraphUri);
Magic Number,BrightstarDB.InternalTests,BrightstarQueryProcessorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrightstarQueryProcessorTests.cs,InitializeDocTagStore,The following statement contains a magic number: store.InsertTriple("http://www.bs.com/doc/" + i'                      "http://www.bs.com/tag"'                      "http://www.bs.com/category/" + rand.Next(50)' false' null' null' Constants.DefaultGraphUri);
Magic Number,BrightstarDB.InternalTests,BrightstarQueryProcessorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrightstarQueryProcessorTests.cs,InitializeDocTagStore,The following statement contains a magic number: i < 1000000
Magic Number,BrightstarDB.InternalTests,BrokenStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrokenStoreTests.cs,FindWorkingTransaction,The following statement contains a magic number: store.RevertToCommitPoint(new CommitPoint(242472899 ' 0' DateTime.UtcNow' Guid.Empty));
Magic Number,BrightstarDB.InternalTests,BrokenStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrokenStoreTests.cs,FindWorkingTransaction,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,BrokenStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BrokenStoreTests.cs,FindWorkingTransaction,The following statement contains a magic number: var resource = readStore.Resolve(1518601251);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectFluentApi,The following statement contains a magic number: var gra = store.MakeDataObject()                          .SetType(store.MakeDataObject("http://www.networkedplanet.com/types/person"))                          .SetProperty(store.MakeDataObject("http://www.networkedplanet.com/types/age")' 23)                          .SetProperty(store.MakeDataObject("http://www.networkedplanet.com/types/worksfor")'                                           store.MakeDataObject("http://www.networkedplanet.com/companies/np")                                       );
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectFluentApi,The following statement contains a magic number: var kal = store.MakeDataObject()                          .SetType(store.MakeDataObject("http://www.networkedplanet.com/types/person"))                          .SetProperty("ont:age"' 23)                          .SetProperty("rdfs:label"' "Kal")                          .SetProperty("ont:worksfor"'                                          store.MakeDataObject("http://www.networkedplanet.com/companies/np")                                              .SetProperty("rdfs:label"' "Networked Planet")                                       )                          .SetProperty("ont:email"' store.MakeListDataObject(new List<string> { "kal@networkedplanet.com"}));
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestAddProperty,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)p2).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetProperty,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)p2).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetProperties,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)p2).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestGetProperties,The following statement contains a magic number: Assert.AreEqual(2' propValues.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveSpecificValueProperty,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)p2).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveSpecificValueProperty,The following statement contains a magic number: Assert.AreEqual(2' propValues.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveProperty2,The following statement contains a magic number: Assert.AreEqual(2' obj3Related.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveProperty2,The following statement contains a magic number: Assert.AreEqual(2' obj3Related.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestOptimisticLocking,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)p3).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectPropertiesUsingMappings,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)getObjectByFullIdentity).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectPropertiesUsingMappings,The following statement contains a magic number: Assert.AreEqual(2' ((DataObject)getObjectByCurie).Triples.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestDataObjectDeleteObjectsUsedInProperties,The following statement contains a magic number: Assert.AreEqual(4' allCategories.Count);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveLiteralProperty,The following statement contains a magic number: o1.AddProperty(p2' 23);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveLiteralProperty,The following statement contains a magic number: o2.AddProperty(p2' 24);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveLiteralProperty,The following statement contains a magic number: Assert.AreEqual(23' o3.GetPropertyValue(p2));
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRemoveLiteralProperty,The following statement contains a magic number: Assert.AreEqual(24' o4.GetPropertyValue(p2));
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestQueryLessThan,The following statement contains a magic number: Assert.AreEqual(4' result.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestQueryGreaterThan,The following statement contains a magic number: Assert.AreEqual(5' result.Count());
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestPreconditionsFailedException,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 21);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestPreconditionsFailedException,The following statement contains a magic number: store2Alice.SetProperty("http://example.org/age"' 22);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestPreconditionsFailedException,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 20);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRefreshSingleClientWins,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 21);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRefreshSingleClientWins,The following statement contains a magic number: store2Alice.SetProperty("http://example.org/age"' 22);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRefreshSingleClientWins,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 20);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRefreshSingleStoreWins,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 21);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRefreshSingleStoreWins,The following statement contains a magic number: store2Alice.SetProperty("http://example.org/age"' 22);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestRefreshSingleStoreWins,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 20);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestVersioningGraph,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 21);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestVersioningGraph,The following statement contains a magic number: store2Alice.SetProperty("http://example.org/age"' 22);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestVersioningGraph,The following statement contains a magic number: store1Alice.SetProperty("http://example.org/age"' 20);
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,TestVersioningGraph,The following statement contains a magic number: Assert.AreEqual(2' row.GetColumnValue("o"));
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,SetUpData,The following statement contains a magic number: var pay = (i + 1)*10000;
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,SetUpData,The following statement contains a magic number: i<10
Magic Number,BrightstarDB.InternalTests,DataObjectTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DataObjectTests.cs,SetUpData,The following statement contains a magic number: Assert.AreEqual(10' people.Count());
Magic Number,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestPeopleStoreConfiguration,The following statement contains a magic number: Assert.That(results.Results.Count' Is.EqualTo(4));
Magic Number,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestDataObjectUpdate,The following statement contains a magic number: bob.SetProperty("foaf:age"' 40);
Magic Number,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestDataObjectUpdate,The following statement contains a magic number: Assert.That(bob.GetPropertyValue("foaf:age")' Is.EqualTo(40));
Magic Number,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestDataObjectUpdate,The following statement contains a magic number: bob.SetProperty("foaf:age"' 41);
Magic Number,BrightstarDB.InternalTests,DotNetRdfStoreTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\DotNetRdfStoreTests.cs,TestDataObjectUpdate,The following statement contains a magic number: Assert.That(bob.GetPropertyValue("foaf:age")' Is.EqualTo(41));
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestLookup,The following statement contains a magic number: var cache = new LruCache<int' string>(10);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestLookup,The following statement contains a magic number: cache.InsertOrUpdate(2' "test");
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestLookup,The following statement contains a magic number: Assert.IsTrue(cache.TryLookup(2' out retrieved));
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestLookup,The following statement contains a magic number: Assert.IsFalse(cache.TryLookup(3' out retrieved));
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: var cache = new LruCache<int' string>(10' 9' 7);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: var cache = new LruCache<int' string>(10' 9' 7);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: var cache = new LruCache<int' string>(10' 9' 7);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: i < 8
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: i < 8
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: cache.InsertOrUpdate(8' "test8");
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: i < 9
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: var cache = new LruCache<int' string>(10' 9' 7);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: var cache = new LruCache<int' string>(10' 9' 7);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: var cache = new LruCache<int' string>(10' 9' 7);
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: i < 8
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: i < 8
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: cache.InsertOrUpdate(3' "updated");
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: i < 8
Magic Number,BrightstarDB.InternalTests,GenericLruCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\GenericLruCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: Assert.IsTrue(cache.TryLookup(3' out retrieved));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestLookup,The following statement contains a magic number: var cache = new LruPageCache(10);
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestLookup,The following statement contains a magic number: cache.InsertOrUpdate("test"' new TestCacheItem(2ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestLookup,The following statement contains a magic number: var notRetrieved = cache.Lookup("test"' 3ul);
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: var cache = new LruPageCache(10);
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: cache.InsertOrUpdate("test"' new TestCacheItem(10' 1));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: Assert.IsNull(cache.Lookup("test"' 2ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: Assert.IsNotNull(cache.Lookup("test"' 3ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestEvictionOnInsert,The following statement contains a magic number: Assert.IsNotNull(cache.Lookup("test"' 4ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: var cache = new LruPageCache(10);
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: cache.InsertOrUpdate("test"' new TestCacheItem(3' 2));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: cache.InsertOrUpdate("test"' new TestCacheItem(3' 2));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: Assert.IsNotNull(cache.Lookup("test"' 2ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: var retreived = cache.Lookup("test"' 3ul) as TestCacheItem;
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestOverwriteOnInsert,The following statement contains a magic number: Assert.AreEqual(2' retreived.Version);
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: var cache = new LruPageCache(10);
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: cache.BeforeEvict += (sender' args) => { args.CancelEviction = args.PageId < 3; };
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: cache.InsertOrUpdate("test"' new TestCacheItem(10' 1));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: Assert.IsNotNull(cache.Lookup("test"' 2ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: Assert.IsNull(cache.Lookup("test"' 3ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: Assert.IsNull(cache.Lookup("test"' 4ul));
Magic Number,BrightstarDB.InternalTests,LruPageCacheTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\LruPageCacheTests.cs,TestCancelEviction,The following statement contains a magic number: Assert.IsNotNull(cache.Lookup("test"' 5ul));
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: mf.AppendCommitPoint(new CommitPoint(2ul' 2ul' commit2Time' commit2JobId));
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: mf.AppendCommitPoint(new CommitPoint(2ul' 2ul' commit2Time' commit2JobId));
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' allCommits.Count);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: Assert.AreEqual(2ul' allCommits[0].CommitNumber);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: Assert.AreEqual(2ul' allCommits[0].LocationOffset);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: Assert.AreEqual(2ul' lastCommit.CommitNumber);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestAppendCommitPoint,The following statement contains a magic number: Assert.AreEqual(2ul' lastCommit.LocationOffset);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: mf.AppendCommitPoint(new CommitPoint(2ul' 2ul' commit2Time' commit2JobId));
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: mf.AppendCommitPoint(new CommitPoint(2ul' 2ul' commit2Time' commit2JobId));
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' allCommits.Count);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: fs.Seek(-250' SeekOrigin.End);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: fs.WriteByte(255);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' allCommits.Count);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: Assert.AreEqual(2ul' lastCommit.CommitNumber);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: Assert.AreEqual(2ul' lastCommit.LocationOffset);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: fs.Seek(-120' SeekOrigin.End);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,TestCorruptCommitPoint,The following statement contains a magic number: fs.WriteByte(255);
Magic Number,BrightstarDB.InternalTests,MasterFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\MasterFileTests.cs,EnsureEmptyDirectory,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,BrightstarDB.InternalTests,NTriplesParserTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\NTriplesParserTests.cs,TestImportEscaping,The following statement contains a magic number: Assert.That(sink.Triples' Has.Count.EqualTo(8));
Magic Number,BrightstarDB.InternalTests,NTriplesParserTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\NTriplesParserTests.cs,TestBackslashEscape,The following statement contains a magic number: Assert.That(sink.Triples' Has.Count.EqualTo(2));
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestInitialInsert,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestInitialLookup,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestInitialLookup,The following statement contains a magic number: Assert.AreEqual(500u' offset);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestSetExistingValueLookup,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestSetExistingValueLookup,The following statement contains a magic number: Assert.AreEqual(500u' offset);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestSetExistingValueLookup,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1' 1001' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,TestSetExistingValueLookup,The following statement contains a magic number: Assert.AreEqual(1001u' offset);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001Inserts,The following statement contains a magic number: objectLocationManager.SetObjectOffset(i' 1000 + i' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001Inserts,The following statement contains a magic number: i < 1001
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001Inserts,The following statement contains a magic number: Assert.AreEqual(1000 + i' offset);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001Inserts,The following statement contains a magic number: i < 1001
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001Inserts,The following statement contains a magic number: Assert.AreEqual(2' objectLocationManager.NumberOfContainers);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: objectLocationManager.SetObjectOffset(i' 1000 + i' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: i < 1001
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: Assert.AreEqual(1000 + i' offset);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: i < 1001
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1000' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1000' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1001' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: objectLocationManager.SetObjectOffset(1001' 500' 1' 1);
Magic Number,BrightstarDB.InternalTests,ObjectLocationManagerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ObjectLocationManagerTests.cs,Test1001InsertsAndSomeUpdates,The following statement contains a magic number: Assert.AreEqual(2' objectLocationManager.NumberOfContainers);
Magic Number,BrightstarDB.InternalTests,OptimiserTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\OptimiserTests.cs,InitializeDocTagStore,The following statement contains a magic number: store.InsertTriple("http://www.bs.com/doc/" + i'                      "http://www.bs.com/tag"'                      "http://www.bs.com/category/" + rand.Next(50)' false' null' null' Constants.DefaultGraphUri);
Magic Number,BrightstarDB.InternalTests,OptimiserTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\OptimiserTests.cs,InitializeDocTagStore,The following statement contains a magic number: store.InsertTriple("http://www.bs.com/doc/" + i'                      "http://www.bs.com/tag"'                      "http://www.bs.com/category/" + rand.Next(50)' false' null' null' Constants.DefaultGraphUri);
Magic Number,BrightstarDB.InternalTests,OptimiserTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\OptimiserTests.cs,InitializeDocTagStore,The following statement contains a magic number: i < 1000000
Magic Number,BrightstarDB.InternalTests,PreloadTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\PreloadTests.cs,TestPreloadStore,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,PreloadTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\PreloadTests.cs,TestPreloadMultipleStores,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The following statement contains a magic number: i < 100
Magic Number,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The following statement contains a magic number: e < 100
Magic Number,BrightstarDB.InternalTests,QueryTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\QueryTests.cs,BugzId5205,The following statement contains a magic number: Assert.AreEqual(20' ugh);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestImportAndValidateSingleFile,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestRepeatedSmallUnitsOfWork,The following statement contains a magic number: i < 10
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: var themes = new IDataObject[50];
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: t < 50
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: var docs = new IDataObject[250];
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: doc.AddProperty("http://www.np.com/types/classification"' themes[rnd.Next(49)]);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: doc.AddProperty("http://www.np.com/types/classification"' themes[rnd.Next(49)]);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: doc.AddProperty("http://www.np.com/types/classification"' themes[rnd.Next(49)]);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: t < 250
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: var emails = new IDataObject[200];
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: email.AddProperty("http://www.np.com/types/classification"' themes[rnd.Next(49)]);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: email.AddProperty("http://www.np.com/types/classification"' themes[rnd.Next(49)]);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: email.AddProperty("http://www.np.com/types/classification"' themes[rnd.Next(49)]);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: t < 200
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,ExecuteSmallUnitOfWork,The following statement contains a magic number: i < 100
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithLargeLiteralProperty,The following statement contains a magic number: j < 100
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithLargeLiteralProperty,The following statement contains a magic number: i < 10000
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert10000TriplesWithUniqueSubjectAndUniqueLiteral,The following statement contains a magic number: i < 10000
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert100MTriplesWithSubjectAndObjectReuse,The following statement contains a magic number: j < 100
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert100MTriplesWithSubjectAndObjectReuse,The following statement contains a magic number: i < 10000
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert100MTriplesWithSubjectAndObjectReuse,The following statement contains a magic number: k < 100
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithSubjectAndObjectReuse,The following statement contains a magic number: j < 100
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithSubjectAndObjectReuse,The following statement contains a magic number: i < 10000
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestInsert1000000TriplesWithUniqueSubjectResources,The following statement contains a magic number: i < 1000000
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestQuickLookupIndex,The following statement contains a magic number: var dict = new Dictionary<string' ulong>(10000);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestQuickLookupIndex,The following statement contains a magic number: i < 10000000
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestImportAndLookupPerformance,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestImportPerformance25M,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestIntersectQueryPerformance,The following statement contains a magic number: store.InsertTriple("http://www.bs.com/doc/" + i'                      "http://www.bs.com/tag"'                      "http://www.bs.com/category/" + rand.Next(50)' false' null' null' Constants.DefaultGraphUri);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestIntersectQueryPerformance,The following statement contains a magic number: store.InsertTriple("http://www.bs.com/doc/" + i'                      "http://www.bs.com/tag"'                      "http://www.bs.com/category/" + rand.Next(50)' false' null' null' Constants.DefaultGraphUri);
Magic Number,BrightstarDB.InternalTests,ScalingTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\ScalingTests.cs,TestIntersectQueryPerformance,The following statement contains a magic number: i < 1000000
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestCreateNewLogFile,The following statement contains a magic number: var predicates = new Dictionary<string' ulong> {{"http://example.org/p1"' 1}' {"http://example.org/p2"' 2}};
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestCreateNewLogFile,The following statement contains a magic number: log.AppendStatistics(new StoreStatistics(1' timestamp' 3' predicates));
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestCreateNewLogFile,The following statement contains a magic number: Assert.AreEqual(3UL' allStats[0].TripleCount);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestCreateNewLogFile,The following statement contains a magic number: Assert.AreEqual(2UL' allStats[0].PredicateTripleCounts["http://example.org/p2"]);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestCreateNewLogFile,The following statement contains a magic number: Assert.AreEqual(2' allStats[0].PredicateTripleCounts.Count);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: var predicates = new Dictionary<string' ulong> { { "http://example.org/p1"' 1 }' { "http://example.org/p2"' 2 } };
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: log.AppendStatistics(new StoreStatistics(1' timestamp' 3' predicates));
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: predicates = new Dictionary<string' ulong>{{"http://example.org/p1"' 2}' {"http://example.org/p2"' 2}' {"http://example.org/p3"' 3}};
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: predicates = new Dictionary<string' ulong>{{"http://example.org/p1"' 2}' {"http://example.org/p2"' 2}' {"http://example.org/p3"' 3}};
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: predicates = new Dictionary<string' ulong>{{"http://example.org/p1"' 2}' {"http://example.org/p2"' 2}' {"http://example.org/p3"' 3}};
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: log.AppendStatistics(new StoreStatistics(2' timestamp' 7' predicates));
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: log.AppendStatistics(new StoreStatistics(2' timestamp' 7' predicates));
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: Assert.AreEqual(2UL' stats.CommitNumber);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: Assert.AreEqual(7UL' stats.TripleCount);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: Assert.AreEqual(2UL' stats.PredicateTripleCounts["http://example.org/p1"]);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: Assert.AreEqual(2UL' stats.PredicateTripleCounts["http://example.org/p2"]);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: Assert.AreEqual(3UL' stats.PredicateTripleCounts["http://example.org/p3"]);
Magic Number,BrightstarDB.InternalTests,StatisticsLogTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatisticsLogTests.cs,TestAppendPredicateStats,The following statement contains a magic number: Assert.AreEqual(3' stats.PredicateTripleCounts.Count);
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTransaction,The following statement contains a magic number: Configuration.StatsUpdateTransactionCount = 10;
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTransaction,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow' 0UL' new Dictionary<string' ulong>())'                 18UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTransaction,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow' 0UL' new Dictionary<string' ulong>())'                 18UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTimespan,The following statement contains a magic number: Configuration.StatsUpdateTimespan = 60;
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTimespan,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))'0UL' new Dictionary<string' ulong>())'                  12UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTimespan,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))'0UL' new Dictionary<string' ulong>())'                  12UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTimespan,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))'0UL' new Dictionary<string' ulong>())'                  12UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByTimespan,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2.0));
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The following statement contains a magic number: Configuration.StatsUpdateTimespan = 60;
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The following statement contains a magic number: Configuration.StatsUpdateTransactionCount = 6;
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))' 0UL' new Dictionary<string' ulong>())'                  12UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))' 0UL' new Dictionary<string' ulong>())'                  12UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The following statement contains a magic number: statsMonitor.Initialize(new StoreStatistics(10UL' DateTime.UtcNow.Subtract(TimeSpan.FromSeconds(59))' 0UL' new Dictionary<string' ulong>())'                  12UL' () => { triggered = true; });
Magic Number,BrightstarDB.InternalTests,StatsMonitorTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StatsMonitorTests.cs,TestTriggerByBoth,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2.0));
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestInsertAndRetrieveTriplesInNamedGraphs2,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestInsertMulitpleTriples,The following statement contains a magic number: i < 100
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestInsertMulitpleTriples,The following statement contains a magic number: i < 100
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestFetchMultipleResourceStatements,The following statement contains a magic number: i < 1000
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestFetchMultipleResourceStatements,The following statement contains a magic number: Assert.AreEqual(1000' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestInsertAndRetrieveXmlLiteral,The following statement contains a magic number: Assert.AreEqual(8' outDoc.Root.Elements().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMatchTriples,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMatchTriplesWithNulls,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestListCommitPoints,The following statement contains a magic number: Assert.AreEqual(2' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestListCommitPoints,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRevertToCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRevertToCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRevertToCommitPoint,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRevertToCommitPoint,The following statement contains a magic number: Assert.AreEqual(4' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: Assert.AreEqual(allCommitPoints[2].LocationOffset' commitPoint.Id);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: commitPoint = client.GetCommitPoint(sid' testTimestamps[2]);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestGetCommitPoint,The following statement contains a magic number: commitPoint = client.GetCommitPoint(sid' testTimestamps[3]);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: commitPoint = client.GetCommitPoint(sid' testTimestamps[2]);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: commitPoint = client.GetCommitPoint(sid' testTimestamps[3]);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestQueryAtCommitPoint,The following statement contains a magic number: Assert.AreEqual(2' resultsDoc.SparqlResultRows().Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestListStoreGraphs,The following statement contains a magic number: Assert.AreEqual(2' allGraphUris.Count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestListStoreGraphs,The following statement contains a magic number: Assert.AreEqual(2' allGraphUris.Count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(2' store.GetCommitPoints().First().CommitNumber);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().First().CommitNumber);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().First().CommitNumber);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(3' store.GetResourceStatements("http://www.networkedplanet.com/people/10").Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: stream.Seek(-130' SeekOrigin.End);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: stream.WriteByte(5);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(3' store.GetCommitPoints().First().CommitNumber);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(3' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: stream.Seek(-5' SeekOrigin.End);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(2' store.GetCommitPoints().First().CommitNumber);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestRecoverFromBadCommitPointWrite2,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestWriteAllowedAfterRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(2' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestWriteAllowedAfterRecoverFromBadCommitPointWrite,The following statement contains a magic number: Assert.AreEqual(3' triples.Count());
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestConsolidateStore,The following statement contains a magic number: Assert.AreEqual(4' commitPoints.Count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestConsolidateStore,The following statement contains a magic number: Assert.AreEqual(job1Id' commitPoints[2].JobId);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestConsolidateStore,The following statement contains a magic number: Assert.AreEqual(Guid.Empty' commitPoints[3].JobId);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestConsolidateStore,The following statement contains a magic number: Assert.AreEqual(3' labels.Count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestSnapshotStore,The following statement contains a magic number: Assert.AreEqual(3' labels.Count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestSnapshotStore,The following statement contains a magic number: Assert.AreEqual(2' labels.Count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInserts,The following statement contains a magic number: Assert.AreEqual(i * 2' tripleCount' "Unexpected triple count after import batch to {0}"' i);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInserts,The following statement contains a magic number: i % 2000 == 0
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInserts,The following statement contains a magic number: i <= 10000
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInserts,The following statement contains a magic number: Assert.AreEqual(10000' row.GetColumnValue(0)' "Unexpected results count after final import");
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInsertsRepeatable,The following statement contains a magic number: Assert.AreEqual(i * 2' tripleCount' "Unexpected triple count after import batch to {0}"' i);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInsertsRepeatable,The following statement contains a magic number: i % 2000 == 0
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInsertsRepeatable,The following statement contains a magic number: i <= 10000
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestBatchedInsertsRepeatable,The following statement contains a magic number: Assert.AreEqual(10000' row.GetColumnValue(0)' "Unexpected results count after final import");
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: i <= 10000
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: Assert.AreEqual(20000' count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: Assert.AreEqual(20000' count);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: Assert.AreEqual(20000' task1.Result);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: Assert.AreEqual(20000' task2.Result);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: Assert.AreEqual(20000' task3.Result);
Magic Number,BrightstarDB.InternalTests,StoreTestsBase,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreTestsBase.cs,TestMultiThreadedReadAccess,The following statement contains a magic number: Assert.AreEqual(20000' task4.Result);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransaction,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestExportJob,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestStatsJob,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestStatsJob,The following statement contains a magic number: Assert.AreEqual(3' latestStats.TripleCount);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestStatsJob,The following statement contains a magic number: Assert.AreEqual(2' latestStats.PredicateTripleCounts.Count);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestStatsJob,The following statement contains a magic number: Assert.AreEqual(2' latestStats.PredicateTripleCounts["http://xmlns.org/foaf/0.1/knows"]);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPreconditionFails,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionWithPrecondition,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,AssertJobCompleted,The following statement contains a magic number: Thread.Sleep(250);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestReadTransactionList,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestReadTransactionList,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestReadTransactionList,The following statement contains a magic number: Assert.AreEqual(2' i);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestRecoverTransactionData,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestFailedTransactionAppearsInTransactionList,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestFailedTransactionAppearsInTransactionList,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestFailedTransactionAppearsInTransactionList,The following statement contains a magic number: Assert.AreEqual(2' i);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestGetErrorMessage,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeleteStoreAfterQuery,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestDeleteStoreAfterUpdate,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestConsolidateStore,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestQueryCaching,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestTransactionLogCreatedWhenLoggingEnabled,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,TestNoTransactionLogWhenLoggingDisabled,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StoreWorkerTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StoreWorkerTests.cs,AssertJobCompletedOk,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionStreamLotsOfData,The following statement contains a magic number: var t = new Task(() =>              {                  var streamWriter = new StreamWriter(producerStream);                  for (int i = 0; i < 1000; i++) streamWriter.WriteLine("stream content " + i);                  streamWriter.Close();              });
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionStreamLotsOfData,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionStreamLotsOfDataAndCheckAllReads,The following statement contains a magic number: var t = new Task(() =>              {                  var streamWriter = new StreamWriter(producerStream);                  for (int i = 0; i < 1000; i++) streamWriter.WriteLine("stream content " + i);                  streamWriter.Close();              });
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionStreamLotsOfDataAndCheckAllReads,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionClientTermination,The following statement contains a magic number: var t = new Task(() =>              {                  var streamWriter = new StreamWriter(producerStream);                  for (int i = 0; i < 1000; i++) streamWriter.WriteLine("stream content " + i);                  streamWriter.Close();              });
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionClientUsingStatement,The following statement contains a magic number: var t = new Task(() =>              {                  var streamWriter = new StreamWriter(producerStream);                  for (int i = 0; i < 1000; i++) streamWriter.WriteLine("stream content " + i);                  streamWriter.Close();              });
Magic Number,BrightstarDB.InternalTests,StreamTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\StreamTests.cs,TestConnectionStreamBuffering,The following statement contains a magic number: var t = new Task(() =>              {                  var streamWriter = new StreamWriter(producerStream);                  for (int i = 0; i < 1000; i++) streamWriter.WriteLine("stream content " + i);                  streamWriter.Close();              });
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestAddRangeUpdatesCollection,The following statement contains a magic number: Assert.AreEqual(3' c.Count());
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestRemoveBySubjectRemovesAllMatches,The following statement contains a magic number: Assert.AreEqual(4' c.Count());
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestRemoveBySubjectPredicateRemoveAllMatches,The following statement contains a magic number: Assert.AreEqual(2' c.Count());
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The following statement contains a magic number: Assert.AreEqual(2' c.GetMatches(new Triple{Subject = "http://example.org/s"' Predicate = "http://example.org/p"' Object = "http://example.org/o"' Graph = null}).Count()'                  "Expected two matches with graph wildcard.");
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The following statement contains a magic number: Assert.AreEqual(3' c.GetMatches(new Triple { Subject = "http://example.org/s"' Predicate = "http://example.org/p"' Object = null' Graph = Constants.DefaultGraphUri }).Count()'                  "Expected 3 matches with object wildcard");
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The following statement contains a magic number: Assert.AreEqual(2' c.GetMatches(new Triple { Subject = "http://example.org/s"' Predicate = null' Object = "http://example.org/o"' Graph = Constants.DefaultGraphUri }).Count()'                  "Expected 2 matches with predicate wildcard");
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesWithDifferentTriplePatterns,The following statement contains a magic number: Assert.AreEqual(2' c.GetMatches(new Triple { Subject = null' Predicate = "http://example.org/p"' Object = "http://example.org/o"' Graph = Constants.DefaultGraphUri }).Count()'                  "Expected 2 matches with subject wildcard");
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesBySubject,The following statement contains a magic number: Assert.AreEqual(5' c.GetMatches("http://example.org/s").Count());
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesBySubjectPredicate,The following statement contains a magic number: Assert.AreEqual(4' c.GetMatches("http://example.org/s"' "http://example.org/p").Count());
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestGetMatchesBySubjectPredicateObject,The following statement contains a magic number: Assert.AreEqual(2' c.GetMatches("http://example.org/s"' "http://example.org/p"' "http://example.org/o").Count());
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestEnumerateSubjects,The following statement contains a magic number: Assert.AreEqual(2' subjects.Count);
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestEnumerateTriples,The following statement contains a magic number: Assert.AreEqual(6' triples.Count);
Magic Number,BrightstarDB.InternalTests,TripleCollectionTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\TripleCollectionTests.cs,TestClearRemovesAllTriples,The following statement contains a magic number: Assert.AreEqual(6' triples.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: tree.Insert(0' 5ul' TestUtils.StringToByteArray("five"));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: tree.Insert(0' 3ul' TestUtils.StringToByteArray("three"));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: Assert.IsTrue(tree.Search(5ul' valueBuffer' null)' "Expected search for key 5 to return true");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: Assert.IsTrue(tree.Search(3ul' valueBuffer' null)' "Expected search for key 3 to return true");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: Assert.IsFalse(tree.Search(2ul' valueBuffer' null)' "Expected search for key 2 to return false");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: Assert.IsTrue(tree.Search(5ul' valueBuffer' null)' "Expected search for key 5 to return true");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: Assert.IsTrue(tree.Search(3ul' valueBuffer' null)' "Expected search for key 3 to return true");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertNoSplit,The following statement contains a magic number: Assert.IsFalse(tree.Search(2ul' valueBuffer' null)' "Expected search for key 2 to return false");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertSingleRootSplit,The following statement contains a magic number: Assert.IsTrue(tree.Search(14' buff' null));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestSplitRootNode,The following statement contains a magic number: Assert.IsTrue(tree.Search(14ul' buff' null));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertInRandomOrder,The following statement contains a magic number: TestUtils.MakeRandomInsertList(100000)
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertInRandomOrder,The following statement contains a magic number: i < 100000
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteFromLeafRoot,The following statement contains a magic number: tree.Insert(txnId' 2ul' TestUtils.StringToByteArray("two"));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteFromLeafRoot,The following statement contains a magic number: tree.Insert(txnId' 3ul' TestUtils.StringToByteArray("three"));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteFromLeafRoot,The following statement contains a magic number: tree.Delete(txnId' 2ul' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteFromLeafRoot,The following statement contains a magic number: Assert.IsTrue(tree.Search(3ul' buff' null));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteFromLeafRoot,The following statement contains a magic number: Assert.IsFalse(tree.Search(2ul' buff' null));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBorrowLeft,The following statement contains a magic number: tree.Delete(txnId' (ulong) (config.LeafLoadFactor - 2)' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBorrowLeft,The following statement contains a magic number: Assert.IsTrue(                          i == (config.LeafLoadFactor - 1) ^ i == (config.LeafLoadFactor - 2) ^                          tree.Search((ulong) i' buff' null)'                          "Could not find entry for key {0}"' i);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBorrowRight,The following statement contains a magic number: tree.Delete(txnId' 13ul' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBorrowRight,The following statement contains a magic number: tree.Delete(txnId' 12ul' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBorrowRight,The following statement contains a magic number: Assert.IsTrue(i == 12 ^ i == 13 ^ tree.Search((ulong) i' buff' null)'                          "Could not find entry for key {0}"' i);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBorrowRight,The following statement contains a magic number: Assert.IsTrue(i == 12 ^ i == 13 ^ tree.Search((ulong) i' buff' null)'                          "Could not find entry for key {0}"' i);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeLeft,The following statement contains a magic number: var testBytes = new byte[] {1' 2' 3' 4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeLeft,The following statement contains a magic number: var testBytes = new byte[] {1' 2' 3' 4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeLeft,The following statement contains a magic number: var testBytes = new byte[] {1' 2' 3' 4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeLeft,The following statement contains a magic number: ulong delRange = ((ulong) config.LeafLoadFactor/2) + 2;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeLeft,The following statement contains a magic number: ulong delRange = ((ulong) config.LeafLoadFactor/2) + 2;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: var testBytes = new byte[] {1' 2' 3' 4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: var testBytes = new byte[] {1' 2' 3' 4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: var testBytes = new byte[] {1' 2' 3' 4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: Assert.IsTrue(tree.Search(10395ul' buff' null));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: i < 4
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: Assert.IsTrue(tree.Search(i' buff' null) ^ (i - deleteFrom >= 0 && i - deleteFrom < 4)'                                        "Could not find key {0}. deleteFrom={1}"' i' deleteFrom);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: deleteFrom = (ulong) (config.LeafLoadFactor*config.InternalBranchFactor) - 5;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestMergeRight,The following statement contains a magic number: i < 4
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestValuelessBTree,The following statement contains a magic number: var tree = new BPlusTree(0' pageStore' 16' 0);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestValuelessBTree,The following statement contains a magic number: i < 1000
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestValuelessBTree,The following statement contains a magic number: var tree = new BPlusTree(pageStore' treeRoot' 16' 0);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBatchedInserts,The following statement contains a magic number: var keyBuff = new byte[8];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBatchedInserts,The following statement contains a magic number: var value = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBatchedInserts,The following statement contains a magic number: tree.Save((ulong)i / 250' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBatchedInserts,The following statement contains a magic number: pageStore.Commit((ulong)i / 250' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBatchedInserts,The following statement contains a magic number: i%250 == 0
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestBatchedInserts,The following statement contains a magic number: i <= 10000
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: var value = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: const int keyCount = 20000;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: Assert.IsTrue(tree.Search(3457ul' value' null)' "Could not find entry 3457 before deletes");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: Assert.IsTrue(tree.Search(3457ul' value' null)' "Could not find entry 3457 after delete of {0}"'i);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: tree.Delete(2ul' (ulong)i' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: rootPageId = tree.Save(2' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteAllEntries,The following statement contains a magic number: pageStore.Commit(2' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteInReverseOrder,The following statement contains a magic number: var value = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestInsertAndDeleteInReverseOrder,The following statement contains a magic number: const int keyCount = 20000;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteInRandomOrder,The following statement contains a magic number: var value = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteInRandomOrder,The following statement contains a magic number: const int keyCount = 20000;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BasicTreeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BasicTreeTests.cs,TestDeleteInRandomOrder,The following statement contains a magic number: var deleteList = TestUtils.MakeRandomInsertList(20000).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,BPlusTreeBuilderTests,The following statement contains a magic number: var valueBuffer = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,BPlusTreeBuilderTests,The following statement contains a magic number: i < 20000
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,TestBuildSingleInternalNode,The following statement contains a magic number: RunTest((pageStore' pageStoreName' persistenceType)=>BuildAndScan(pageStore' pageStoreName' persistenceType' 200)' "TestBuildSingleInternalNode");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,TestBuildFullTree,The following statement contains a magic number: RunTest((pageStore' pageStoreName' persistenceType)=>BuildAndScan(pageStore' pageStoreName'persistenceType' 20000)' "TestBuildFullTree");
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,TestBuildSingleLeafNode,The following statement contains a magic number: BuildAndScan(pageStore' pageStoreName' persistenceType' 20);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,BuildAndScan,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 64' pageStore.PageSize);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,BuildAndScan,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 64' pageStore.PageSize);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,BuildAndScan,The following statement contains a magic number: treeBeforeSave.Save(2' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,BuildAndScan,The following statement contains a magic number: pageStore.Commit(2' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,BPlusTreeBuilderTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\BPlusTreeBuilderTests.cs,ValidateSearch,The following statement contains a magic number: var value = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,CoalesceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\CoalesceTests.cs,TestCoalesceRootLeafNode,The following statement contains a magic number: byte[] valueBuff = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,CoalesceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\CoalesceTests.cs,TestCoalesceRootLeafNode,The following statement contains a magic number: byte[] valueBuff = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,CoalesceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\CoalesceTests.cs,TestCoalesceLeafLoadPlusOne,The following statement contains a magic number: byte[] valueBuff = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,CoalesceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\CoalesceTests.cs,TestCoalesceLeafLoadPlusOne,The following statement contains a magic number: byte[] valueBuff = new byte[64];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var pageStore = new MemoryPageStore(4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(2ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(3ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(4ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(5ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(10ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(11ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: Assert.IsTrue(rightNode.KeyCount == 3);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: TestUtils.AssertBuffersEqual(rightNode.LeftmostKey' BitConverter.GetBytes(5ul));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: Assert.IsTrue(leftNode.KeyCount == 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: TestUtils.AssertBuffersEqual(leftNode.RightmostKey' BitConverter.GetBytes(4ul));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Delete(1' BitConverter.GetBytes(2ul));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var pageStore = new MemoryPageStore(4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(2ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(10ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(11ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(12ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(13ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(14ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: Assert.IsTrue(leftNode.KeyCount == 3);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: TestUtils.AssertBuffersEqual(BitConverter.GetBytes(10ul)' leftNode.RightmostKey);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: TestUtils.AssertBuffersEqual(BitConverter.GetBytes(11ul)' rightNode.LeftmostKey);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,DirectLeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectLeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: Assert.IsTrue(rightNode.KeyCount == 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var pageStore = new MemoryPageStore(4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: byte[] testBytes = new byte[]{1'2'3'4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: byte[] testBytes = new byte[]{1'2'3'4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: byte[] testBytes = new byte[]{1'2'3'4};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(2ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(3ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(4ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(5ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(10ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(11ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: Assert.IsTrue(rightNode.KeyCount == 3);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: TestUtils.AssertBuffersEqual(rightNode.LeftmostKey' BitConverter.GetBytes(5ul));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: Assert.IsTrue(leftNode.KeyCount == 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: TestUtils.AssertBuffersEqual(leftNode.RightmostKey' BitConverter.GetBytes(4ul));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowLeft,The following statement contains a magic number: leftNode.Delete(1' BitConverter.GetBytes(2ul));
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var pageStore = new MemoryPageStore(4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: byte[] testBytes = new byte[] { 1' 2' 3' 4 };
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: leftNode.Insert(1' BitConverter.GetBytes(2ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(10ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(11ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(12ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(13ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: rightNode.Insert(1' BitConverter.GetBytes(14ul)' testBytes);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: Assert.IsTrue(leftNode.KeyCount == 3);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: TestUtils.AssertBuffersEqual(BitConverter.GetBytes(10ul)' leftNode.RightmostKey);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: TestUtils.AssertBuffersEqual(BitConverter.GetBytes(11ul)' rightNode.LeftmostKey);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestBorrowRight,The following statement contains a magic number: Assert.IsTrue(rightNode.KeyCount == 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var pageStore = new MemoryPageStore(4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var config = new BPlusTreeConfiguration(pageStore' 8' 8' 4096);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var testBytes = new byte[]{1'2'3'4'5'6'7'8};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,LeafNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\LeafNodeTests.cs,TestLeafNodeSplit,The following statement contains a magic number: var splitKey = new byte[8];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PageFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PageFileTests.cs,PageFileTests,The following statement contains a magic number: TestBuffer = new byte[8192];
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PageFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PageFileTests.cs,PageFileTests,The following statement contains a magic number: BitConverter.GetBytes(i).CopyTo(TestBuffer' (int)i*8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PageFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PageFileTests.cs,PageFileTests,The following statement contains a magic number: i < 1024
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PageFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PageFileTests.cs,TestCreateAppendOnlyPageStore,The following statement contains a magic number: Assert.AreEqual(8192' readwritePageStore.PageSize);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PageFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PageFileTests.cs,TestCreateAppendOnlyPageStore,The following statement contains a magic number: Assert.AreEqual(8192' readonlyPageStore.PageSize);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PageFileTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PageFileTests.cs,ValidateBuffer,The following statement contains a magic number: Assert.AreEqual(8192' buffer.Length);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PerformanceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PerformanceTests.cs,MakeTestData,The following statement contains a magic number: int batchSize = 50000;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PerformanceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PerformanceTests.cs,TestBatchInsert,The following statement contains a magic number: const int target = 40000000;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PerformanceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PerformanceTests.cs,TestBatchInsert,The following statement contains a magic number: const int batchSize = 50000;
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,PerformanceTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\PerformanceTests.cs,TestBatchInsert,The following statement contains a magic number: var pageStore = new AppendOnlyFilePageStore(persistenceManager' "40m_batch.data"' 4096' false' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestStoreModifiedExceptionThrown,The following statement contains a magic number: Assert.Throws<ReadWriteStoreModifiedException>(() =>              {                  ulong pageId;                  IPage page;                  byte[] buffer1 = new byte[] {1' 1' 1' 1};                  byte[] buffer2 = new byte[] {2' 2' 2' 2};                  using (                      var pageStore = TestUtils.CreateEmptyPageStore("TestStoreModifiedExceptionThrown.data"'                          PersistenceType.Rewrite))                  {                      page = pageStore.Create(2);                      pageId = page.Id;                      page.SetData(buffer1' 0' 0' 4);                      pageStore.MarkDirty(2' pageId);                      pageStore.Commit(2' null);                  }                    using (                      var readStore =                          new BinaryFilePageStore(                              TestUtils.PersistenceManager'                              "TestStoreModifiedExceptionThrown.data"'                              BPlusTreeStoreManager.PageSize' true' 2'                              3' false))                  {                      using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 2' 3' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          Assert.IsFalse(                              writeStore.IsWriteable(writePage));                          writePage = writeStore.GetWriteablePage(3'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(3' pageId);                          writeStore.Commit(3' null);                      }                        using (                          var writeStore =                              new BinaryFilePageStore(                                  TestUtils.PersistenceManager'                                  "TestStoreModifiedExceptionThrown.data"'                                  BPlusTreeStoreManager.PageSize'                                  false' 3' 4' false))                      {                          var writePage = writeStore.Retrieve(pageId'                              null);                          writePage = writeStore.GetWriteablePage(4'                              writePage);                          writePage.SetData(buffer2' 0' 0' 4);                          writeStore.MarkDirty(4' pageId);                          writeStore.Commit(4' null);                      }                        page = readStore.Retrieve(1' null);                      Assert.AreEqual(1' page.Data[0]);                      // We should not reach this assert because the ReadWriteStoreModifiedException should get thrown                  }              });
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer2 = new byte[] {2' 2' 2' 2};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer2 = new byte[] {2' 2' 2' 2};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer2 = new byte[] {2' 2' 2' 2};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer2 = new byte[] {2' 2' 2' 2};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer3 = new byte[] {3' 3' 3' 3};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer3 = new byte[] {3' 3' 3' 3};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer3 = new byte[] {3' 3' 3' 3};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var buffer3 = new byte[] {3' 3' 3' 3};
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: page.SetData(buffer1' 0' 0' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: pageStore.MarkDirty(2' pageId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: pageStore.Commit(2' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var readStore = new BinaryFilePageStore(TestUtils.PersistenceManager'                                                      "TestStoreModifiedExceptionThrown.data"'                                                      BPlusTreeStoreManager.PageSize' true' 2' 3' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: var readStore = new BinaryFilePageStore(TestUtils.PersistenceManager'                                                      "TestStoreModifiedExceptionThrown.data"'                                                      BPlusTreeStoreManager.PageSize' true' 2' 3' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writePage = writeStore.GetWriteablePage(3' writePage);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writePage.SetData(buffer2' 0' 0' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writeStore.MarkDirty(3' pageId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writeStore.Commit(3' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writePage = writeStore.GetWriteablePage(4' writePage);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writePage.SetData(buffer3' 0' 0' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writeStore.MarkDirty(4' pageId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ReadWriteStoreModifiedTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ReadWriteStoreModifiedTests.cs,TestReopenAfterReadWriteStoreModifiedException,The following statement contains a magic number: writeStore.Commit(4' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4' null).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4' null).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4' null).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4' null).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestInsertRelatedResource,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 5ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 5ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 5ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 6ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 6ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 6ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 7ul' 8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 7ul' 8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 7ul' 8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(3' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(4' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1' 2' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1' 2' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(3' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1' 2).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(4' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestEnumerateMultipleRelatedResources,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 3ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 5ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 5ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 5ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 6ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 6ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 6ul' 4);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 7ul' 8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 7ul' 8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.AddRelatedResource(0' 1ul' 2ul' 7ul' 8);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(4' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(4' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[2].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(7ul' relatedResourceIds[3].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(8' relatedResourceIds[3].GraphId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.DeleteRelatedResource(1' 1' 2' 3' 4' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.DeleteRelatedResource(1' 1' 2' 3' 4' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.DeleteRelatedResource(1' 1' 2' 3' 4' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3' relatedResourceIndex.EnumerateRelatedResources(1'2).Count());
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(3' relatedResourceIndex.EnumerateRelatedResources(1'2).Count());
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.DeleteRelatedResource(1' 1' 2' 7' 8' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.DeleteRelatedResource(1' 1' 2' 7' 8' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIndex.DeleteRelatedResource(1' 1' 2' 7' 8' null);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(2' relatedResourceIndex.EnumerateRelatedResources(1' 2).Count());
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(2' relatedResourceIndex.EnumerateRelatedResources(1' 2).Count());
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: var relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 4).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(2' relatedResourceIds.Count);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(5ul' relatedResourceIds[0].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: Assert.AreEqual(6ul' relatedResourceIds[1].ResourceId);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 8).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,RelatedResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\RelatedResourceIndexTests.cs,TestDeleteRelatedResource,The following statement contains a magic number: relatedResourceIds = relatedResourceIndex.EnumerateRelatedResources(1ul' 2ul' 8).ToList();
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ResourceIndexTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ResourceIndexTests.cs,TestAssertLongLiteral,The following statement contains a magic number: var longStringValue = "Long string value " + new string('!'' 100);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ResourceTableTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ResourceTableTests.cs,TestInsertLongResources,The following statement contains a magic number: var longResourceA = new string('A'' 3070);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ResourceTableTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ResourceTableTests.cs,TestInsertLongResources,The following statement contains a magic number: var longResourceB = new string('B'' 3070);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,ResourceTableTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\ResourceTableTests.cs,TestInsertLongResources,The following statement contains a magic number: var longResourceC = new string('C'' 3070);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,TestUtils,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\TestUtils.cs,CreateEmptyPageStore,The following statement contains a magic number: return new AppendOnlyFilePageStore(PersistenceManager' fileName' 4096' false' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,TestUtils,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\TestUtils.cs,CreateEmptyPageStore,The following statement contains a magic number: return new BinaryFilePageStore(PersistenceManager' fileName' 4096' false' 1' 2' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,TestUtils,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\TestUtils.cs,CreateEmptyPageStore,The following statement contains a magic number: return new BinaryFilePageStore(PersistenceManager' fileName' 4096' false' 1' 2' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,TestUtils,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\TestUtils.cs,OpenPageStore,The following statement contains a magic number: return new AppendOnlyFilePageStore(PersistenceManager' fileName' 4096' readOnly' false);
Magic Number,BrightstarDB.InternalTests.BPlusTreeTests,TestUtils,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\TestUtils.cs,OpenPageStore,The following statement contains a magic number: return new BinaryFilePageStore(PersistenceManager' fileName' 4096' readOnly' txnId' txnId + 1' false);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var pageStore = new MemoryPageStore(1024);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var config = new BPlusTreeConfiguration( pageStore' 8' 8' 1024);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var config = new BPlusTreeConfiguration( pageStore' 8' 8' 1024);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var config = new BPlusTreeConfiguration( pageStore' 8' 8' 1024);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var n = new InternalNode(pageStore.Create(0)' BitConverter.GetBytes(50ul)' 2'3' config);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var n = new InternalNode(pageStore.Create(0)' BitConverter.GetBytes(50ul)' 2'3' config);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: var n = new InternalNode(pageStore.Create(0)' BitConverter.GetBytes(50ul)' 2'3' config);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: n.Insert(1' BitConverter.GetBytes(100ul)' 4);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: n.Insert(1' BitConverter.GetBytes(100ul)' 4);
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: Assert.AreEqual(50ul' BitConverter.ToUInt64(n.LeftmostKey' 0));
Magic Number,BrightstarDB.Tests.BPlusTreeTests,DirectInternalNodeTests,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\BPlusTreeTests\DirectInternalNodeTests.cs,TestRightShiftFrom,The following statement contains a magic number: Assert.AreEqual(100ul' BitConverter.ToUInt64(n.RightmostKey' 0));
Missing Default,BrightstarDB.InternalTests.SparqlTestSuite,ManifestEvaluation,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestEvaluation.cs,CompareNodes,The following switch statement is missing a default case: switch(expectedNode.NodeType)              {                  case NodeType.Blank:                      var uriNode = actualNode as IUriNode;                      if (uriNode == null) return false;                      var bnode = expectedNode as IBlankNode;                      if (bnodeMap.ContainsKey(bnode.InternalID))                      {                          return uriNode.Uri.ToString().Equals(bnodeMap[bnode.InternalID]);                      } else if (uriNode.Uri.ToString().StartsWith(Constants.GeneratedUriPrefix))                      {                                                  bnodeMap[bnode.InternalID] = uriNode.Uri.ToString();                          return true;                      }                      return false;                  case NodeType.Literal:                      if (!actualNode.NodeType.Equals(expectedNode.NodeType)) return false;                      var xl = actualNode as LiteralNode;                      var yl = expectedNode as LiteralNode;                      if (!xl.Value.Equals(yl.Value)) return false;                      var xd = xl.DataType == null ? RdfDatatypes.PlainLiteral : xl.DataType.ToString();                      var yd = yl.DataType == null ? RdfDatatypes.PlainLiteral : yl.DataType.ToString();                      if (!xd.Equals(yd)) return false;                      var xlang = xl.Language ?? String.Empty;                      var ylang = yl.Language ?? String.Empty;  #if NETCOREAPP10                      if (!xlang.Equals(ylang' StringComparison.OrdinalIgnoreCase)) return false;  #else                      if (!xlang.Equals(ylang' StringComparison.InvariantCultureIgnoreCase)) return false;  #endif                      break;                  case NodeType.Uri:                      if (!actualNode.NodeType.Equals(expectedNode.NodeType)) return false;                      var xu = actualNode as UriNode;                      var yu = expectedNode as UriNode;                      if (!xu.Uri.Equals(yu.Uri)) return false;                      break;              }
Missing Default,BrightstarDB.InternalTests.SparqlTestSuite,ManifestSyntax,D:\research\architectureSmells\repos\BrightstarDB_BrightstarDB\src\core\BrightstarDB.InternalTests\SparqlTestSuite\ManifestSyntax.cs,CompareNodes,The following switch statement is missing a default case: switch(xb.NodeType)              {                  case NodeType.Literal:                      var xl = xb as LiteralNode;                      var yl = yb as LiteralNode;                      if (!xl.Value.Equals(yl.Value)) return false;                      var xd = xl.DataType == null ? RdfDatatypes.PlainLiteral : xl.DataType.ToString();                      var yd = yl.DataType == null ? RdfDatatypes.PlainLiteral : yl.DataType.ToString();                      if (!xd.Equals(yd)) return false;                      var xlang = xl.Language ?? String.Empty;                      var ylang = yl.Language ?? String.Empty;                      if (!xlang.Equals(ylang)) return false;                      break;                  case NodeType.Uri:                      var xu = xb as UriNode;                      var yu = yb as UriNode;                      if (!xu.Uri.Equals(yu.Uri)) return false;                      break;              }
