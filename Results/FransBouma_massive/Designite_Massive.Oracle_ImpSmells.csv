Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,GetDefaultValue,Cyclomatic complexity of the method is 8
Complex Method,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformSaveAsync,Cyclomatic complexity of the method is 8
Complex Method,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,TryInvokeMember,Cyclomatic complexity of the method is 34
Complex Method,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformSave,Cyclomatic complexity of the method is 8
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagingQueryPair,The method has 7 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AllAsync,The method has 5 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AllAsync,The method has 6 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PagedAsync,The method has 6 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PagedAsync,The method has 7 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PagedAsync,The method has 8 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PagedAsync,The method has 9 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagedResultAsync,The method has 9 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,DynamicModel,The method has 6 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,All,The method has 5 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,Paged,The method has 6 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,Paged,The method has 8 parameters.
Long Parameter List,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagedResult,The method has 8 parameters.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,SetCommandSpecificProperties,The length of the statement  "	// no need for locking' as the values are always the same so it doesn't matter whether multiple threads set the value multiple times.  " is 133.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,GetIdentityRetrievalScalarStatement,The length of the statement  "	return string.IsNullOrEmpty (_primaryKeyFieldSequence) ? string.Empty : string.Format ("SELECT {0}.NEXTVAL FROM DUAL"' _primaryKeyFieldSequence); " is 145.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,GetSelectQueryPattern,The length of the statement  "		// we have to wrap the query and then apply the rownum filter' as aggregates etc. otherwise aren't going to contain the right values' as they're then applied to the " is 164.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagingQueryPair,The length of the statement  "	var orderByClauseFragment = string.IsNullOrEmpty (orderByClause) ? string.Format (" ORDER BY {0}"' string.IsNullOrEmpty (primaryKeyField) ? PrimaryKeyField : primaryKeyField) : ReadifyOrderByClause (orderByClause); " is 214.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagingQueryPair,The length of the statement  "	var coreQuery = string.Format (this.GetSelectQueryPattern (0' ReadifyWhereClause (whereClause)' orderByClauseFragment)' columns' string.IsNullOrEmpty (sql) ? this.TableName : sql); " is 180.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagingQueryPair,The length of the statement  "	toReturn.MainQuery = string.Format ("SELECT * FROM (SELECT a.*' rownum r___ FROM ({0}) a WHERE rownum <= {1}) WHERE r___ > {2}"' coreQuery' (pageStart + pageSize)' pageStart); " is 175.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,QueryAsync,The length of the statement  "	using (var rdr = await CreateCommand (sql' connection' args).ExecuteReaderAsync (cancellationToken).ConfigureAwait (false)) { " is 125.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,ExecuteAsync,The length of the statement  "				result += await ExecuteDbCommandAsync (cmd' connectionToUse' transactionToUse' cancellationToken).ConfigureAwait (false); " is 121.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AllAsync,The length of the statement  "	return QueryAsync (string.Format (BuildSelectQueryPattern (where' orderBy' limit)' columns' TableName)' cancellationToken' args); " is 129.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PagedAsync,The length of the statement  "	return BuildPagedResultAsync (cancellationToken' whereClause: where' orderByClause: orderBy' columns: columns' pageSize: pageSize' currentPage: currentPage' args: args); " is 169.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PagedAsync,The length of the statement  "	return BuildPagedResultAsync (cancellationToken' sql' primaryKey' where' orderBy' columns' pageSize' currentPage' args); " is 120.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,SingleAsync,The length of the statement  "	var singleValueSet = await AllAsync (cancellationToken' this.GetPkComparisonPredicateQueryFragment ()' limit: 1' columns: columns' args: new[] { " is 144.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformInsertAsync,The length of the statement  "		((IDictionary<string' object>)toInsert) [this.PrimaryKeyField] = Convert.ToInt32 (await sequenceCmd.ExecuteScalarAsync (cancellationToken).ConfigureAwait (false)); " is 163.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformInsertAsync,The length of the statement  "		// simply batch the identity scalar query to the main insert query and execute them as one scalar query. This will both execute the statement and  " is 145.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformInsertAsync,The length of the statement  "		((IDictionary<string' object>)toInsert) [this.PrimaryKeyField] = Convert.ToInt32 (await cmd.ExecuteScalarAsync (cancellationToken).ConfigureAwait (false)); " is 155.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,CountAsync,The length of the statement  "	var toReturn = await ScalarAsync (string.Format (scalarQueryPattern' string.IsNullOrEmpty (tableName) ? this.TableName : tableName)' cancellationToken' args).ConfigureAwait (false); " is 181.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformSaveAsync,The length of the statement  "						result += await ExecuteDbCommandAsync (CreateUpdateCommand (oAsExpando' GetPrimaryKey (o))' connectionToUse' transactionToUse' cancellationToken).ConfigureAwait (false); " is 169.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagedResultAsync,The length of the statement  "	var queryPair = this.BuildPagingQueryPair (sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage); " is 125.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagedResultAsync,The length of the statement  "	// first create the tasks' which will make the queries run immediately but also return immediately. As both queries don't have a correlation' this can speed up " is 159.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagedResultAsync,The length of the statement  "	var queryTask = QueryAsync (string.Format (queryPair.MainQuery' columns' TableName)' cancellationToken' args).ConfigureAwait (false); " is 133.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,Paged,The length of the statement  "	return BuildPagedResult (whereClause: where' orderByClause: orderBy' columns: columns' pageSize: pageSize' currentPage: currentPage' args: args); " is 145.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,KeyValues,The length of the statement  "		throw new InvalidOperationException ("There's no DescriptorField set - do this in your constructor to describe the text value you want to see"); " is 144.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,KeyValues,The length of the statement  "	var results = All (orderBy: orderBy' columns: string.Format ("{0}' {1}"' this.PrimaryKeyField' this.DescriptorField)).ToList ().Cast<IDictionary<string' object>> (); " is 165.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,Count,The length of the statement  "	return Convert.ToInt32 (Scalar (string.Format (scalarQueryPattern' string.IsNullOrEmpty (tableName) ? this.TableName : tableName)' args)); " is 138.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,TryInvokeMember,The length of the statement  "		throw new InvalidOperationException ("Please use named arguments for this type of query - the column name' orderby' columns' etc"); " is 131.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,TryInvokeMember,The length of the statement  "			result = Scalar (string.Format ("SELECT {0}({1}) FROM {2} {3}"' aggregate' columns' this.TableName' whereClauseFragment)' whereArguments.ToArray ()); " is 149.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,TryInvokeMember,The length of the statement  "		var justOne = op.StartsWith ("First") || op.StartsWith ("Last") || op.StartsWith ("Get") || op.StartsWith ("Find") || op.StartsWith ("Single"); " is 143.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,TryInvokeMember,The length of the statement  "		result = justOne ? All (whereClauseFragment' orderByClauseFragment' 1' columns' whereArguments.ToArray ()).FirstOrDefault () : All (whereClauseFragment' orderByClauseFragment' 0' columns' whereArguments.ToArray ()); " is 215.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,CreateInsertCommand,The length of the statement  "		result.CommandText = string.Format (insertQueryPattern' TableName' string.Join ("' "' fieldNames.ToArray ())' string.Join ("' "' valueParameters.ToArray ())); " is 158.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,CreateUpdateCommand,The length of the statement  "	return CreateUpdateWhereCommand (expando' string.Format ("{0} = {1}"' this.PrimaryKeyField' this.PrefixParameterName ("0"))' key); " is 130.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,PerformInsert,The length of the statement  "		// simply batch the identity scalar query to the main insert query and execute them as one scalar query. This will both execute the statement and return the sequence value " is 171.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,ColumnExists,The length of the statement  "	return this.Schema.Any (c => string.Compare (this.GetColumnName (c)' columnName' StringComparison.InvariantCultureIgnoreCase) == 0); " is 132.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildPagedResult,The length of the statement  "	var queryPair = this.BuildPagingQueryPair (sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage); " is 125.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,GetColumn,The length of the statement  "	return this.Schema.FirstOrDefault (c => string.Compare (this.GetColumnName (c)' columnName' StringComparison.InvariantCultureIgnoreCase) == 0); " is 143.
Long Statement,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,BuildCommands,The length of the statement  "		commands.Add (HasPrimaryKey (item) ? CreateUpdateCommand (item.ToExpando ()' GetPrimaryKey (item)) : CreateInsertCommand (item.ToExpando ())); " is 142.
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: if (value == null) {  	p.Value = DBNull.Value;  } else {  	if (value is Guid) {  		p.Value = value.ToString ();  		p.DbType = DbType.String;  		p.Size = 36;  	} else if (value is ExpandoObject) {  		var d = (IDictionary<string' object>)value;  		p.Value = d.Values.FirstOrDefault ();  	} else {  		p.Value = value;  	}  	var valueAsString = value as string;  	if (valueAsString != null) {  		p.Size = valueAsString.Length > 4000 ? -1 : 4000;  	}  }  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: if (value == null) {  	p.Value = DBNull.Value;  } else {  	if (value is Guid) {  		p.Value = value.ToString ();  		p.DbType = DbType.String;  		p.Size = 36;  	} else if (value is ExpandoObject) {  		var d = (IDictionary<string' object>)value;  		p.Value = d.Values.FirstOrDefault ();  	} else {  		p.Value = value;  	}  	var valueAsString = value as string;  	if (valueAsString != null) {  		p.Size = valueAsString.Length > 4000 ? -1 : 4000;  	}  }  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: if (value == null) {  	p.Value = DBNull.Value;  } else {  	if (value is Guid) {  		p.Value = value.ToString ();  		p.DbType = DbType.String;  		p.Size = 36;  	} else if (value is ExpandoObject) {  		var d = (IDictionary<string' object>)value;  		p.Value = d.Values.FirstOrDefault ();  	} else {  		p.Value = value;  	}  	var valueAsString = value as string;  	if (valueAsString != null) {  		p.Size = valueAsString.Length > 4000 ? -1 : 4000;  	}  }  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: if (value is Guid) {  	p.Value = value.ToString ();  	p.DbType = DbType.String;  	p.Size = 36;  } else if (value is ExpandoObject) {  	var d = (IDictionary<string' object>)value;  	p.Value = d.Values.FirstOrDefault ();  } else {  	p.Value = value;  }  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: p.Size = 36;  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: if (valueAsString != null) {  	p.Size = valueAsString.Length > 4000 ? -1 : 4000;  }  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: if (valueAsString != null) {  	p.Size = valueAsString.Length > 4000 ? -1 : 4000;  }  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: p.Size = valueAsString.Length > 4000 ? -1 : 4000;  
Magic Number,Massive,ObjectExtensions,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,AddParam,The following statement contains a magic number: p.Size = valueAsString.Length > 4000 ? -1 : 4000;  
Magic Number,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,ProcessTableName,The following statement contains a magic number: if (fragments.Length == 1) {  	this.TableNameWithoutSchema = fragments [0];  } else {  	this.SchemaName = fragments [fragments.Length - 2];  	this.TableNameWithoutSchema = fragments [fragments.Length - 1];  }  
Magic Number,Massive,DynamicModel,F:\newReposMay17\FransBouma_massive\src\Massive.Oracle.cs,ProcessTableName,The following statement contains a magic number: this.SchemaName = fragments [fragments.Length - 2];  
