Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,AllAsync,The method has 5 parameters. Parameters: where' orderBy' limit' columns' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,AllAsync,The method has 6 parameters. Parameters: cancellationToken' where' orderBy' limit' columns' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PagedAsync,The method has 6 parameters. Parameters: where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PagedAsync,The method has 7 parameters. Parameters: cancellationToken' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PagedAsync,The method has 8 parameters. Parameters: sql' primaryKey' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PagedAsync,The method has 9 parameters. Parameters: cancellationToken' sql' primaryKey' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagedResultAsync,The method has 9 parameters. Parameters: cancellationToken' sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,DynamicModel,The method has 6 parameters. Parameters: connectionStringName' tableName' primaryKeyField' descriptorField' primaryKeyFieldSequence' connectionStringProvider
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,All,The method has 5 parameters. Parameters: where' orderBy' limit' columns' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,Paged,The method has 6 parameters. Parameters: where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,Paged,The method has 8 parameters. Parameters: sql' primaryKey' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagedResult,The method has 8 parameters. Parameters: sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagingQueryPair,The method has 7 parameters. Parameters: sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage
Long Identifier,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,,The length of the parameter _sequenceValueCallsBeforeMainInsert is 35.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,AllAsync,The length of the statement  "			return QueryAsync(string.Format(BuildSelectQueryPattern(where' orderBy' limit)' columns' TableName)' cancellationToken' args); " is 126.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PagedAsync,The length of the statement  "			return BuildPagedResultAsync(cancellationToken' whereClause: where' orderByClause: orderBy' columns: columns' pageSize: pageSize' currentPage: currentPage' args: args); " is 168.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,SingleAsync,The length of the statement  "			var singleValueSet = await AllAsync(cancellationToken' this.GetPkComparisonPredicateQueryFragment()' limit: 1' columns: columns' args: new[] { key }).ConfigureAwait(false); " is 172.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PerformInsertAsync,The length of the statement  "				((IDictionary<string' object>)toInsert)[this.PrimaryKeyField] = Convert.ToInt32(await sequenceCmd.ExecuteScalarAsync(cancellationToken).ConfigureAwait(false)); " is 159.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PerformInsertAsync,The length of the statement  "				// simply batch the identity scalar query to the main insert query and execute them as one scalar query. This will both execute the statement and  " is 145.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PerformInsertAsync,The length of the statement  "				((IDictionary<string' object>)toInsert)[this.PrimaryKeyField] = Convert.ToInt32(await cmd.ExecuteScalarAsync(cancellationToken).ConfigureAwait(false)); " is 151.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,CountAsync,The length of the statement  "			var toReturn = await ScalarAsync(string.Format(scalarQueryPattern' string.IsNullOrEmpty(tableName) ? this.TableName : tableName)' cancellationToken' args).ConfigureAwait(false); " is 177.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PerformSaveAsync,The length of the statement  "								result += await ExecuteDbCommandAsync(CreateUpdateCommand(oAsExpando' GetPrimaryKey(o))' connectionToUse' transactionToUse' cancellationToken).ConfigureAwait(false); " is 165.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagedResultAsync,The length of the statement  "			var queryPair = this.BuildPagingQueryPair(sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage); " is 124.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagedResultAsync,The length of the statement  "			// first create the tasks' which will make the queries run immediately but also return immediately. As both queries don't have a correlation' this can speed up " is 159.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagedResultAsync,The length of the statement  "			var queryTask = QueryAsync(string.Format(queryPair.MainQuery' columns' TableName)' cancellationToken' args).ConfigureAwait(false); " is 130.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,Paged,The length of the statement  "			return BuildPagedResult(whereClause: where' orderByClause: orderBy' columns: columns' pageSize: pageSize' currentPage: currentPage' args: args); " is 144.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,Single,The length of the statement  "			return All(this.GetPkComparisonPredicateQueryFragment()' limit: 1' columns: columns' args: new[] { key }).FirstOrDefault(); " is 123.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,KeyValues,The length of the statement  "				throw new InvalidOperationException("There's no DescriptorField set - do this in your constructor to describe the text value you want to see"); " is 143.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,KeyValues,The length of the statement  "			var results = All(orderBy: orderBy' columns: string.Format("{0}' {1}"' this.PrimaryKeyField' this.DescriptorField)).ToList().Cast<IDictionary<string' object>>(); " is 161.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,Count,The length of the statement  "			return Convert.ToInt32(Scalar(string.Format(scalarQueryPattern' string.IsNullOrEmpty(tableName) ? this.TableName : tableName)' args)); " is 134.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,TryInvokeMember,The length of the statement  "				throw new InvalidOperationException("Please use named arguments for this type of query - the column name' orderby' columns' etc"); " is 130.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,TryInvokeMember,The length of the statement  "						result = Scalar(string.Format("SELECT {0}({1}) FROM {2} {3}"' aggregate' columns' this.TableName' whereClauseFragment)' whereArguments.ToArray()); " is 146.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,TryInvokeMember,The length of the statement  "					var justOne = op.StartsWith("First") || op.StartsWith("Last") || op.StartsWith("Get") || op.StartsWith("Find") || op.StartsWith("Single"); " is 138.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,TryInvokeMember,The length of the statement  "					result = justOne ? All(whereClauseFragment' orderByClauseFragment' 1' columns' whereArguments.ToArray()).FirstOrDefault() : All(whereClauseFragment' orderByClauseFragment' 0' columns' whereArguments.ToArray()); " is 210.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,CreateInsertCommand,The length of the statement  "				result.CommandText = string.Format(insertQueryPattern' TableName' string.Join("' "' fieldNames.ToArray())' string.Join("' "' valueParameters.ToArray())); " is 153.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,CreateUpdateCommand,The length of the statement  "			return CreateUpdateWhereCommand(expando' string.Format("{0} = {1}"' this.PrimaryKeyField' this.PrefixParameterName("0"))' key); " is 127.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,PerformInsert,The length of the statement  "				// simply batch the identity scalar query to the main insert query and execute them as one scalar query. This will both execute the statement and return the sequence value " is 171.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,ColumnExists,The length of the statement  "			return this.Schema.Any(c => string.Compare(this.GetColumnName(c)' columnName' StringComparison.InvariantCultureIgnoreCase) == 0); " is 129.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagedResult,The length of the statement  "			var queryPair = this.BuildPagingQueryPair(sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage); " is 124.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,GetColumn,The length of the statement  "			return this.Schema.FirstOrDefault(c => string.Compare(this.GetColumnName(c)' columnName' StringComparison.InvariantCultureIgnoreCase) == 0); " is 140.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildCommands,The length of the statement  "				commands.Add(HasPrimaryKey(item) ? CreateUpdateCommand(item.ToExpando()' GetPrimaryKey(item)) : CreateInsertCommand(item.ToExpando())); " is 135.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,GetSelectQueryPattern,The length of the statement  "			return string.Format("SELECT {{0}} FROM {{1}}{0}{1}{2}"' whereClause' orderByClause' limit > 0 ? " LIMIT " + limit : string.Empty); " is 131.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagingQueryPair,The length of the statement  "			var orderByClauseFragment = string.IsNullOrEmpty(orderByClause) ? string.Format(" ORDER BY {0}"' string.IsNullOrEmpty(primaryKeyField) ? PrimaryKeyField : primaryKeyField) " is 171.
Long Statement,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,BuildPagingQueryPair,The length of the statement  "			var coreQuery = string.Format(this.GetSelectQueryPattern(0' ReadifyWhereClause(whereClause)' orderByClauseFragment)' columns' string.IsNullOrEmpty(sql) ? this.TableName : sql); " is 176.
Magic Number,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,ProcessTableName,The following statement contains a magic number: if(fragments.Length == 1)  			{  				this.TableNameWithoutSchema = fragments[0];  			}  			else  			{  				this.SchemaName = fragments[fragments.Length - 2];  				this.TableNameWithoutSchema = fragments[fragments.Length - 1];  			}
Magic Number,Massive,ObjectExtensions,C:\repos\FransBouma_massive\src\Massive.Shared.cs,AddParam,The following statement contains a magic number: if(value == null)  			{  				p.Value = DBNull.Value;  			}  			else  			{  				var o = value as ExpandoObject;  				if(o == null)  				{  					p.Value = value;  					var s = value as string;  					if(s != null)  					{  						p.Size = s.Length > 4000 ? -1 : 4000;  					}  				}  				else  				{  					p.Value = ((IDictionary<string' object>)value).Values.FirstOrDefault();  				}  			}
Magic Number,Massive,ObjectExtensions,C:\repos\FransBouma_massive\src\Massive.Shared.cs,AddParam,The following statement contains a magic number: if(value == null)  			{  				p.Value = DBNull.Value;  			}  			else  			{  				var o = value as ExpandoObject;  				if(o == null)  				{  					p.Value = value;  					var s = value as string;  					if(s != null)  					{  						p.Size = s.Length > 4000 ? -1 : 4000;  					}  				}  				else  				{  					p.Value = ((IDictionary<string' object>)value).Values.FirstOrDefault();  				}  			}
Missing Default,Massive,DynamicModel,C:\repos\FransBouma_massive\src\Massive.Shared.Async.cs,GetDefaultValue,The following switch statement is missing a default case: switch(defaultValue.ToUpper())  			{  				case "CURRENT_TIME":  					result = DateTime.UtcNow.ToString("HH:mm:ss");  					break;  				case "CURRENT_DATE":  					result = DateTime.UtcNow.ToString("yyyy-MM-dd");  					break;  				case "CURRENT_TIMESTAMP":  					result = DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss");  					break;  			}
