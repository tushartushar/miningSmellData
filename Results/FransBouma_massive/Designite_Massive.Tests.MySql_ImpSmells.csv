Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,TryInvokeMember,Cyclomatic complexity of the method is 12
Long Parameter List,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,BuildPagingQueryPair,The method has 7 parameters. Parameters: sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage
Long Parameter List,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,DynamicModel,The method has 6 parameters. Parameters: connectionStringName' tableName' primaryKeyField' descriptorField' primaryKeyFieldSequence' connectionStringProvider
Long Parameter List,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,All,The method has 5 parameters. Parameters: where' orderBy' limit' columns' args
Long Parameter List,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,Paged,The method has 6 parameters. Parameters: where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,Paged,The method has 8 parameters. Parameters: sql' primaryKey' where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,BuildPagedResult,The method has 8 parameters. Parameters: sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage' args
Long Identifier,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,,The length of the parameter _sequenceValueCallsBeforeMainInsert is 35.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,GetIdentityRetrievalScalarStatement,The length of the statement  "			return string.IsNullOrEmpty(_primaryKeyFieldSequence) ? string.Empty : string.Format("SELECT {0} as newID"' _primaryKeyFieldSequence); " is 134.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,GetSelectQueryPattern,The length of the statement  "			return string.Format("SELECT {{0}} FROM {{1}}{0}{1}{2}"' whereClause' orderByClause' limit > 0 ? " LIMIT " + limit : string.Empty); " is 131.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,BuildPagingQueryPair,The length of the statement  "			var orderByClauseFragment = string.IsNullOrEmpty(orderByClause) ? string.Format(" ORDER BY {0}"' string.IsNullOrEmpty(primaryKeyField) ? PrimaryKeyField : primaryKeyField) " is 171.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,BuildPagingQueryPair,The length of the statement  "			var coreQuery = string.Format(this.GetSelectQueryPattern(0' ReadifyWhereClause(whereClause)' orderByClauseFragment)' columns' string.IsNullOrEmpty(sql) ? this.TableName : sql); " is 176.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,Paged,The length of the statement  "			return BuildPagedResult(whereClause: where' orderByClause: orderBy' columns: columns' pageSize: pageSize' currentPage: currentPage' args: args); " is 144.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,Single,The length of the statement  "			return All(this.GetPkComparisonPredicateQueryFragment()' limit: 1' columns: columns' args: new[] { key }).FirstOrDefault(); " is 123.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,KeyValues,The length of the statement  "				throw new InvalidOperationException("There's no DescriptorField set - do this in your constructor to describe the text value you want to see"); " is 143.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,KeyValues,The length of the statement  "			var results = All(orderBy: orderBy' columns: string.Format("{0}' {1}"' this.PrimaryKeyField' this.DescriptorField)).ToList().Cast<IDictionary<string' object>>(); " is 161.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,Count,The length of the statement  "			return Convert.ToInt32(Scalar(string.Format(scalarQueryPattern' string.IsNullOrEmpty(tableName) ? this.TableName : tableName)' args)); " is 134.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,TryInvokeMember,The length of the statement  "				throw new InvalidOperationException("Please use named arguments for this type of query - the column name' orderby' columns' etc"); " is 130.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,TryInvokeMember,The length of the statement  "						result = Scalar(string.Format("SELECT {0}({1}) FROM {2} {3}"' aggregate' columns' this.TableName' whereClauseFragment)' whereArguments.ToArray()); " is 146.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,TryInvokeMember,The length of the statement  "					var justOne = op.StartsWith("First") || op.StartsWith("Last") || op.StartsWith("Get") || op.StartsWith("Find") || op.StartsWith("Single"); " is 138.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,TryInvokeMember,The length of the statement  "					result = justOne ? All(whereClauseFragment' orderByClauseFragment' 1' columns' whereArguments.ToArray()).FirstOrDefault() : All(whereClauseFragment' orderByClauseFragment' 0' columns' whereArguments.ToArray()); " is 210.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,CreateInsertCommand,The length of the statement  "				result.CommandText = string.Format(insertQueryPattern' TableName' string.Join("' "' fieldNames.ToArray())' string.Join("' "' valueParameters.ToArray())); " is 153.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,CreateUpdateCommand,The length of the statement  "			return CreateUpdateWhereCommand(expando' string.Format("{0} = {1}"' this.PrimaryKeyField' this.PrefixParameterName("0"))' key); " is 127.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,PerformInsert,The length of the statement  "				// simply batch the identity scalar query to the main insert query and execute them as one scalar query. This will both execute the statement and return the sequence value " is 171.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,ColumnExists,The length of the statement  "			return this.Schema.Any(c => string.Compare(this.GetColumnName(c)' columnName' StringComparison.InvariantCultureIgnoreCase) == 0); " is 129.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,BuildPagedResult,The length of the statement  "			var queryPair = this.BuildPagingQueryPair(sql' primaryKeyField' whereClause' orderByClause' columns' pageSize' currentPage); " is 124.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,GetColumn,The length of the statement  "			return this.Schema.FirstOrDefault(c => string.Compare(this.GetColumnName(c)' columnName' StringComparison.InvariantCultureIgnoreCase) == 0); " is 140.
Long Statement,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,BuildCommands,The length of the statement  "				commands.Add(HasPrimaryKey(item) ? CreateUpdateCommand(item.ToExpando()' GetPrimaryKey(item)) : CreateInsertCommand(item.ToExpando())); " is 135.
Long Statement,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification,The length of the statement  "			var allRows = film.All(columns: "film_id as FILMID' description' language_id"' where: "WHERE rental_duration=@0"' args: 5).ToList(); " is 132.
Long Statement,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification_LimitSpecification,The length of the statement  "			var allRows = film.All(limit: 2' columns: "film_id as FILMID' description' language_id"' where: "WHERE rental_duration=@0"' args: 5).ToList(); " is 142.
Long Statement,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification_ColumnsSpecification,The length of the statement  "			var page2 = film.Paged(columns: "rental_duration' film_id"' orderBy: "rental_duration DESC"' currentPage: 2' pageSize: 30); " is 123.
Long Statement,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Insert_SingleRow,The length of the statement  "			var inserted = categories.Insert(new { CategoryName = "Cool stuff"' Description = "You know... cool stuff! Cool. n. stuff." }); " is 127.
Long Statement,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Update_SingleRow,The length of the statement  "			var inserted = categories.Insert(new { CategoryName = "Cool stuff"' Description = "You know... cool stuff! Cool. n. stuff." }); " is 127.
Long Statement,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Delete_MultiRow,The length of the statement  "			Assert.AreEqual(2' categories.Delete(where: "CategoryName=@0"' args: (string)insertedCategory1.CategoryName)' "Delete should affect 2 rows"); " is 141.
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,MaxOnFilteredSet,The following statement contains a magic number: Assert.AreEqual(988' result);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,MaxOnFilteredSet2,The following statement contains a magic number: var result = ((dynamic)film).Max(columns: "film_id"' rental_duration: 6);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,MaxOnFilteredSet2,The following statement contains a magic number: Assert.AreEqual(998' result);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,SchemaMetaDataRetrieval,The following statement contains a magic number: Assert.AreEqual(13' schema.Count());
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_NoParameters,The following statement contains a magic number: Assert.AreEqual(1000' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_NoParameters_Streaming,The following statement contains a magic number: Assert.AreEqual(13' ((IDictionary<string' object>)r).Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_NoParameters_Streaming,The following statement contains a magic number: Assert.AreEqual(1000' count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_LimitSpecification,The following statement contains a magic number: var allRows = film.All(limit: 10).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_LimitSpecification,The following statement contains a magic number: Assert.AreEqual(10' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_ColumnSpecification,The following statement contains a magic number: Assert.AreEqual(1000' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_ColumnSpecification,The following statement contains a magic number: Assert.AreEqual(3' firstRow.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_OrderBySpecification,The following statement contains a magic number: Assert.AreEqual(1000' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification,The following statement contains a magic number: var allRows = film.All(where: "WHERE rental_duration=@0"' args: 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification,The following statement contains a magic number: Assert.AreEqual(191' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_OrderBySpecification,The following statement contains a magic number: var allRows = film.All(orderBy: "film_id DESC"' where: "WHERE rental_duration=@0"' args: 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_OrderBySpecification,The following statement contains a magic number: Assert.AreEqual(191' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification,The following statement contains a magic number: var allRows = film.All(columns: "film_id as FILMID' description' language_id"' where: "WHERE rental_duration=@0"' args: 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification,The following statement contains a magic number: Assert.AreEqual(191' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification,The following statement contains a magic number: Assert.AreEqual(3' firstRow.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification_LimitSpecification,The following statement contains a magic number: var allRows = film.All(limit: 2' columns: "film_id as FILMID' description' language_id"' where: "WHERE rental_duration=@0"' args: 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification_LimitSpecification,The following statement contains a magic number: var allRows = film.All(limit: 2' columns: "film_id as FILMID' description' language_id"' where: "WHERE rental_duration=@0"' args: 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification_LimitSpecification,The following statement contains a magic number: Assert.AreEqual(2' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ColumnsSpecification_LimitSpecification,The following statement contains a magic number: Assert.AreEqual(3' firstRow.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ToDataTable,The following statement contains a magic number: var allRows = film.All(where: "WHERE rental_duration=@0"' args: 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ToDataTable,The following statement contains a magic number: Assert.AreEqual(191' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ToDataTable,The following statement contains a magic number: var allRowsAsDataTable = film.All(where: "WHERE rental_duration=@0"' args: 5).ToDataTable();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,All_WhereSpecification_ToDataTable,The following statement contains a magic number: Assert.AreEqual(5' allRowsAsDataTable.Rows[i]["rental_duration"]);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Find_AllColumns,The following statement contains a magic number: var singleInstance = film.Find(film_id: 43);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Find_AllColumns,The following statement contains a magic number: Assert.AreEqual(43' singleInstance.film_id);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Find_OneColumn,The following statement contains a magic number: var singleInstance = film.Find(film_id: 43' columns: "film_id");
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Find_OneColumn,The following statement contains a magic number: Assert.AreEqual(43' singleInstance.film_id);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Get_AllColumns,The following statement contains a magic number: var singleInstance = film.Get(film_id: 43);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Get_AllColumns,The following statement contains a magic number: Assert.AreEqual(43' singleInstance.film_id);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,First_AllColumns,The following statement contains a magic number: var singleInstance = film.First(film_id: 43);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,First_AllColumns,The following statement contains a magic number: Assert.AreEqual(43' singleInstance.film_id);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Single_AllColumns,The following statement contains a magic number: var singleInstance = film.Single(film_id: 43);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Single_AllColumns,The following statement contains a magic number: Assert.AreEqual(43' singleInstance.film_id);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Query_AllRows,The following statement contains a magic number: Assert.AreEqual(1000' allRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Query_Filter,The following statement contains a magic number: var filteredRows = film.Query("SELECT * FROM sakila.film WHERE rental_duration=@0"' 5).ToList();
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Query_Filter,The following statement contains a magic number: Assert.AreEqual(191' filteredRows.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_NoSpecification,The following statement contains a magic number: var page2 = film.Paged(currentPage: 2' pageSize: 30);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_NoSpecification,The following statement contains a magic number: var page2 = film.Paged(currentPage: 2' pageSize: 30);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_NoSpecification,The following statement contains a magic number: Assert.AreEqual(30' pageItems.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_NoSpecification,The following statement contains a magic number: Assert.AreEqual(1000' page2.TotalRecords);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification,The following statement contains a magic number: var page2 = film.Paged(orderBy: "rental_duration DESC"' currentPage: 2' pageSize: 30);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification,The following statement contains a magic number: var page2 = film.Paged(orderBy: "rental_duration DESC"' currentPage: 2' pageSize: 30);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification,The following statement contains a magic number: Assert.AreEqual(30' pageItems.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification,The following statement contains a magic number: Assert.AreEqual(1000' page2.TotalRecords);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification_ColumnsSpecification,The following statement contains a magic number: var page2 = film.Paged(columns: "rental_duration' film_id"' orderBy: "rental_duration DESC"' currentPage: 2' pageSize: 30);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification_ColumnsSpecification,The following statement contains a magic number: var page2 = film.Paged(columns: "rental_duration' film_id"' orderBy: "rental_duration DESC"' currentPage: 2' pageSize: 30);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification_ColumnsSpecification,The following statement contains a magic number: Assert.AreEqual(30' pageItems.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification_ColumnsSpecification,The following statement contains a magic number: Assert.AreEqual(1000' page2.TotalRecords);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Paged_OrderBySpecification_ColumnsSpecification,The following statement contains a magic number: Assert.AreEqual(2' firstRow.Count);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Count_NoSpecification,The following statement contains a magic number: Assert.AreEqual(1000' total);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Count_WhereSpecification,The following statement contains a magic number: var total = film.Count(where: "WHERE rental_duration=@0"' args: 5);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,Count_WhereSpecification,The following statement contains a magic number: Assert.AreEqual(191' total);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,IsValid_FilmIDCheck,The following statement contains a magic number: var toValidate = film.Find(film_id: 72);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,IsValid_FilmIDCheck,The following statement contains a magic number: toValidate = film.Find(film_id: 2);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,PrimaryKey_Read_Check,The following statement contains a magic number: var toValidate = film.Find(film_id: 45);
Magic Number,Massive.Tests.MySql,ReadTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\ReadTests.cs,PrimaryKey_Read_Check,The following statement contains a magic number: Assert.AreEqual(45' pkValue);
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Insert_MultipleRows,The following statement contains a magic number: Assert.AreEqual(2' categories.SaveAsNew(toInsert.ToArray()));
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Insert_MultipleRows,The following statement contains a magic number: Assert.AreEqual(2' inserted.Count);
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Update_MultipleRows,The following statement contains a magic number: var category = i % 2 == 0 ? insertedCategory1 : insertedCategory2;
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Update_MultipleRows,The following statement contains a magic number: i < 4
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Update_MultipleRows,The following statement contains a magic number: Assert.AreEqual(2' allCat1Products.Length);
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Update_MultipleRows,The following statement contains a magic number: Assert.AreEqual(2' products.Save(allCat1Products));
Magic Number,Massive.Tests.MySql,WriteTests,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\WriteTests.cs,Delete_MultiRow,The following statement contains a magic number: Assert.AreEqual(2' categories.Delete(where: "CategoryName=@0"' args: (string)insertedCategory1.CategoryName)' "Delete should affect 2 rows");
Magic Number,Massive.Tests.MySql.TableClasses,Film,D:\research\architectureSmells\repos\FransBouma_massive\tests\MySql\TableClasses\Film.cs,Validate,The following statement contains a magic number: item.rental_duration > 5
Missing Default,Massive,DynamicModel,D:\research\architectureSmells\repos\FransBouma_massive\src\Massive.MySql.cs,GetDefaultValue,The following switch statement is missing a default case: switch(defaultValue.ToUpper())  			{  				case "CURRENT_TIMESTAMP":  					result = DateTime.Now;  					break;  			}
