Implementation smell,Namespace,Class,File,Method,Description
Long Method,AssemblyBasedProfiller,ProgramArguments,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\ProgramArguments.cs,processArg,The method has 108 lines of code.
Complex Method,AssemblyBasedProfiller,InjectorExtensions,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,ToType,Cyclomatic complexity of the method is 8
Complex Method,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,Cyclomatic complexity of the method is 9
Complex Method,AssemblyBasedProfiller,ProgramArguments,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\ProgramArguments.cs,processArg,Cyclomatic complexity of the method is 81
Long Statement,AssemblyBasedProfiller,InjectorExtensions,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,ToType,The length of the statement  "	// Todo: FullName should be wrong for lots of classes (nested eg). Find a better solution' maybe via token' like cecil does? " is 124.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Check_HasModifiedMarker,The length of the statement  "	return Module.GetStaticConstructor ().DeclaringType.Fields.Any (f => f.Name == "IsProfilingAssembly" && f.IsStatic == false && f.FieldType.FullName == "System.Boolean"); " is 169.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_ModifiedMarker,The length of the statement  "	Module.GetStaticConstructor ().DeclaringType.Fields.Add (new FieldDefinition ("IsProfilingAssembly"' FieldAttributes.Public' Module.Import (typeof(bool)))); " is 156.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_RegisterMethods,The length of the statement  "	//var meth_tokenToMethodBase = Module.Import(new Func<RuntimeMethodHandle' System.Reflection.MethodBase>(System.Reflection.MethodBase.GetMethodFromHandle).Method); " is 163.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_RegisterMethods,The length of the statement  "	var meth_tokenToMethodBase = Module.Import (new Func<RuntimeMethodHandle' RuntimeTypeHandle' System.Reflection.MethodBase> (System.Reflection.MethodBase.GetMethodFromHandle).Method); " is 182.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_RegisterMethods,The length of the statement  "	var meth_addMethodToLibrary = Module.Import (new Action<Int32' System.Reflection.MethodBase> (ProfilerLib.MethodLibrary.Register).Method); " is 138.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_RegisterMethods,The length of the statement  "		ilGen.Create (OpCodes.Ldc_I4' meth.Item1)' ilGen.Create (OpCodes.Ldtoken' meth.Item2)' ilGen.Create (OpCodes.Ldtoken' meth.Item2.DeclaringType)' ilGen.Create (OpCodes.Call' meth_tokenToMethodBase)' ilGen.Create (OpCodes.Call' meth_addMethodToLibrary)); " is 252.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_AddProfileCalls,The length of the statement  "		modifier.DoActualWrapping (ilGen.Create (OpCodes.Ldc_I4' methodId)' ilGen.Create (OpCodes.Call' Method_ProfilerLeaveEx)); " is 121.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_AddProfileCalls,The length of the statement  "	ilGen.InsertBefore (method.Body.Instructions.First ()' ilGen.Create (OpCodes.Ldc_I4' methodId)' ilGen.Create (OpCodes.Call' Method_ProfilerEnter)); " is 147.
Long Statement,AssemblyBasedProfiller,Injector,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Injector.cs,Inject_SetupAutoSaving,The length of the statement  "	ilGen.InsertBefore (con.Body.Instructions.First ()' ilGen.Create (OpCodes.Ldc_I4' delay)' ilGen.Create (OpCodes.Ldstr' loc)' ilGen.Create (OpCodes.Call' Module.Import (new Action<int' string> (ProfilerLib.Profiler.SetAutoDataSaving).Method))); " is 243.
Long Statement,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The length of the statement  "		SaveEmbededResourceTo ("AssemblyBasedProfiller.Resources.System.Threading.dll"' System.IO.Path.Combine (dir' "System.Threading.dll")); " is 134.
Long Statement,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The length of the statement  "		SaveEmbededResourceTo ("AssemblyBasedProfiller.Resources.ProfilerLib.dll"' System.IO.Path.Combine (dir' "ProfilerLib.dll")); " is 124.
Long Statement,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,processMethods,The length of the statement  "	// Get a collection of all types. For its members we have to 1. do performance injection 2. add it to a local init-list or global-init. 3. Process local list " is 157.
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (!file.Exists) {  	Console.WriteLine ("Specified file does not exist: " + file.Exists);  	Console.WriteLine ();  	return 2;  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: return 2;  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (config.UndoProfilingByRestoringBackups) {  	if (injector.Check_HasModifiedMarker ()) {  		if (System.IO.File.Exists (injector.BackupFile)) {  			file.Delete ();  			System.IO.File.Move (injector.BackupFile' file.FullName);  			Console.WriteLine ("Backup restored: " + file.Name);  			return 0;  		}  		else {  			Console.WriteLine ("Assembly is modified but no backup exists. Skipping.");  			return 3;  		}  	}  	else {  		Console.WriteLine ("Assembly does not contain an modified marker. Skipping.");  		return 3;  	}  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (config.UndoProfilingByRestoringBackups) {  	if (injector.Check_HasModifiedMarker ()) {  		if (System.IO.File.Exists (injector.BackupFile)) {  			file.Delete ();  			System.IO.File.Move (injector.BackupFile' file.FullName);  			Console.WriteLine ("Backup restored: " + file.Name);  			return 0;  		}  		else {  			Console.WriteLine ("Assembly is modified but no backup exists. Skipping.");  			return 3;  		}  	}  	else {  		Console.WriteLine ("Assembly does not contain an modified marker. Skipping.");  		return 3;  	}  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (injector.Check_HasModifiedMarker ()) {  	if (System.IO.File.Exists (injector.BackupFile)) {  		file.Delete ();  		System.IO.File.Move (injector.BackupFile' file.FullName);  		Console.WriteLine ("Backup restored: " + file.Name);  		return 0;  	}  	else {  		Console.WriteLine ("Assembly is modified but no backup exists. Skipping.");  		return 3;  	}  }  else {  	Console.WriteLine ("Assembly does not contain an modified marker. Skipping.");  	return 3;  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (injector.Check_HasModifiedMarker ()) {  	if (System.IO.File.Exists (injector.BackupFile)) {  		file.Delete ();  		System.IO.File.Move (injector.BackupFile' file.FullName);  		Console.WriteLine ("Backup restored: " + file.Name);  		return 0;  	}  	else {  		Console.WriteLine ("Assembly is modified but no backup exists. Skipping.");  		return 3;  	}  }  else {  	Console.WriteLine ("Assembly does not contain an modified marker. Skipping.");  	return 3;  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (System.IO.File.Exists (injector.BackupFile)) {  	file.Delete ();  	System.IO.File.Move (injector.BackupFile' file.FullName);  	Console.WriteLine ("Backup restored: " + file.Name);  	return 0;  }  else {  	Console.WriteLine ("Assembly is modified but no backup exists. Skipping.");  	return 3;  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: return 3;  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: return 3;  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (injector.Check_HasModifiedMarker ()) {  	if (config.CheckAlreadyModified) {  		Console.WriteLine ("This assembly seems to already be modified for profiling. -nc can turn off this check.");  		return 3;  	}  }  else {  	injector.Inject_ModifiedMarker ();  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: if (config.CheckAlreadyModified) {  	Console.WriteLine ("This assembly seems to already be modified for profiling. -nc can turn off this check.");  	return 3;  }  
Magic Number,AssemblyBasedProfiller,Program,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\Program.cs,ProcessFile,The following statement contains a magic number: return 3;  
Magic Number,AssemblyBasedProfiller,ProgramArguments,C:\repos\Faark_AssemblyBasedProfiler\AssemblyBasedProfiler\ProgramArguments.cs,ProgramArguments,The following statement contains a magic number: AutoSaveEvery = 30;  
