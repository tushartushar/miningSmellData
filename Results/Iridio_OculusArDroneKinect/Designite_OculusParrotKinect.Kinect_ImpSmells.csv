Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,Cyclomatic complexity of the method is 11
Long Statement,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,GetKinectRecognizer,The length of the statement  "        if ("True".Equals(value' StringComparison.OrdinalIgnoreCase) && culture.Equals(recognizer.Culture.Name' StringComparison.OrdinalIgnoreCase)) " is 140.
Long Statement,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The length of the statement  "          Skeleton playerSkeleton = (from s in skeletonData where s.TrackingState == SkeletonTrackingState.Tracked select s).FirstOrDefault(); " is 132.
Long Statement,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The length of the statement  "            bool left = handLeft.Position.Y > hip.Position.Y && handLeft.Position.X < elbowLeft.Position.X && ((elbowLeft.Position.X - handLeft.Position.X) > -0.2); " is 152.
Long Statement,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The length of the statement  "            bool right = handRight.Position.Y > hip.Position.Y && handRight.Position.X > elbowRight.Position.X && ((handRight.Position.X - elbowRight.Position.X) > 0.2); " is 157.
Complex Conditional,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The conditional expression  "left && !forwardRight && !right && !backwardRight"  is complex.
Complex Conditional,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The conditional expression  "!left && !forwardLeft && right && !backwardLeft"  is complex.
Complex Conditional,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The conditional expression  "forwardLeft && forwardRight && !left && !right"  is complex.
Complex Conditional,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The conditional expression  "backwardRight && backwardLeft && !left && !right"  is complex.
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SpeechRecognized,The following statement contains a magic number: e.Result.Confidence >= 0.6f
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: sensor.SkeletonStream.Enable(new TransformSmoothParameters() { Smoothing = 0.5f' Correction = 0.5f' Prediction = 0.5f' JitterRadius = 0.05f' MaxDeviationRadius = 0.04f });
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: sensor.SkeletonStream.Enable(new TransformSmoothParameters() { Smoothing = 0.5f' Correction = 0.5f' Prediction = 0.5f' JitterRadius = 0.05f' MaxDeviationRadius = 0.04f });
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: sensor.SkeletonStream.Enable(new TransformSmoothParameters() { Smoothing = 0.5f' Correction = 0.5f' Prediction = 0.5f' JitterRadius = 0.05f' MaxDeviationRadius = 0.04f });
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: sensor.SkeletonStream.Enable(new TransformSmoothParameters() { Smoothing = 0.5f' Correction = 0.5f' Prediction = 0.5f' JitterRadius = 0.05f' MaxDeviationRadius = 0.04f });
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: sensor.SkeletonStream.Enable(new TransformSmoothParameters() { Smoothing = 0.5f' Correction = 0.5f' Prediction = 0.5f' JitterRadius = 0.05f' MaxDeviationRadius = 0.04f });
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: speechEngine.SetInputToAudioStream(sensor.AudioSource.Start()' new SpeechAudioFormatInfo(EncodingFormat.Pcm' 16000' 16' 1' 32000' 2' null));
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: speechEngine.SetInputToAudioStream(sensor.AudioSource.Start()' new SpeechAudioFormatInfo(EncodingFormat.Pcm' 16000' 16' 1' 32000' 2' null));
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: speechEngine.SetInputToAudioStream(sensor.AudioSource.Start()' new SpeechAudioFormatInfo(EncodingFormat.Pcm' 16000' 16' 1' 32000' 2' null));
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,KinectClient,The following statement contains a magic number: speechEngine.SetInputToAudioStream(sensor.AudioSource.Start()' new SpeechAudioFormatInfo(EncodingFormat.Pcm' 16000' 16' 1' 32000' 2' null));
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The following statement contains a magic number: bool left = handLeft.Position.Y > hip.Position.Y && handLeft.Position.X < elbowLeft.Position.X && ((elbowLeft.Position.X - handLeft.Position.X) > -0.2);
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The following statement contains a magic number: bool right = handRight.Position.Y > hip.Position.Y && handRight.Position.X > elbowRight.Position.X && ((handRight.Position.X - elbowRight.Position.X) > 0.2);
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The following statement contains a magic number: bool forwardLeft = handLeft.Position.Y > hip.Position.Y && spine.Position.Z - handLeft.Position.Z > 0.5;
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The following statement contains a magic number: bool forwardRight = handRight.Position.Y > hip.Position.Y && spine.Position.Z - handRight.Position.Z > 0.5;
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The following statement contains a magic number: bool backwardLeft = handLeft.Position.Y > hip.Position.Y && spine.Position.Z - handLeft.Position.Z < 0.2;
Magic Number,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SkeletonFrameReady,The following statement contains a magic number: bool backwardRight = handRight.Position.Y > hip.Position.Y && spine.Position.Z - handRight.Position.Z < 0.2;
Missing Default,OculusParrotKinect.Kinect,KinectClient,D:\research\architectureSmells\repos\Iridio_OculusArDroneKinect\OculusParrotKinect.Kinect\KinectClient.cs,SpeechRecognized,The following switch statement is missing a default case: switch (e.Result.Semantics.Value.ToString())          {            case VoiceCommands.TakeOff:              OnVoiceCommandRecognized(new VoiceCommandRecognizedEventArgs(VoiceCommandType.TakeOff));              break;            case VoiceCommands.Land:              OnVoiceCommandRecognized(new VoiceCommandRecognizedEventArgs(VoiceCommandType.Land));              break;            case VoiceCommands.Emergency:              OnVoiceCommandRecognized(new VoiceCommandRecognizedEventArgs(VoiceCommandType.Emergency));              break;            case VoiceCommands.ChangeCamera:              OnVoiceCommandRecognized(new VoiceCommandRecognizedEventArgs(VoiceCommandType.ChangeCamera));              break;            case VoiceCommands.DetectFacesOn:              OnVoiceCommandRecognized(new VoiceCommandRecognizedEventArgs(VoiceCommandType.DetectFacesOn));              break;            case VoiceCommands.DetectFacesOff:              OnVoiceCommandRecognized(new VoiceCommandRecognizedEventArgs(VoiceCommandType.DetectFacesOff));              break;          }
