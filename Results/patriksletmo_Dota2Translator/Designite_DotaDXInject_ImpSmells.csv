Implementation smell,Namespace,Class,File,Method,Description
Long Method,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The method has 119 lines of code.
Complex Method,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,Cyclomatic complexity of the method is 15
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,Hook,The length of the statement  "                    using (device = new Device(d3d' 0' DeviceType.NullReference' hWnd' CreateFlags.HardwareVertexProcessing' new PresentParameters() { EnableAutoDepthStencil = false' BackBufferWidth = 1' BackBufferHeight = 1' DeviceWindowHandle = hWnd })) " is 235.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,ResetHook,The length of the statement  "                // EasyHook has already repatched the original Reset so calling it here will not cause an endless recursion to this function " is 124.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                        using (SlimDX.Direct3D9.Font successFont = new SlimDX.Direct3D9.Font(device' new System.Drawing.Font("Times New Roman"' 80.0f / 1920f * width))) " is 144.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                            // Draw the font with an alpha value related to the time passed since the overlay was added. The font will be completely invisible when the time has passed. " is 156.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                            successFont.DrawString(null' "Overlay added!"' 50' 50' Color.FromArgb((int)((SuccessMessageTime - millisSinceAdd) / SuccessMessageTime * 255.0)' TextColor)); " is 157.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                        if (OverlayFont == null || !FontName.Equals(LastFontName) || LastMessagesShown != MessagesShown || AutoMessageHeight != LastAutoMessageHeight || MessageHeight != LastMessageHeight) " is 180.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                                float fadeDuration = (message.Time.AddSeconds(FadeWait + FadeDuration) - message.Time.AddSeconds(FadeWait)).Ticks / TimeSpan.TicksPerMillisecond; " is 145.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                                    OverlayFont.DrawString(null' message.WrappedMessage[j]' TextStartWidth + FontHeight / 2 + message.SenderWidth' stringY + 1' TextShadowColor); " is 141.
Long Statement,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The length of the statement  "                                OverlayFont.DrawString(null' message.WrappedMessage[j]' TextStartWidth - 1 + FontHeight / 2 + message.SenderWidth' stringY' drawColor); " is 135.
Complex Conditional,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The conditional expression  "OverlayFont == null || !FontName.Equals(LastFontName) || LastMessagesShown != MessagesShown || AutoMessageHeight != LastAutoMessageHeight || MessageHeight != LastMessageHeight"  is complex.
Empty Catch Block,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The method has an empty catch block.
Empty Catch Block,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The method has an empty catch block.
Empty Catch Block,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The method has an empty catch block.
Magic Number,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The following statement contains a magic number: switch (type)                          {                              // Message                              case 0:                                  String sender = (String)pendingEvent[1];                                  String message = (String)pendingEvent[2];                                    directXHook.Messages.Add(new DXHookD3D9.Message(sender' message));                                    break;                              // Hide / Show                              case 1:                                  Boolean hide = (Boolean)pendingEvent[1];                                    directXHook.Hide = hide;                                    break;                              // Setting change                              case 2:                                  String fieldName = (String)pendingEvent[1];                                    FieldInfo info = typeof(DXHookD3D9).GetField(fieldName);                                  info.SetValue(directXHook' pendingEvent[2]);                                    break;                          }
Magic Number,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The following statement contains a magic number: switch (type)                          {                              // Message                              case 0:                                  String sender = (String)pendingEvent[1];                                  String message = (String)pendingEvent[2];                                    directXHook.Messages.Add(new DXHookD3D9.Message(sender' message));                                    break;                              // Hide / Show                              case 1:                                  Boolean hide = (Boolean)pendingEvent[1];                                    directXHook.Hide = hide;                                    break;                              // Setting change                              case 2:                                  String fieldName = (String)pendingEvent[1];                                    FieldInfo info = typeof(DXHookD3D9).GetField(fieldName);                                  info.SetValue(directXHook' pendingEvent[2]);                                    break;                          }
Magic Number,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The following statement contains a magic number: switch (type)                          {                              // Message                              case 0:                                  String sender = (String)pendingEvent[1];                                  String message = (String)pendingEvent[2];                                    directXHook.Messages.Add(new DXHookD3D9.Message(sender' message));                                    break;                              // Hide / Show                              case 1:                                  Boolean hide = (Boolean)pendingEvent[1];                                    directXHook.Hide = hide;                                    break;                              // Setting change                              case 2:                                  String fieldName = (String)pendingEvent[1];                                    FieldInfo info = typeof(DXHookD3D9).GetField(fieldName);                                  info.SetValue(directXHook' pendingEvent[2]);                                    break;                          }
Magic Number,DotaDXInject,DXGI,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXGI.cs,CreateSwapChainDescription,The following statement contains a magic number: return new SlimDX.DXGI.SwapChainDescription              {                  BufferCount = 1'                  Flags = SlimDX.DXGI.SwapChainFlags.None'                  IsWindowed = true'                  ModeDescription = new SlimDX.DXGI.ModeDescription(100' 100' new Rational(60' 1)' SlimDX.DXGI.Format.R8G8B8A8_UNorm)'                  OutputHandle = windowHandle'                  SampleDescription = new SlimDX.DXGI.SampleDescription(1' 0)'                  SwapEffect = SlimDX.DXGI.SwapEffect.Discard'                  Usage = SlimDX.DXGI.Usage.RenderTargetOutput              };
Magic Number,DotaDXInject,DXGI,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXGI.cs,CreateSwapChainDescription,The following statement contains a magic number: return new SlimDX.DXGI.SwapChainDescription              {                  BufferCount = 1'                  Flags = SlimDX.DXGI.SwapChainFlags.None'                  IsWindowed = true'                  ModeDescription = new SlimDX.DXGI.ModeDescription(100' 100' new Rational(60' 1)' SlimDX.DXGI.Format.R8G8B8A8_UNorm)'                  OutputHandle = windowHandle'                  SampleDescription = new SlimDX.DXGI.SampleDescription(1' 0)'                  SwapEffect = SlimDX.DXGI.SwapEffect.Discard'                  Usage = SlimDX.DXGI.Usage.RenderTargetOutput              };
Magic Number,DotaDXInject,DXGI,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXGI.cs,CreateSwapChainDescription,The following statement contains a magic number: return new SlimDX.DXGI.SwapChainDescription              {                  BufferCount = 1'                  Flags = SlimDX.DXGI.SwapChainFlags.None'                  IsWindowed = true'                  ModeDescription = new SlimDX.DXGI.ModeDescription(100' 100' new Rational(60' 1)' SlimDX.DXGI.Format.R8G8B8A8_UNorm)'                  OutputHandle = windowHandle'                  SampleDescription = new SlimDX.DXGI.SampleDescription(1' 0)'                  SwapEffect = SlimDX.DXGI.SwapEffect.Discard'                  Usage = SlimDX.DXGI.Usage.RenderTargetOutput              };
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The following statement contains a magic number: successFont.DrawString(null' "Overlay added!"' 50' 50' Color.FromArgb((int)((SuccessMessageTime - millisSinceAdd) / SuccessMessageTime * 255.0)' TextColor));
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The following statement contains a magic number: successFont.DrawString(null' "Overlay added!"' 50' 50' Color.FromArgb((int)((SuccessMessageTime - millisSinceAdd) / SuccessMessageTime * 255.0)' TextColor));
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The following statement contains a magic number: successFont.DrawString(null' "Overlay added!"' 50' 50' Color.FromArgb((int)((SuccessMessageTime - millisSinceAdd) / SuccessMessageTime * 255.0)' TextColor));
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The following statement contains a magic number: drawColor = Color.FromArgb((int) ((1f - fadePercentage)*255)' drawColor);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The following statement contains a magic number: OverlayFont.DrawString(null' message.WrappedMessage[j]' TextStartWidth + FontHeight / 2 + message.SenderWidth' stringY + 1' TextShadowColor);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,EndSceneHook,The following statement contains a magic number: OverlayFont.DrawString(null' message.WrappedMessage[j]' TextStartWidth - 1 + FontHeight / 2 + message.SenderWidth' stringY' drawColor);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,LoadFont,The following statement contains a magic number: fontHeight = 12.0f * 6 / MessagesShown / 1080f * PreviousHeight;
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,LoadFont,The following statement contains a magic number: fontHeight = 12.0f * 6 / MessagesShown / 1080f * PreviousHeight;
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,LoadFont,The following statement contains a magic number: fontHeight = 12.0f * 6 / MessagesShown / 1080f * PreviousHeight;
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,LoadFont,The following statement contains a magic number: FontHeight = (int) (fontHeight * 1.6);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: AvailableTextWidth = (int)(515f / 1920f * width);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: AvailableTextWidth = (int)(515f / 1920f * width);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: TextStartHeight = (int)(640f / 1080f * height);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: TextStartHeight = (int)(640f / 1080f * height);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: TextEndHeight = (int)(775f / 1080f * height);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: TextEndHeight = (int)(775f / 1080f * height);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: TextStartWidth = (int)(29f / 1920f * width);
Magic Number,DotaDXInject,DXHookD3D9,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DirectX\DXHookD3D9.cs,CalculatePositions,The following statement contains a magic number: TextStartWidth = (int)(29f / 1920f * width);
Missing Default,DotaDXInject,DotaInjection,C:\research\architectureSmells\repos\patriksletmo_Dota2Translator\DotaDXInject\DotaInjection.cs,Run,The following switch statement is missing a default case: switch (type)                          {                              // Message                              case 0:                                  String sender = (String)pendingEvent[1];                                  String message = (String)pendingEvent[2];                                    directXHook.Messages.Add(new DXHookD3D9.Message(sender' message));                                    break;                              // Hide / Show                              case 1:                                  Boolean hide = (Boolean)pendingEvent[1];                                    directXHook.Hide = hide;                                    break;                              // Setting change                              case 2:                                  String fieldName = (String)pendingEvent[1];                                    FieldInfo info = typeof(DXHookD3D9).GetField(fieldName);                                  info.SetValue(directXHook' pendingEvent[2]);                                    break;                          }
