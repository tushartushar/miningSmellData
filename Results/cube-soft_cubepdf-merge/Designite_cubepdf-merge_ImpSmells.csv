Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,MainForm_Activated,Cyclomatic complexity of the method is 9
Complex Method,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,MergeButton_Click,Cyclomatic complexity of the method is 10
Complex Method,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,SplitButton_Click,Cyclomatic complexity of the method is 20
Complex Method,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,MainList_DragDrop,Cyclomatic complexity of the method is 8
Complex Method,CubePDF,Merger,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\Merger.cs,Run,Cyclomatic complexity of the method is 8
Long Parameter List,CubePDF,PasswordDialog,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\PasswordDialog.cs,ShowDialog,The method has 5 parameters.
Long Statement,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,MainForm_Activated,The length of the statement  "				var result = OriginalMessageBox_YesNo (Path.GetFileName (obj.Path) + "が存在しません。\nファイルリストから削除しますか？"' MessageBoxIcon.Error); " is 121.
Long Statement,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,MergeButton_Click,The length of the statement  "			var listdelete = OriginalMessageBox_YesNo (String.Format (Properties.Resources.MergeDone' mergePath.Count)' MessageBoxIcon.Information); " is 136.
Long Statement,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,SplitButton_Click,The length of the statement  "		var listdelete = OriginalMessageBox_YesNo (String.Format (Properties.Resources.SplitDone' success)' MessageBoxIcon.Information); " is 128.
Long Statement,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The length of the statement  "				OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error); " is 128.
Long Statement,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The length of the statement  "			OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error); " is 128.
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,MainList_DrawSubItem,The following statement contains a magic number: if (e.ColumnIndex == 1 || e.ColumnIndex == 2) {  	format.Alignment = StringAlignment.Far;  }  else {  	format.Alignment = StringAlignment.Near;  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: if (password == null) {  	try {  		var reader = new iTextSharp.text.pdf.PdfReader (filename);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		double size = Math.Round (reader.FileLength / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	// 例外を検出したとき、ファイルがパスワード管理されていたら解除を求める。  	catch (Exception) {  		if (Configure.IsProtected (filename)) {  			LoadSetting (filename);  		}  		else {  			OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  		}  	}  }  // パスワードが入力された場合  else {  	try {  		var configure = new Configure ();  		var detached = configure.DetachPassword (filename' password);  		var reader = new iTextSharp.text.pdf.PdfReader (detached);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		var fileinfo = new FileInfo (filename);  		double size = Math.Round (fileinfo.Length / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	catch (Exception) {  		OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  	}  	// 一時ファイルを消去  	finally {  		var configure = new Configure ();  		File.Delete (configure.DetachPassword (filename' password));  	}  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: if (password == null) {  	try {  		var reader = new iTextSharp.text.pdf.PdfReader (filename);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		double size = Math.Round (reader.FileLength / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	// 例外を検出したとき、ファイルがパスワード管理されていたら解除を求める。  	catch (Exception) {  		if (Configure.IsProtected (filename)) {  			LoadSetting (filename);  		}  		else {  			OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  		}  	}  }  // パスワードが入力された場合  else {  	try {  		var configure = new Configure ();  		var detached = configure.DetachPassword (filename' password);  		var reader = new iTextSharp.text.pdf.PdfReader (detached);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		var fileinfo = new FileInfo (filename);  		double size = Math.Round (fileinfo.Length / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	catch (Exception) {  		OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  	}  	// 一時ファイルを消去  	finally {  		var configure = new Configure ();  		File.Delete (configure.DetachPassword (filename' password));  	}  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: if (password == null) {  	try {  		var reader = new iTextSharp.text.pdf.PdfReader (filename);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		double size = Math.Round (reader.FileLength / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	// 例外を検出したとき、ファイルがパスワード管理されていたら解除を求める。  	catch (Exception) {  		if (Configure.IsProtected (filename)) {  			LoadSetting (filename);  		}  		else {  			OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  		}  	}  }  // パスワードが入力された場合  else {  	try {  		var configure = new Configure ();  		var detached = configure.DetachPassword (filename' password);  		var reader = new iTextSharp.text.pdf.PdfReader (detached);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		var fileinfo = new FileInfo (filename);  		double size = Math.Round (fileinfo.Length / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	catch (Exception) {  		OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  	}  	// 一時ファイルを消去  	finally {  		var configure = new Configure ();  		File.Delete (configure.DetachPassword (filename' password));  	}  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: if (password == null) {  	try {  		var reader = new iTextSharp.text.pdf.PdfReader (filename);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		double size = Math.Round (reader.FileLength / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	// 例外を検出したとき、ファイルがパスワード管理されていたら解除を求める。  	catch (Exception) {  		if (Configure.IsProtected (filename)) {  			LoadSetting (filename);  		}  		else {  			OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  		}  	}  }  // パスワードが入力された場合  else {  	try {  		var configure = new Configure ();  		var detached = configure.DetachPassword (filename' password);  		var reader = new iTextSharp.text.pdf.PdfReader (detached);  		var ListData = new ListViewItem ();  		double numberofpages = reader.NumberOfPages;  		var fileinfo = new FileInfo (filename);  		double size = Math.Round (fileinfo.Length / Math.Pow (2' 10)' 0);  		var property = new FileProperty ();  		ListData.Text = Path.GetFileName (filename);  		ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  		ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  		ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  		property.Path = filename;  		property.OwnerPassword = password;  		property.IgnoreExistence = false;  		ListData.Tag = property;  		MainList.Items.Add (ListData);  	}  	catch (Exception) {  		OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  	}  	// 一時ファイルを消去  	finally {  		var configure = new Configure ();  		File.Delete (configure.DetachPassword (filename' password));  	}  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: try {  	var reader = new iTextSharp.text.pdf.PdfReader (filename);  	var ListData = new ListViewItem ();  	double numberofpages = reader.NumberOfPages;  	double size = Math.Round (reader.FileLength / Math.Pow (2' 10)' 0);  	var property = new FileProperty ();  	ListData.Text = Path.GetFileName (filename);  	ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  	ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  	ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  	property.Path = filename;  	property.OwnerPassword = password;  	property.IgnoreExistence = false;  	ListData.Tag = property;  	MainList.Items.Add (ListData);  }  // 例外を検出したとき、ファイルがパスワード管理されていたら解除を求める。  catch (Exception) {  	if (Configure.IsProtected (filename)) {  		LoadSetting (filename);  	}  	else {  		OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  	}  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: try {  	var reader = new iTextSharp.text.pdf.PdfReader (filename);  	var ListData = new ListViewItem ();  	double numberofpages = reader.NumberOfPages;  	double size = Math.Round (reader.FileLength / Math.Pow (2' 10)' 0);  	var property = new FileProperty ();  	ListData.Text = Path.GetFileName (filename);  	ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  	ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  	ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  	property.Path = filename;  	property.OwnerPassword = password;  	property.IgnoreExistence = false;  	ListData.Tag = property;  	MainList.Items.Add (ListData);  }  // 例外を検出したとき、ファイルがパスワード管理されていたら解除を求める。  catch (Exception) {  	if (Configure.IsProtected (filename)) {  		LoadSetting (filename);  	}  	else {  		OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  	}  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: try {  	var configure = new Configure ();  	var detached = configure.DetachPassword (filename' password);  	var reader = new iTextSharp.text.pdf.PdfReader (detached);  	var ListData = new ListViewItem ();  	double numberofpages = reader.NumberOfPages;  	var fileinfo = new FileInfo (filename);  	double size = Math.Round (fileinfo.Length / Math.Pow (2' 10)' 0);  	var property = new FileProperty ();  	ListData.Text = Path.GetFileName (filename);  	ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  	ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  	ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  	property.Path = filename;  	property.OwnerPassword = password;  	property.IgnoreExistence = false;  	ListData.Tag = property;  	MainList.Items.Add (ListData);  }  catch (Exception) {  	OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  }  // 一時ファイルを消去  finally {  	var configure = new Configure ();  	File.Delete (configure.DetachPassword (filename' password));  }  
Magic Number,CubePDF,MainForm,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\MainForm.cs,AddItemToList,The following statement contains a magic number: try {  	var configure = new Configure ();  	var detached = configure.DetachPassword (filename' password);  	var reader = new iTextSharp.text.pdf.PdfReader (detached);  	var ListData = new ListViewItem ();  	double numberofpages = reader.NumberOfPages;  	var fileinfo = new FileInfo (filename);  	double size = Math.Round (fileinfo.Length / Math.Pow (2' 10)' 0);  	var property = new FileProperty ();  	ListData.Text = Path.GetFileName (filename);  	ListData.SubItems.Add (String.Format ("{0:#'0}"' numberofpages));  	ListData.SubItems.Add (String.Format ("{0:#'0} KB"' size));  	ListData.SubItems.Add (File.GetLastWriteTime (filename).ToString ());  	property.Path = filename;  	property.OwnerPassword = password;  	property.IgnoreExistence = false;  	ListData.Tag = property;  	MainList.Items.Add (ListData);  }  catch (Exception) {  	OriginalMessageBox_OK (String.Format (Properties.Resources.UnSupportedFile' Path.GetFileName (filename))' MessageBoxIcon.Error);  }  // 一時ファイルを消去  finally {  	var configure = new Configure ();  	File.Delete (configure.DetachPassword (filename' password));  }  
Magic Number,CubePDF,PasswordDialog,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\PasswordDialog.cs,ShowDialog,The following statement contains a magic number: control.ForeColor = Color.FromArgb (255' 0' 0);  
Magic Number,CubePDF,PasswordDialog,C:\repos\cube-soft_cubepdf-merge\cubepdf-merge\PasswordDialog.cs,ShowDialog,The following statement contains a magic number: control.ForeColor = Color.FromArgb (255' 0' 0);  
