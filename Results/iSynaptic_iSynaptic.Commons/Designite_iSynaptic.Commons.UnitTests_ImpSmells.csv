Implementation smell,Namespace,Class,File,Method,Description
Long Statement,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ReturnsNoValue_ProvidedThroughComputation,The length of the statement  "            object computation = Expression.Lambda(typeof(Func<>).MakeGenericType(ClosedMonadType)' Expression.Constant(computationValue)) " is 126.
Long Statement,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ReturnsValue_ProvidedThroughComputation,The length of the statement  "            object computation = Expression.Lambda(typeof(Func<>).MakeGenericType(ClosedMonadType)' Expression.Constant(computationValue)) " is 126.
Long Statement,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ReturnsValue_IfTypeIsUnit,The length of the statement  "            IMaybe maybe = FormatterServices.GetSafeUninitializedObject(MonadType.MakeGenericType(GetTypeArguments(typeof(Unit)))) as IMaybe; " is 129.
Long Statement,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,NoMethods_OnMonadType_ContainOptionalArguments,The length of the statement  "                    Outcome.FailIf(y.IsDefined(typeof(OptionalAttribute)' true)' String.Format("{0}.{1}.{2} is optional."' ClosedMonadType.Name' x.Method.Name' y.Name)))) " is 150.
Long Statement,iSynaptic.Commons,MonadicLawsTestFixture,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,GetTypeArguments,The length of the statement  "            return new[] { firstTypeArgument }.Concat(Enumerable.Repeat(typeof(Unit)' MonadType.GetGenericArguments().Length - 1)).ToArray(); " is 129.
Long Statement,iSynaptic.Commons,AssertMaybe,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Behavior,The length of the statement  "            EnsureBehavior(string.Format("{0} with no value"' expression)' Maybe<T>.NoValue' () => op(Maybe<T>.NoValue)' withNoValue); " is 122.
Long Statement,iSynaptic.Commons,AssertMaybe,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Behavior,The length of the statement  "            EnsureBehavior(string.Format("{0} with {1}"' expression' value != null ? value.ToString() : "{null}")' Maybe.Return(value)' () => op(value)' result); " is 149.
Long Statement,iSynaptic.Commons,AssertMaybe,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,EnsureBehavior,The length of the statement  "            if (expectedResult == AssertMaybeResult.SameValue && (!result.HasValue || !EqualityComparer<T>.Default.Equals((T)result.Value' value.Value))) " is 141.
Long Statement,iSynaptic.Commons,AssertMaybe,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Behavior,The length of the statement  "            EnsureBehavior(string.Format("{0} with no value"' expression)' Maybe<T>.NoValue' () => op(Maybe<T>.NoValue)' withNoValue); " is 122.
Long Statement,iSynaptic.Commons,AssertMaybe,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Behavior,The length of the statement  "            EnsureBehavior(string.Format("{0} with {1}"' expression' value != null ? value.ToString() : "{null}")' Maybe.Return(value)' () => op(value)' result); " is 149.
Long Statement,iSynaptic.Commons,AssertMaybe,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,EnsureBehavior,The length of the statement  "            if (expectedResult == AssertMaybeResult.SameValue && (!result.HasValue || !EqualityComparer<T>.Default.Equals((T)result.Value' value.Value))) " is 141.
Long Statement,iSynaptic.Commons,MethodSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MethodSpecificationBuilder.cs,HasGenericArguments,The length of the statement  "            return @this.Combine(m => Outcome.FailIf(m.GetGenericArguments().Length != count' String.Format("Did not have {0} generic argument(s)."' count))); " is 146.
Long Statement,iSynaptic.Commons,MethodSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MethodSpecificationBuilder.cs,HasParameters,The length of the statement  "            return @this.Combine(m => Outcome.FailIf(m.GetParameters().Length != count' String.Format("Did not have {0} parameter(s)."' count))); " is 133.
Long Statement,iSynaptic.Commons,MethodSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MethodSpecificationBuilder.cs,IsExtensionMethod,The length of the statement  "            return @this.Combine(m => Outcome.FailIf(!m.GetParameters().TryElementAt(0).Select(x => x.IsDefined(typeof(ExtensionAttribute)' true)).ValueOrDefault()' "Not an extension method.")); " is 182.
Long Statement,iSynaptic.Commons,MethodSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MethodSpecificationBuilder.cs,IsNotExtensionMethod,The length of the statement  "            return @this.Combine(m => Outcome.FailIf(m.GetParameters().TryElementAt(0).Select(x => x.IsDefined(typeof(ExtensionAttribute)' true)).ValueOrDefault()' "Should not be an extension method.")); " is 191.
Long Statement,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Inform_PropigatesFailureObservations,The length of the statement  "            Outcome<Observation> outcome = Outcome.Failure(new Observation { Code = 42' Message = "Bad stuff happened."' Type = ObservationType.Error }); " is 141.
Long Statement,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Inform_PropigatesSuccessObservations,The length of the statement  "            Outcome<Observation> outcome = Outcome.Success(new Observation { Code = 0' Message = "Greetings from Outcome!"' Type = ObservationType.Info }); " is 143.
Long Statement,iSynaptic.Commons,TypeArgumentSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\TypeArgumentSpecification.cs,CanBeReferenceType,The length of the statement  "            return @this.Combine(ta => Outcome.FailIf(ta.GenericParameterAttributes.Contains(GenericParameterAttributes.NotNullableValueTypeConstraint)' "Cannot be reference type.")); " is 171.
Long Statement,iSynaptic.Commons,TypeArgumentSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\TypeArgumentSpecification.cs,CanBeValueType,The length of the statement  "            return @this.Combine(ta => Outcome.FailIf(ta.GenericParameterAttributes.Contains(GenericParameterAttributes.ReferenceTypeConstraint)' "Cannot be value type.")); " is 160.
Long Statement,iSynaptic.Commons,TypeArgumentSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\TypeArgumentSpecification.cs,MustBeReferenceType,The length of the statement  "            return @this.Combine(ta => Outcome.FailIf(!ta.GenericParameterAttributes.Contains(GenericParameterAttributes.ReferenceTypeConstraint)' "Cannot be reference type.")); " is 165.
Long Statement,iSynaptic.Commons,TypeArgumentSpecificationBuilder,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\TypeArgumentSpecification.cs,MustBeValueType,The length of the statement  "            return @this.Combine(ta => Outcome.FailIf(!ta.GenericParameterAttributes.Contains(GenericParameterAttributes.NotNullableValueTypeConstraint)' "Cannot be value type.")); " is 168.
Long Statement,iSynaptic.Commons.Collections.Generic,LazySelectionDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazySelectionDictionaryTests.cs,ContainsKey_OnlyReturnsTrue_IfValueCanBeLoaded,The length of the statement  "            var dictionary = new LazySelectionDictionary<int' string>(x => x.ToMaybe().Where(y => y != 1).Select(y => y.ToString())); " is 121.
Long Statement,iSynaptic.Commons.Collections.Generic,LazySelectionDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazySelectionDictionaryTests.cs,TryGetValue_InvokesSelectionFunc,The length of the statement  "            var dictionary = new LazySelectionDictionary<int' string>(x => x.ToMaybe().Where(y => y % 2 == 0).Select(y => x.ToString())); " is 125.
Long Statement,iSynaptic.Commons.Data,AttributeExodataBindingSourceTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\AttributeExodataBindingSourceTests.cs,SourceReturnsNoBinding_GivenNoSubjectOrMember,The length of the statement  "            var bindings = source.GetBindingsFor(ExodataRequest.Create<object' object' object>(new Symbol()' Maybe.NoValue' Maybe.NoValue' null)); " is 134.
Long Statement,iSynaptic.Commons.Data,ExodataResolverFluentExodataResolutionRoot<TExodata;TContext>,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverExtensions.cs,Resolve,The length of the statement  "            return _Resolver.TryResolve(ExodataRequest.Create<TExodata' TContext' TSubject>(_Symbol' context' subject' member)).Value; " is 122.
Long Statement,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithNoBindings_ReturnsNoValue,The length of the statement  "            Maybe<int> value = resolver.TryResolve(ExodataRequest.Create<int' object' object>(symbol' Maybe<object>.NoValue' Maybe<object>.NoValue' null)); " is 143.
Long Statement,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithAmbiguousBindingSelection_ThrowsAmbiguousExodataBindingsException,The length of the statement  "            Maybe<int> result = resolver.TryResolve(ExodataRequest.Create<int' object' object>(symbol' Maybe<object>.NoValue' Maybe<object>.NoValue' null)); " is 144.
Long Statement,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithNonAmbiguousBindingSelection_YieldsValue,The length of the statement  "            Maybe<int> result = resolver.TryResolve(ExodataRequest.Create<int' object' object>(symbol' Maybe<object>.NoValue' Maybe<object>.NoValue' null)); " is 144.
Long Statement,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolver_UsesResolverFromIoc,The length of the statement  "            Ioc.SetDependencyResolver(new DependencyResolver(symbol => symbol.ToMaybe().OfType<IDependencySymbol>().Where(x => x.DependencyType == typeof(IExodataResolver)).Select(x => (object)exodataResolver))); " is 200.
Long Statement,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithSpecificInstanceAgainstMember_YieldsExodataSurrogateMetadata,The length of the statement  "            var value = resolver.TryResolve(CommonExodata.Description).For(BaseTestSubjectExodataSurrogate.Subject' x => x.FirstName); " is 122.
Long Statement,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithContext_YieldsContextualExodataSurrogateExodata,The length of the statement  "            Assert.AreEqual("Contextual Member Description"' resolver.TryResolve(CommonExodata.Description).Given<string>().For<TestSubject>(x => x.FirstName)); " is 148.
Long Statement,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithSpecificContext_YieldsSpecificContextualExodataSurrogateExodata,The length of the statement  "            Assert.AreEqual("Specific Contextual Member Description"' resolver.TryResolve(CommonExodata.Description).Given("Context").For<TestSubject>(x => x.FirstName)); " is 158.
Long Statement,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithThreeTypeParameter,The length of the statement  "            DynamicMethod method = new DynamicMethod(Guid.NewGuid().ToString()' typeof(int)' new Type[] { typeof(int)' typeof(int) }); " is 122.
Long Statement,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFourTypeParameter,The length of the statement  "            DynamicMethod method = new DynamicMethod(Guid.NewGuid().ToString()' typeof(int)' new Type[] { typeof(int)' typeof(int)' typeof(int) }); " is 135.
Long Statement,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFiveTypeParameter,The length of the statement  "            DynamicMethod method = new DynamicMethod(Guid.NewGuid().ToString()' typeof(int)' new Type[] { typeof(int)' typeof(int)' typeof(int)' typeof(int) }); " is 148.
Long Statement,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The length of the statement  "            Assert.IsTrue(zipped.SequenceEqual(new[] { 1' 1' 2' 2' 3' 3' 4 }.Select(x => x.ToMaybe()).Concat(new[] { Maybe<int>.NoValue }))); " is 129.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneDerivedClassWithIntPtrField,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<DerivedClassWithFuncField>.Clone(new DerivedClassWithFuncField())); " is 124.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneDerivedClassWithIntPtrField,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<DerivedClassWithFuncField>.ShallowClone(new DerivedClassWithFuncField())); " is 131.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneClassWithDelegateField,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<ClassWithDelegateField>.ShallowClone(new ClassWithDelegateField())); " is 125.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneDerivedClassWithDeletegateField,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<DerivedClassWithDelegateField>.Clone(new DerivedClassWithDelegateField())); " is 132.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneDerivedClassWithDeletegateField,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<DerivedClassWithDelegateField>.ShallowClone(new DerivedClassWithDelegateField())); " is 139.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneStructWithFuncField,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<StructWithFuncField?>.ShallowClone(new StructWithFuncField())); " is 120.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CannotCloneClassHierarchyWithIllegalFieldType,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Cloneable<ParentClassWithNonCloneableChild>.Clone(new ParentClassWithNonCloneableChild())); " is 138.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToWillOnAValueType,The length of the statement  "            var source = new CloneTestStructWithClonableClassField {TestClass = new CloneTestClass {FirstName = "John"' LastName = "Doe"}}; " is 127.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToMultidimentionalStructArray,The length of the statement  "            var source1 = new CloneTestStructWithClonableClassField { TestClass = new CloneTestClass { FirstName = "John"' LastName = "Doe" } }; " is 132.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToMultidimentionalStructArray,The length of the statement  "            var source2 = new CloneTestStructWithClonableClassField { TestClass = new CloneTestClass { FirstName = "Jane"' LastName = "Smith" } }; " is 134.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToJaggedStructArray,The length of the statement  "                new[] {new CloneTestStructWithClonableClassField { TestClass = new CloneTestClass { FirstName = "John"' LastName = "Doe" }}}' " is 125.
Long Statement,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToJaggedStructArray,The length of the statement  "                new[] {new CloneTestStructWithClonableClassField { TestClass = new CloneTestClass { FirstName = "Jane"' LastName = "Smith"}}} " is 125.
Long Statement,iSynaptic.Commons.Xml,DeclarativeXmlParserTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Xml\DeclarativeXmlParserTests.cs,AssertErrorCount,The length of the statement  "                Console.WriteLine("{0}) {1} ({2}' {3})"' error.Index' error.Value.Message' error.Value.Token.LineNumber' error.Value.Token.LinePosition); " is 137.
Long Statement,iSynaptic.Commons.Xml,TestParser,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Xml\DeclarativeXmlParserTests.cs,Library,The length of the statement  "                    b.Attribute<string>("location"' x => { if(x == "throw") throw new InvalidOperationException("Bad stuff here!"); library.Location = x; }); " is 137.
Magic Number,iSynaptic.Commons.AOP,ScopeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\AOP\ScopeTests.cs,UndefinedBoundsValues,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() =>              {                  using (StubScope scope = new StubScope((ScopeBounds)73' ScopeNesting.Prohibited))                  {                  }              });
Magic Number,iSynaptic.Commons.AOP,ScopeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\AOP\ScopeTests.cs,UndefinedNestingValues,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() =>              {                  using (StubScope scope = new StubScope(ScopeBounds.Thread' (ScopeNesting)73))                  {                  }              });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,SimpleArray,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,SimpleArray,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,SimpleArray,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,SimpleArray,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,SimpleArray,The following statement contains a magic number: Assert.IsTrue(idx.Index.SequenceEqual(new int[] { 3 }));
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,SimpleArray,The following statement contains a magic number: Assert.IsTrue(idx.Index.SequenceEqual(new int[] { 4 }));
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: var idx = new ArrayIndex(new int['] { { 1' 1 }' { 2' 2 }' { 3' 3 }' { 4' 4 }' { 5' 5 } });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,RankedArray,The following statement contains a magic number: Assert.Throws<IndexOutOfRangeException>(() => { idx.Increment(10); });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: idx.Increment(3);
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: Assert.IsTrue(idx.Index.SequenceEqual(new int[] { 3 }));
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: Assert.Throws<IndexOutOfRangeException>(() => { idx.Increment(5); });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,IncrementMultiple,The following statement contains a magic number: Assert.IsTrue(idx.Index.SequenceEqual(new int[] { 3 }));
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,Reset,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,Reset,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,Reset,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,Reset,The following statement contains a magic number: var idx = new ArrayIndex(new int[] { 1' 2' 3' 4' 5 });
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,Reset,The following statement contains a magic number: idx.Increment(3);
Magic Number,iSynaptic.Commons,ArrayIndexTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ArrayIndexTests.cs,Reset,The following statement contains a magic number: Assert.IsTrue(idx.Index.SequenceEqual(new int[] { 3 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesGetter,The following statement contains a magic number: var indexer = Indexer.ReadOnly<int' int>(x => x*2);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesGetter,The following statement contains a magic number: Assert.AreEqual(2' indexer[1]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesGetter,The following statement contains a magic number: Assert.AreEqual(4' indexer[2]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesGetter,The following statement contains a magic number: Assert.AreEqual(4' indexer[2]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesGetter,The following statement contains a magic number: Assert.AreEqual(6' indexer[3]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesGetter,The following statement contains a magic number: Assert.AreEqual(6' indexer[3]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadOnly(x => x' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadOnly(x => x' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadOnly(x => x' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadOnly(x => x' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new []{1'2'3'4'5}));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new []{1'2'3'4'5}));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new []{1'2'3'4'5}));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadOnly_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new []{1'2'3'4'5}));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesGetter,The following statement contains a magic number: var indexer = Indexer.ReadWrite<int' int>(x => x * 2' (i' v) => { });
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesGetter,The following statement contains a magic number: Assert.AreEqual(2' indexer[1]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesGetter,The following statement contains a magic number: Assert.AreEqual(4' indexer[2]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesGetter,The following statement contains a magic number: Assert.AreEqual(4' indexer[2]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesGetter,The following statement contains a magic number: Assert.AreEqual(6' indexer[3]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesGetter,The following statement contains a magic number: Assert.AreEqual(6' indexer[3]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesSetter,The following statement contains a magic number: indexer[2] = 4;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesSetter,The following statement contains a magic number: indexer[2] = 4;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesSetter,The following statement contains a magic number: Assert.AreEqual(8' result);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesSetter,The following statement contains a magic number: indexer[3] = 3;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesSetter,The following statement contains a magic number: indexer[3] = 3;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesSetter,The following statement contains a magic number: Assert.AreEqual(9' result);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadWrite(x => x' (i' v) => { }' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadWrite(x => x' (i' v) => { }' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadWrite(x => x' (i' v) => { }' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: var indexer = Indexer.ReadWrite(x => x' (i' v) => { }' () => new []{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,ReadWrite_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: var krw = new KeyedReaderWriter<int' int>(x => x * 2' (i' v) => { result = i * v; return true; }' null);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(2' indexer[1]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(4' indexer[2]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(4' indexer[2]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(6' indexer[3]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(6' indexer[3]);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: indexer[2] = 4;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: indexer[2] = 4;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(8' result);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: indexer[3] = 3;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: indexer[3] = 3;
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesReaderWriter,The following statement contains a magic number: Assert.AreEqual(9' result);
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: var krw = new KeyedReaderWriter<int' int>(x => x' (i' v) => true' () => new[]{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: var krw = new KeyedReaderWriter<int' int>(x => x' (i' v) => true' () => new[]{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: var krw = new KeyedReaderWriter<int' int>(x => x' (i' v) => true' () => new[]{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: var krw = new KeyedReaderWriter<int' int>(x => x' (i' v) => true' () => new[]{1'2'3'4'5});
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,IndexerTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IndexerTests.cs,FromKeyedReaderWriter_UsesKnownIndexes,The following statement contains a magic number: Assert.IsTrue(indexer.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons,KeyedReaderWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\KeyedReaderWriterTests.cs,Getter_ResultIsReturned,The following statement contains a magic number: var krw = new KeyedReaderWriter<object' object>(k => 42' (k' v) => false' null);
Magic Number,iSynaptic.Commons,KeyedReaderWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\KeyedReaderWriterTests.cs,Getter_ResultIsReturned,The following statement contains a magic number: Assert.IsTrue(42 == (int)result);
Magic Number,iSynaptic.Commons,KeyedReaderWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\KeyedReaderWriterTests.cs,Setter_KeyIsUsed,The following statement contains a magic number: krw.Set(42' null);
Magic Number,iSynaptic.Commons,KeyedReaderWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\KeyedReaderWriterTests.cs,Setter_KeyIsUsed,The following statement contains a magic number: Assert.IsTrue(42 == (int)result);
Magic Number,iSynaptic.Commons,KeyedReaderWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\KeyedReaderWriterTests.cs,Setter_ValueIsUsed,The following statement contains a magic number: krw.Set(null' 42);
Magic Number,iSynaptic.Commons,KeyedReaderWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\KeyedReaderWriterTests.cs,Setter_ValueIsUsed,The following statement contains a magic number: Assert.IsTrue(42 == (int)result);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1,The following statement contains a magic number: int secondExpected = 2;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_UsesCorrectArguments,The following statement contains a magic number: int expected = 3;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: int firstExpected = 1 + 2;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: int secondExpected = 2 + 4;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: int secondExpected = 2 + 4;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_UsesCorrectArguments,The following statement contains a magic number: int expected = 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: int firstExpected = 1 + 2 + 3;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: int firstExpected = 1 + 2 + 3;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: int secondExpected = 2 + 4 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: int secondExpected = 2 + 4 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: int secondExpected = 2 + 4 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_UsesCorrectArguments,The following statement contains a magic number: int expected = 10;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_UsesCorrectArguments,The following statement contains a magic number: int expected = 15;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_UsesCorrectArguments,The following statement contains a magic number: int expected = 21;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_PreventsConcurrentAccess,The following statement contains a magic number: Parallel.For(start' end' x => func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: int expected = 28;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,SynchronizeOfT1T2T3T4T5T6T7_UsesCorrectArguments,The following statement contains a magic number: Assert.AreEqual(expected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6 + 7;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6 + 7;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6 + 7;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6 + 7;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6 + 7;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int firstExpected = 1 + 2 + 3 + 4 + 5 + 6 + 7;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: int secondExpected = 2 + 4 + 6 + 8 + 10 + 12 + 14;
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(firstExpected' func(1' 2' 3' 4' 5' 6' 7));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(secondExpected' func(2' 4' 6' 8' 10' 12' 14));
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,MemoizeOfT1T2T3T4T5T6T7,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,Synchronize_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,Synchronize_PreventsConcurrentAccess,The following statement contains a magic number: int start = random.Next(10' 30);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,Synchronize_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,FuncExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\FuncExtensionsTests.generated.cs,Synchronize_PreventsConcurrentAccess,The following statement contains a magic number: int end = random.Next(50' 100);
Magic Number,iSynaptic.Commons,GuardTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\GuardTests.cs,MustBeDefined_CannotBeUsedWithNonEnumTypeArgument,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Guard.MustBeDefined<int>(5' "value"));
Magic Number,iSynaptic.Commons,CastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\CastTests.cs,Cast_ValueType_ReturnsCorrectly,The following statement contains a magic number: Assert.AreEqual(42' CastToInt(42));
Magic Number,iSynaptic.Commons,CastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\CastTests.cs,Cast_ValueType_ReturnsCorrectly,The following statement contains a magic number: Assert.AreEqual(42' CastToInt(42));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ImplementsEqualityOperator_WithLeftAndRightArgumentsAreMonadTypes,The following statement contains a magic number: Assert.IsNotNull(ClosedMonadType.GetMethodsWithParameters()                  .Where(x => x.Method.Name == "op_Equality")                  .Where(x => x.Parameters.Count == 2)                  .Where(x => x.Parameters[0].ParameterType == ClosedMonadType)                  .Single(x => x.Parameters[1].ParameterType == ClosedMonadType));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ImplementsInequalityOperator_WithLeftAndRightArgumentsAreMonadTypes,The following statement contains a magic number: Assert.IsNotNull(ClosedMonadType.GetMethodsWithParameters()                  .Where(x => x.Method.Name == "op_Inequality")                  .Where(x => x.Parameters.Count == 2)                  .Where(x => x.Parameters[0].ParameterType == ClosedMonadType)                  .Single(x => x.Parameters[1].ParameterType == ClosedMonadType));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ImplementsEqualityOperator_WithLeftAsMonadTypeAndRightAsValueType,The following statement contains a magic number: Assert.IsNotNull(ClosedMonadType.GetMethodsWithParameters()                  .Where(x => x.Method.Name == "op_Equality")                  .Where(x => x.Parameters.Count == 2)                  .Where(x => x.Parameters[0].ParameterType == ClosedMonadType)                  .Single(x => x.Parameters[1].ParameterType == ValueType));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ImplementsInequalityOperator_WithLeftAsMonadTypeAndRightAsValueType,The following statement contains a magic number: Assert.IsNotNull(ClosedMonadType.GetMethodsWithParameters()                  .Where(x => x.Method.Name == "op_Inequality")                  .Where(x => x.Parameters.Count == 2)                  .Where(x => x.Parameters[0].ParameterType == ClosedMonadType)                  .Single(x => x.Parameters[1].ParameterType == ValueType));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ImplementsEqualityOperator_WithLeftAsValueTypeAndRightAsMonadType,The following statement contains a magic number: Assert.IsNotNull(ClosedMonadType.GetMethodsWithParameters()                  .Where(x => x.Method.Name == "op_Equality")                  .Where(x => x.Parameters.Count == 2)                  .Where(x => x.Parameters[0].ParameterType == ValueType)                  .Single(x => x.Parameters[1].ParameterType == ClosedMonadType));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,ImplementsInequalityOperator_WithLeftAsValueTypeAndRightAsMonadType,The following statement contains a magic number: Assert.IsNotNull(ClosedMonadType.GetMethodsWithParameters()                  .Where(x => x.Method.Name == "op_Inequality")                  .Where(x => x.Parameters.Count == 2)                  .Where(x => x.Parameters[0].ParameterType == ValueType)                  .Single(x => x.Parameters[1].ParameterType == ClosedMonadType));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,If_WithBooleanAndThenMonadType,The following statement contains a magic number: var spec = MethodSpecificationBuilder                  .Named("If")                  .IsStatic()                  .IsPublic()                  .IsNotExtensionMethod()                  .IsOpenGeneric()                    .GenericArgument(ga => ga                      .Named("T")                      .AtIndex(0)                      .CanBeReferenceType()                      .CanBeValueType())                    .HasParameters(2)                  .Parameter((m' p) => p                      .Named("predicate")                      .AtIndex(0)                      .Type(t => t.IsEqualTo(typeof(bool))))                    .Parameter((m' p) => p                      .Named("then")                      .AtIndex(1)                      .Type(t => t.IsEqualTo(m.ReturnType)))                        .Returns((m' t) => t                      .IsEqualTo(MonadType.MakeGenericType(m.ReturnType.GetGenericArguments())));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,If_WithFuncOfBooleanAndThenMonadType,The following statement contains a magic number: var spec = MethodSpecificationBuilder                  .Named("If")                  .IsStatic()                  .IsPublic()                  .IsNotExtensionMethod()                  .IsOpenGeneric()                    .GenericArgument(ga => ga                      .Named("T")                      .AtIndex(0)                      .CanBeReferenceType()                      .CanBeValueType())                    .HasParameters(2)                  .Parameter((m' p) => p                      .Named("predicate")                      .AtIndex(0)                      .Type(t => t.IsEqualTo(typeof(Func<bool>))))                    .Parameter((m' p) => p                      .Named("then")                      .AtIndex(1)                      .Type(t => t.IsEqualTo(m.ReturnType)))                        .Returns((m' t) => t                      .IsEqualTo(MonadType.MakeGenericType(m.ReturnType.GetGenericArguments())));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,If_WithBooleanAndThenAndElseMonadType,The following statement contains a magic number: var spec = MethodSpecificationBuilder                  .Named("If")                  .IsStatic()                  .IsPublic()                  .IsNotExtensionMethod()                  .IsOpenGeneric()                    .GenericArgument(ga => ga                      .Named("T")                      .AtIndex(0)                      .CanBeReferenceType()                      .CanBeValueType())                    .HasParameters(3)                  .Parameter((m' p) => p                      .Named("predicate")                      .AtIndex(0)                      .Type(t => t.IsEqualTo(typeof(bool))))                    .Parameter((m' p) => p                      .Named("then")                      .AtIndex(1)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Parameter((m' p) => p                      .Named("else")                      .AtIndex(2)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Returns((m' t) => t                      .IsEqualTo(MonadType.MakeGenericType(m.ReturnType.GetGenericArguments())));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,If_WithBooleanAndThenAndElseMonadType,The following statement contains a magic number: var spec = MethodSpecificationBuilder                  .Named("If")                  .IsStatic()                  .IsPublic()                  .IsNotExtensionMethod()                  .IsOpenGeneric()                    .GenericArgument(ga => ga                      .Named("T")                      .AtIndex(0)                      .CanBeReferenceType()                      .CanBeValueType())                    .HasParameters(3)                  .Parameter((m' p) => p                      .Named("predicate")                      .AtIndex(0)                      .Type(t => t.IsEqualTo(typeof(bool))))                    .Parameter((m' p) => p                      .Named("then")                      .AtIndex(1)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Parameter((m' p) => p                      .Named("else")                      .AtIndex(2)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Returns((m' t) => t                      .IsEqualTo(MonadType.MakeGenericType(m.ReturnType.GetGenericArguments())));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,If_WithFuncOfBooleanAndThenAndElseMondadType,The following statement contains a magic number: var spec = MethodSpecificationBuilder                  .Named("If")                  .IsStatic()                  .IsPublic()                  .IsNotExtensionMethod()                  .IsOpenGeneric()                    .GenericArgument(ga => ga                      .Named("T")                      .AtIndex(0)                      .CanBeReferenceType()                      .CanBeValueType())                    .HasParameters(3)                  .Parameter((m' p) => p                      .Named("predicate")                      .AtIndex(0)                      .Type(t => t.IsEqualTo(typeof(Func<bool>))))                    .Parameter((m' p) => p                      .Named("then")                      .AtIndex(1)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Parameter((m' p) => p                      .Named("else")                      .AtIndex(2)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Returns((m' t) => t                      .IsEqualTo(MonadType.MakeGenericType(m.ReturnType.GetGenericArguments())));
Magic Number,iSynaptic.Commons,MaybeMonadContractTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeMonadContractTests.cs,If_WithFuncOfBooleanAndThenAndElseMondadType,The following statement contains a magic number: var spec = MethodSpecificationBuilder                  .Named("If")                  .IsStatic()                  .IsPublic()                  .IsNotExtensionMethod()                  .IsOpenGeneric()                    .GenericArgument(ga => ga                      .Named("T")                      .AtIndex(0)                      .CanBeReferenceType()                      .CanBeValueType())                    .HasParameters(3)                  .Parameter((m' p) => p                      .Named("predicate")                      .AtIndex(0)                      .Type(t => t.IsEqualTo(typeof(Func<bool>))))                    .Parameter((m' p) => p                      .Named("then")                      .AtIndex(1)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Parameter((m' p) => p                      .Named("else")                      .AtIndex(2)                      .Type(t => t.IsEqualTo(m.ReturnType)))                    .Returns((m' t) => t                      .IsEqualTo(MonadType.MakeGenericType(m.ReturnType.GetGenericArguments())));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: int value = (int) Maybe.Return(42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_WithTwoMaybesWithSameValue_ReturnsTrue,The following statement contains a magic number: var left = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_WithTwoMaybesWithSameValue_ReturnsTrue,The following statement contains a magic number: var right = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: object left = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: object right = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: Assert.IsTrue(left.Equals(7));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: Assert.IsFalse(left.Equals(42));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,GetHashCode_OnValue_ReturnsUnderlyingHashCode,The following statement contains a magic number: int val = 42;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,EvaluationOfMaybe_OnlyOccursOnce,The following statement contains a magic number: i < 10
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.Select(y => y)' AssertMaybeResult.SameValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.Select(y => 5)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.Select(y => 5)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.SelectMaybe(Maybe.Return)' AssertMaybeResult.SameValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.SelectMaybe(y => Maybe.Return(5))' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.SelectMaybe(y => Maybe.Return(5))' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ValueProperty_ThatImplicitlyThrowsException_BubblesUpException,The following statement contains a magic number: var results = 0.ToMaybe()                  .SelectMaybe(x => (7 / x).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,HasValueProperty_ThatImplicitlyThrowsException_BubblesUpException,The following statement contains a magic number: var results = 0.ToMaybe()                  .SelectMaybe(x => (7 / x).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_WhenExceptionOccurs_RemainingOperationsDoNotExecute,The following statement contains a magic number: var results = 0.ToMaybe()                  .SelectMaybe(x => (7 / x).ToMaybe())                  .SelectMaybe(x => (executed = true).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_OnNoValue_RemaningOperationsDoNotExecute,The following statement contains a magic number: var results = 0.ToMaybe()                   .SelectMaybe(x => (x + 7).ToMaybe())                   .SelectMaybe(x => Maybe<int>.NoValue)                   .SelectMaybe(x => (executed = true).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Return_ReturnsValueWrapedInMaybe,The following statement contains a magic number: AssertMaybe.Behavior(42' (Expression<Func<int' IMaybe>>)(x => Maybe.Return(x))' AssertMaybeResult.SameValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_ReturnsSelectedValueInMaybe,The following statement contains a magic number: AssertMaybe.Behavior(7' x => x.Select(y => y * 6)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_ReturnsSelectedValueInMaybe,The following statement contains a magic number: AssertMaybe.Behavior(7' x => x.Select(y => y * 6)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,OnException_ExecutesActionOnThrownException,The following statement contains a magic number: var value = 0.ToMaybe()                  .Select(x => 7 / x)                  .OnException(x => executed = true);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,OnException_OnThrownException_DoesNotExecuteHandlerAgainForExceptionCausedByHandler,The following statement contains a magic number: var value = 0.ToMaybe()                  .Select(x => 7 / x)                  .OnException(x => { count++; throw new NullReferenceException(); });
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ContinuesWithNewValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Or(42)                  .Value;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ContinuesWithNewValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_DoesNotSuppressExceptions,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() =>              {                  var x = Maybe.Throw<int>(new InvalidOperationException())                      .Or(42)                      .Value;              });
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNoValue,The following statement contains a magic number: var value = "Hello' World!"                  .ToMaybe()                  .SelectMaybe(x => Maybe.Throw<string>(new InvalidOperationException()))                  .Select(x => x.Length)                  .Where(x => x > 10)                  .Suppress();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNewValue,The following statement contains a magic number: var value = "Hello' World!"                  .ToMaybe()                  .SelectMaybe(x => Maybe.Throw<string>(new InvalidOperationException()))                  .Select(x => x.Length)                  .Where(x => x > 10)                  .Suppress(42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNewValue,The following statement contains a magic number: var value = "Hello' World!"                  .ToMaybe()                  .SelectMaybe(x => Maybe.Throw<string>(new InvalidOperationException()))                  .Select(x => x.Length)                  .Where(x => x > 10)                  .Suppress(42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNewValue,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,With_WhenHasValue_Executes,The following statement contains a magic number: Assert.AreEqual(5' checkValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Defer_DefersExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return 42; });
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Defer_DefersExecutionUntilEvaluated,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_DefersExecutionUntilEvaluated,The following statement contains a magic number: Assert.AreEqual(2' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Synchronize_PreventsMultipleEvaluation,The following statement contains a magic number: var value = Maybe.Defer(() => { count++; Thread.Sleep(250); return "42"; })                  .Synchronize();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Where_DefersExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return "42"; })                  .Where(x => x.Length == 2);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Unless_DefersExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return "42"; })                  .Unless(x => x.Length == 2);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ThrowOn_DefersExecutionUntilEvaluated,The following statement contains a magic number: Maybe<int> value = Maybe.Defer(() => { executed = true; return 42.ToMaybe(); })                  .ThrowOn(42' new InvalidOperationException());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ThrowOn_DefersExecutionUntilEvaluated,The following statement contains a magic number: Maybe<int> value = Maybe.Defer(() => { executed = true; return 42.ToMaybe(); })                  .ThrowOn(42' new InvalidOperationException());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Synchronize_DeferesExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return 42; })                  .Synchronize();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Synchronize_DeferesExecutionUntilEvaluated,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_OnException_ReturnsNoValue,The following statement contains a magic number: var value = 0                  .ToMaybe()                  .Select(x => 7 / x)                  .Suppress()                  .Run();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_DoesntSuppressIfPredicateReturnsFalse,The following statement contains a magic number: var value = 0                  .ToMaybe()                  .Select(x => 7 / x)                  .Suppress(x => false);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ReturnsFirstValueIfHasValue,The following statement contains a magic number: var value = Maybe.Return(1)                  .Or(Maybe.Return(42))                  .ValueOrDefault();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ReturnsSecondValueIfFirstDoesNotHaveValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Or(Maybe.Return(42))                  .ValueOrDefault();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ReturnsSecondValueIfFirstDoesNotHaveValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_ReturnsBothValueIfHasValue,The following statement contains a magic number: var value = Maybe.Return(1)                  .Join(Maybe.Return(42))                  .ValueOrDefault();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_ReturnsBothValueIfHasValue,The following statement contains a magic number: Assert.AreEqual(Tuple.Create(1' 42)' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_ReturnsNoValueIfFirstDoesNotHaveValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Join(Maybe.Return(42));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_DoesEvaluateSecondMaybeIfFirstDoesNotHaveValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Join(Maybe.Defer(() => { executed = true; return 42; }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,TrySelect_ReturnsValueIfSelectorReturnsTrue,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToNullable_WithValue_ReturnsValue,The following statement contains a magic number: var value = Maybe.Return(42)                  .ToNullable();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToNullable_WithValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToMaybe_WhenValueIsNotOfTypeT_ReturnsNoValue,The following statement contains a magic number: var result = 42.ToMaybe<string>();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: var value = Maybe.Return(42)                  .OnValue(x => started = 1)                  .Select(x =>                          {                              waitEvent.Wait();                              return x;                          })                  .OnValue(x => ended = 1);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: Assert.IsTrue(waitForStarted.Wait(TimeSpan.FromSeconds(0.5))' "Wait for started failed.");
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: Assert.IsTrue(waitForEnded.Wait(TimeSpan.FromSeconds(0.5))' "Wait for ended failed.");
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsNoValue_IfBoolIsFalseAndNoElseValueProvided,The following statement contains a magic number: var value = Maybe.If(false' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsNoValue_IfBoolIsFalseAndNoElseValueProvided,The following statement contains a magic number: value = Maybe.If(() => false' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: var value = Maybe.If(true' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: value = Maybe.If(() => true' 84.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: Assert.That(value == 84);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Maybe.If(false' 42.ToMaybe()' 7.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Maybe.If(false' 42.ToMaybe()' 7.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: Assert.That(value == 7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: value = Maybe.If(() => false' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: value = Maybe.If(() => false' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Finally_CallsActionUponSuccessfulEvaluation,The following statement contains a magic number: var value = disposable.ToMaybe()                  .Select(x => 42)                  .Finally(disposable.Dispose);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Finally_CallsActionUponSuccessfulEvaluation,The following statement contains a magic number: Assert.AreEqual(42' result);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_OnValue_YieldsSingleValueStream,The following statement contains a magic number: var enumerable = 42.ToMaybe()                  .ToEnumerable();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_OnValue_YieldsSingleValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 1' 7' 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 1' 7' 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithSomeNoValues_YieldsAvailableValueStream,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' Maybe<int>.NoValue' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithSomeNoValues_YieldsAvailableValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 1' 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithSomeExceptionValues_ThrowsException,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' Maybe.Throw<int>(new InvalidOperationException())' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Squash_WithValue_ReturnsValue,The following statement contains a magic number: IMaybe<IMaybe<int>> value = Maybe.Return<IMaybe<int>>(42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Squash_WithValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToMaybe()                          from y in 7.ToMaybe()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToMaybe()                          from y in 7.ToMaybe()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToMaybe()                          from y in 7.ToMaybe()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: int value = (int) Maybe.Return(42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_WithTwoMaybesWithSameValue_ReturnsTrue,The following statement contains a magic number: var left = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_WithTwoMaybesWithSameValue_ReturnsTrue,The following statement contains a magic number: var right = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: object left = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: object right = Maybe.Return(7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: Assert.IsTrue(left.Equals(7));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Equals_OnBoxedMaybe_BehavesCorrectly,The following statement contains a magic number: Assert.IsFalse(left.Equals(42));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,GetHashCode_OnValue_ReturnsUnderlyingHashCode,The following statement contains a magic number: int val = 42;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,EvaluationOfMaybe_OnlyOccursOnce,The following statement contains a magic number: i < 10
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.Select(y => y)' AssertMaybeResult.SameValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.Select(y => 5)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.Select(y => 5)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.SelectMaybe(Maybe.Return)' AssertMaybeResult.SameValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.SelectMaybe(y => Maybe.Return(5))' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_BehavesCorrectly,The following statement contains a magic number: AssertMaybe.Behavior(42' x => x.SelectMaybe(y => Maybe.Return(5))' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ValueProperty_ThatImplicitlyThrowsException_BubblesUpException,The following statement contains a magic number: var results = 0.ToMaybe()                  .SelectMaybe(x => (7 / x).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,HasValueProperty_ThatImplicitlyThrowsException_BubblesUpException,The following statement contains a magic number: var results = 0.ToMaybe()                  .SelectMaybe(x => (7 / x).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_WhenExceptionOccurs_RemainingOperationsDoNotExecute,The following statement contains a magic number: var results = 0.ToMaybe()                  .SelectMaybe(x => (7 / x).ToMaybe())                  .SelectMaybe(x => (executed = true).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,SelectMaybe_OnNoValue_RemaningOperationsDoNotExecute,The following statement contains a magic number: var results = 0.ToMaybe()                   .SelectMaybe(x => (x + 7).ToMaybe())                   .SelectMaybe(x => Maybe<int>.NoValue)                   .SelectMaybe(x => (executed = true).ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Return_ReturnsValueWrapedInMaybe,The following statement contains a magic number: AssertMaybe.Behavior(42' (Expression<Func<int' IMaybe>>)(x => Maybe.Return(x))' AssertMaybeResult.SameValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_ReturnsSelectedValueInMaybe,The following statement contains a magic number: AssertMaybe.Behavior(7' x => x.Select(y => y * 6)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_ReturnsSelectedValueInMaybe,The following statement contains a magic number: AssertMaybe.Behavior(7' x => x.Select(y => y * 6)' AssertMaybeResult.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,OnException_ExecutesActionOnThrownException,The following statement contains a magic number: var value = 0.ToMaybe()                  .Select(x => 7 / x)                  .OnException(x => executed = true);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,OnException_OnThrownException_DoesNotExecuteHandlerAgainForExceptionCausedByHandler,The following statement contains a magic number: var value = 0.ToMaybe()                  .Select(x => 7 / x)                  .OnException(x => { count++; throw new NullReferenceException(); });
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ContinuesWithNewValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Or(42)                  .Value;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ContinuesWithNewValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_DoesNotSuppressExceptions,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() =>              {                  var x = Maybe.Throw<int>(new InvalidOperationException())                      .Or(42)                      .Value;              });
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNoValue,The following statement contains a magic number: var value = "Hello' World!"                  .ToMaybe()                  .SelectMaybe(x => Maybe.Throw<string>(new InvalidOperationException()))                  .Select(x => x.Length)                  .Where(x => x > 10)                  .Suppress();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNewValue,The following statement contains a magic number: var value = "Hello' World!"                  .ToMaybe()                  .SelectMaybe(x => Maybe.Throw<string>(new InvalidOperationException()))                  .Select(x => x.Length)                  .Where(x => x > 10)                  .Suppress(42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNewValue,The following statement contains a magic number: var value = "Hello' World!"                  .ToMaybe()                  .SelectMaybe(x => Maybe.Throw<string>(new InvalidOperationException()))                  .Select(x => x.Length)                  .Where(x => x > 10)                  .Suppress(42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_ContinuesWithNewValue,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,With_WhenHasValue_Executes,The following statement contains a magic number: Assert.AreEqual(5' checkValue);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Defer_DefersExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return 42; });
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Defer_DefersExecutionUntilEvaluated,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Select_DefersExecutionUntilEvaluated,The following statement contains a magic number: Assert.AreEqual(2' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Synchronize_PreventsMultipleEvaluation,The following statement contains a magic number: var value = Maybe.Defer(() => { count++; Thread.Sleep(250); return "42"; })                  .Synchronize();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Where_DefersExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return "42"; })                  .Where(x => x.Length == 2);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Unless_DefersExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return "42"; })                  .Unless(x => x.Length == 2);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ThrowOn_DefersExecutionUntilEvaluated,The following statement contains a magic number: Maybe<int> value = Maybe.Defer(() => { executed = true; return 42.ToMaybe(); })                  .ThrowOn(42' new InvalidOperationException());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ThrowOn_DefersExecutionUntilEvaluated,The following statement contains a magic number: Maybe<int> value = Maybe.Defer(() => { executed = true; return 42.ToMaybe(); })                  .ThrowOn(42' new InvalidOperationException());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Synchronize_DeferesExecutionUntilEvaluated,The following statement contains a magic number: var value = Maybe.Defer(() => { executed = true; return 42; })                  .Synchronize();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Synchronize_DeferesExecutionUntilEvaluated,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_OnException_ReturnsNoValue,The following statement contains a magic number: var value = 0                  .ToMaybe()                  .Select(x => 7 / x)                  .Suppress()                  .Run();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Suppress_DoesntSuppressIfPredicateReturnsFalse,The following statement contains a magic number: var value = 0                  .ToMaybe()                  .Select(x => 7 / x)                  .Suppress(x => false);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ReturnsFirstValueIfHasValue,The following statement contains a magic number: var value = Maybe.Return(1)                  .Or(Maybe.Return(42))                  .ValueOrDefault();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ReturnsSecondValueIfFirstDoesNotHaveValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Or(Maybe.Return(42))                  .ValueOrDefault();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Or_ReturnsSecondValueIfFirstDoesNotHaveValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_ReturnsBothValueIfHasValue,The following statement contains a magic number: var value = Maybe.Return(1)                  .Join(Maybe.Return(42))                  .ValueOrDefault();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_ReturnsBothValueIfHasValue,The following statement contains a magic number: Assert.AreEqual(Tuple.Create(1' 42)' value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_ReturnsNoValueIfFirstDoesNotHaveValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Join(Maybe.Return(42));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Join_DoesEvaluateSecondMaybeIfFirstDoesNotHaveValue,The following statement contains a magic number: var value = Maybe<int>.NoValue                  .Join(Maybe.Defer(() => { executed = true; return 42; }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,TrySelect_ReturnsValueIfSelectorReturnsTrue,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToNullable_WithValue_ReturnsValue,The following statement contains a magic number: var value = Maybe.Return(42)                  .ToNullable();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToNullable_WithValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToMaybe_WhenValueIsNotOfTypeT_ReturnsNoValue,The following statement contains a magic number: var result = 42.ToMaybe<string>();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: var value = Maybe.Return(42)                  .OnValue(x => started = 1)                  .Select(x =>                          {                              waitEvent.Wait();                              return x;                          })                  .OnValue(x => ended = 1);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: Assert.IsTrue(waitForStarted.Wait(TimeSpan.FromSeconds(0.5))' "Wait for started failed.");
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: Assert.IsTrue(waitForEnded.Wait(TimeSpan.FromSeconds(0.5))' "Wait for ended failed.");
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,RunAsync_ReturnsImmediately,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsNoValue_IfBoolIsFalseAndNoElseValueProvided,The following statement contains a magic number: var value = Maybe.If(false' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsNoValue_IfBoolIsFalseAndNoElseValueProvided,The following statement contains a magic number: value = Maybe.If(() => false' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: var value = Maybe.If(true' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: value = Maybe.If(() => true' 84.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: Assert.That(value == 84);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Maybe.If(false' 42.ToMaybe()' 7.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Maybe.If(false' 42.ToMaybe()' 7.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: Assert.That(value == 7);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: value = Maybe.If(() => false' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: value = Maybe.If(() => false' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Finally_CallsActionUponSuccessfulEvaluation,The following statement contains a magic number: var value = disposable.ToMaybe()                  .Select(x => 42)                  .Finally(disposable.Dispose);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Finally_CallsActionUponSuccessfulEvaluation,The following statement contains a magic number: Assert.AreEqual(42' result);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_OnValue_YieldsSingleValueStream,The following statement contains a magic number: var enumerable = 42.ToMaybe()                  .ToEnumerable();
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_OnValue_YieldsSingleValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' 7.ToMaybe()' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 1' 7' 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithMultipleValues_YieldsValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 1' 7' 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithSomeNoValues_YieldsAvailableValueStream,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' Maybe<int>.NoValue' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithSomeNoValues_YieldsAvailableValueStream,The following statement contains a magic number: Assert.IsTrue(enumerable.SequenceEqual(new[] { 1' 42 }));
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ToEnumerable_WithSomeExceptionValues_ThrowsException,The following statement contains a magic number: var enumerable = Maybe.ToEnumerable(1.ToMaybe()' Maybe.Throw<int>(new InvalidOperationException())' 42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Squash_WithValue_ReturnsValue,The following statement contains a magic number: IMaybe<IMaybe<int>> value = Maybe.Return<IMaybe<int>>(42.ToMaybe());
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,Squash_WithValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToMaybe()                          from y in 7.ToMaybe()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToMaybe()                          from y in 7.ToMaybe()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToMaybe()                          from y in 7.ToMaybe()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,MaybeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\MaybeTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Inform_PropigatesFailureObservations,The following statement contains a magic number: Outcome<Observation> outcome = Outcome.Failure(new Observation { Code = 42' Message = "Bad stuff happened."' Type = ObservationType.Error });
Magic Number,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Notice_KeepsDesireableOutcomes,The following statement contains a magic number: Assert.AreEqual(2' failures.Count);
Magic Number,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Ignore_FiltersOutDesireableOutcomes,The following statement contains a magic number: Assert.AreEqual(3' failures.Count);
Magic Number,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Combine_CanBeUsedWithAggregate,The following statement contains a magic number: Assert.AreEqual(5' outcome.Observations.Count());
Magic Number,iSynaptic.Commons,OutcomeTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\OutcomeTests.cs,Let_DefinesNewVariableInExpression,The following statement contains a magic number: Assert.AreEqual(6' outcome.Observations.Count());
Magic Number,iSynaptic.Commons,EnumExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\EnumExtensionsTests.cs,Contains,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => f.Contains(5));
Magic Number,iSynaptic.Commons,EnumExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\EnumExtensionsTests.cs,ContainsAny,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => f.ContainsAny(5));
Magic Number,iSynaptic.Commons,EnumExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\EnumExtensionsTests.cs,ContainsAll,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => f.ContainsAll(5));
Magic Number,iSynaptic.Commons,IocTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IocTests.cs,Resolve_WithNoParameters_ReturnsExpectedValue,The following statement contains a magic number: var resolver = new DependencyResolver(x => x                  .ToMaybe()                  .OfType<IDependencySymbol>()                  .Where(s => s.DependencyType == typeof(int))                  .Select(s => 42).OfType<object>());
Magic Number,iSynaptic.Commons,IocTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IocTests.cs,Resolve_WithNoParameters_ReturnsExpectedValue,The following statement contains a magic number: Assert.AreEqual(42' Ioc.Resolve<int>());
Magic Number,iSynaptic.Commons,IocTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IocTests.cs,Resolve_WithNoParameters_ReturnsExpectedValue,The following statement contains a magic number: Assert.AreEqual(42' Ioc.Resolve(typeof(int)));
Magic Number,iSynaptic.Commons,IocTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IocTests.cs,Resolve_WithKeyAndRequestingType_ReturnsExpectedValue,The following statement contains a magic number: var resolver = new DependencyResolver(x => x                  .ToMaybe()                  .OfType<IDependencySymbol>()                  .Where(s => s.DependencyType == typeof(int) && s.Name == "ultimateAnswerTimesThree")                  .Select(s => 126).OfType<object>());
Magic Number,iSynaptic.Commons,IocTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IocTests.cs,Resolve_WithKeyAndRequestingType_ReturnsExpectedValue,The following statement contains a magic number: Assert.AreEqual(126' Ioc.Resolve<int>("ultimateAnswerTimesThree"));
Magic Number,iSynaptic.Commons,IocTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\IocTests.cs,Resolve_WithKeyAndRequestingType_ReturnsExpectedValue,The following statement contains a magic number: Assert.AreEqual(126' Ioc.Resolve(typeof(int)' "ultimateAnswerTimesThree"));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: int value = (int)Result.Return(42);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_WithTwoResultsWithSameValue_ReturnsTrue,The following statement contains a magic number: var left = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_WithTwoResultsWithSameValue_ReturnsTrue,The following statement contains a magic number: var right = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: object left = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: object right = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: Assert.IsTrue(left.Equals(7));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: Assert.IsFalse(left.Equals(42));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,GetHashCode_OnValue_IncludesValuesHashCode,The following statement contains a magic number: int val = 42;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,EvaluationOfResult_OnlyOccursOnce,The following statement contains a magic number: i < 10
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ImplicitConversionOf_ResultTAndUnit_ToAnyOtherResultType,The following statement contains a magic number: Result<int' string> intStringResult = Result.Return(42);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ImplicitConversionOf_ResultTAndUnit_ToAnyOtherResultType,The following statement contains a magic number: Assert.AreEqual(42' intStringResult.Value);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ImplicitConversion_WhenObservationTypeIsUnit_DoesNotLooseFailures,The following statement contains a magic number: intStringResult = 42.ToResult().Fail();
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Inform,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Inform(x => x.ToString());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,InformMany,The following statement contains a magic number: var result = Result.Success(1' 2)                  .InformMany(x => Outcome.Success(x.ToString()' (x * 2).ToString()));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,InformMany,The following statement contains a magic number: var result = Result.Success(1' 2)                  .InformMany(x => Outcome.Success(x.ToString()' (x * 2).ToString()));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Ignore,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Ignore(x => x%2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Ignore,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Ignore(x => x%2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Notice,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Notice(x => x % 2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Notice,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Notice(x => x % 2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Notice,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[] { 2 }));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Combine(Outcome.Success(3' 4));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Combine(Outcome.Success(3' 4));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Combine(Outcome.Success(3' 4));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[]{1'2'3'4}));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[]{1'2'3'4}));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[]{1'2'3'4}));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: var value = Result.If(true' 42.ToResult());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Result.If(false' 42.ToResult()' 7.ToResult());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Result.If(false' 42.ToResult()' 7.ToResult());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: Assert.That(value == 7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToResult<int' Unit>()                          from y in 7.ToResult<int' Unit>()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToResult<int' Unit>()                          from y in 7.ToResult<int' Unit>()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToResult<int' Unit>()                          from y in 7.ToResult<int' Unit>()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: int value = (int)Result.Return(42);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ExplicitCast_OnValue_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_WithTwoResultsWithSameValue_ReturnsTrue,The following statement contains a magic number: var left = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_WithTwoResultsWithSameValue_ReturnsTrue,The following statement contains a magic number: var right = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: object left = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: object right = Result.Return(7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: Assert.IsTrue(left.Equals(7));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Equals_OnBoxedResult_BehavesCorrectly,The following statement contains a magic number: Assert.IsFalse(left.Equals(42));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,GetHashCode_OnValue_IncludesValuesHashCode,The following statement contains a magic number: int val = 42;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,EvaluationOfResult_OnlyOccursOnce,The following statement contains a magic number: i < 10
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ImplicitConversionOf_ResultTAndUnit_ToAnyOtherResultType,The following statement contains a magic number: Result<int' string> intStringResult = Result.Return(42);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ImplicitConversionOf_ResultTAndUnit_ToAnyOtherResultType,The following statement contains a magic number: Assert.AreEqual(42' intStringResult.Value);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ImplicitConversion_WhenObservationTypeIsUnit_DoesNotLooseFailures,The following statement contains a magic number: intStringResult = 42.ToResult().Fail();
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Inform,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Inform(x => x.ToString());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,InformMany,The following statement contains a magic number: var result = Result.Success(1' 2)                  .InformMany(x => Outcome.Success(x.ToString()' (x * 2).ToString()));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,InformMany,The following statement contains a magic number: var result = Result.Success(1' 2)                  .InformMany(x => Outcome.Success(x.ToString()' (x * 2).ToString()));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Ignore,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Ignore(x => x%2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Ignore,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Ignore(x => x%2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Notice,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Notice(x => x % 2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Notice,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Notice(x => x % 2 == 0);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Notice,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[] { 2 }));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Combine(Outcome.Success(3' 4));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Combine(Outcome.Success(3' 4));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: var result = Result.Success(1' 2)                  .Combine(Outcome.Success(3' 4));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[]{1'2'3'4}));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[]{1'2'3'4}));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,Combine,The following statement contains a magic number: Assert.IsTrue(result.Observations.SequenceEqual(new[]{1'2'3'4}));
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: var value = Result.If(true' 42.ToResult());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsThenValue_IfBoolIsTrue,The following statement contains a magic number: Assert.That(value == 42);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Result.If(false' 42.ToResult()' 7.ToResult());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: var value = Result.If(false' 42.ToResult()' 7.ToResult());
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,If_ReturnsElseValue_IfBoolIsFalse,The following statement contains a magic number: Assert.That(value == 7);
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToResult<int' Unit>()                          from y in 7.ToResult<int' Unit>()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToResult<int' Unit>()                          from y in 7.ToResult<int' Unit>()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: var value = from x in 6.ToResult<int' Unit>()                          from y in 7.ToResult<int' Unit>()                          let ultimateAnswer = x * y                          where ultimateAnswer == 42                          select ultimateAnswer;
Magic Number,iSynaptic.Commons,ResultTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\ResultTests.cs,ComprehensionSyntaxIsWorking,The following statement contains a magic number: Assert.AreEqual(42' value.Value);
Magic Number,iSynaptic.Commons,SystemClockTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\SystemClockTests.cs,WhileInFixedBlock_SystemTimeNowIsAlwaysTheSame,The following statement contains a magic number: var fixedDateTime = DateTime.Now.Subtract(TimeSpan.FromDays(42));
Magic Number,iSynaptic.Commons,SystemClockTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\SystemClockTests.cs,WhileInUsingBlock_SystemTimeNowUsesStrategy,The following statement contains a magic number: var startDateTime = DateTime.Now.Subtract(TimeSpan.FromDays(42));
Magic Number,iSynaptic.Commons,SystemClockTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\SystemClockTests.cs,WhileInUsingBlock_SystemTimeNowUsesStrategy,The following statement contains a magic number: Assert.AreEqual(startDateTime.AddMinutes(10 * i)' SystemClock.UtcNow);
Magic Number,iSynaptic.Commons,SystemClockTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\SystemClockTests.cs,WhileInUsingBlock_SystemTimeNowUsesStrategy,The following statement contains a magic number: i < 10
Magic Number,iSynaptic.Commons,SystemClockTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\SystemClockTests.cs,WhileInUsingBlock_SystemTimeNowUsesStrategy,The following statement contains a magic number: Assert.IsTrue(SystemClock.UtcNow > startDateTime.AddDays(41));
Magic Number,iSynaptic.Commons,UnsafeCastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\UnsafeCastTests.cs,UnsafeCast_DelegateOfSameTypeSignature,The following statement contains a magic number: Predicate<string> predicate = x => x.Length % 2 == 0;
Magic Number,iSynaptic.Commons,UnsafeCastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\UnsafeCastTests.cs,UnsafeCast_ClassToClassOfSameStructure,The following statement contains a magic number: A source = new A {Foo = 42};
Magic Number,iSynaptic.Commons,UnsafeCastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\UnsafeCastTests.cs,UnsafeCast_ClassToClassOfSameStructure,The following statement contains a magic number: Assert.AreEqual(42' result.Bar);
Magic Number,iSynaptic.Commons,UnsafeCastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\UnsafeCastTests.cs,UnsafeCast_ClassToClassOfSupersetStructure,The following statement contains a magic number: A source = new A { Foo = 42 };
Magic Number,iSynaptic.Commons,UnsafeCastTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\UnsafeCastTests.cs,UnsafeCast_ClassToClassOfSupersetStructure,The following statement contains a magic number: Assert.AreEqual(42' result.Foo);
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_ThreadsStateCorrectly,The following statement contains a magic number: Assert.AreEqual(15' result);
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,DerivedVisitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,DerivedVisitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,DerivedVisitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,DerivedVisitor_ThreadsStateCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,DerivedVisitor_ThreadsStateCorrectly,The following statement contains a magic number: Assert.AreEqual(20' result);
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotThreadingState_WorksCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotThreadingState_WorksCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotThreadingState_WorksCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotThreadingState_WorksCorrectly,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotThreadingState_WorksCorrectly,The following statement contains a magic number: Assert.AreEqual(15' visitor.Result);
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotReturningState_ThreadsPreviousStateThrough,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotReturningState_ThreadsPreviousStateThrough,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotReturningState_ThreadsPreviousStateThrough,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons,VisitorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\VisitorTests.cs,Visitor_WhenNotReturningState_ThreadsPreviousStateThrough,The following statement contains a magic number: var subject = new TestSubject(1'                      new TestSubject(2)'                      new TestSubject(3'                          new TestSubject(4)'                          new TestSubject(5)));
Magic Number,iSynaptic.Commons.Collections.Generic,LazyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazyDictionaryTests.cs,ContainsKey_OnlyReturnsTrue_IfValueCanBeFound,The following statement contains a magic number: var dictionary = new LazyDictionary<int' string>                                   {                                       {42' () => "42"}                                   };
Magic Number,iSynaptic.Commons.Collections.Generic,LazyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazyDictionaryTests.cs,ContainsKey_OnlyReturnsTrue_IfValueCanBeFound,The following statement contains a magic number: Assert.IsTrue(dictionary.ContainsKey(42));
Magic Number,iSynaptic.Commons.Collections.Generic,LazyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazyDictionaryTests.cs,GetValue_ReturnsCorrectly,The following statement contains a magic number: var dictionary = new LazyDictionary<int' string>                                   {                                       {42' () => "42"}                                   };
Magic Number,iSynaptic.Commons.Collections.Generic,LazyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazyDictionaryTests.cs,GetValue_ReturnsCorrectly,The following statement contains a magic number: Assert.AreEqual("42"' dictionary[42]);
Magic Number,iSynaptic.Commons.Collections.Generic,LazyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazyDictionaryTests.cs,TryGetValue_ReturnsCorrectly,The following statement contains a magic number: var dictionary = new LazyDictionary<int' string>                                   {                                       {42' () => "42"}                                   };
Magic Number,iSynaptic.Commons.Collections.Generic,LazyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazyDictionaryTests.cs,TryGetValue_ReturnsCorrectly,The following statement contains a magic number: Assert.IsTrue(dictionary.TryGetValue(42' out value));
Magic Number,iSynaptic.Commons.Collections.Generic,LazySelectionDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazySelectionDictionaryTests.cs,ContainsKey_OnlyReturnsTrue_IfValueCanBeLoaded,The following statement contains a magic number: Assert.IsTrue(dictionary.ContainsKey(42));
Magic Number,iSynaptic.Commons.Collections.Generic,LazySelectionDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazySelectionDictionaryTests.cs,TryGetValue_InvokesSelectionFunc,The following statement contains a magic number: var dictionary = new LazySelectionDictionary<int' string>(x => x.ToMaybe().Where(y => y % 2 == 0).Select(y => x.ToString()));
Magic Number,iSynaptic.Commons.Collections.Generic,LazySelectionDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\LazySelectionDictionaryTests.cs,TryGetValue_InvokesSelectionFunc,The following statement contains a magic number: Assert.IsTrue(dictionary.TryGetValue(2' out value));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,Add_AddsItemToCorrectCollection,The following statement contains a magic number: map.Add(42' "42");
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,Add_AddsItemToCorrectCollection,The following statement contains a magic number: Assert.IsTrue(map[42].SequenceEqual(new[] { "42" }));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: map.AddRange(1' Enumerable.Range(1' 10).Select(x => x.ToString()));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: map.AddRange(42' Enumerable.Repeat(42' 42).Select(x => x.ToString()));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: map.AddRange(42' Enumerable.Repeat(42' 42).Select(x => x.ToString()));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: map.AddRange(42' Enumerable.Repeat(42' 42).Select(x => x.ToString()));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: Assert.IsTrue(map[1].SequenceEqual(Enumerable.Range(1' 10).Select(x => x.ToString())));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: Assert.IsTrue(map[42].SequenceEqual(Enumerable.Repeat(42' 42).Select(x => x.ToString())));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: Assert.IsTrue(map[42].SequenceEqual(Enumerable.Repeat(42' 42).Select(x => x.ToString())));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,AddRange_AddsItemsToCorrectCollection,The following statement contains a magic number: Assert.IsTrue(map[42].SequenceEqual(Enumerable.Repeat(42' 42).Select(x => x.ToString())));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,Remove_RemovesItemFromTheCorrectCollection,The following statement contains a magic number: map.AddRange(42' new [] { "42"' "42"' "42"});
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,Remove_RemovesItemFromTheCorrectCollection,The following statement contains a magic number: Assert.IsTrue(map[42].SequenceEqual(new []{"42"' "42"' "42"}));
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,Indexer_ReturnsCorrectCollection,The following statement contains a magic number: map.AddRange(42' new[] { "42"' "42"' "42" });
Magic Number,iSynaptic.Commons.Collections.Generic,MultiMapTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\MultiMapTests.cs,Indexer_ReturnsCorrectCollection,The following statement contains a magic number: var colFor42 = map[42];
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,Each_ExecuteCorrectNumberOfTimesWithCorrectValue,The following statement contains a magic number: Enumerable.Range(1' 10)                  .SmartLoop()                  .Each(items.Add)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,Each_ExecuteCorrectNumberOfTimesWithCorrectValue,The following statement contains a magic number: Assert.AreEqual(10' items.Count);
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,Each_ExecuteCorrectNumberOfTimesWithCorrectValue,The following statement contains a magic number: Assert.IsTrue(items.SequenceEqual(Enumerable.Range(1' 10)));
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,OnlyOne_ExecutesWhenOnlyOneItemIsNotIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .OnlyOne(x => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,OnlyOne_ExecutesWhenOnlyOneItemIsNotIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .Ignore(2)                  .OnlyOne(x => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,OnlyOne_ExecutesWhenOnlyOneItemIsNotIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .Ignore(2)                  .OnlyOne(x => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,MoreThanOne_ExecutesWhenOnlyWithItemIsNotIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .Ignore(x => x == 2)                  .MoreThanOne(x => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,MoreThanOne_ExecutesWhenOnlyWithItemIsNotIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .Ignore(x => x == 2)                  .MoreThanOne(x => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,MoreThanOne_ExecutesWhenOnlyWithItemIsNotIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .MoreThanOne(x => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_ItemMatches,The following statement contains a magic number: Enumerable.Range(1' 10)                  .SmartLoop()                  .When(5' items.Add)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_ItemMatches,The following statement contains a magic number: Enumerable.Range(1' 10)                  .SmartLoop()                  .When(5' items.Add)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_ItemMatches,The following statement contains a magic number: Assert.AreEqual(5' items[0]);
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_PredicateIsTrue,The following statement contains a magic number: Enumerable.Range(1' 10)                  .SmartLoop()                  .When(x => x % 3 == 0' items.Add)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_PredicateIsTrue,The following statement contains a magic number: Enumerable.Range(1' 10)                  .SmartLoop()                  .When(x => x % 3 == 0' items.Add)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_PredicateIsTrue,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_PredicateIsTrue,The following statement contains a magic number: Assert.IsTrue(items.SequenceEqual(new[] { 3' 6' 9 }));
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_PredicateIsTrue,The following statement contains a magic number: Assert.IsTrue(items.SequenceEqual(new[] { 3' 6' 9 }));
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,When_PredicateIsTrue,The following statement contains a magic number: Assert.IsTrue(items.SequenceEqual(new[] { 3' 6' 9 }));
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,BeforeAll_ExecutesAtTheCorrectTime,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .BeforeAll(x => beforeAllExecutedCorrectly = !itemExecuted)                  .Each(x => itemExecuted = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,AfterAll_ExecutesAtTheCorrectTime,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .AfterAll(x => afterAllExecutedCorrectly = itemExecuted)                  .Each(x => itemExecuted = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,None_ExecutesWhenAllItemsAreIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .None(() => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,None_ExecutesWhenAllItemsAreIgnored,The following statement contains a magic number: Enumerable.Range(1' 2)                  .SmartLoop()                  .Ignore(x => true)                  .None(() => executed = true)                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,Between_ExecutesAtTheCorrectTime,The following statement contains a magic number: Enumerable.Range(1' 3)                  .SmartLoop()                  .Each(x => lastNum = x)                  .Between((x' y) => results.Add(x + y))                  .Execute();
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,Between_ExecutesAtTheCorrectTime,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 3' 5 }));
Magic Number,iSynaptic.Commons.Collections.Generic,SmartLoopTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SmartLoopTests.cs,Between_ExecutesAtTheCorrectTime,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 3' 5 }));
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,GetSet_RoundTrip_WithTypedSymbol,The following statement contains a magic number: dictionary.Set(symbol' 42);
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,GetSet_RoundTrip_WithTypedSymbol,The following statement contains a magic number: Assert.AreEqual(42' dictionary.Get(symbol));
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,GetSet_RoundTrip_WithUntypedSymbol,The following statement contains a magic number: dictionary.Set(symbol' 42);
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,GetSet_RoundTrip_WithUntypedSymbol,The following statement contains a magic number: Assert.AreEqual(42' dictionary.Get<int>(symbol));
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,Set_WithNoValue_RemovesFromDictionary,The following statement contains a magic number: var innerDictionary = new Dictionary<ISymbol' object> { {symbol' 42}};
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,Set_ValueTwice_ReturnsSecondValue,The following statement contains a magic number: var innerDictionary = new Dictionary<ISymbol' object> { { symbol' 42 } };
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,Set_ValueTwice_ReturnsSecondValue,The following statement contains a magic number: dictionary.Set(symbol' 7);
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,Set_ValueTwice_ReturnsSecondValue,The following statement contains a magic number: dictionary.Set(symbol' 42);
Magic Number,iSynaptic.Commons.Collections.Generic,SymbolDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\SymbolDictionaryTests.cs,Set_ValueTwice_ReturnsSecondValue,The following statement contains a magic number: Assert.AreEqual(42' (int)innerDictionary[symbol]);
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithSingleValueInCollection,The following statement contains a magic number: var source = new[] {42}.GetEnumerator().WithHasCurrent();
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithSingleValueInCollection,The following statement contains a magic number: Assert.AreEqual(42' source.Current);
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithMultipleValuesInCollection,The following statement contains a magic number: var source = new[] {12' 42' 2001}.GetEnumerator().WithHasCurrent();
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithMultipleValuesInCollection,The following statement contains a magic number: var source = new[] {12' 42' 2001}.GetEnumerator().WithHasCurrent();
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithMultipleValuesInCollection,The following statement contains a magic number: var source = new[] {12' 42' 2001}.GetEnumerator().WithHasCurrent();
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithMultipleValuesInCollection,The following statement contains a magic number: Assert.AreEqual(12' source.Current);
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithMultipleValuesInCollection,The following statement contains a magic number: Assert.AreEqual(42' source.Current);
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,WithMultipleValuesInCollection,The following statement contains a magic number: Assert.AreEqual(2001' source.Current);
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,HasCurrent_WithoutCallingMoveNext_CallsMoveNext,The following statement contains a magic number: var source = new[] { 42 }.GetEnumerator().WithHasCurrent();
Magic Number,iSynaptic.Commons.Collections.Generic,WithHasCurrentEnumeratorTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\WithHasCurrentEnumeratorTests.cs,HasCurrent_WithoutCallingMoveNext_CallsMoveNext,The following statement contains a magic number: Assert.AreEqual(42' source.Current);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsReadOnly,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsReadOnly,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsReadOnly,The following statement contains a magic number: ICollection<int> projection = source.ToProjectedCollection(x => x * 2);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsReadOnly,The following statement contains a magic number: Assert.Throws<NotSupportedException>(() => projection.Add(4));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: ICollection<int> projection = source.ToProjectedCollection(x => x * 2);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: Assert.IsTrue(projection.SequenceEqual(new[] { 2' 4' 6 }));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: Assert.IsTrue(projection.SequenceEqual(new[] { 2' 4' 6 }));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: Assert.IsTrue(projection.SequenceEqual(new[] { 2' 4' 6 }));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: Assert.IsTrue(((IEnumerable)projection).OfType<int>().SequenceEqual(new[] {2' 4' 6}));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: Assert.IsTrue(((IEnumerable)projection).OfType<int>().SequenceEqual(new[] {2' 4' 6}));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_IsEnumerable,The following statement contains a magic number: Assert.IsTrue(((IEnumerable)projection).OfType<int>().SequenceEqual(new[] {2' 4' 6}));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_Count_ReturnsCorrectly,The following statement contains a magic number: source.Expect(x => x.Count)                  .Return(42);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_Count_ReturnsCorrectly,The following statement contains a magic number: ICollection<int> projection = source.ToProjectedCollection(x => x * 2);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_Count_ReturnsCorrectly,The following statement contains a magic number: Assert.AreEqual(42' projection.Count);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_CopyTo_CopiesDataCorrectly,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_CopyTo_CopiesDataCorrectly,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_CopyTo_CopiesDataCorrectly,The following statement contains a magic number: ICollection<int> projection = source.ToProjectedCollection(x => x * 2);
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_CopyTo_CopiesDataCorrectly,The following statement contains a magic number: Assert.IsTrue(copy.SequenceEqual(new[] { 2' 4' 6 }));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_CopyTo_CopiesDataCorrectly,The following statement contains a magic number: Assert.IsTrue(copy.SequenceEqual(new[] { 2' 4' 6 }));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_CopyTo_CopiesDataCorrectly,The following statement contains a magic number: Assert.IsTrue(copy.SequenceEqual(new[] { 2' 4' 6 }));
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_Contains_ReturnsCorrectly,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_Contains_ReturnsCorrectly,The following statement contains a magic number: var source = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,ProjectionCollectionTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ProjectionCollectionTests.cs,ProjectedCollection_Contains_ReturnsCorrectly,The following statement contains a magic number: ICollection<string> projection = source.ToProjectedCollection(x => (x * 2).ToString());
Magic Number,iSynaptic.Commons.Collections.Generic,DictionaryTestsBase<TKey;TValue>,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\DictionaryTestsBase.cs,Count_ReturnsCorrectly,The following statement contains a magic number: Assert.AreEqual(3' dictionary.Count);
Magic Number,iSynaptic.Commons.Collections.Generic,DictionaryTestsBase<TKey;TValue>,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\DictionaryTestsBase.cs,DictionaryUsesProvidedEqualityComparerToGetHashCodes,The following statement contains a magic number: comparer.Expect(x => x.GetHashCode(key))                  .Return(42)                  .Repeat.AtLeastOnce();
Magic Number,iSynaptic.Commons.Collections.Generic,ReadOnlyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ReadOnlyDictionaryTests.cs,CopyTo,The following statement contains a magic number: var values = new KeyValuePair<string' string>[3];
Magic Number,iSynaptic.Commons.Collections.Generic,ReadOnlyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ReadOnlyDictionaryTests.cs,CopyTo,The following statement contains a magic number: expectedValues[2] = expectedValues[1];
Magic Number,iSynaptic.Commons.Collections.Generic,ReadOnlyDictionaryTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\ReadOnlyDictionaryTests.cs,Count,The following statement contains a magic number: Assert.AreEqual(2' dict.Count);
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => col.Remove(1' 2' 3));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithNull,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => col.Remove(1' 2' 3));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithNullItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithNullItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithNullItems,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 2' 3 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithNullItems,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 2' 3 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithEmptyItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithEmptyItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithEmptyItems,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 2' 3 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveWithEmptyItems,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 2' 3 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: col.Remove(new int[] { 2' 4 });
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: col.Remove(new int[] { 2' 4 });
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 3' 5 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveItems,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 3' 5 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: col.RemoveAll(x => x % 2 == 0);
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 3' 5 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAll,The following statement contains a magic number: Assert.IsTrue(col.SequenceEqual(new [] { 1' 3' 5 }));
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAllWithNullPredicate,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Collections.Generic,CollectionExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Collections\Generic\CollectionExtensionsTests.cs,RemoveAllWithNullPredicate,The following statement contains a magic number: ICollection<int> col = new List<int> { 1' 2' 3 };
Magic Number,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithAmbiguousBindingSelection_ThrowsAmbiguousExodataBindingsException,The following statement contains a magic number: source.Bind(symbol' 42);
Magic Number,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithAmbiguousBindingSelection_ThrowsAmbiguousExodataBindingsException,The following statement contains a magic number: source.Bind(symbol' 42);
Magic Number,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithAmbiguousBindingSelection_ThrowsAmbiguousExodataBindingsException,The following statement contains a magic number: Assert.AreEqual(2' exception.Bindings.Count());
Magic Number,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithNonAmbiguousBindingSelection_YieldsValue,The following statement contains a magic number: source.Bind(symbol' 42);
Magic Number,iSynaptic.Commons.Data,ExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataResolverTests.cs,TryResolve_WithNonAmbiguousBindingSelection_YieldsValue,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Data,TestExodataBindingModule,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\TestExodataBindingModule.cs,TestExodataBindingModule,The following statement contains a magic number: Bind(StringExodata.MaxLength' 42);
Magic Number,iSynaptic.Commons.Data,TestSubjectExodataSurrogateOne,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\BaseTestSubjectExodataSurrogate.cs,TestSubjectExodataSurrogateOne,The following statement contains a magic number: Bind(StringExodata.MaxLength)                  .For(x => x.MiddleName)                  .To(74088);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Resolve_ThruImplicitCastOperator_ReturnsValue,The following statement contains a magic number: resolver.Bind(StringExodata.MaxLength' 42);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Resolve_ThruImplicitCastOperator_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_ByTypeOnly_UsesTypeDeclaration,The following statement contains a magic number: resolver.Bind(ExodataDeclaration<int>.TypeDeclaration' 42);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_ByTypeOnly_UsesTypeDeclaration,The following statement contains a magic number: Assert.AreEqual(42' ExodataDeclaration.Get<int>());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithValidArguments_ReturnsExodataResolverResults,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithValidArguments_ReturnsExodataResolverResults,The following statement contains a magic number: resolver.Bind(maxLength)                  .For<string>()                  .To(42);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithValidArguments_ReturnsExodataResolverResults,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolver_ReturnsDefault,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolver_ReturnsDefault,The following statement contains a magic number: Assert.AreEqual(7' value);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolverAndBadDefault_ThrowsValidationExceptionWithCorrectInvalidValue,The following statement contains a magic number: var maxLengthWithBadDefault = new ComparableExodataDeclaration<int>(1' 10' 42);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolverAndBadDefault_ThrowsValidationExceptionWithCorrectInvalidValue,The following statement contains a magic number: var maxLengthWithBadDefault = new ComparableExodataDeclaration<int>(1' 10' 42);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolverAndBadDefault_ThrowsValidationExceptionWithCorrectInvalidValue,The following statement contains a magic number: Assert.AreEqual(42' exception.InvalidValue);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolver_UsesResolverFromIoc,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolver_UsesResolverFromIoc,The following statement contains a magic number: exodataResolver.Bind(maxLength)                  .For<string>()                  .To(42);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_WithNoExodataResolver_UsesResolverFromIoc,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnNonGenericExodataWithDeclaration_ProvidesAllArgumentsToResolver,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnNonGenericExodataWithDeclaration_ProvidesAllArgumentsToResolver,The following statement contains a magic number: resolver.Expect(x => x.TryResolve<int' object' object>(null))                  .Callback<IExodataRequest<int' object' object>>(r => r.Symbol == maxLength &&                                                          r.Context == Maybe<object>.NoValue &&                                                          r.Subject == Maybe<object>.NoValue &&                                                          r.Member == null)                  .Return(42.ToMaybe());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclaration_ProvidesAllArgumentsToResolver,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclaration_ProvidesAllArgumentsToResolver,The following statement contains a magic number: resolver.Expect(x => x.TryResolve<int' object' string>(null))                  .Callback<IExodataRequest<int' object' string>>(r => r.Symbol == maxLength &&                                                                       r.Context == Maybe<object>.NoValue &&                                                                       r.Subject == Maybe<string>.NoValue &&                                                                       r.Member == null)                  .Return(42.ToMaybe());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclarationAndSubject_ProvidesAllArgumentsToResolver,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclarationAndSubject_ProvidesAllArgumentsToResolver,The following statement contains a magic number: resolver.Expect(x => x.TryResolve<int' object' string>(null))                  .Callback<IExodataRequest<int' object' string>>(r => r.Symbol == maxLength &&                                                                       r.Context == Maybe<object>.NoValue &&                                                                       r.Subject == subject &&                                                                       r.Member == null)                  .Return(42.ToMaybe());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclarationAndMember_ProvidesAllArgumentsToResolver,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclarationAndMember_ProvidesAllArgumentsToResolver,The following statement contains a magic number: resolver.Expect(x => x.TryResolve<int' object' string>(null))                  .Callback<IExodataRequest<int' object' string>>(r => r.Symbol == maxLength &&                                                                       r.Context == Maybe<object>.NoValue &&                                                                       r.Subject == Maybe<string>.NoValue &&                                                                       r.Member == member)                  .Return(42.ToMaybe());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclarationSubjectAndMember_ProvidesAllArgumentsToResolver,The following statement contains a magic number: var maxLength = new ExodataDeclaration<int>(7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,Get_OnGenericExodataWithDeclarationSubjectAndMember_ProvidesAllArgumentsToResolver,The following statement contains a magic number: resolver.Expect(x => x.TryResolve<int' object' string>(null))                  .Callback<IExodataRequest<int' object' string>>(r => r.Symbol == maxLength &&                                                          r.Context == Maybe<object>.NoValue &&                                                          r.Subject == subject &&                                                          r.Member == member)                  .Return(42.ToMaybe());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithValidValue_DoesNotThrowException,The following statement contains a magic number: var betweenOneAndTen = new ComparableExodataDeclaration<int>(1' 10' 5);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithValidValue_DoesNotThrowException,The following statement contains a magic number: var betweenOneAndTen = new ComparableExodataDeclaration<int>(1' 10' 5);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithValidValue_DoesNotThrowException,The following statement contains a magic number: resolver.Bind(betweenOneAndTen' 7);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithValidValue_DoesNotThrowException,The following statement contains a magic number: Assert.AreEqual(7' betweenOneAndTen.Get());
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithoutValidValue_ThrowsException,The following statement contains a magic number: var betweenOneAndTen = new ComparableExodataDeclaration<int>(1' 10' 5);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithoutValidValue_ThrowsException,The following statement contains a magic number: var betweenOneAndTen = new ComparableExodataDeclaration<int>(1' 10' 5);
Magic Number,iSynaptic.Commons.Data,ExodataDeclarationTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\ExodataDeclarationTests.cs,ValidateValue_WithoutValidValue_ThrowsException,The following statement contains a magic number: resolver.Bind(betweenOneAndTen' 42);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_UsesIocToCreateSurrogates,The following statement contains a magic number: Assert.AreEqual(74088' value);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithModuleProvidedMatchingBinding_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,TryResolve_AfterUnloadingModule_ReturnsNoValue,The following statement contains a magic number: Assert.IsTrue(value == 42);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithAttributedProperty_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(21' minLength);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithAttributedProperty_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(84' maxLength);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithAttributedField_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(7' allExodata.MinimumLength);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithAttributedField_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(1764' allExodata.MaximumLength);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithSurrogate_ReturnsValue,The following statement contains a magic number: Assert.AreEqual(74088' value);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithMultipleMembers_YieldsExodata,The following statement contains a magic number: resolver.Bind(IntegerExodata.MinValue)                  .For<DateTime>(x => x.Day' x => x.Month)                  .To(42);
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithMultipleMembers_YieldsExodata,The following statement contains a magic number: Assert.AreEqual(42' resolver.TryResolve(IntegerExodata.MinValue).For<DateTime>(x => x.Day));
Magic Number,iSynaptic.Commons.Data,StandardExodataResolverTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Data\StandardExodataResolverTests.cs,Resolve_WithMultipleMembers_YieldsExodata,The following statement contains a magic number: Assert.AreEqual(42' resolver.TryResolve(IntegerExodata.MinValue).For<DateTime>(x => x.Month));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithTwoTypeParameter,The following statement contains a magic number: Assert.AreEqual(5' func(5));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithTwoTypeParameter,The following statement contains a magic number: Assert.AreEqual(5' func(5));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithThreeTypeParameter,The following statement contains a magic number: Assert.AreEqual(11' func(5' 6));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithThreeTypeParameter,The following statement contains a magic number: Assert.AreEqual(11' func(5' 6));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithThreeTypeParameter,The following statement contains a magic number: Assert.AreEqual(11' func(5' 6));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFourTypeParameter,The following statement contains a magic number: Assert.AreEqual(18' func(5' 6' 7));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFourTypeParameter,The following statement contains a magic number: Assert.AreEqual(18' func(5' 6' 7));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFourTypeParameter,The following statement contains a magic number: Assert.AreEqual(18' func(5' 6' 7));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFourTypeParameter,The following statement contains a magic number: Assert.AreEqual(18' func(5' 6' 7));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFiveTypeParameter,The following statement contains a magic number: Assert.AreEqual(26' func(5' 6' 7' 8));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFiveTypeParameter,The following statement contains a magic number: Assert.AreEqual(26' func(5' 6' 7' 8));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFiveTypeParameter,The following statement contains a magic number: Assert.AreEqual(26' func(5' 6' 7' 8));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFiveTypeParameter,The following statement contains a magic number: Assert.AreEqual(26' func(5' 6' 7' 8));
Magic Number,iSynaptic.Commons.Reflection.Emit,DynamicMethodExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Reflection\Emit\DynamicMethodExtensionsTests.cs,ToFuncWithFiveTypeParameter,The following statement contains a magic number: Assert.AreEqual(26' func(5' 6' 7' 8));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithIndexGreaterThanDestinationUpperBound_ThrowsException,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => source.CopyTo(destination' 42));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithIndexToHighGivenSourceAndDestinationSize_ThrowsException,The following statement contains a magic number: IEnumerable<int> source = Enumerable.Range(1' 3);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithIndexToHighGivenSourceAndDestinationSize_ThrowsException,The following statement contains a magic number: int[] destination = new int[3];
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithValidInput_ReturnsCorrectly,The following statement contains a magic number: IEnumerable<int> source = Enumerable.Range(1' 3);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithValidInput_ReturnsCorrectly,The following statement contains a magic number: int[] destination = new int[3];
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithValidInput_ReturnsCorrectly,The following statement contains a magic number: Assert.IsTrue(destination.SequenceEqual(new[] { 1' 2' 3 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,CopyTo_WithValidInput_ReturnsCorrectly,The following statement contains a magic number: Assert.IsTrue(destination.SequenceEqual(new[] { 1' 2' 3 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,WithIndex,The following statement contains a magic number: int[] items = { 1' 3' 5' 7' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,WithIndex,The following statement contains a magic number: int[] items = { 1' 3' 5' 7' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,WithIndex,The following statement contains a magic number: int[] items = { 1' 3' 5' 7' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,WithIndex,The following statement contains a magic number: int[] items = { 1' 3' 5' 7' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(2' enumerator.Current.LookAhead(0).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(2' enumerator.Current.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(3' enumerator.Current.LookAhead(0).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(5' enumerator.Current.LookAhead(2).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(5' enumerator.Current.LookAhead(2).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(4' enumerator.Current.LookAhead(1).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(3' enumerator.Current.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerable,The following statement contains a magic number: Assert.AreEqual(4' enumerator.Current.LookAhead(0).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerator_WhenUsedAfterBeingDisposed_ThrowsException,The following statement contains a magic number: var lookaheadable = Enumerable.Range(1' 2).AsLookAheadable();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: int[] items = { 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(2' ((LookAheadableValue<int>)nonGenericEnumerator.Current).LookAhead(0).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(2' ((LookAheadableValue<int>)nonGenericEnumerator.Current).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(3' ((LookAheadableValue<int>)nonGenericEnumerator.Current).LookAhead(0).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(5' ((LookAheadableValue<int>)nonGenericEnumerator.Current).LookAhead(2).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(5' ((LookAheadableValue<int>)nonGenericEnumerator.Current).LookAhead(2).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(4' ((LookAheadableValue<int>)nonGenericEnumerator.Current).LookAhead(1).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(3' ((LookAheadableValue<int>)nonGenericEnumerator.Current).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,LookAheadEnumerableViaNonGenericGetEnumerator,The following statement contains a magic number: Assert.AreEqual(4' ((LookAheadableValue<int>)nonGenericEnumerator.Current).LookAhead(0).Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Buffer,The following statement contains a magic number: IEnumerable<int> numbers = GetRange(1' 10' () => { enumerationComplete = true; });
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Buffer,The following statement contains a magic number: Assert.IsTrue(numbers.SequenceEqual(Enumerable.Range(1' 10)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Run,The following statement contains a magic number: IEnumerable<int> numbers = GetRange(1' 10' () => { enumerationComplete = true; });
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Delimit,The following statement contains a magic number: IEnumerable<int> range = Enumerable.Range(1' 9);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithNullIterables_ThrowsArgumentNullException,The following statement contains a magic number: IEnumerable<int> other = Enumerable.Range(1' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var rangeOne = Enumerable.Range(1' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var rangeTwo = Enumerable.Range(10' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var rangeTwo = Enumerable.Range(10' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var array = new[] { Enumerable.Range(1' 10)' Enumerable.Range(10' 10) };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var array = new[] { Enumerable.Range(1' 10)' Enumerable.Range(10' 10) };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var array = new[] { Enumerable.Range(1' 10)' Enumerable.Range(10' 10) };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_ArrayOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var array = new[] { Enumerable.Range(1' 10)' Enumerable.Range(10' 10) };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var array = new[] { Enumerable.Range(1' 10)' Enumerable.Range(10' 10) };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var array = new[] { Enumerable.Range(1' 10)' Enumerable.Range(10' 10) };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_EnumerableOfEnumerables,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: var left = Enumerable.Range(1' 4);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: var right = Enumerable.Range(1' 3);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: Assert.IsTrue(zipped.SequenceEqual(new[] { 1' 1' 2' 2' 3' 3' 4 }.Select(x => x.ToMaybe()).Concat(new[] { Maybe<int>.NoValue })));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: Assert.IsTrue(zipped.SequenceEqual(new[] { 1' 1' 2' 2' 3' 3' 4 }.Select(x => x.ToMaybe()).Concat(new[] { Maybe<int>.NoValue })));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: Assert.IsTrue(zipped.SequenceEqual(new[] { 1' 1' 2' 2' 3' 3' 4 }.Select(x => x.ToMaybe()).Concat(new[] { Maybe<int>.NoValue })));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: Assert.IsTrue(zipped.SequenceEqual(new[] { 1' 1' 2' 2' 3' 3' 4 }.Select(x => x.ToMaybe()).Concat(new[] { Maybe<int>.NoValue })));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithDifferentItemCounts,The following statement contains a magic number: Assert.IsTrue(zipped.SequenceEqual(new[] { 1' 1' 2' 2' 3' 3' 4 }.Select(x => x.ToMaybe()).Concat(new[] { Maybe<int>.NoValue })));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var rangeOne = Enumerable.Range(1' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var rangeTwo = Enumerable.Range(10' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var rangeTwo = Enumerable.Range(10' 10);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,ZipAll_WithSelector,The following statement contains a magic number: var expected = new[] { 1' 10' 2' 11' 3' 12' 4' 13' 5' 14' 6' 15' 7' 16' 8' 17' 9' 18' 10' 19 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_Indexer_ReturnsCorrectValues,The following statement contains a magic number: var batches = Enumerable.Range(0' 5).Batch(3).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_Indexer_ReturnsCorrectValues,The following statement contains a magic number: var batches = Enumerable.Range(0' 5).Batch(3).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_Indexer_ReturnsCorrectValues,The following statement contains a magic number: Assert.AreEqual(2' batches[0][2]);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_Indexer_ReturnsCorrectValues,The following statement contains a magic number: Assert.AreEqual(2' batches[0][2]);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_Indexer_ReturnsCorrectValues,The following statement contains a magic number: Assert.AreEqual(3' batches[1][0]);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_Indexer_ReturnsCorrectValues,The following statement contains a magic number: Assert.AreEqual(4' batches[1][1]);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: var batches = Enumerable.Range(0' 9).Batch(3).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: var batches = Enumerable.Range(0' 9).Batch(3).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(3' batches.Length);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(2' batches[2].Index);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(2' batches[2].Index);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(3' batches[1].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(6' batches[2].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(6' batches[2].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(3' batches[0].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(3' batches[1].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(3' batches[2].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.AreEqual(3' batches[2].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 0' 1' 2 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithBalancedBatches_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: var batches = Enumerable.Range(0' 10).Batch(3).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: var batches = Enumerable.Range(0' 10).Batch(3).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(4' batches.Length);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(2' batches[2].Index);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(2' batches[2].Index);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[3].Index);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[3].Index);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[1].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(6' batches[2].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(6' batches[2].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(9' batches[3].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(9' batches[3].ItemIndex);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[0].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[1].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[2].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(3' batches[2].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.AreEqual(1' batches[3].Count);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 0' 1' 2 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 6' 7' 8 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithUnbalancedBatches_ReturnsAllItemsAndLastBatchContainsOnlyRemainingItems,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: var batches = Enumerable.Range(0' 18)                  .Batch(x => x%5 != 0)                  .ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: var batches = Enumerable.Range(0' 18)                  .Batch(x => x%5 != 0)                  .ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.AreEqual(4' batches.Length);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 0' 1' 2' 3' 4 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 0' 1' 2' 3' 4 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 0' 1' 2' 3' 4 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 5' 6' 7' 8' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 5' 6' 7' 8' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 5' 6' 7' 8' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 5' 6' 7' 8' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 5' 6' 7' 8' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 10' 11' 12' 13' 14 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 10' 11' 12' 13' 14 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 10' 11' 12' 13' 14 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 10' 11' 12' 13' 14 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 10' 11' 12' 13' 14 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 10' 11' 12' 13' 14 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 15' 16' 17 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 15' 16' 17 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 15' 16' 17 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 15' 16' 17 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: var batches = Enumerable.Range(1' 18)                  .WithNeighbors()                  .Batch((x' i' info) => x.Previous.Select(y => y % 5).ValueOrDefault(-1) != 0' x => x.Value)                  .ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: var batches = Enumerable.Range(1' 18)                  .WithNeighbors()                  .Batch((x' i' info) => x.Previous.Select(y => y % 5).ValueOrDefault(-1) != 0' x => x.Value)                  .ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.AreEqual(4' batches.Length);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[0].SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 6' 7' 8' 9' 10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 6' 7' 8' 9' 10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 6' 7' 8' 9' 10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 6' 7' 8' 9' 10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[1].SequenceEqual(new[] { 6' 7' 8' 9' 10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 11' 12' 13' 14' 15 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 11' 12' 13' 14' 15 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 11' 12' 13' 14' 15 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 11' 12' 13' 14' 15 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 11' 12' 13' 14' 15 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[2].SequenceEqual(new[] { 11' 12' 13' 14' 15 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 16' 17' 18 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 16' 17' 18 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 16' 17' 18 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_WithNeighbors_ViaPredicate,The following statement contains a magic number: Assert.IsTrue(batches[3].SequenceEqual(new[] { 16' 17' 18 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaNonGenericEnumerator_ReturnsAllItems,The following statement contains a magic number: var batches = Enumerable.Range(0' 9)                  .Batch(3)                  .Cast<IEnumerable>()                  .SelectMany(x => x.OfType<int>().ToArray())                  .ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaNonGenericEnumerator_ReturnsAllItems,The following statement contains a magic number: var batches = Enumerable.Range(0' 9)                  .Batch(3)                  .Cast<IEnumerable>()                  .SelectMany(x => x.OfType<int>().ToArray())                  .ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Batch_ViaNonGenericEnumerator_ReturnsAllItems,The following statement contains a magic number: Assert.IsTrue(batches.SequenceEqual(Enumerable.Range(0' 9)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Recurse,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4))'                          new Recursive(3));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Recurse,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4))'                          new Recursive(3));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Recurse,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4))'                          new Recursive(3));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Recurse,The following statement contains a magic number: Assert.IsTrue(recursives.Select(x => x.Value).SequenceEqual(new[] { 1' 2' 4' 3 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Recurse,The following statement contains a magic number: Assert.IsTrue(recursives.Select(x => x.Value).SequenceEqual(new[] { 1' 2' 4' 3 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Recurse,The following statement contains a magic number: Assert.IsTrue(recursives.Select(x => x.Value).SequenceEqual(new[] { 1' 2' 4' 3 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4)'                              new Recursive(5))'                          new Recursive(3'                              new Recursive(6)'                              new Recursive(7)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4)'                              new Recursive(5))'                          new Recursive(3'                              new Recursive(6)'                              new Recursive(7)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4)'                              new Recursive(5))'                          new Recursive(3'                              new Recursive(6)'                              new Recursive(7)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4)'                              new Recursive(5))'                          new Recursive(3'                              new Recursive(6)'                              new Recursive(7)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4)'                              new Recursive(5))'                          new Recursive(3'                              new Recursive(6)'                              new Recursive(7)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var r1 = new Recursive(1'                          new Recursive(2'                              new Recursive(4)'                              new Recursive(5))'                          new Recursive(3'                              new Recursive(6)'                              new Recursive(7)));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: var recursives = r1.RecurseWhile(r => r.Recursives' r => r.Value % 2 == 1).ToArray();
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: Assert.IsTrue(recursives.Select(x => x.Value).SequenceEqual(new[] { 1' 3' 7 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,RecurseWhile,The following statement contains a magic number: Assert.IsTrue(recursives.Select(x => x.Value).SequenceEqual(new[] { 1' 3' 7 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Distinct_WithSelector,The following statement contains a magic number: var items = new[]                              {                                  new TestSubject { Number =1' Text = "Foo"}'                                  new TestSubject { Number =1' Text = "Bar"}'                                  new TestSubject { Number =2' Text = "Foo"}'                                  new TestSubject { Number =3' Text = "Baz"}                              };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Distinct_WithSelector,The following statement contains a magic number: var items = new[]                              {                                  new TestSubject { Number =1' Text = "Foo"}'                                  new TestSubject { Number =1' Text = "Bar"}'                                  new TestSubject { Number =2' Text = "Foo"}'                                  new TestSubject { Number =3' Text = "Baz"}                              };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var first = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var first = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var first = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var first = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksFirstStream_IfItHasItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: var second = new List<int> { 6' 7' 8' 9' 10 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 6'7'8'9'10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 6'7'8'9'10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 6'7'8'9'10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 6'7'8'9'10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,Or_PicksSecondStream_IfFirstHasNoItems,The following statement contains a magic number: Assert.IsTrue(results.SequenceEqual(new[] { 6'7'8'9'10 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithOneItem_ReturnsItem,The following statement contains a magic number: IEnumerable<int> source = new []{42};
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithOneItem_ReturnsItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithOneItem_ReturnsItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithManyItems_ReturnsFirstItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithManyItems_ReturnsFirstItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithManyItems_ReturnsFirstItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithManyItems_ReturnsFirstItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryFirst_WithManyItems_ReturnsFirstItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithOneItem_ReturnsItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithOneItem_ReturnsItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithOneItem_ReturnsItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithManyItems_ReturnsLastItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithManyItems_ReturnsLastItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithManyItems_ReturnsLastItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithManyItems_ReturnsLastItem,The following statement contains a magic number: Assert.AreEqual(168' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TryLast_WithManyItems_ReturnsLastItem,The following statement contains a magic number: Assert.AreEqual(168' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TrySingle_WithOneItem_ReturnsItem,The following statement contains a magic number: IEnumerable<int> source = new[] { 42 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TrySingle_WithOneItem_ReturnsItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TrySingle_WithOneItem_ReturnsItem,The following statement contains a magic number: Assert.AreEqual(42' result.Value);
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TrySingle_WithManyItems_ThrowsExceptionImmediately,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TrySingle_WithManyItems_ThrowsExceptionImmediately,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,TrySingle_WithManyItems_ThrowsExceptionImmediately,The following statement contains a magic number: IEnumerable<int> source = new[] { 42' 84' 168 };
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe(x => x.ToMaybe().Where(y => y % 2 == 0))                  .SequenceEqual(new[]{2'4'6'8'10}));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_WithIndexedSelector_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe((i' x) => x.ToMaybe().Where(y => i % 2 == 0))                  .SequenceEqual(new[] { 1' 3' 5' 7' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_WithIndexedSelector_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe((i' x) => x.ToMaybe().Where(y => i % 2 == 0))                  .SequenceEqual(new[] { 1' 3' 5' 7' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_WithIndexedSelector_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe((i' x) => x.ToMaybe().Where(y => i % 2 == 0))                  .SequenceEqual(new[] { 1' 3' 5' 7' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_WithIndexedSelector_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe((i' x) => x.ToMaybe().Where(y => i % 2 == 0))                  .SequenceEqual(new[] { 1' 3' 5' 7' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_WithIndexedSelector_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe((i' x) => x.ToMaybe().Where(y => i % 2 == 0))                  .SequenceEqual(new[] { 1' 3' 5' 7' 9 }));
Magic Number,iSynaptic.Commons.Linq,EnumerableExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Linq\EnumerableExtensionsTests.cs,SelectMaybe_WithIndexedSelector_OnlyYieldsValuesWhereMaybeHasValue,The following statement contains a magic number: Assert.IsTrue(Enumerable.Range(1' 10)                  .SelectMaybe((i' x) => x.ToMaybe().Where(y => i % 2 == 0))                  .SequenceEqual(new[] { 1' 3' 5' 7' 9 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16)(-16)' Cloneable<Int16>.Clone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16)(-16)' Cloneable<Int16>.Clone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16)(-16)' Cloneable<Int16>.ShallowClone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16)(-16)' Cloneable<Int16>.ShallowClone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16?)(-16)' Cloneable<Int16?>.Clone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16?)(-16)' Cloneable<Int16?>.Clone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16?)(-16)' Cloneable<Int16?>.ShallowClone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt16,The following statement contains a magic number: Assert.AreEqual((Int16?)(-16)' Cloneable<Int16?>.ShallowClone(-16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16)16' Cloneable<UInt16>.Clone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16)16' Cloneable<UInt16>.Clone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16)16' Cloneable<UInt16>.ShallowClone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16)16' Cloneable<UInt16>.ShallowClone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16?)16' Cloneable<UInt16?>.Clone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16?)16' Cloneable<UInt16?>.Clone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16?)16' Cloneable<UInt16?>.ShallowClone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt16,The following statement contains a magic number: Assert.AreEqual((UInt16?)16' Cloneable<UInt16?>.ShallowClone(16));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32)(-32)' Cloneable<Int32>.Clone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32)(-32)' Cloneable<Int32>.Clone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32)(-32)' Cloneable<Int32>.ShallowClone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32)(-32)' Cloneable<Int32>.ShallowClone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32?)(-32)' Cloneable<Int32?>.Clone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32?)(-32)' Cloneable<Int32?>.Clone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32?)(-32)' Cloneable<Int32?>.ShallowClone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt32,The following statement contains a magic number: Assert.AreEqual((Int32?)(-32)' Cloneable<Int32?>.ShallowClone(-32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32)32' Cloneable<UInt32>.Clone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32)32' Cloneable<UInt32>.Clone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32)32' Cloneable<UInt32>.ShallowClone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32)32' Cloneable<UInt32>.ShallowClone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32?)32' Cloneable<UInt32?>.Clone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32?)32' Cloneable<UInt32?>.Clone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32?)32' Cloneable<UInt32?>.ShallowClone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt32,The following statement contains a magic number: Assert.AreEqual((UInt32?)32' Cloneable<UInt32?>.ShallowClone(32));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64)(-64)' Cloneable<Int64>.Clone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64)(-64)' Cloneable<Int64>.Clone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64)(-64)' Cloneable<Int64>.ShallowClone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64)(-64)' Cloneable<Int64>.ShallowClone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64?)(-64)' Cloneable<Int64?>.Clone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64?)(-64)' Cloneable<Int64?>.Clone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64?)(-64)' Cloneable<Int64?>.ShallowClone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneInt64,The following statement contains a magic number: Assert.AreEqual((Int64?)(-64)' Cloneable<Int64?>.ShallowClone(-64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64)64' Cloneable<UInt64>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64)64' Cloneable<UInt64>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64)64' Cloneable<UInt64>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64)64' Cloneable<UInt64>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64?)64' Cloneable<UInt64?>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64?)64' Cloneable<UInt64?>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64?)64' Cloneable<UInt64?>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUInt64,The following statement contains a magic number: Assert.AreEqual((UInt64?)64' Cloneable<UInt64?>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte)(8)' Cloneable<Byte>.Clone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte)(8)' Cloneable<Byte>.Clone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte)(8)' Cloneable<Byte>.ShallowClone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte)(8)' Cloneable<Byte>.ShallowClone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte?)(8)' Cloneable<Byte?>.Clone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte?)(8)' Cloneable<Byte?>.Clone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte?)(8)' Cloneable<Byte?>.ShallowClone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneByte,The following statement contains a magic number: Assert.AreEqual((Byte?)(8)' Cloneable<Byte?>.ShallowClone(8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte)(-8)' Cloneable<SByte>.Clone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte)(-8)' Cloneable<SByte>.Clone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte)(-8)' Cloneable<SByte>.ShallowClone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte)(-8)' Cloneable<SByte>.ShallowClone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte?)(-8)' Cloneable<SByte?>.Clone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte?)(-8)' Cloneable<SByte?>.Clone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte?)(-8)' Cloneable<SByte?>.ShallowClone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSByte,The following statement contains a magic number: Assert.AreEqual((SByte?)(-8)' Cloneable<SByte?>.ShallowClone(-8));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double)128' Cloneable<Double>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double)128' Cloneable<Double>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double)128' Cloneable<Double>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double)128' Cloneable<Double>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double?)128' Cloneable<Double?>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double?)128' Cloneable<Double?>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double?)128' Cloneable<Double?>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDouble,The following statement contains a magic number: Assert.AreEqual((Double?)128' Cloneable<Double?>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal)128' Cloneable<decimal>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal)128' Cloneable<decimal>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal)128' Cloneable<decimal>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal)128' Cloneable<decimal>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal?)128' Cloneable<decimal?>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal?)128' Cloneable<decimal?>.Clone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal?)128' Cloneable<decimal?>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneDecimal,The following statement contains a magic number: Assert.AreEqual((decimal?)128' Cloneable<decimal?>.ShallowClone(128));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single)64' Cloneable<Single>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single)64' Cloneable<Single>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single)64' Cloneable<Single>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single)64' Cloneable<Single>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single?)64' Cloneable<Single?>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single?)64' Cloneable<Single?>.Clone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single?)64' Cloneable<Single?>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneSingle,The following statement contains a magic number: Assert.AreEqual((Single?)64' Cloneable<Single?>.ShallowClone(64));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneTimeSpan,The following statement contains a magic number: TimeSpan source = TimeSpan.FromMinutes(5);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneIntPtr,The following statement contains a magic number: var source = new IntPtr(42);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneUIntPtr,The following statement contains a magic number: var source = new UIntPtr(42);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: List<int> source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: List<int> source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: List<int> source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: List<int> source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(clone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(clone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(clone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(clone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(shallowClone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(shallowClone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(shallowClone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneListOfValueType,The following statement contains a magic number: Assert.IsTrue(shallowClone.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: int[] ints = new int[] { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: int[] ints = new int[] { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: int[] ints = new int[] { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: int[] ints = new int[] { 1' 2' 3' 4' 5 };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(clonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(clonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(clonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(clonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(shallowClonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(shallowClonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(shallowClonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ClonePrimitiveArray,The following statement contains a magic number: Assert.IsTrue(shallowClonedInts.SequenceEqual(new int[] { 1' 2' 3' 4' 5 }));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneMultidimensionalPrimitiveArray,The following statement contains a magic number: int['] source = new int['] { { 1' 2' 3 } };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneMultidimensionalPrimitiveArray,The following statement contains a magic number: int['] source = new int['] { { 1' 2' 3 } };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneMultidimensionalPrimitiveArray,The following statement contains a magic number: Assert.IsTrue(source[0' 2].Equals(clone[0' 2]));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneMultidimensionalPrimitiveArray,The following statement contains a magic number: Assert.IsTrue(source[0' 2].Equals(clone[0' 2]));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneMultidimensionalPrimitiveArray,The following statement contains a magic number: Assert.IsTrue(source[0' 2].Equals(shallowClone[0' 2]));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneMultidimensionalPrimitiveArray,The following statement contains a magic number: Assert.IsTrue(source[0' 2].Equals(shallowClone[0' 2]));
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: var source = new int[][]              {                  new int[]{1'2'3'4'5}              };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: var source = new int[][]              {                  new int[]{1'2'3'4'5}              };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: var source = new int[][]              {                  new int[]{1'2'3'4'5}              };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: var source = new int[][]              {                  new int[]{1'2'3'4'5}              };
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: Assert.AreEqual(source[0][2]' clone[0][2]);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: Assert.AreEqual(source[0][2]' clone[0][2]);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: Assert.AreEqual(source[0][2]' shallowClone[0][2]);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneJaggedPrimitiveArray,The following statement contains a magic number: Assert.AreEqual(source[0][2]' shallowClone[0][2]);
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToMultidimentionalStructArray,The following statement contains a magic number: var dest = new CloneTestStructWithClonableClassField[1' 2];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToClassArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var source = new CloneTestClass[2];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToClassArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var destination = new CloneTestClass[3];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToClassArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var source = new CloneTestClass[2];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToClassArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var destination = new CloneTestClass[3];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToStructArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var source = new CloneTestStruct[2];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,CloneToStructArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var destination = new CloneTestStruct[3];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToStructArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var source = new CloneTestStruct[2];
Magic Number,iSynaptic.Commons.Runtime.Serialization,CloneableTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Runtime\Serialization\Cloneable.ClrPrimitiveTests.cs,ShallowCloneToStructArrayOfDifferingLengthsWillNotWork,The following statement contains a magic number: var destination = new CloneTestStruct[3];
Magic Number,iSynaptic.Commons.Text,IndentingTestWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\IndentingTestWriterTests.cs,Write_WithTwoLevelsOfIndentation,The following statement contains a magic number: iw.IncreaseIndentation(2);
Magic Number,iSynaptic.Commons.Text,IndentingTestWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\IndentingTestWriterTests.cs,IncreasingIndentation_NeverOverflows,The following statement contains a magic number: iw.IncreaseIndentation(42);
Magic Number,iSynaptic.Commons.Text,IndentingTestWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\IndentingTestWriterTests.cs,IncreasingIndentation_ByMustBeGreaterThanZero,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => iw.IncreaseIndentation(-42));
Magic Number,iSynaptic.Commons.Text,IndentingTestWriterTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\IndentingTestWriterTests.cs,DecreasingIndentation_ByMustBeGreaterThanZero,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => iw.DecreaseIndentation(-42));
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ValidatePosition,The following statement contains a magic number: Assert.AreEqual(2' scanningReader.Position);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ValidatePosition,The following statement contains a magic number: Assert.AreEqual(3' scanningReader.Position);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ReadBlock,The following statement contains a magic number: char[] buffer = new char[4];
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ReadBlock,The following statement contains a magic number: int count = scanningReader.ReadBlock(buffer' 0' 2);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ReadBlock,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ReadBlock,The following statement contains a magic number: count = scanningReader.ReadBlock(buffer' 2' 2);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ReadBlock,The following statement contains a magic number: count = scanningReader.ReadBlock(buffer' 2' 2);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,ReadBlock,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,LookAheadMany,The following statement contains a magic number: Assert.AreEqual('t'' scanningReader.LookAhead(3));
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,LookAheadMany,The following statement contains a magic number: Assert.AreEqual('s'' scanningReader.LookAhead(2));
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,LookAheadReturnsNegativeOneOnEnd,The following statement contains a magic number: Assert.AreEqual(-1' scanningReader.LookAhead(5));
Magic Number,iSynaptic.Commons.Text.Parsing,ScanningTextReaderTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Text\Parsing\ScanningTextReaderTests.cs,PeekWithLookahead,The following statement contains a magic number: Assert.AreEqual('s'' scanningReader.LookAhead(2));
Magic Number,iSynaptic.Commons.Threading.Tasks,TaskExtensionsTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Threading\Tasks\TaskExtensionsTests.cs,GetAsyncValue,The following statement contains a magic number: await Task.Delay(100);
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesAreFlushedIntoOriginalObjectOnTransactionCompletion,The following statement contains a magic number: gw.Value.TestInt = 42;
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesAreFlushedIntoOriginalObjectOnTransactionCompletion,The following statement contains a magic number: Assert.AreEqual(42' so.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesAreDiscardedOnTransactionRollback,The following statement contains a magic number: gw.Value.TestInt = 42;
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,WithinTransaction_SettingValueOnlyCopiesData,The following statement contains a magic number: gw.Value = new SimpleObject                                 {                                     TestGuid = newGuid'                                     TestInt = 42'                                     TestString = "Hello' World!"                                 };
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,WithinTransaction_SettingValueOnlyCopiesData,The following statement contains a magic number: Assert.AreEqual(42' currentValue.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,WithoutTransaction_SettingValueOnlyCopiesData,The following statement contains a magic number: gw.Value = new SimpleObject                             {                                 TestGuid = newGuid'                                 TestInt = 42'                                 TestString = "Hello' World!"                             };
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,WithoutTransaction_SettingValueOnlyCopiesData,The following statement contains a magic number: Assert.AreEqual(42' currentValue.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,CopiesInitalValueOnNewTransaction,The following statement contains a magic number: var so = new SimpleObject                           {                              TestGuid = newGuid'                              TestInt = 42'                              TestString = "Hello' World!"                           };
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesNotVisibleOutsideOfTransaction,The following statement contains a magic number: gw.Value.TestInt = 42;
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesNotVisibleOutsideOfTransaction,The following statement contains a magic number: Assert.AreNotEqual(42' gw.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesVisibleWithinTransaction,The following statement contains a magic number: tso.Value.TestInt = 42;
Magic Number,iSynaptic.Commons.Transactions,TransactionalGatewayTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalGatewayTests.cs,ChangesVisibleWithinTransaction,The following statement contains a magic number: Assert.AreEqual(42' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesNotVisibleOutsideOfTransaction,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesNotVisibleOutsideOfTransaction,The following statement contains a magic number: Assert.AreNotEqual(7' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesVisibleWithinTransaction,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesVisibleWithinTransaction,The following statement contains a magic number: Assert.AreEqual(7' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesRolledBack,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesRolledBack,The following statement contains a magic number: Assert.AreNotEqual(7' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesCommited,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ChangesCommited,The following statement contains a magic number: Assert.AreEqual(7' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ConcurrencyCollision,The following statement contains a magic number: Assert.Throws<TransactionAbortedException>(() =>              {                  using (TransactionScope scope = new TransactionScope())                  {                      tso.Value.TestInt = 7;                      tso.Value.TestGuid = Guid.NewGuid();                      tso.Value.TestString = "Testing";                        using (TransactionScope scopeTwo = new TransactionScope(TransactionScopeOption.RequiresNew))                      {                          tso.Value.TestInt = 9;                          tso.Value.TestGuid = Guid.NewGuid();                          tso.Value.TestString = "Testing Two";                            scopeTwo.Complete();                      }                        scope.Complete();                  }              });
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ConcurrencyCollision,The following statement contains a magic number: Assert.Throws<TransactionAbortedException>(() =>              {                  using (TransactionScope scope = new TransactionScope())                  {                      tso.Value.TestInt = 7;                      tso.Value.TestGuid = Guid.NewGuid();                      tso.Value.TestString = "Testing";                        using (TransactionScope scopeTwo = new TransactionScope(TransactionScopeOption.RequiresNew))                      {                          tso.Value.TestInt = 9;                          tso.Value.TestGuid = Guid.NewGuid();                          tso.Value.TestString = "Testing Two";                            scopeTwo.Complete();                      }                        scope.Complete();                  }              });
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,DependentTransactions,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,DependentTransactions,The following statement contains a magic number: Action assertAction = delegate()                  {                      using (dt)                      using (TransactionScope scopeTwo = new TransactionScope(dt))                      {                          Assert.AreEqual(7' tso.Value.TestInt);                          Assert.AreEqual(id' tso.Value.TestGuid);                          Assert.AreEqual("Testing"' tso.Value.TestString);                            scopeTwo.Complete();                          dt.Complete();                      }                  };
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,NotVisibleOnOtherThread,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,NotVisibleOnOtherThread,The following statement contains a magic number: Action assertAction = delegate()                  {                      Assert.AreNotEqual(7' tso.Value.TestInt);                      Assert.AreNotEqual(id' tso.Value.TestGuid);                      Assert.AreNotEqual("Testing"' tso.Value.TestString);                  };
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ConcurrencyCollisionAcrossThreads,The following statement contains a magic number: Assert.Throws<TransactionAbortedException>(() =>              {                  using (TransactionScope scope = new TransactionScope())                  {                      tso.Value.TestInt = 7;                      tso.Value.TestGuid = id;                      tso.Value.TestString = "Testing";                        Action assertAction = delegate()                      {                          using (TransactionScope scopeTwo = new TransactionScope())                          {                              tso.Value.TestInt = 9;                              tso.Value.TestGuid = Guid.NewGuid();                              tso.Value.TestString = "Testing Two";                                scopeTwo.Complete();                          }                      };                        IAsyncResult ar = assertAction.BeginInvoke(null' null);                        ar.AsyncWaitHandle.WaitOne();                      assertAction.EndInvoke(ar);                        scope.Complete();                  }              });
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ConcurrencyCollisionAcrossThreads,The following statement contains a magic number: Assert.Throws<TransactionAbortedException>(() =>              {                  using (TransactionScope scope = new TransactionScope())                  {                      tso.Value.TestInt = 7;                      tso.Value.TestGuid = id;                      tso.Value.TestString = "Testing";                        Action assertAction = delegate()                      {                          using (TransactionScope scopeTwo = new TransactionScope())                          {                              tso.Value.TestInt = 9;                              tso.Value.TestGuid = Guid.NewGuid();                              tso.Value.TestString = "Testing Two";                                scopeTwo.Complete();                          }                      };                        IAsyncResult ar = assertAction.BeginInvoke(null' null);                        ar.AsyncWaitHandle.WaitOne();                      assertAction.EndInvoke(ar);                        scope.Complete();                  }              });
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactions,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactions,The following statement contains a magic number: Assert.AreEqual(7' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactions,The following statement contains a magic number: tso.Value.TestInt = 9;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactions,The following statement contains a magic number: Assert.AreEqual(9' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactionsAcrossThreads,The following statement contains a magic number: Action firstChange = delegate()              {                  using (TransactionScope scope = new TransactionScope())                  {                      tso.Value.TestInt = 7;                      tso.Value.TestGuid = id;                      tso.Value.TestString = "Testing";                        scope.Complete();                  }              };
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactionsAcrossThreads,The following statement contains a magic number: Assert.AreEqual(7' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactionsAcrossThreads,The following statement contains a magic number: tso.Value.TestInt = 9;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,MultipleSerializedTransactionsAcrossThreads,The following statement contains a magic number: Assert.AreEqual(9' tso.Value.TestInt);
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,NoMemoryLeakOnCommit,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,NoMemoryLeakOnRollback,The following statement contains a magic number: tso.Value.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,ExceptionUponCompletionRollback,The following statement contains a magic number: Assert.Throws<TransactionalConcurrencyException>(() =>              {                  using (TransactionScope scope = new TransactionScope())                  {                      tso.Value.TestInt = 7;                      tso.Value.TestGuid = Guid.NewGuid();                      tso.Value.TestString = "Testing";                        Transaction.Current.EnlistVolatile(concurrencyConflictResource' EnlistmentOptions.None);                        scope.Complete();                  }              });
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,SetValueWithoutTransaction,The following statement contains a magic number: state.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,SetValue,The following statement contains a magic number: state.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,SetValueTwice,The following statement contains a magic number: state.TestInt = 7;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,SetValueTwice,The following statement contains a magic number: state2.TestInt = 9;
Magic Number,iSynaptic.Commons.Transactions,TransactionalTests,D:\research\architectureSmells\repos\iSynaptic_iSynaptic.Commons\Testing\iSynaptic.Commons.UnitTests\Transactions\TransactionalTests.cs,InDoubt,The following statement contains a magic number: SimpleObject obj = new SimpleObject              {                  TestInt = 7'                  TestGuid = Guid.NewGuid()'                  TestString = "Testing"              };
