Implementation smell,Namespace,Class,File,Method,Description
Complex Method,iSynaptic.Commons.Collections.Generic,SmartLoop,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\SmartLoop.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,iSynaptic.Commons.Linq,EnumerableExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Linq\EnumerableExtensions.cs,RecurseCore,Cyclomatic complexity of the method is 7
Complex Method,iSynaptic.Commons.Linq,EnumerableExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Linq\EnumerableExtensions.cs,OrCore,Cyclomatic complexity of the method is 8
Long Parameter List,iSynaptic.Commons,Maybe,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Maybe.cs,RunAsync,The method has 5 parameters.
Long Parameter List,iSynaptic.Commons.Data,ExodataRequest,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Data\ExodataRequest.cs,Create,The method has 4 parameters.
Long Parameter List,iSynaptic.Commons.Data,ExodataRequest,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Data\ExodataRequest.cs,ExodataRequest,The method has 4 parameters.
Long Parameter List,iSynaptic.Commons.Diagnostics,LoggerExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Diagnostics\LoggerExtensions.cs,SafeLog,The method has 4 parameters.
Long Parameter List,iSynaptic.Commons.Linq,EnumerableExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Linq\EnumerableExtensions.cs,RecurseCore,The method has 4 parameters.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotNull,The length of the statement  "	return value == null ? Outcome.Failure (new CheckFailure (CheckType.NotNull' name' message ?? string.Format ("The argument {0} must not be null."' name))) : Outcome<CheckFailure>.Success; " is 187.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotEmpty,The length of the statement  "	return string.Empty.Equals (value) ? Outcome.Failure (new CheckFailure (CheckType.NotEmpty' name' message ?? string.Format ("The argument {0} must not be empty."' name))) : Outcome<CheckFailure>.Success; " is 203.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotEmpty,The length of the statement  "	return value.Equals (Guid.Empty) ? Outcome.Failure (new CheckFailure (CheckType.NotEmpty' name' message ?? string.Format ("The argument {0} must not be empty."' name))) : Outcome<CheckFailure>.Success; " is 201.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotEmpty,The length of the statement  "	return null != value && value.Any () != true ? Outcome.Failure (new CheckFailure (CheckType.NotEmpty' name' message ?? string.Format ("The argument {0} must not be empty."' name))) : Outcome<CheckFailure>.Success; " is 213.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotNullOrEmpty,The length of the statement  "	return string.IsNullOrEmpty (value) ? Outcome.Failure (new CheckFailure (CheckType.NotNullOrEmpty' name' message ?? string.Format ("The argument {0} must not be null or empty."' name))) : Outcome<CheckFailure>.Success; " is 218.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotNullOrEmpty,The length of the statement  "	return null == value || value.Any () != true ? Outcome.Failure (new CheckFailure (CheckType.NotNullOrEmpty' name' message ?? string.Format ("The argument {0} must not be null or empty."' name))) : Outcome<CheckFailure>.Success; " is 227.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,NotNullOrWhiteSpace,The length of the statement  "	return string.IsNullOrWhiteSpace (value) ? Outcome.Failure (new CheckFailure (CheckType.NotNullOrWhiteSpace' name' message ?? string.Format ("The argument {0} must not be null or white space."' name))) : Outcome<CheckFailure>.Success; " is 234.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,MustBeDefined,The length of the statement  "	return Enum.IsDefined (typeof(T)' value) != true ? Outcome.Failure (new CheckFailure (CheckType.MustBeDefined' name' message ?? string.Format ("The argument {0} must be a defined enum value."' name))) : Outcome<CheckFailure>.Success; " is 233.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,IsOfType,The length of the statement  "	return !(value is T) ? Outcome.Failure (new CheckFailure (CheckType.IsOfType' name' message ?? string.Format ("The argument {0} must be an instance of the type {1}."' name' typeof(T).FullName))) : Outcome<CheckFailure>.Success; " is 227.
Long Statement,iSynaptic.Commons,Check,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Check.cs,That,The length of the statement  "	return !expectation ? Outcome.Failure (new CheckFailure (CheckType.That' name' message)) : Outcome<CheckFailure>.Success; " is 121.
Long Statement,iSynaptic.Commons,Convert,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Convert.cs,GetDefault,The length of the statement  "	var conversionMethod = destType.FindConversionMethod (sourceType' destType) ?? sourceType.FindConversionMethod (sourceType' destType); " is 134.
Long Statement,iSynaptic.Commons,FuncExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\FuncExtensions.generated.cs,Memoize,The length of the statement  "	var dictionary = new LazySelectionDictionary<Tuple<T1' T2' T3>' TResult> (x => @this (x.Item1' x.Item2' x.Item3).ToMaybe ()); " is 125.
Long Statement,iSynaptic.Commons,FuncExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\FuncExtensions.generated.cs,Memoize,The length of the statement  "	var dictionary = new LazySelectionDictionary<Tuple<T1' T2' T3' T4>' TResult> (x => @this (x.Item1' x.Item2' x.Item3' x.Item4).ToMaybe ()); " is 138.
Long Statement,iSynaptic.Commons,FuncExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\FuncExtensions.generated.cs,Memoize,The length of the statement  "	var dictionary = new LazySelectionDictionary<Tuple<T1' T2' T3' T4' T5>' TResult> (x => @this (x.Item1' x.Item2' x.Item3' x.Item4' x.Item5).ToMaybe ()); " is 151.
Long Statement,iSynaptic.Commons,FuncExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\FuncExtensions.generated.cs,Memoize,The length of the statement  "	var dictionary = new LazySelectionDictionary<Tuple<T1' T2' T3' T4' T5' T6>' TResult> (x => @this (x.Item1' x.Item2' x.Item3' x.Item4' x.Item5' x.Item6).ToMaybe ()); " is 164.
Long Statement,iSynaptic.Commons,FuncExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\FuncExtensions.generated.cs,Memoize,The length of the statement  "	var dictionary = new LazySelectionDictionary<Tuple<T1' T2' T3' T4' T5' T6' T7>' TResult> (x => @this (x.Item1' x.Item2' x.Item3' x.Item4' x.Item5' x.Item6' x.Item7).ToMaybe ()); " is 177.
Long Statement,iSynaptic.Commons,FuncExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\FuncExtensions.generated.cs,ToEqualityComparer,The length of the statement  "	return ToEqualityComparer<T> ((x' y) => EqualityComparer<TResult>.Default.Equals (selector (x)' selector (y))' x => EqualityComparer<TResult>.Default.GetHashCode ((selector (x)))); " is 180.
Long Statement,iSynaptic.Commons,Maybe,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Maybe.cs,Join,The length of the statement  "	return new Maybe<Tuple<T' TOther>> (() => self.HasValue && other.HasValue ? new Maybe<Tuple<T' TOther>> (Tuple.Create (self.Value' other.Value)) : NoValue); " is 156.
Long Statement,iSynaptic.Commons,Maybe,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Maybe.cs,Join,The length of the statement  "	return new Maybe<TResult> (() => self.HasValue && other.HasValue ? new Maybe<TResult> (selector (self.Value' other.Value)) : NoValue); " is 134.
Long Statement,iSynaptic.Commons,Maybe,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Maybe.cs,Join,The length of the statement  "	return new Maybe<TResult> (() => self.HasValue && other.HasValue ? Return (selector (self.Value' other.Value)) : NoValue); " is 122.
Long Statement,iSynaptic.Commons,Maybe,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Maybe.cs,RunAsync,The length of the statement  "	var task = Task.Factory.StartNew (() => self.Run (action)' cancellationToken' taskCreationOptions' taskScheduler ?? TaskScheduler.Current); " is 139.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "		var baseDispatcher = baseHandlerType.IsAssignableFrom (t.BaseType) ? GetDispatcher (t.BaseType' methodName' dictionary) : null; " is 127.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "		var dispatchers = t.GetMethods (BindingFlags.NonPublic | BindingFlags.Instance).Where (x => x.DeclaringType == t).Select (m => new { " is 132.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "		}).Where (x => x.Method.Name == methodName && x.Parameters.Length == 1).Where (x => x.Method.ReturnType == typeof(void) || x.Method.ReturnType == typeof(Task)).Select (x => new { " is 178.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "		}).Where (x => paramType.IsAssignableFrom (x.ParameterType)).OrderByDescending (x => x.ParameterType' _typeHierarchyComparer).Select (x => { " is 140.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "			var applicatorBody = x.ReturnsTask ? (Expression)Expression.Return (returnLabel' call' typeof(Task)) : Expression.Block (call' Expression.Return (returnLabel' Expression.Constant (_completedTask)' typeof(Task))); " is 212.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "				Expression.Return (returnLabel' Expression.Invoke (Expression.Constant (baseDispatcher)' handlerParam' inputParam)' typeof(Task)) " is 129.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,GetDispatcher,The length of the statement  "		return Expression.Lambda<Func<MessageHandler' object' Task>> (Expression.Label (returnLabel' Expression.Block (typeof(Task)' new[] { " is 132.
Long Statement,iSynaptic.Commons,MessageHandler,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MessageHandler.cs,HandleUnexpectedMessage,The length of the statement  "	tcs.SetException (new InvalidOperationException (String.Format ("Unable to handle message of type '{0}'."' message.GetType ().FullName))); " is 138.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,InformMany,The length of the statement  "		return new Outcome<TResult> (self.WasSuccessful & outcomes.All (x => x.WasSuccessful)' outcomes.SelectMany (x => x.Observations)); " is 130.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,Ignore,The length of the statement  "	return @this.InformMany (t => predicate (t) ? new Outcome<TObservation> (@this.WasSuccessful) : new Outcome<TObservation> (@this.WasSuccessful' new[] { " is 151.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,Observe,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful' self.Observations.Concat (new[] { " is 120.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,Observe,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful' self.Observations.Concat (new[] { " is 120.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,ObserveMany,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful' self.Observations.Concat (observations))); " is 129.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,ObserveMany,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful' self.Observations.Concat (selector (self.WasSuccessful)))); " is 146.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,FailIf,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful && !predicate ()' self.Observations)); " is 124.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,FailOn,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful & !self.Observations.Any (predicate)' self.Observations)); " is 144.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,WithValueOnSuccess,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (Maybe.If (self.WasSuccessful' Maybe.Return (value))' self)); " is 131.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,Combine,The length of the statement  "		return new Outcome<TObservation> (cachedOutcomes.All (x => x.WasSuccessful)' cachedOutcomes.SelectMany (x => x.Observations)); " is 126.
Long Statement,iSynaptic.Commons,Outcome,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Outcome.cs,OfType,The length of the statement  "	return new Outcome<TObservation> (() => new Outcome<TObservation> (self.WasSuccessful' self.Observations.OfType<TObservation> ())); " is 131.
Long Statement,iSynaptic.Commons,EnumExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\EnumExtensions.cs,ContainsAny,The length of the statement  "	return flags.OfType<Enum> ().SelectMany (GetFlagsCore<T>).Distinct ().Select (f => Convert.ToUInt64 (f)).Any (f => (thisValue & f) != 0 && thisValue != 0); " is 155.
Long Statement,iSynaptic.Commons,EnumExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\EnumExtensions.cs,ContainsAll,The length of the statement  "	return flags.OfType<Enum> ().SelectMany (GetFlagsCore<T>).Distinct ().Select (f => Convert.ToUInt64 (f)).All (f => ((thisValue & f) == f && thisValue != 0)); " is 157.
Long Statement,iSynaptic.Commons,MethodReflectionObjectExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\MethodReflectionObjectExtensions.cs,GetDelegate,The length of the statement  "	return targetType.GetMethod (methodName' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy' null' parameterTypes' null).ToMaybe ().Let (info => info.Where (x => x.IsStatic).Select (x => Delegate.CreateDelegate (typeof(T)' x)).Or (info.Select (x => Delegate.CreateDelegate (typeof(T)' target' x)))).Cast<T> ().ValueOrDefault (); " is 400.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,SelectResult,The length of the statement  "		return new Result<TResult' TObservation> (selectedResult.ToMaybe ()' self.ToOutcome ().Combine (selectedResult.ToOutcome ())); " is 126.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Select,The length of the statement  "	return new Result<TResult' TObservation> (() => new Result<TResult' TObservation> (self.ToMaybe ().Select (selector)' self.ToOutcome ())); " is 138.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Select,The length of the statement  "	return new Result<TResult' TObservation> (() => new Result<TResult' TObservation> (self.ToMaybe ().Select (selector)' self.ToOutcome ())); " is 138.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Where,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ().Where (predicate)' self.ToOutcome ())); " is 126.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Observe,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Observe (observation))); " is 130.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Observe,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Observe (observation))); " is 130.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Observe,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Observe (selector (self.ToMaybe ())))); " is 145.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Observe,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Observe (selector (self.ToMaybe ())))); " is 145.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,ObserveMany,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().ObserveMany (observations))); " is 135.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,ObserveMany,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().ObserveMany (observations))); " is 135.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,ObserveMany,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().ObserveMany (selector (self.ToMaybe ())))); " is 149.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,ObserveMany,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().ObserveMany (selector (self.ToMaybe ())))); " is 149.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,InformMany,The length of the statement  "	return new Result<T' TResult> (() => new Result<T' TResult> (self.ToMaybe ()' self.ToOutcome ().InformMany (selector))); " is 120.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Notice,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Notice (predicate))); " is 127.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Ignore,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Ignore (predicate))); " is 127.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,Combine,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().Combine (outcomes))); " is 127.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailIf,The length of the statement  "	return new Result<Unit' TObservation> (() => new Result<Unit' TObservation> (Maybe.NoValue' Outcome.FailIf (predicate' failureObservation))); " is 141.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailIf,The length of the statement  "	return new Result<Unit' TObservation> (() => new Result<Unit' TObservation> (Maybe.NoValue' Outcome.FailIf (predicate' failureObservation))); " is 141.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailIf,The length of the statement  "	return new Result<Unit' TObservation> (() => new Result<Unit' TObservation> (Maybe.NoValue' Outcome.FailIf (predicate' failureObservation))); " is 141.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailIf,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().FailIf (predicate))); " is 127.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailIf,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().FailIf (predicate' failureObservation))); " is 147.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailIf,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().FailIf (predicate' failureObservation))); " is 147.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,FailOn,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.ToMaybe ()' self.ToOutcome ().FailOn (predicate))); " is 127.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,NoValueOn,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.Observations.Any (predicate) ? Maybe.NoValue : self.ToMaybe ()' self.ToOutcome ())); " is 160.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,NoValueOnFailure,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.WasSuccessful ? self.ToMaybe () : Maybe.NoValue' self.ToOutcome ())); " is 145.
Long Statement,iSynaptic.Commons,Result,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Result.cs,OfType,The length of the statement  "	return new Result<T' TObservation> (() => new Result<T' TObservation> (self.AsMaybe ().OfType<T> ()' self.AsOutcome ().OfType<TObservation> ())); " is 145.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "		var applicators = t.GetMethods (BindingFlags.NonPublic | BindingFlags.Instance).Where (x => x.DeclaringType == t).Select (m => new { " is 132.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "		}).Where (x => x.Method.Name.StartsWith ("Visit") && (x.ParameterCount == 1 || x.ParameterCount == 2)).Select (x => new { " is 121.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "		}).Where (x => subjectType.IsAssignableFrom (x.SubjectType)).Where (x => x.StateType == null || stateType.IsAssignableFrom (x.StateType)).Where (x => (x.Method.ReturnType == typeof(void)) || (x.StateType != null && stateType.IsAssignableFrom (x.Method.ReturnType))).OrderByDescending (x => x.SubjectType' _typeHierarchyComparer).ThenByDescending (x => x.StateType' _typeHierarchyComparer).Select (x => { " is 403.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "			var typeTest = x.StateType != null ? (Expression)Expression.AndAlso (subjectTypeTest' Expression.OrElse (Expression.TypeIs (stateParam' x.StateType)' Expression.Equal (stateParam' Expression.Default (stateType)))) : subjectTypeTest; " is 232.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "				return Expression.IfThen (typeTest' Expression.Block (callMethod' Expression.Return (returnLabel' stateParam' stateType))); " is 123.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "			return Expression.IfThen (typeTest' Expression.Return (returnLabel' Expression.Convert (callMethod' stateType)' stateType)); " is 124.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "				Expression.Return (returnLabel' Expression.Invoke (Expression.Constant (baseDispatcher)' visitorParam' subjectParam' stateParam)' stateType) " is 140.
Long Statement,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The length of the statement  "		return Expression.Lambda<VisitorDispatcher> (Expression.Label (returnLabel' Expression.Block (stateType' applicators))' visitorParam' subjectParam' stateParam).Compile (); " is 171.
Long Statement,iSynaptic.Commons,WeakReference,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\WeakReference.cs,Equals,The length of the statement  "	return Maybe.Return (true).Unless (x => ReferenceEquals (this' Null)).Where (x => HashCode == other.HashCode).Where (x => TryGetTarget ().Equals (other.TryGetTarget ())).Or (() => ReferenceEquals (other' Null)).ValueOrDefault (); " is 229.
Long Statement,iSynaptic.Commons.Collections.Generic,BaseDictionary,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\BaseDictionary.cs,Contains,The length of the statement  "	return this.TryGetValue (item.Key).Select (x => EqualityComparer<TValue>.Default.Equals (x' item.Value)).ValueOrDefault (false); " is 128.
Long Statement,iSynaptic.Commons.Collections.Generic,BaseReadOnlyDictionary,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\BaseReadOnlyDictionary.cs,Contains,The length of the statement  "	return this.TryGetValue (item.Key).Select (x => EqualityComparer<TValue>.Default.Equals (x' item.Value)).ValueOrDefault (false); " is 128.
Long Statement,iSynaptic.Commons.Collections.Generic,BaseWeakDictionary,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\BaseWeakDictionary.cs,GetEnumerator,The length of the statement  "	return _Dictionary.Select (pair => UnwrapKey (pair.Key).Join (UnwrapValue (pair.Value)' KeyValuePair.Create)).Squash ().GetEnumerator (); " is 137.
Long Statement,iSynaptic.Commons.Collections.Generic,BaseWeakDictionary,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\BaseWeakDictionary.cs,PurgeGarbage,The length of the statement  "	var itemsToPurge = _Dictionary.Where (pair => !UnwrapKey (pair.Key).Join (UnwrapValue (pair.Value)).HasValue).ToArray (); " is 121.
Long Statement,iSynaptic.Commons.Collections.Generic,ProjectionCollection,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\ProjectionCollection.cs,Contains,The length of the statement  "	var predicate = item == null ? (Func<TSourceItem' bool>)(x => _Selector (x) == null) : (x => item.Equals (_Selector (x))); " is 122.
Long Statement,iSynaptic.Commons.Collections.Generic,SmartLoop,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Collections\Generic\SmartLoop.cs,Execute,The length of the statement  "	var finalItems = _Items.Where (x => _IgnorePredicate == null || _IgnorePredicate (x) != true).Where (x => IgnoreItems.Contains (x) != true).ToList (); " is 150.
Long Statement,iSynaptic.Commons.Data,ExodataHelper,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Data\ExodataHelper.cs,ExtractMemberInfoForExodata,The length of the statement  "	return member.ExtractMemberInfoFromMemberExpression ().Where (x => x.DeclaringType.IsAssignableFrom (typeof(TSubject))).Where (x => x is PropertyInfo || x is FieldInfo).ThrowOnNoValue (() => new ArgumentException ("You can only retrieve member exodata for the subject's direct properties and fields."' "member")).Value; " is 319.
Long Statement,iSynaptic.Commons.Data,ExodataRequest,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Data\ExodataRequest.cs,TryToAdapt,The length of the statement  "	if (typeof(TSourceExodata).IsAssignableFrom (typeof(TExodata)) && typeof(TContext).IsAssignableFrom (typeof(TSourceContext)) && typeof(TSubject).IsAssignableFrom (typeof(TSourceSubject))) { " is 189.
Long Statement,iSynaptic.Commons.Data,ExodataRequest,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Data\ExodataRequest.cs,TryToAdapt,The length of the statement  "		return new RequestAdapter<TSourceExodata' TSourceContext' TSourceSubject> (request).ToMaybe<IExodataRequest<TExodata' TContext' TSubject>> (); " is 142.
Long Statement,iSynaptic.Commons.Data,ExodataDeclaration,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Data\ExodataDeclaration.cs,TryResolve,The length of the statement  "	return ExodataResolver.ToMaybe ().Or (Ioc.TryResolve<IExodataResolver>).SelectMaybe (x => x.TryResolve (ExodataRequest.Create<TExodata' TContext' TSubject> (this' context' subject' member))).SelectMaybe (x => EnsureValid (x' "bound")); " is 235.
Long Statement,iSynaptic.Commons.Linq,EnumerableExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Linq\EnumerableExtensions.cs,OrderByPriorities,The length of the statement  "	return @this.OrderByPriorities ((l' r) => higherPrioritySelector (l)' additionalPrioritySelectors != null ? additionalPrioritySelectors.Select (s => (Func<TSource' TSource' bool>)((l' r) => s (l))).ToArray () : null); " is 217.
Long Statement,iSynaptic.Commons.Linq,EnumerableExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Linq\EnumerableExtensions.cs,Delimit,The length of the statement  "	@this.SmartLoop ().Between ((x' y) => builder.Append (delimiter)).Each (x => builder.Append (formatter (x))).Execute (); " is 120.
Long Statement,iSynaptic.Commons.Linq,EnumerableExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Linq\EnumerableExtensions.cs,ZipAllCore,The length of the statement  "		var enumerators = sources.Where (x => x != null).Select (x => x.ToZipableEnumerable ()).Select (x => compositeDisposable.Add (x.GetEnumerator ())).ToArray (); " is 158.
Long Statement,iSynaptic.Commons.Reflection,ReflectionExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Reflection\ReflectionExtensions.cs,GetAttributesOfType,The length of the statement  "	return provider.GetCustomAttributes (true).Where (x => x.GetType ().DoesImplementType (attributeType)).Cast<Attribute> (); " is 122.
Long Statement,iSynaptic.Commons.Reflection,ReflectionExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Reflection\ReflectionExtensions.cs,DoesImplementType,The length of the statement  "	return candidateType.Recurse (x => x.BaseType).Select (TryGetGenericTypeDefinition).Union (candidateType.GetInterfaces ().Select (TryGetGenericTypeDefinition)).Where (x => x.HasValue).Any (x => x.Value == testType); " is 215.
Long Statement,iSynaptic.Commons.Reflection,ReflectionExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Reflection\ReflectionExtensions.cs,TryGetGenericTypeDefinition,The length of the statement  "	return Maybe.If (source.IsGenericTypeDefinition' source.ToMaybe ()).Or (() => Maybe.If (source.IsGenericType' Maybe.Defer (source.GetGenericTypeDefinition))); " is 158.
Long Statement,iSynaptic.Commons.Reflection,ReflectionExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Reflection\ReflectionExtensions.cs,FindConversionMethod,The length of the statement  "	}).Where (x => x.FromType.IsAssignableFrom (fromType)).OrderByPriorities (x => x.ToType == toType' x => x.FromType == fromType' x => x.Method.Name == "op_Implicit"' x => x.Method.Name == "op_Explicit").Select (x => x.Method).FirstOrDefault (); " is 243.
Long Statement,iSynaptic.Commons.Reflection,ReflectionExtensions,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Reflection\ReflectionExtensions.cs,GetFieldsDeeplyCore,The length of the statement  "	var results = source.Recurse (x => x.BaseType).SelectMany (x => x.GetFields (bindingFlags).Where (y => y.DeclaringType == x)); " is 126.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,BuildStrategy,The length of the statement  "				var arrayCloneMethod = GetMethod (typeof(Cloneable<T>)' "ArrayClone"' typeof(Array)' typeof(Array)' typeof(CloneContext)); " is 122.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,BuildDynamicStrategy,The length of the statement  "			if (field.IsDefined (typeof(CloneReferenceOnlyAttribute)' true) || field.FieldType.IsDefined (typeof(CloneReferenceOnlyAttribute)' true) || IsTypeCloneablePrimative (field.FieldType)) { " is 185.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,EmitCloneField,The length of the statement  "	Type strategyMethodType = typeof(Func<' ' ' >).MakeGenericType (field.FieldType' field.FieldType' typeof(CloneContext)' field.FieldType); " is 137.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,EmitCloneField,The length of the statement  "	MethodInfo getFuncMethod = GetMethod (strategyMethodType' "Invoke"' field.FieldType' field.FieldType' typeof(CloneContext)); " is 124.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,IsNotCloneable,The length of the statement  "	if (field.DeclaringType != null && field.DeclaringType.FullName == "System.Runtime.Serialization.SafeSerializationManager") " is 123.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,GetMethod,The length of the statement  "	const BindingFlags bindingFlags = BindingFlags.Static | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic; " is 125.
Long Statement,iSynaptic.Commons.Runtime.Serialization,Cloneable,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Runtime\Serialization\Cloneable.cs,CanClone,The length of the statement  "			MethodInfo canCloneMethod = GetMethod (fieldClonableType' "CanClone"' typeof(Type)' typeof(bool)' typeof(Func<FieldInfo' bool>)); " is 129.
Magic Number,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The following statement contains a magic number: return (VisitorDispatcher)_dispatchers.GetOrAdd (visitorType' t => {  	var subjectType = typeof(Object);  	var stateType = typeof(TState);  	var baseDispatcher = baseVisitorType.IsAssignableFrom (t.BaseType) ? GetDispatcher (t.BaseType) : null;  	var visitorParam = Expression.Parameter (baseVisitorType' "visitor");  	var subjectParam = Expression.Parameter (subjectType' "subject");  	var stateParam = Expression.Parameter (stateType' "state");  	var returnLabel = Expression.Label (stateType);  	var applicators = t.GetMethods (BindingFlags.NonPublic | BindingFlags.Instance).Where (x => x.DeclaringType == t).Select (m => new {  		Method = m'  		Parameters = m.GetParameters ()  	}).Select (x => new {  		x.Method'  		x.Parameters'  		ParameterCount = x.Parameters.Length  	}).Where (x => x.Method.Name.StartsWith ("Visit") && (x.ParameterCount == 1 || x.ParameterCount == 2)).Select (x => new {  		x.Method'  		SubjectType = x.Parameters [0].ParameterType'  		StateType = x.ParameterCount == 2 ? x.Parameters [1].ParameterType : null  	}).Where (x => subjectType.IsAssignableFrom (x.SubjectType)).Where (x => x.StateType == null || stateType.IsAssignableFrom (x.StateType)).Where (x => (x.Method.ReturnType == typeof(void)) || (x.StateType != null && stateType.IsAssignableFrom (x.Method.ReturnType))).OrderByDescending (x => x.SubjectType' _typeHierarchyComparer).ThenByDescending (x => x.StateType' _typeHierarchyComparer).Select (x => {  		var subjectTypeTest = Expression.TypeIs (subjectParam' x.SubjectType);  		var typeTest = x.StateType != null ? (Expression)Expression.AndAlso (subjectTypeTest' Expression.OrElse (Expression.TypeIs (stateParam' x.StateType)' Expression.Equal (stateParam' Expression.Default (stateType)))) : subjectTypeTest;  		var subjectArgument = Expression.Convert (subjectParam' x.SubjectType);  		var arguments = x.StateType != null ? new[] {  			subjectArgument'  			Expression.Convert (stateParam' x.StateType)  		} : new[] {  			subjectArgument  		};  		var callMethod = Expression.Call (Expression.Convert (visitorParam' t)' x.Method' arguments);  		if (x.Method.ReturnType == typeof(void)) {  			return Expression.IfThen (typeTest' Expression.Block (callMethod' Expression.Return (returnLabel' stateParam' stateType)));  		}  		return Expression.IfThen (typeTest' Expression.Return (returnLabel' Expression.Convert (callMethod' stateType)' stateType));  	}).OfType<Expression> ().ToArray ();  	if (applicators.Length <= 0) {  		return baseDispatcher ?? (VisitorDispatcher)((v' s' st) => {  			var visitable = s as IVisitableChildren;  			return visitable != null ? v.DispatchChildren (visitable' st) : st;  		});  	}  	if (baseDispatcher != null) {  		applicators = applicators.Concat (new[] {  			Expression.Return (returnLabel' Expression.Invoke (Expression.Constant (baseDispatcher)' visitorParam' subjectParam' stateParam)' stateType)  		}).ToArray ();  	}  	return Expression.Lambda<VisitorDispatcher> (Expression.Label (returnLabel' Expression.Block (stateType' applicators))' visitorParam' subjectParam' stateParam).Compile ();  });  
Magic Number,iSynaptic.Commons,Visitor,D:\newReposJune17\iSynaptic_iSynaptic.Commons\Application\iSynaptic.Commons\Visitor.cs,GetDispatcher,The following statement contains a magic number: return (VisitorDispatcher)_dispatchers.GetOrAdd (visitorType' t => {  	var subjectType = typeof(Object);  	var stateType = typeof(TState);  	var baseDispatcher = baseVisitorType.IsAssignableFrom (t.BaseType) ? GetDispatcher (t.BaseType) : null;  	var visitorParam = Expression.Parameter (baseVisitorType' "visitor");  	var subjectParam = Expression.Parameter (subjectType' "subject");  	var stateParam = Expression.Parameter (stateType' "state");  	var returnLabel = Expression.Label (stateType);  	var applicators = t.GetMethods (BindingFlags.NonPublic | BindingFlags.Instance).Where (x => x.DeclaringType == t).Select (m => new {  		Method = m'  		Parameters = m.GetParameters ()  	}).Select (x => new {  		x.Method'  		x.Parameters'  		ParameterCount = x.Parameters.Length  	}).Where (x => x.Method.Name.StartsWith ("Visit") && (x.ParameterCount == 1 || x.ParameterCount == 2)).Select (x => new {  		x.Method'  		SubjectType = x.Parameters [0].ParameterType'  		StateType = x.ParameterCount == 2 ? x.Parameters [1].ParameterType : null  	}).Where (x => subjectType.IsAssignableFrom (x.SubjectType)).Where (x => x.StateType == null || stateType.IsAssignableFrom (x.StateType)).Where (x => (x.Method.ReturnType == typeof(void)) || (x.StateType != null && stateType.IsAssignableFrom (x.Method.ReturnType))).OrderByDescending (x => x.SubjectType' _typeHierarchyComparer).ThenByDescending (x => x.StateType' _typeHierarchyComparer).Select (x => {  		var subjectTypeTest = Expression.TypeIs (subjectParam' x.SubjectType);  		var typeTest = x.StateType != null ? (Expression)Expression.AndAlso (subjectTypeTest' Expression.OrElse (Expression.TypeIs (stateParam' x.StateType)' Expression.Equal (stateParam' Expression.Default (stateType)))) : subjectTypeTest;  		var subjectArgument = Expression.Convert (subjectParam' x.SubjectType);  		var arguments = x.StateType != null ? new[] {  			subjectArgument'  			Expression.Convert (stateParam' x.StateType)  		} : new[] {  			subjectArgument  		};  		var callMethod = Expression.Call (Expression.Convert (visitorParam' t)' x.Method' arguments);  		if (x.Method.ReturnType == typeof(void)) {  			return Expression.IfThen (typeTest' Expression.Block (callMethod' Expression.Return (returnLabel' stateParam' stateType)));  		}  		return Expression.IfThen (typeTest' Expression.Return (returnLabel' Expression.Convert (callMethod' stateType)' stateType));  	}).OfType<Expression> ().ToArray ();  	if (applicators.Length <= 0) {  		return baseDispatcher ?? (VisitorDispatcher)((v' s' st) => {  			var visitable = s as IVisitableChildren;  			return visitable != null ? v.DispatchChildren (visitable' st) : st;  		});  	}  	if (baseDispatcher != null) {  		applicators = applicators.Concat (new[] {  			Expression.Return (returnLabel' Expression.Invoke (Expression.Constant (baseDispatcher)' visitorParam' subjectParam' stateParam)' stateType)  		}).ToArray ();  	}  	return Expression.Lambda<VisitorDispatcher> (Expression.Label (returnLabel' Expression.Block (stateType' applicators))' visitorParam' subjectParam' stateParam).Compile ();  });  
