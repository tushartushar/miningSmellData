Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ShaderTK,ShaderCompiler,C:\repos\thefiddler_ShaderTK\ShaderTK\ShaderCompiler.cs,EmitMethods,The following statement contains a magic number: foreach (var method in shader.GetMethods ()) {  	if (method.DeclaringType != shader_type)  		continue;  	sb.Append (Shader.GLSL330.Types [method.ReturnType]);  	sb.Append (" ");  	sb.Append (method.Name);  	sb.Append ("(");  	bool has_parameters = false;  	foreach (var parameter in method.GetParameters ()) {  		has_parameters = true;  		ProcessParameter (parameter' sb);  		sb.Append ("' ");  	}  	if (has_parameters) {  		// remove comma from last parameter  		sb.Remove (sb.Length - 2' 2);  	}  	else {  		// empty parameter lists require "void"  		sb.Append (Shader.GLSL330.Types [typeof(void)]);  	}  	sb.AppendLine (")");  	sb.AppendLine ("{");  	Indent++;  	Indent--;  	sb.AppendLine ("}");  	sb.AppendLine ();  }  
Magic Number,ShaderTK,ShaderCompiler,C:\repos\thefiddler_ShaderTK\ShaderTK\ShaderCompiler.cs,EmitMethods,The following statement contains a magic number: foreach (var method in shader.GetMethods ()) {  	if (method.DeclaringType != shader_type)  		continue;  	sb.Append (Shader.GLSL330.Types [method.ReturnType]);  	sb.Append (" ");  	sb.Append (method.Name);  	sb.Append ("(");  	bool has_parameters = false;  	foreach (var parameter in method.GetParameters ()) {  		has_parameters = true;  		ProcessParameter (parameter' sb);  		sb.Append ("' ");  	}  	if (has_parameters) {  		// remove comma from last parameter  		sb.Remove (sb.Length - 2' 2);  	}  	else {  		// empty parameter lists require "void"  		sb.Append (Shader.GLSL330.Types [typeof(void)]);  	}  	sb.AppendLine (")");  	sb.AppendLine ("{");  	Indent++;  	Indent--;  	sb.AppendLine ("}");  	sb.AppendLine ();  }  
Magic Number,ShaderTK,ShaderCompiler,C:\repos\thefiddler_ShaderTK\ShaderTK\ShaderCompiler.cs,EmitMethods,The following statement contains a magic number: if (has_parameters) {  	// remove comma from last parameter  	sb.Remove (sb.Length - 2' 2);  }  else {  	// empty parameter lists require "void"  	sb.Append (Shader.GLSL330.Types [typeof(void)]);  }  
Magic Number,ShaderTK,ShaderCompiler,C:\repos\thefiddler_ShaderTK\ShaderTK\ShaderCompiler.cs,EmitMethods,The following statement contains a magic number: if (has_parameters) {  	// remove comma from last parameter  	sb.Remove (sb.Length - 2' 2);  }  else {  	// empty parameter lists require "void"  	sb.Append (Shader.GLSL330.Types [typeof(void)]);  }  
Magic Number,ShaderTK,ShaderCompiler,C:\repos\thefiddler_ShaderTK\ShaderTK\ShaderCompiler.cs,EmitMethods,The following statement contains a magic number: sb.Remove (sb.Length - 2' 2);  
Magic Number,ShaderTK,ShaderCompiler,C:\repos\thefiddler_ShaderTK\ShaderTK\ShaderCompiler.cs,EmitMethods,The following statement contains a magic number: sb.Remove (sb.Length - 2' 2);  
