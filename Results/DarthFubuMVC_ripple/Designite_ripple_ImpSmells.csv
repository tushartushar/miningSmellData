Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ripple.Nuget,NugetPlanBuilder,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetPlanBuilder.cs,buildPlan,Cyclomatic complexity of the method is 9
Long Parameter List,ripple.Model,FeedService,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\FeedService.cs,findDependenciesFor,The method has 5 parameters. Parameters: dependency' mode' depth' location' dependencies
Long Parameter List,ripple.Model,FeedService,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\FeedService.cs,processNuget,The method has 6 parameters. Parameters: nuget' dependency' mode' depth' location' dependencies
Long Statement,ripple.Directives,DirectiveProcessor,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Directives\DirectiveProcessor.cs,ProcessNuget,The length of the statement  "            files.Each(file => ProcessDirectives(file.PathRelativeTo(_solution.Directory)' directory.PathRelativeTo(_solution.Directory))); " is 127.
Long Statement,ripple.Model,DependencyCollection,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\DependencyCollection.cs,Validate,The length of the statement  "                    result.AddProblem(x.Name' "The dependency's update mode is set to 'Fixed' but no version is specified (xml attributes are case sensitive)."); " is 141.
Long Statement,ripple.Model,FeedRegistry,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\FeedRegistry.cs,BranchUrl,The length of the statement  "                RippleLog.Debug("Detected branch feed: {0}. Current branch is {1}. Setting url to {2}".ToFormat(feed' branchName' branchUrl)' false); " is 133.
Long Statement,ripple.Model,ProjectReader,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\IProjectReader.cs,Basic,The length of the statement  "            return new ProjectReader(new IDependencyStrategy[] { new NuGetDependencyStrategy()' new RippleDependencyStrategy()' new NulloDependencyStrategy() }); " is 149.
Long Statement,ripple.MSBuild,ProjFile,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\MSBuild\ProjFile.cs,AddReference,The length of the statement  "            var status = string.Equals(original' hintPath' StringComparison.OrdinalIgnoreCase) ? ReferenceStatus.Unchanged : ReferenceStatus.Changed; " is 137.
Long Statement,ripple.MSBuild,Reference,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\MSBuild\Reference.cs,Equals,The length of the statement  "            return string.Equals(Name' other.Name) && string.Equals(HintPath' other.HintPath) && string.Equals(Aliases' other.Aliases); " is 123.
Long Statement,ripple.Nuget,FileSystemNugetFeed,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\FileSystemNugetFeed.cs,findLatest,The length of the statement  "                .Where(x => query.MatchesName(x.Name) && (!x.IsPreRelease || (x.IsPreRelease && query.DetermineStability(_stability) == NugetStability.Anything)))" is 146.
Long Statement,ripple.Nuget,InstallProjectDependency,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\InstallProjectDependency.cs,AddSelf,The length of the statement  "            var other = steps.OfType<InstallProjectDependency>().SingleOrDefault(x => x.Dependency.Name.EqualsIgnoreCase(Dependency.Name) && x._project.Equals(_project)); " is 158.
Long Statement,ripple.Nuget,InstallSolutionDependency,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\InstallSolutionDependency.cs,AddSelf,The length of the statement  "            var other = steps.OfType<InstallSolutionDependency>().Where(x => x.Dependency.Name.EqualsIgnoreCase(Dependency.Name)).SingleOrDefault(); " is 136.
Long Statement,ripple.Nuget,NugetPlanBuilder,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetPlanBuilder.cs,updateDependency,The length of the statement  "                RippleLog.Info("Warning: This operation requires {0} to be updated to {1} but it is marked as fixed. Use the force option to correct this.".ToFormat(target.Name' target.Version)); " is 179.
Long Statement,ripple.Nuget,NugetPlanRequest,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetPlanRequest.cs,ToString,The length of the statement  "            return string.Format("Solution: {0}' Dependency: {1}' Project: {2}' Operation: {3}' Parent: {4}' Batched: {5}' ForceUpdates: {6}"' Solution' Dependency' Project' Operation' Parent' Batched' ForceUpdates); " is 204.
Long Statement,ripple.Publishing,PublishCommand,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Publishing\PublishCommand.cs,Execute,The length of the statement  "                    var packageFile = solution.Package(new PackageParams(nuget' SemanticVersion.Parse(input.Version)' artifactDirectory'  input.CreateSymbolsFlag)); " is 144.
Long Statement,ripple.Publishing,PublishingService,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Publishing\PublishingService.cs,CreateSymbolsPackage,The length of the statement  "                RippleLog.Info("No symbols could be generated for {0} since no symbol files could be found. This is expected if this is a code only package".ToFormat(ctx.Spec.Name)); " is 166.
Empty Catch Block,ripple,ProcessRunner,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\IProcessRunner.cs,killProcessIfItStillExists,The method has an empty catch block.
Empty Catch Block,ripple,RippleAssert,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\RippleAssert.cs,Fail,The method has an empty catch block.
Magic Number,ripple.Extract,ExtractCommand,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Extract\ExtractCommand.cs,loadNugetEntries,The following statement contains a magic number: var pageSize = 100;
Magic Number,ripple,FileSystemExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\FileSystemExtensions.cs,cleanDirectory,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ripple,FileSystemExtensions,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\FileSystemExtensions.cs,cleanDirectory,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ripple,ProcessRunner,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\IProcessRunner.cs,killProcessIfItStillExists,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ripple,ProcessRunner,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\IProcessRunner.cs,Run,The following statement contains a magic number: return Run(info' new TimeSpan(0' 0' 0' 10)' callback);
Magic Number,ripple.Model,BatchOperation,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\BatchOperation.cs,Parse,The following statement contains a magic number: input.ReadLines(line =>  			{  				if (line.IsEmpty()) return;    				var tokens = line.Split(':');  				if (tokens.Length == 1)  				{  					RippleAssert.Fail("expected \":\" - {0}"' line);  				}  				else if (tokens.Length != 2)  				{  					RippleAssert.Fail("unexpected \":\" - {0}"' line);  				}    				var requests = parseLine(solution' tokens);  				operation._requests.AddRange(requests);  			});
Magic Number,ripple.Model,Dependency,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\Dependency.cs,GetHashCode,The following statement contains a magic number: return ((Name != null ? Name.GetHashCode() : 0) * 397) ^ (Version != null ? Version.GetHashCode() : 0);
Magic Number,ripple.Model,Dependency,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\Dependency.cs,Parse,The following statement contains a magic number: dependency.Mode = (UpdateMode)Enum.Parse(typeof(UpdateMode)' parts[2]);
Magic Number,ripple.Model,Dependency,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\Dependency.cs,Parse,The following statement contains a magic number: parts.Length > 2
Magic Number,ripple.Model,DependencyGroup,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\DependencyGroup.cs,GetHashCode,The following statement contains a magic number: return (_dependencies.GetHashCode()*397) ^ Name.GetHashCode();
Magic Number,ripple.Model,FeedService,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\FeedService.cs,FeedService,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 10;
Magic Number,ripple.Model,DependencyCacheKey,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\FeedService.cs,GetHashCode,The following statement contains a magic number: return (Dependency.GetHashCode()*397) ^ (int) Mode;
Magic Number,ripple.Model,RippleDependencyStrategy,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\IDependencyStrategy.cs,Read,The following statement contains a magic number: _fileSystem.ReadTextFile(FileFor(project)' line =>  			{  				if (line.IsEmpty()) return;    				var values = line.Split(new[] { ''' }' StringSplitOptions.RemoveEmptyEntries);  				var version = string.Empty;    				if (values.Length == 2)  				{  					version = values[1].Trim();  				}    				dependencies.Add(new Dependency(values[0].Trim()' version));  			});
Magic Number,ripple.Model,IgnoreAssemblyReference,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\IgnoreAssemblyReference.cs,GetHashCode,The following statement contains a magic number: return (Package.GetHashCode()*397) ^ Assembly.GetHashCode();
Magic Number,ripple.Model,NuspecSettings,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\NuspecSettings.cs,GetHashCode,The following statement contains a magic number: return (Float.GetHashCode()*397) ^ Fixed.GetHashCode();
Magic Number,ripple.Model,VersionConstraint,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Model\VersionConstraint.cs,GetHashCode,The following statement contains a magic number: return ((_min != null ? _min.GetHashCode() : 0)*397) ^ (_max != null ? _max.GetHashCode() : 0);
Magic Number,ripple.MSBuild,Reference,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\MSBuild\Reference.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (HintPath != null ? HintPath.GetHashCode() : 0);
Magic Number,ripple.MSBuild,Reference,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\MSBuild\Reference.cs,GetHashCode,The following statement contains a magic number: return (hashCode * 397) ^ (Aliases != null ? Aliases.GetHashCode() : 0);
Magic Number,ripple.Nuget,FloatingFeed,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\FloatingFeed.cs,loadLatestFeed,The following statement contains a magic number: var toSkip = (page - 1) * 100;
Magic Number,ripple.Nuget,FloatingFeed,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\FloatingFeed.cs,getLatest,The following statement contains a magic number: results.Count() == 100
Magic Number,ripple.Nuget,InstallProjectDependency,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\InstallProjectDependency.cs,GetHashCode,The following statement contains a magic number: return (_project.GetHashCode() * 397) ^ _dependency.GetHashCode();
Magic Number,ripple.Nuget,CacheKey<TKeyPart>,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetFeedBase.cs,GetHashCode,The following statement contains a magic number: return (_anything.GetHashCode() * 397) ^ EqualityComparer<TKeyPart>.Default.GetHashCode(_part);
Magic Number,ripple.Nuget,NugetName,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetFile.cs,Parse,The following statement contains a magic number: return new NugetName              {                  Name = matches.Groups[1].Value'                  Version = SemanticVersion.Parse(matches.Groups[2].Value)              };
Magic Number,ripple.Nuget,NugetFolderCache,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetFolderCache.cs,GetHashCode,The following statement contains a magic number: return (_solution.GetHashCode()*397) ^ _folder.GetHashCode();
Magic Number,ripple.Nuget,PlanKey,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetPlanBuilder.cs,GetHashCode,The following statement contains a magic number: return ((Dependency != null ? Dependency.GetHashCode() : 0) * 397) ^ (Project != null ? Project.GetHashCode() : 0);
Magic Number,ripple.Nuget,NugetPlanRequest,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetPlanRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Dependency != null ? Dependency.GetHashCode() : 0);
Magic Number,ripple.Nuget,NugetPlanRequest,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Nuget\NugetPlanRequest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (int)Operation;
Magic Number,ripple.Packaging,NuspecDependencyToken,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Packaging\NuspecDependencyToken.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Version.GetHashCode();
Magic Number,ripple.Packaging,NuspecDependencyToken,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Packaging\NuspecDependencyToken.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Constraint.GetHashCode();
Magic Number,ripple.Packaging,ProjectNuspec,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Packaging\ProjectNuspec.cs,GetHashCode,The following statement contains a magic number: return (_project.GetHashCode()*397) ^ _publishes.GetHashCode();
Magic Number,ripple.Publishing,PublishingService,D:\research\architectureSmells\repos\DarthFubuMVC_ripple\src\ripple\Publishing\PublishingService.cs,PublishPackage,The following statement contains a magic number: packageServer.PushPackage(apiKey' package' info.Length' (int)60.Minutes().TotalMilliseconds);
