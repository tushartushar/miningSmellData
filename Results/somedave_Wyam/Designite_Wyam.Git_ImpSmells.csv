Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,Cyclomatic complexity of the method is 8
Long Parameter List,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,The method has 7 parameters.
Long Parameter List,Wyam.Git,GitModule,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitModule.cs,GetCommitDocuments,The method has 7 parameters.
Long Parameter List,Wyam.Git,GitModule,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitModule.cs,CompareTrees,The method has 5 parameters.
Long Statement,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,The length of the statement  "	Dictionary<string' Tuple<string' List<IDocument>>> contributors = new Dictionary<string' Tuple<string' List<IDocument>>> (); " is 124.
Long Statement,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,The length of the statement  "				nameAndCommits = new Tuple<string' List<IDocument>> (commitDocument.String (GitKeys.AuthorName)' new List<IDocument> ()); " is 121.
Long Statement,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,The length of the statement  "					nameAndCommits = new Tuple<string' List<IDocument>> (commitDocument.String (GitKeys.CommitterName)' new List<IDocument> ()); " is 124.
Long Statement,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,The length of the statement  "		ImmutableArray<IDocument> inputContributorDocuments = contributorDocuments.Select (x => context.GetDocument (new MetadataItems { " is 128.
Long Statement,Wyam.Git,GitContributors,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitContributors.cs,Execute,The length of the statement  "			new MetadataItem (GitKeys.Commits' x.Get<IReadOnlyList<IDocument>> (GitKeys.Commits).Where (y => y.Get<IReadOnlyDictionary<FilePath' string>> (GitKeys.Entries).ContainsKey (relativePath)).ToImmutableArray ()) " is 208.
Long Statement,Wyam.Git,GitModule,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitModule.cs,GetRepositoryPath,The length of the statement  "		candidatePaths.AddRange (context.FileSystem.InputPaths.Reverse ().Select (x => context.FileSystem.RootPath.Combine (x))); " is 121.
Long Statement,Wyam.Git,GitModule,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitModule.cs,GetCommitDocuments,The length of the statement  "			new MetadataItem (GitKeys.Entries' CompareTrees (repository' x).ToImmutableDictionary (y => new FilePath (y.Path)' y => y.Status.ToString ())) " is 142.
Long Statement,Wyam.Git,GitModule,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitModule.cs,CompareTrees,The length of the statement  "	IEnumerable<PatchEntryChanges> patch = parentCommitTrees.Select (x => repo.Diff.Compare<Patch> (x' commitTree)).SelectMany (x => x); " is 132.
Long Statement,Wyam.Git,GitModule,C:\repos\somedave_Wyam\src\extensions\Wyam.Git\GitModule.cs,CompareTrees,The length of the statement  "	else if (!parentCommitTrees.Skip (1).Any ())// Merge doesn't count to History. So everything that has more than one parent will be ignored " is 138.
