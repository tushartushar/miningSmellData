Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Wyam.Core.Tests.Shortcodes,ParseTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Shortcodes\ShortcodeParserFixture.cs,SupportsAlternateDelimiters,The method has 5 parameters. Parameters: input' firstIndex' lastIndex' startDelimiter' endDelimiter
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithKeepFirstMetaDataReturnKeepsFirstMetaData,The length of the statement  "            IDocument first = new TestDocument("Test"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "two") }); " is 136.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithKeepFirstMetaDataReturnKeepsFirstMetaData,The length of the statement  "            IDocument second = new TestDocument("Test2"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("three"' "four") }); " is 141.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithMetaDataReturnDefaultMetaData,The length of the statement  "            IDocument first = new TestDocument("Test"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "two") }); " is 136.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithMetaDataReturnDefaultMetaData,The length of the statement  "            IDocument second = new TestDocument("Test2"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("three"' "four") }); " is 141.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithKeepLastMetaDataReturnKeepsLastMetaData,The length of the statement  "            IDocument first = new TestDocument("Test"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "two") }); " is 136.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithKeepLastMetaDataReturnKeepsLastMetaData,The length of the statement  "            IDocument second = new TestDocument("Test2"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("three"' "four") }); " is 141.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithAllKeepFirstMetaData,The length of the statement  "            IDocument first = new TestDocument("Test"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "two") }); " is 136.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithAllKeepFirstMetaData,The length of the statement  "            IDocument second = new TestDocument("Test2"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "seven")'  new KeyValuePair<string' object>("three"' "four") }); " is 192.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithAllKeepLastMetaData,The length of the statement  "            IDocument first = new TestDocument("Test"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "two") }); " is 136.
Long Statement,Wyam.Core.Tests.Modules.Contents,JoinFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\JoinFixture.cs,JoinTwoDocumentsWithAllKeepLastMetaData,The length of the statement  "            IDocument second = new TestDocument("Test2"' new List<KeyValuePair<string' object>>() { new KeyValuePair<string' object>("one"' "seven")' new KeyValuePair<string' object>("three"' "four") }); " is 191.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,SingleRedirect,The length of the statement  "            List<IDocument> results = redirect.Execute(new[] { redirected' notRedirected }' context).ToList();  // Make sure to materialize the result list " is 143.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,AddsExtension,The length of the statement  "            List<IDocument> results = redirect.Execute(new[] { redirected' notRedirected }' context).ToList();  // Make sure to materialize the result list " is 143.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WarnsForAbsoluteRedirectFromPath,The length of the statement  "            List<IDocument> results = redirect.Execute(new[] { redirected' notRedirected }' context).ToList();  // Make sure to materialize the result list " is 143.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WarnsForAbsoluteRedirectFromPath,The length of the statement  "            Assert.IsTrue(Listener.Messages.ToList().Single(x => x.Key == TraceEventType.Warning).Value.StartsWith("The redirect path must be relative")); " is 142.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,MultipleRedirects,The length of the statement  "            List<IDocument> results = redirect.Execute(new[] { redirected1' redirected2 }' context).ToList();  // Make sure to materialize the result list " is 142.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,MultipleRedirects,The length of the statement  "            CollectionAssert.AreEquivalent(new[] { "foo.html"' "bar/baz.html" }' results.Select(x => x.Get<FilePath>(Keys.WritePath).FullPath)); " is 132.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WithAdditionalOutput,The length of the statement  "            Redirect redirect = new Redirect().WithAdditionalOutput(new FilePath("a/b")' x => string.Join("|"' x.Select(y => $"{y.Key} {y.Value}"))); " is 137.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WithAdditionalOutput,The length of the statement  "            List<IDocument> results = redirect.Execute(new[] { redirected1' redirected2 }' context).ToList();  // Make sure to materialize the result list " is 142.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WithAdditionalOutput,The length of the statement  "            CollectionAssert.AreEquivalent(new[] { "foo.html"' "bar/baz.html"' "a/b" }' results.Select(x => x.Get<FilePath>(Keys.WritePath).FullPath)); " is 139.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WithAdditionalOutput,The length of the statement  "            Assert.IsTrue(results.Single(x => x.Get<FilePath>(Keys.WritePath).FullPath == "a/b").Content.Contains("foo.html /foo2.html")); " is 126.
Long Statement,Wyam.Core.Tests.Modules.Contents,RedirectFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\RedirectFixture.cs,WithAdditionalOutputWithoutMetaRefresh,The length of the statement  "            List<IDocument> results = redirect.Execute(new[] { redirected1' redirected2 }' context).ToList();  // Make sure to materialize the result list " is 142.
Long Statement,Wyam.Core.Tests.Modules.Contents,ReplaceFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\ReplaceFixture.cs,RecursiveReplaceWithContentFinder,The length of the statement  "            IList<IDocument> results = replace.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 126.
Long Statement,Wyam.Core.Tests.Modules.Contents,ReplaceFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\ReplaceFixture.cs,ReplaceWithContentFinderUsingDocument,The length of the statement  "            Replace replace = new Replace(@"(<span>.*<\/span>)"' (Func<Match' IDocument' object>)((match' doc) => $"<div>{doc["Fizz"]}</div>")); " is 132.
Long Statement,Wyam.Core.Tests.Modules.Contents,ReplaceFixture,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\ReplaceFixture.cs,ReplaceWithContentFinderUsingDocument,The length of the statement  "            IList<IDocument> results = replace.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 126.
Long Statement,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,AppendsContent,The length of the statement  "                List<IDocument> results = combine.Execute(new[] { a' b }' context).ToList();  // Make sure to materialize the result list " is 121.
Long Statement,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MergesMetadata,The length of the statement  "                List<IDocument> results = combine.Execute(new[] { a' b }' context).ToList();  // Make sure to materialize the result list " is 121.
Long Statement,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The length of the statement  "                Core.Modules.Metadata.Meta meta = new Core.Modules.Metadata.Meta("GroupMetadata"' (d' c) => new[] { d.Get<int>("A") % 3' 3 }); " is 126.
Long Statement,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The length of the statement  "                    return groupMetadata == 0 ? d : c.GetDocument(d' new MetadataItems { { "GroupMetadata"' new[] { groupMetadata' 3 } } }); " is 120.
Long Statement,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResultsForEachDocument,The length of the statement  "                CollectionAssert.AreEqual(new[] { "1121"' "1122"' "1223"' "1224" }' engine.Documents["Test"].Select(x => x["Content"])); " is 120.
Long Statement,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The length of the statement  "                        previousPages.Add(d.Document(Keys.PreviousPage)?.Get<IList<IDocument>>(Keys.PageDocuments).Select(x => x.Content).ToList()); " is 124.
Long Statement,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,SingleHtmlDownloadGetStream,The length of the statement  "                IList<IDocument> results = download.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 127.
Long Statement,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,MultipleHtmlDownload,The length of the statement  "                IList<IDocument> results = download.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 127.
Long Statement,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,SingleImageDownload,The length of the statement  "                IList<IDocument> results = download.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 127.
Long Statement,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,SingleImageDownloadWithRequestHeader,The length of the statement  "                IList<IDocument> results = download.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 127.
Long Statement,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,DocumentsWithSameOutputGeneratesWarning,The length of the statement  "                Assert.Throws<Exception>(() => writeFiles.Execute(inputs' Context).ToList()' @"Multiple documents output to output.txt (this probably wasn't intended): " is 151.
Long Statement,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,ExistenceOfKeyDoesNotThrow,The length of the statement  "                Assert.DoesNotThrow(() => validateMeta.Execute(new[] { document }' context).ToList());  // Make sure to materialize the result list " is 131.
Long Statement,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,AbsenceOfKeyThrows,The length of the statement  "                Assert.Throws<AggregateException>(() => validateMeta.Execute(new[] { document }' context).ToList());  // Make sure to materialize the result list " is 145.
Long Statement,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,FailedAssertionThrows,The length of the statement  "                Assert.Throws<AggregateException>(() => validateMeta.Execute(new[] { document }' context).ToList());  // Make sure to materialize the result list " is 145.
Long Statement,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,PassedAssertionDoesNotThrow,The length of the statement  "                Assert.DoesNotThrow(() => validateMeta.Execute(new[] { document }' context).ToList());  // Make sure to materialize the result list " is 131.
Long Statement,Wyam.Core.Tests.Modules.Templates,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Templates\XsltFixture.cs,TestTransform,The length of the statement  "                const string output = "<HTML><BODY><TABLE BORDER=\"2\"><TR><TD>ISBN</TD><TD>Title</TD><TD>Price</TD></TR><TR><TD>1-861003-11-0</TD><TD>The Autobiography of Benjamin Franklin</TD><TD>8.99</TD></TR><TR><TD>0-201-63361-2</TD><TD>The Confidence Man</TD><TD>11.99</TD></TR><TR><TD>1-861001-57-6</TD><TD>The Gorgias</TD><TD>9.99</TD></TR></TABLE></BODY></HTML>"; " is 356.
Long Statement,Wyam.Core.Tests.Modules.Templates,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Templates\XsltFixture.cs,TestTransform,The length of the statement  "                IList<IDocument> results = xslt.Execute(new[] { document }' context).ToList();  // Make sure to materialize the result list " is 123.
Long Statement,Wyam.Core.Tests.Shortcodes,SplitArgumentsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Shortcodes\ShortcodeParserFixture.cs,ShouldSplitComplexArguments,The length of the statement  "                KeyValuePair<string' string>[] result = ShortcodeParser.SplitArguments("foo \"abc 123\" fizz=buzz  \"qwe\"=\"try\"\r\nxyz=\"zyx\"  \"678=987\" goo=boo"' 0).ToArray(); " is 166.
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")              {                  AdditionalOutputs = 2              };
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")              {                  AdditionalOutputs = 3              };
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' b.InputCount);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(6' c.InputCount);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(6' b.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,ExecuteResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(24' c.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,CompletedMetadataIsPopulatedAfterRun,The following statement contains a magic number: Assert.AreEqual(2' engine.Documents.FromPipeline("Pipeline").Count());
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,CompletedMetadataIsPopulatedAfterRun,The following statement contains a magic number: Assert.AreEqual(2' engine.Documents.FromPipeline("Pipeline").First().Metadata["2"]);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,CompletedMetadataIsPopulatedAfterRun,The following statement contains a magic number: Assert.AreEqual(3' engine.Documents.FromPipeline("Pipeline").Skip(1).First().Metadata["3"]);
Magic Number,Wyam.Core.Tests.Execution,EngineTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\EngineTests.cs,CompletedContentIsPopulatedAfterRun,The following statement contains a magic number: Assert.AreEqual(2' engine.Documents.FromPipeline("Pipeline 1").Count());
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      CloneSource = true'                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      CloneSource = true'                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(24' engine.Documents.FromPipeline("Count").Count());
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(2' a.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(2' b.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(2' c.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(2' a.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(4' b.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(12' c.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(4' a.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(12' b.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessesPreviousDocumentsWithDistinctSources,The following statement contains a magic number: Assert.AreEqual(48' c.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(24' engine.Documents.FromPipeline("Count").Count());
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(2' a.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(2' b.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(2' c.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(2' a.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(2' b.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(6' c.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(4' a.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(6' b.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,DoesNotProcessPreviousDocumentsWhenSameSource,The following statement contains a magic number: Assert.AreEqual(24' c.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(24' engine.Documents.FromPipeline("Count").Count());
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(2' a.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(2' b.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(2' c.ExecuteCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(2' a.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(4' b.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(12' c.InputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(4' a.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(12' b.OutputCount);
Magic Number,Wyam.Core.Tests.Execution,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Execution\PipelineFixture.cs,ReprocessPreviousDocumentsWithDifferentContent,The following statement contains a magic number: Assert.AreEqual(48' c.OutputCount);
Magic Number,Wyam.Core.Tests.Meta,GetTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,MetadataValueCalledForEachRequest,The following statement contains a magic number: Assert.AreEqual(3' metadataValue.Calls);
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForList,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new List<int> { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForList,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new List<int> { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForList,The following statement contains a magic number: CollectionAssert.AreEqual(result' new[] { 1' 2' 3 });
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForList,The following statement contains a magic number: CollectionAssert.AreEqual(result' new[] { 1' 2' 3 });
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForConvertedStringList,The following statement contains a magic number: CollectionAssert.AreEqual(result' new[] { 1' 2' 3 });
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForConvertedStringList,The following statement contains a magic number: CollectionAssert.AreEqual(result' new[] { 1' 2' 3 });
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForConvertedIntList,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new List<int> { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForConvertedIntList,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new List<int> { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForArray,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new[] { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForArray,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new[] { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForArray,The following statement contains a magic number: CollectionAssert.AreEqual(result' new[] { 1' 2' 3 });
Magic Number,Wyam.Core.Tests.Meta,ListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsCorrectResultForArray,The following statement contains a magic number: CollectionAssert.AreEqual(result' new[] { 1' 2' 3 });
Magic Number,Wyam.Core.Tests.Meta,DocumentListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsEmptyListForListOfInt,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new List<int> { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,DocumentListTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ReturnsEmptyListForListOfInt,The following statement contains a magic number: MetadataDictionary initialMetadata = new MetadataDictionary { ["A"] = new List<int> { 1' 2' 3 } };
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringArray,The following statement contains a magic number: metadata = metadata.Clone(new[] { new KeyValuePair<string' object>("A"' new int[] { 1' 2' 3 }) });
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringArray,The following statement contains a magic number: metadata = metadata.Clone(new[] { new KeyValuePair<string' object>("A"' new int[] { 1' 2' 3 }) });
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringArray,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadata["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringArray,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadata["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertStringArrayToIntArray,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadataAs["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertStringArrayToIntArray,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadataAs["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringEnumerable,The following statement contains a magic number: metadata = metadata.Clone(new[] { new KeyValuePair<string' object>("A"' new int[] { 1' 2' 3 }) });
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringEnumerable,The following statement contains a magic number: metadata = metadata.Clone(new[] { new KeyValuePair<string' object>("A"' new int[] { 1' 2' 3 }) });
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringEnumerable,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadata["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertIntArrayToStringEnumerable,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadata["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertStringEnumerableToIntArray,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadataAs["A"]);
Magic Number,Wyam.Core.Tests.Meta,MetadataAsTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\MetadataStackFixture.cs,ConvertStringEnumerableToIntArray,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 1' 2' 3 }' (IEnumerable)metadataAs["A"]);
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ArrayConvertsToArray,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ArrayConvertsToArray,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToIReadOnlyList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToIReadOnlyList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToIList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToIList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToArray,The following statement contains a magic number: List<int> value = new List<int> { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToArray,The following statement contains a magic number: List<int> value = new List<int> { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsEnumerableToIEnumerable,The following statement contains a magic number: Array value = new[] { 1.0' 2.0 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleArrayToItemOfIReadOnlyList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleArrayToItemOfIReadOnlyList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleArrayToItemOfIList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleArrayToItemOfIList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleArrayToItemOfList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleArrayToItemOfList,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleEnumerableToItemOfArray,The following statement contains a magic number: List<int> value = new List<int> { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleEnumerableToItemOfArray,The following statement contains a magic number: List<int> value = new List<int> { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleEnumerableToItemOfIEnumerable,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsSingleEnumerableToItemOfIEnumerable,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemsInList,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemsInList,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemsInList,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemsInList,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemsInList,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemInListOfArrays,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemInListOfArrays,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemInListOfArrays,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemInListOfArrays,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfEnumerablesToItemInListOfArrays,The following statement contains a magic number: Array value = new[]                  {                      new List<int> { 1' 2' 3 }'                      new List<int> { 4' 5' 6 }                  };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfIntsToFirstInt,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfIntsToFirstInt,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfIntsToFirstString,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfIntsToFirstString,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfObjectsToFirstInt,The following statement contains a magic number: Array value = new object[] { "1"' 2' 3.0 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfObjectsToFirstInt,The following statement contains a magic number: Array value = new object[] { "1"' 2' 3.0 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfObjectsToFirstIntWhenFirstItemNotConvertible,The following statement contains a magic number: Array value = new object[] { "a"' 2' 3.0 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfObjectsToFirstIntWhenFirstItemNotConvertible,The following statement contains a magic number: Array value = new object[] { "a"' 2' 3.0 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ConvertsArrayOfObjectsToFirstIntWhenFirstItemNotConvertible,The following statement contains a magic number: Assert.AreEqual(2' result);
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ArrayOfIntConvertsToEnumerableOfString,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ArrayOfIntConvertsToEnumerableOfString,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ArrayOfIntConvertsToEnumerableOfObject,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,ArrayOfIntConvertsToEnumerableOfObject,The following statement contains a magic number: Array value = new[] { 1' 2' 3 };
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,StringConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2016' 10' 17' 8' 0' 0)' dateTime);
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,StringConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2016' 10' 17' 8' 0' 0)' dateTime);
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,StringConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2016' 10' 17' 8' 0' 0)' dateTime);
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,StringConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2016' 10' 17' 8' 0' 0)' dateTime);
Magic Number,Wyam.Core.Tests.Meta,TryConvertTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Meta\TypeHelperFixture.cs,DateTimeConvertstoNullable,The following statement contains a magic number: DateTime value = new DateTime(2015' 1' 1);
Magic Number,Wyam.Core.Tests.Modules.Contents,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\ShortcodesFixture.cs,ShortcodesCanReadMetadata,The following statement contains a magic number: IDocument document = new TestDocument("123<?# S1 /?>456<?# S2 /?>789<?# S1 /?>"' new MetadataItems                  {                      { "Foo"' 10 }                  });
Magic Number,Wyam.Core.Tests.Modules.Contents,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\ShortcodesFixture.cs,ShortcodesCanReadMetadata,The following statement contains a magic number: results.Single()["Foo"].ShouldBe(13);
Magic Number,Wyam.Core.Tests.Modules.Contents,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Contents\ShortcodesFixture.cs,ShortcodesPersistState,The following statement contains a magic number: results.Single()["Foo"].ShouldBe(22);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(6' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(8' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(2' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(8' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MergesMetadata,The following statement contains a magic number: IDocument a = new TestDocument(new Dictionary<string' object>                  {                      { "a"' 1 }'                      { "b"' 2 }                  });
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MergesMetadata,The following statement contains a magic number: IDocument b = new TestDocument(new Dictionary<string' object>                  {                      { "b"' 3 }'                      { "c"' 4 }                  });
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MergesMetadata,The following statement contains a magic number: IDocument b = new TestDocument(new Dictionary<string' object>                  {                      { "b"' 3 }'                      { "c"' 4 }                  });
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MergesMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(                      new Dictionary<string' object>                  {                      { "a"' 1 }'                      { "b"' 3 }'                      { "c"' 4 }                  }' Iterate(results.First().GetEnumerator()));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MergesMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(                      new Dictionary<string' object>                  {                      { "a"' 1 }'                      { "b"' 3 }'                      { "c"' 4 }                  }' Iterate(results.First().GetEnumerator()));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(8' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(6' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(32' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(5' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ResultsInCorrectCountsWithPredicate,The following statement contains a magic number: Assert.AreEqual(20' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CountReturnsCorrectDocuments,The following statement contains a magic number: Core.Modules.Control.Documents documents = new Core.Modules.Control.Documents(5);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CountReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(5' engine.Documents.Count());
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ContentReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(4' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MetadataReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(3' values.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ContentAndMetadataReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(3' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ContentAndMetadataReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(3' values.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PipelineReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(4' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,EmptyConstructorReturnsAllDocuments,The following statement contains a magic number: Assert.AreEqual(6' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,EmptyConstructorWithSpecifiedPipelinesReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(6' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SpecifiedPipelinesReturnsCorrectDocuments,The following statement contains a magic number: Assert.AreEqual(6' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SpecifiedPipelineDocumentsAreReturnedInCorrectOrder,The following statement contains a magic number: Assert.AreEqual(6' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputDocumentsResultsInMultipleOutputs,The following statement contains a magic number: Assert.AreEqual(2' documents.Count());
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: GroupBy groupBy = new GroupBy((d' c) => d.Get<int>("A") % 3' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 0' 1' 2 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: GroupBy groupBy = new GroupBy((d' c) => d.Get<int>("A") % 3' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: Assert.AreEqual(3' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { "2"' "5"' "8" }' content[2]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: Core.Modules.Metadata.Meta meta = new Core.Modules.Metadata.Meta("GroupMetadata"' (d' c) => d.Get<int>("A") % 3);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 0' 1' 2 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: Execute meta = new Execute(                      (d' c) =>                  {                      int groupMetadata = d.Get<int>("A") % 3;                      return groupMetadata == 0 ? d : c.GetDocument(d' new MetadataItems { { "GroupMetadata"' groupMetadata } });                  }' false);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: GroupBy groupBy = new GroupBy((d' c) => d.Get<int>("A") % 3' count)                      .Where((d' c) => d.Get<int>("A") % 3 != 0);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: GroupBy groupBy = new GroupBy((d' c) => d.Get<int>("A") % 3' count)                      .Where((d' c) => d.Get<int>("A") % 3 != 0);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 0' 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 0' 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: Assert.AreEqual(4' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { "2"' "5"' "8" }' content[2]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsDocumentsInMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { "1"' "2"' "3"' "4"' "5"' "6"' "7"' "8" }' content[3]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: Core.Modules.Metadata.Meta meta = new Core.Modules.Metadata.Meta("GroupMetadata"' (d' c) => new[] { d.Get<int>("A") % 3' 3 });
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: Core.Modules.Metadata.Meta meta = new Core.Modules.Metadata.Meta("GroupMetadata"' (d' c) => new[] { d.Get<int>("A") % 3' 3 });
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 0' 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKey,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 0' 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: Execute meta = new Execute(                      (d' c) =>                  {                      int groupMetadata = d.Get<int>("A") % 3;                      return groupMetadata == 0 ? d : c.GetDocument(d' new MetadataItems { { "GroupMetadata"' new[] { groupMetadata' 3 } } });                  }' false);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: Execute meta = new Execute(                      (d' c) =>                  {                      int groupMetadata = d.Get<int>("A") % 3;                      return groupMetadata == 0 ? d : c.GetDocument(d' new MetadataItems { { "GroupMetadata"' new[] { groupMetadata' 3 } } });                  }' false);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,GroupByMetadataKeyWithMissingMetadata,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count)                      .Where((d' c) => d.Get<int>("A") % 3 != 0);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count)                      .Where((d' c) => d.Get<int>("A") % 3 != 0);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: GroupByMany groupByMany = new GroupByMany((d' c) => new[] { d.Get<int>("A") % 3' 3 }' count)                      .Where((d' c) => d.Get<int>("A") % 3 != 0);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatDontMatchPredicate,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3 }' groupKey);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(5' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(20' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: CountModule d = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(8' d.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(4' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseIfResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(24' d.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: CountModule d = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(11' d.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(8' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(33' d.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: CountModule d = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: CountModule e = new CountModule("B")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' d.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(13' e.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(4' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(4' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(6' d.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfElseAndElseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(52' e.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(9' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(9' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,IfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(36' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,FalseIfWithContextResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,FalseIfWithContextResultsInCorrectCounts,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,FalseIfWithContextResultsInCorrectCounts,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,FalseIfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,FalseIfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,FalseIfWithContextResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(12' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreAddedToResults,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreAddedToResults,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreAddedToResults,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreAddedToResults,The following statement contains a magic number: Assert.AreEqual(3' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreAddedToResults,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreAddedToResults,The following statement contains a magic number: Assert.AreEqual(12' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreNotAddedToResults,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreNotAddedToResults,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreNotAddedToResults,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,UnmatchedDocumentsAreNotAddedToResults,The following statement contains a magic number: Assert.AreEqual(3' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ReplacesContent,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ReplacesContent,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesMetadata,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesMetadata,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesAndOverwritesMetadata,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesAndOverwritesMetadata,The following statement contains a magic number: CountModule b = new CountModule("A")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,CombinesAndOverwritesMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputSingleResult,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputSingleResult,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputSingleResult,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputSingleResult,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: Assert.AreEqual(2' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 11 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 11 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 22 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 22 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 12 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 12 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 21 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResult,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 21 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: Assert.AreEqual(2' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 11' 12' 12 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 11' 12' 12 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 11' 12' 12 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 11' 11' 12' 12 }' engine.Documents["Test"].Select(x => x["A"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 22' 21' 22 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 22' 21' 22 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 22' 21' 22 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResults,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 21' 22' 21' 22 }' engine.Documents["Test"].Select(x => x["B"]));
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputSingleResultForEachDocument,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputSingleResultForEachDocument,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResultsForEachDocument,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResultsForEachDocument,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SingleInputMultipleResultsForEachDocument,The following statement contains a magic number: Assert.AreEqual(2' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResultForEachDocument,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResultForEachDocument,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResultForEachDocument,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsSingleResultForEachDocument,The following statement contains a magic number: Assert.AreEqual(2' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResultsForEachDocument,The following statement contains a magic number: CountModule a = new CountModule("A")                  {                      Value = 10'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResultsForEachDocument,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      Value = 20'                      AdditionalOutputs = 1                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResultsForEachDocument,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MultipleInputsMultipleResultsForEachDocument,The following statement contains a magic number: Assert.AreEqual(4' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: CountModule b = new CountModule("B")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: CountModule c = new CountModule("C")                  {                      AdditionalOutputs = 3                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: Assert.AreEqual(2' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: Assert.AreEqual(6' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: Assert.AreEqual(2' a.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: Assert.AreEqual(6' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ChildModulesAreExecuted,The following statement contains a magic number: Assert.AreEqual(24' c.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersInAscendingOrder,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 4                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersInAscendingOrder,The following statement contains a magic number: CountModule count2 = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(8' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersInDescendingOrder,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 4                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersInDescendingOrder,The following statement contains a magic number: CountModule count2 = new CountModule("A")                  {                      AdditionalOutputs = 2                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersInDescendingOrder,The following statement contains a magic number: Assert.AreEqual(8' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersThenByInAscendingOrder,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 4                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersThenByInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(10' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersThenByInDescendingOrder,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 4                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersThenByInDescendingOrder,The following statement contains a magic number: Assert.AreEqual(10' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersDescendingThenByInDescendingOrder,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 4                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersDescendingThenByInDescendingOrder,The following statement contains a magic number: Assert.AreEqual(10' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersDescendingThenByInAscendingOrder,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 4                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OrderByOrdersDescendingThenByInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(10' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: Paginate paginate = new Paginate(3' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3 }' currentPage);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 1' 2' 3 }' currentPage);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 3' 3' 3 }' totalPages);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 3' 3' 3 }' totalPages);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 3' 3' 3 }' totalPages);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 8' 8' 8 }' totalItems);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 8' 8' 8 }' totalItems);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsCorrectMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { 8' 8' 8 }' totalItems);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsDocumentsInMetadata,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsDocumentsInMetadata,The following statement contains a magic number: Paginate paginate = new Paginate(3' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsDocumentsInMetadata,The following statement contains a magic number: Assert.AreEqual(3' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,PaginateSetsDocumentsInMetadata,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { "7"' "8" }' content[2]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The following statement contains a magic number: Paginate paginate = new Paginate(3' count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The following statement contains a magic number: Assert.AreEqual(3' previousPages.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The following statement contains a magic number: Assert.AreEqual(3' nextPages.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { "4"' "5"' "6" }' previousPages[2]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SetsPreviousAndNextDocuments,The following statement contains a magic number: CollectionAssert.AreEqual(null' nextPages[2]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatFailPredicate,The following statement contains a magic number: CountModule count = new CountModule("A")                  {                      AdditionalOutputs = 7                  };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatFailPredicate,The following statement contains a magic number: Paginate paginate = new Paginate(3' count).Where((doc' ctx) => doc.Content != "5");
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatFailPredicate,The following statement contains a magic number: Assert.AreEqual(3' content.Count);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ExcludesDocumentsThatFailPredicate,The following statement contains a magic number: CollectionAssert.AreEqual(new[] { "8" }' content[2]);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SwitchResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A") { AdditionalOutputs = 2 };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SwitchNoCasesResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A") { AdditionalOutputs = 2 };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SwitchNoCasesResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SwitchNoCasesResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,SwitchNoCasesResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MissingDefaultResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A") { AdditionalOutputs = 2 };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,MissingDefaultResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ArrayInCaseResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A") { AdditionalOutputs = 2 };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ArrayInCaseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ArrayInCaseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(2' b.OutputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,ArrayInCaseResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' c.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OmittingCasesAndDefaultResultsInCorrectCounts,The following statement contains a magic number: CountModule a = new CountModule("A") { AdditionalOutputs = 2 };
Magic Number,Wyam.Core.Tests.Modules.Control,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Control\BranchFixture.cs,OmittingCasesAndDefaultResultsInCorrectCounts,The following statement contains a magic number: Assert.AreEqual(3' b.InputCount);
Magic Number,Wyam.Core.Tests.Modules.Extensibility,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Extensibility\ExecuteFixture.cs,RunsModuleAgainstEachInputDocument,The following statement contains a magic number: count.ShouldBe(2);
Magic Number,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,WorksWithMultipleExtensions,The following statement contains a magic number: Assert.AreEqual(5' documents.Count());
Magic Number,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,PredicateShouldReturnMatchingFiles,The following statement contains a magic number: Assert.AreEqual(3' documents.Count());
Magic Number,Wyam.Core.Tests.Modules.IO,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\IO\CopyFilesFixture.cs,IgnoresEmptyDocuments,The following statement contains a magic number: Assert.AreEqual(4' outputs.Count());
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,FileNameIsConvertedCorrectlyWithReservedChar,The following statement contains a magic number: string manyCharactersWow = new string(character[0]' 10);
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,CollapseRoot,The following statement contains a magic number: Assert.AreEqual(4' documents.Count);
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,SplitsTree,The following statement contains a magic number: Assert.AreEqual(2' documents.Count);
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,FlatTree,The following statement contains a magic number: AssertTreeChildren(                      documents[2]'                      "root/a/1.txt");
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,FlatTree,The following statement contains a magic number: AssertTreeChildren(                      documents[3]'                      "root/a/b/index.html"'                      "root/a/b/2.txt");
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,FlatTree,The following statement contains a magic number: AssertTreeChildren(                      documents[4]'                      "root/a/index.html"'                      "root/a/1.txt"'                      "root/a/3.txt"'                      "root/a/b/index.html");
Magic Number,Wyam.Core.Tests.Modules.Metadata,ExecuteTests,D:\research\architectureSmells\repos1\somedave_Wyam\tests\core\Wyam.Core.Tests\Modules\Metadata\FileNameFixture.cs,FlatTree,The following statement contains a magic number: AssertTreeChildren(                      documents[5]'                      "root/index.html"'                      "root/a/index.html");
