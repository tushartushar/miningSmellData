Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Esri.ArcGISRuntime.Toolkit.SampleApp,MainPage,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\MainPage.xaml.cs,RootFrame_Navigated,The length of the statement  "            currentView.AppViewBackButtonVisibility = rootFrame.CanGoBack ? AppViewBackButtonVisibility.Visible : AppViewBackButtonVisibility.Collapsed; " is 140.
Long Statement,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,DataGridSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\DataGridSample.xaml.cs,LoadFeaturesAsync,The length of the statement  "                var table = new ServiceFeatureTable(new Uri("http://sampleserver6.arcgisonline.com/arcgis/rest/services/DamageAssessmentStatePlane/FeatureServer/0")); " is 150.
Long Statement,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,DataGridSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\DataGridSample.xaml.cs,LoadFeaturesAsync,The length of the statement  "                var outFields = new string[] { "objectid"' "incidentid"' "typdamage"' "habitable"' "predisval"' "inspdate"' "lastupdate" }; " is 123.
Long Statement,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,ApplyButton_Click,The length of the statement  "            if (DamageField.ValidationException != null || OccupantsField.ValidationException != null || DescriptionField.ValidationException != null) " is 138.
Empty Catch Block,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,mapView_GeoViewTapped,The method has an empty catch block.
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp,SampleDatasource,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\SampleDatasource.cs,SampleDatasource,The following statement contains a magic number: foreach(var sample in Samples)  			{  				var attr = sample.Page.GetTypeInfo().GetCustomAttribute(typeof(SampleCategoryAttribute)) as SampleCategoryAttribute;  				if (attr != null)  					sample.Category = attr.Name;  				else if(!sample.Page.Namespace.EndsWith(".Samples")) //use sub namespace instead  				{  					sample.Category = sample.Page.Namespace.Substring(sample.Page.Namespace.IndexOf(".Samples.") + 9);  				}  				sample.Name = Regex.Replace(sample.Name' @"((?<=\p{Ll})\p{Lu})|((?!\A)\p{Lu}(?>\p{Ll}))"' " $0");  			}
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.Compass,MapViewCompassSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\Compass\MapViewCompassSample.xaml.cs,RotateLeft_Click,The following statement contains a magic number: await mapView.SetViewpointRotationAsync(mapView.MapRotation - 30);
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.Compass,MapViewCompassSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\Compass\MapViewCompassSample.xaml.cs,RotateRight_Click,The following statement contains a magic number: await mapView.SetViewpointRotationAsync(mapView.MapRotation + 30);
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.Compass,SceneViewCompassSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\Compass\SceneViewCompassSample.xaml.cs,RotateLeft_Click,The following statement contains a magic number: RotateToHeadingAsync(-30' true);
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.Compass,SceneViewCompassSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\Compass\SceneViewCompassSample.xaml.cs,RotateRight_Click,The following statement contains a magic number: RotateToHeadingAsync(30' true);
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,DataGridSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\DataGridSample.xaml.cs,LoadFeaturesAsync,The following statement contains a magic number: try              {                  var table = new ServiceFeatureTable(new Uri("http://sampleserver6.arcgisonline.com/arcgis/rest/services/DamageAssessmentStatePlane/FeatureServer/0"));                  table.FeatureRequestMode = FeatureRequestMode.ManualCache;                  await table.LoadAsync();                  var queryParameters = new QueryParameters()                  {                      WhereClause = "incidentid <> ''"'                      MaxFeatures = 100                  };                  // Request for the same fields defined in the ListView.ItemTemplate.                  var outFields = new string[] { "objectid"' "incidentid"' "typdamage"' "habitable"' "predisval"' "inspdate"' "lastupdate" };                  var features = await table.PopulateFromServiceAsync(queryParameters' true' outFields);                  grid.ItemsSource = features.ToList();              }              catch (Exception exception)              {                  error = exception.Message;              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,mapView_GeoViewTapped,The following statement contains a magic number: try              {                  var features = await mapView.IdentifyLayerAsync(mapView.Map.OperationalLayers[0]' e.Position' 3' false' 1' tcs.Token);                  var feature = features.GeoElements.FirstOrDefault() as ArcGISFeature;                  if (feature == null)                      return;                  ShowEditPanel(feature);              }              catch (System.Exception)              {              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,ShowEditPanel,The following statement contains a magic number: if (AnimationExtensions.IsBlurSupported)              {                  AnimationExtensions.Blur(mapView' 10).Start();              }              else              {                  overlay.Background = new SolidColorBrush(Windows.UI.Color.FromArgb(192' 255' 255' 255));              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,ShowEditPanel,The following statement contains a magic number: if (AnimationExtensions.IsBlurSupported)              {                  AnimationExtensions.Blur(mapView' 10).Start();              }              else              {                  overlay.Background = new SolidColorBrush(Windows.UI.Color.FromArgb(192' 255' 255' 255));              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,ShowEditPanel,The following statement contains a magic number: if (AnimationExtensions.IsBlurSupported)              {                  AnimationExtensions.Blur(mapView' 10).Start();              }              else              {                  overlay.Background = new SolidColorBrush(Windows.UI.Color.FromArgb(192' 255' 255' 255));              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,ShowEditPanel,The following statement contains a magic number: if (AnimationExtensions.IsBlurSupported)              {                  AnimationExtensions.Blur(mapView' 10).Start();              }              else              {                  overlay.Background = new SolidColorBrush(Windows.UI.Color.FromArgb(192' 255' 255' 255));              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.FeatureDataField,EditFeatureSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\FeatureDataField\EditFeatureSample.xaml.cs,ShowEditPanel,The following statement contains a magic number: if (AnimationExtensions.IsBlurSupported)              {                  AnimationExtensions.Blur(mapView' 10).Start();              }              else              {                  overlay.Background = new SolidColorBrush(Windows.UI.Color.FromArgb(192' 255' 255' 255));              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.MeasureToolbar,MeasureToolbarSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\MeasureToolbar\MeasureToolbarSample.xaml.cs,AddRandomGraphics,The following statement contains a magic number: if (overlay != null)              {                  for (int i = 0; i < 10; i++)                  {                      var mp = new MapPoint(random.Next(-180' 180)' random.Next(-90' 90)' SpatialReferences.Wgs84);                      var geometry = GeometryEngine.Buffer(mp' random.Next(1' 10));                      overlay.Graphics.Add(new Graphic(geometry));                  }              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.MeasureToolbar,MeasureToolbarSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\MeasureToolbar\MeasureToolbarSample.xaml.cs,AddRandomGraphics,The following statement contains a magic number: if (overlay != null)              {                  for (int i = 0; i < 10; i++)                  {                      var mp = new MapPoint(random.Next(-180' 180)' random.Next(-90' 90)' SpatialReferences.Wgs84);                      var geometry = GeometryEngine.Buffer(mp' random.Next(1' 10));                      overlay.Graphics.Add(new Graphic(geometry));                  }              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.MeasureToolbar,MeasureToolbarSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\MeasureToolbar\MeasureToolbarSample.xaml.cs,AddRandomGraphics,The following statement contains a magic number: if (overlay != null)              {                  for (int i = 0; i < 10; i++)                  {                      var mp = new MapPoint(random.Next(-180' 180)' random.Next(-90' 90)' SpatialReferences.Wgs84);                      var geometry = GeometryEngine.Buffer(mp' random.Next(1' 10));                      overlay.Graphics.Add(new Graphic(geometry));                  }              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.MeasureToolbar,MeasureToolbarSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\MeasureToolbar\MeasureToolbarSample.xaml.cs,AddRandomGraphics,The following statement contains a magic number: if (overlay != null)              {                  for (int i = 0; i < 10; i++)                  {                      var mp = new MapPoint(random.Next(-180' 180)' random.Next(-90' 90)' SpatialReferences.Wgs84);                      var geometry = GeometryEngine.Buffer(mp' random.Next(1' 10));                      overlay.Graphics.Add(new Graphic(geometry));                  }              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.MeasureToolbar,MeasureToolbarSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\MeasureToolbar\MeasureToolbarSample.xaml.cs,AddRandomGraphics,The following statement contains a magic number: if (overlay != null)              {                  for (int i = 0; i < 10; i++)                  {                      var mp = new MapPoint(random.Next(-180' 180)' random.Next(-90' 90)' SpatialReferences.Wgs84);                      var geometry = GeometryEngine.Buffer(mp' random.Next(1' 10));                      overlay.Graphics.Add(new Graphic(geometry));                  }              }
Magic Number,Esri.ArcGISRuntime.Toolkit.SampleApp.Samples.MeasureToolbar,MeasureToolbarSample,C:\repos\Esri_arcgis-toolkit-dotnet\src\Samples\Toolkit.SampleApp.UWP\Samples\MeasureToolbar\MeasureToolbarSample.xaml.cs,AddRandomGraphics,The following statement contains a magic number: if (overlay != null)              {                  for (int i = 0; i < 10; i++)                  {                      var mp = new MapPoint(random.Next(-180' 180)' random.Next(-90' 90)' SpatialReferences.Wgs84);                      var geometry = GeometryEngine.Buffer(mp' random.Next(1' 10));                      overlay.Graphics.Add(new Graphic(geometry));                  }              }
