Namespace,Type,Method,LOC,CC,PC
Castle.IO.Tests.chjail,can_chjail_absolute_path_spec,given_different_methods_of_saying_here_in_this_folder,6,1,0
Castle.IO.Tests.chjail,can_chjail_absolute_path_spec,disallowed_directories,6,1,2
Castle.IO.Tests.chjail,can_chjail_absolute_path_spec,allowed_directories,7,1,1
Castle.IO.Tests,context,SetUp,2,1,0
Castle.IO.Tests,context,TearDown,2,1,0
Castle.IO.Tests,context,Executing,3,1,1
Castle.IO.Tests,files<T>,write_to_file,8,1,4
Castle.IO.Tests,file_search_context,file_search_context,3,1,0
Castle.IO.Tests,file_search_context,given_file,3,1,1
Castle.IO.Tests,file_search_context,when_searching_for_files,3,1,1
Castle.IO.Tests,file_search_context,when_searching_for_directories,3,1,1
Castle.IO.Tests,file_search_context,given_directory,3,1,1
Castle.IO.Tests,file_search_context,given_currentDirectory,3,1,1
Castle.IO.Tests,file_search_context,given_currentDirectory,3,1,1
Castle.IO.Tests,file_system<T>,receives_creation_notification,18,1,0
Castle.IO.Tests,file_system<T>,temp_file_exists_after_creation_and_is_deleted_when_used,12,1,0
Castle.IO.Tests,file_system<T>,temp_directory_is_rooted_correctly,6,1,0
Castle.IO.Tests,file_system<T>,directories_always_created,7,1,0
Castle.IO.Tests,file_system<T>,created_directory_exists,7,1,0
Castle.IO.Tests,file_system<T>,can_get_subdirectory_of_non_existant_directory,4,1,0
Castle.IO.Tests,file_system<T>,can_get_file_with_directory_path,4,1,0
Castle.IO.Tests,file_system<T>,directory_is_resolved_relative_to_current_directory,5,1,0
Castle.IO.Tests,file_system<T>,files_are_resolved_relative_to_current_directory,4,1,0
Castle.IO.Tests,file_system<T>,recursive_search_for_directories_returns_correct_directory,10,1,0
Castle.IO.Tests,file_system<T>,recursive_search_for_files_returns_correct_files,10,1,0
Castle.IO.Tests,file_system<T>,two_directories_are_equal,3,1,0
Castle.IO.Tests,file_system<T>,two_files_are_equal,3,1,0
Castle.IO.Tests,file_system<T>,non_existant_file_opened_for_write_is_created_automatically,7,1,0
Castle.IO.Tests,file_system<T>,file_paths_are_normalized,4,1,0
Castle.IO.Tests,file_system<T>,trailing_slash_is_not_significant,5,1,0
Castle.IO.Tests,file_system<T>,standard_directory_is_not_a_link,6,1,0
Castle.IO.Tests,file_system<T>,can_create_link,18,1,0
Castle.IO.Tests,file_system<T>,different_directories_are_not_equal,3,1,0
Castle.IO.Tests,file_system<T>,link_has_reference_to_target,9,1,0
Castle.IO.Tests,file_system<T>,delete_parent_deletes_child_folder,7,1,0
Castle.IO.Tests,file_system<T>,deleted_child_directory_doesnt_show_up_in_child_directories,6,1,0
Castle.IO.Tests,file_system<T>,deleted_hardlink_doesnt_delete_subfolder,9,1,0
Castle.IO.Tests,file_system<T>,moving_file_moves_a_file,7,1,0
Castle.IO.Tests,file_system<T>,moving_directory_moves_directories,8,1,0
Castle.IO.Tests,file_system<T>,failing_locks,5,1,3
Castle.IO.Tests,file_system<T>,append_only_in_write_mode,5,1,0
Castle.IO.Tests,file_system<T>,open_write_with_truncate_creates_a_new_stream,5,1,0
Castle.IO.Tests,file_system<T>,open_write_with_create_creates_a_new_stream,5,1,0
Castle.IO.Tests,file_system<T>,copy_files_copies_content,11,1,0
Castle.IO.Tests,file_system<T>,can_read_data_from_two_readers,11,1,0
Castle.IO.Tests,file_system<T>,duplicates_directory_content_when_copyto_called,17,1,0
Castle.IO.Tests,file_system_ctxt<T>,file_system_ctxt,4,1,0
Castle.IO.Tests,file_system_ctxt<T>,given_temp_dir,3,1,0
Castle.IO.Tests,file_system_ctxt<T>,given_temp_file,6,2,1
Castle.IO.Tests,file_system_ctxt<T>,ReadString,8,1,1
Castle.IO.Tests,file_system_ctxt<T>,WriteString,4,1,2
Castle.IO.Tests,file_system_ctxt<T>,delete_temp_dir,4,2,0
Castle.IO.Tests,in_mem_specification,folders_and_paths_are_case_insensitive_by_default,5,1,0
Castle.IO.Tests,in_mem_specification,paths_are_correct,5,1,0
Castle.IO.Tests,in_mem_specification,can_add_folders_to_fs,4,1,0
Castle.IO.Tests,in_mem_specification,can_add_sub_folders,8,1,0
Castle.IO.Tests,in_mem_specification,can_move_folder,11,1,0
Castle.IO.Tests,in_mem_specification,content_is_written_correctly,17,1,0
Castle.IO.Tests,SpecExtensions,IsEqualTo,12,6,2
Castle.IO.Tests,SpecExtensions,ShouldAllBe,7,2,2
Castle.IO.Tests,SpecExtensions,ShouldBe,4,1,2
Castle.IO.Tests,SpecExtensions,ShouldBe,4,1,1
Castle.IO.Tests,SpecExtensions,ShouldBe,5,1,2
Castle.IO.Tests,SpecExtensions,ShouldBe,5,1,3
Castle.IO.Tests,SpecExtensions,ShouldBe,9,3,2
Castle.IO.Tests,SpecExtensions,ShouldBeAssignableTo,5,2,1
Castle.IO.Tests,SpecExtensions,ShouldBeEmpty,3,1,1
Castle.IO.Tests,SpecExtensions,ShouldBeEquivalentTo,7,2,2
Castle.IO.Tests,SpecExtensions,ShouldBeFalse,4,1,1
Castle.IO.Tests,SpecExtensions,ShouldBeGreaterThan,3,1,2
Castle.IO.Tests,SpecExtensions,ShouldBeLessThan,3,1,2
Castle.IO.Tests,SpecExtensions,ShouldBeNull,3,1,1
Castle.IO.Tests,SpecExtensions,ShouldBeOfType,4,1,1
Castle.IO.Tests,SpecExtensions,Check,4,1,2
Castle.IO.Tests,SpecExtensions,ShouldBeTheSameInstanceAs,3,1,2
Castle.IO.Tests,SpecExtensions,ShouldBeTrue,3,1,1
Castle.IO.Tests,SpecExtensions,ShouldCompleteSuccessfully,3,1,1
Castle.IO.Tests,SpecExtensions,ShouldContain,4,1,3
Castle.IO.Tests,SpecExtensions,ShouldContain,4,1,2
Castle.IO.Tests,SpecExtensions,ShouldContain,7,3,3
Castle.IO.Tests,SpecExtensions,ShouldContain,5,2,2
Castle.IO.Tests,SpecExtensions,ShouldHaveCountOf,4,1,2
Castle.IO.Tests,SpecExtensions,ShouldHaveSameElementsAs,10,3,2
Castle.IO.Tests,SpecExtensions,ShouldHaveSameElementsAs,13,3,2
Castle.IO.Tests,SpecExtensions,ShouldHaveSameElementsAs,5,2,2
Castle.IO.Tests,SpecExtensions,ShouldHaveSameElementsAs,19,4,3
Castle.IO.Tests,SpecExtensions,ShouldNotBe,4,1,2
Castle.IO.Tests,SpecExtensions,ShouldNotBeNull,4,1,1
Castle.IO.Tests,SpecExtensions,ShouldNotBeNull,4,1,1
Castle.IO.Tests,SpecExtensions,ShouldNotBeTheSameInstanceAs,3,1,2
Castle.IO.Tests,SpecExtensions,ShouldNotContain,4,2,2
Castle.IO.Tests,SpecExtensions,ShouldReturn,3,1,2
Castle.IO.Tests,SpecExtensions,ShouldThrow,17,1,1
Castle.IO.Tests,SpecExtensions,ShouldHaveAtLeastOne,4,1,2
Castle.IO.Tests,SpecExtensions,ShouldHaveAll,4,1,2
Castle.IO.Tests,StreamExtensions,Write,4,1,5
Castle.IO.Tests,StreamExtensions,Write,4,1,5
Castle.IO.Tests,StreamExtensions,ShouldBe,8,1,2
Castle.IO.Tests,StreamExtensions,ReadToEnd,16,2,1
Castle.IO.Tests.copying_files,locked_file<T>,cannot_be_copied,9,1,1
Castle.IO.Tests.directory_searches,recursive_directory_search,recursive_directory_search,5,1,2
Castle.IO.Tests.directory_searches,recursive_directory_search,file_is_found,5,1,0
Castle.IO.Tests.directory_searches,search_for_absolute_paths<T>,finds_directory,14,1,2
Castle.IO.Tests.directory_searches,search_for_absolute_paths<T>,RemoveTempFolder,5,2,0
Castle.IO.Tests.file_searches,recursive_file_search,recursive_file_search,2,1,2
Castle.IO.Tests.file_searches,recursive_file_search,recursive_file_search,8,2,3
Castle.IO.Tests.file_searches,recursive_file_search,file_is_found,3,1,0
contexts,in_memory_file_system,in_memory_file_system,3,1,0
contexts,in_memory_file_system,given_directory,3,1,1
Castle.IO.Tests.moving,directories<T>,directories,9,1,0
Castle.IO.Tests.moving,directories<T>,original_doesnt_exist,3,1,0
Castle.IO.Tests.moving,directories<T>,original_stays_at_original_path,3,1,0
Castle.IO.Tests.moving,directories<T>,destination_exists,3,1,0
Castle.IO.Tests.moving,directories<T>,destination_has_file,3,1,0
Castle.IO.Tests.open_for_write,existing_file<T>,existing_file,3,1,0
Castle.IO.Tests.open_for_write,existing_file<T>,file_is_appended,5,1,0
Castle.IO.Tests.open_for_write,existing_file<T>,file_is_truncated_for,5,1,1
Castle.IO.Tests.open_for_write,existing_file<T>,file_is_edited,5,1,0
Castle.IO.Tests.open_for_write,existing_file<T>,file_cannot_be_created_new,4,1,0
Castle.IO.Tests.open_for_write,non_existent_file<T>,non_existent_file,3,1,0
Castle.IO.Tests.open_for_write,non_existent_file<T>,file_is_created_for_mode,4,1,1
Castle.IO.Tests.open_for_write,non_existent_file<T>,error_is_throw_for_mode,4,1,1
Castle.IO.Tests.open_for_write,open_behavior_is_same,existing_file,10,1,3
Castle.IO.Tests.open_for_write,open_behavior_is_same,non_existing_file,10,1,3
Castle.IO.Tests.open_for_write,open_behavior_is_same,TestSameCore,50,7,5
Castle.IO.Tests.paths,directoryinfo_long_path,create_long_path,6,1,0
Castle.IO.Tests.paths,directoryinfo_long_path,create_too_long_path,4,1,0
Castle.IO.Tests.paths,directoryinfo_long_path,LongPath,3,1,1
Castle.IO.Tests.paths,pathinfo_devices_specification,device_regex_should_match,6,1,2
Castle.IO.Tests.paths,pathinfo_devices_specification,device_regex_should_match_unc_prefix,8,1,2
Castle.IO.Tests.paths,pathinfo_devices_specification,device_paths_for_named_device,8,1,1
Castle.IO.Tests.paths,pathinfo_devices_specification,device_paths_for_guid_device,4,1,1
Castle.IO.Tests.paths,pathinfo_drive_specification,getting_stack_overflow,11,2,0
Castle.IO.Tests.paths,pathinfo_drive_specification,feeding_parse_bad_data_to_see_behaviour,5,1,0
Castle.IO.Tests.paths,pathinfo_drive_specification,with_no_drive,5,1,1
Castle.IO.Tests.paths,pathinfo_drive_specification,with_root_as_drive,5,1,1
Castle.IO.Tests.paths,pathinfo_drive_specification,with_unc_root_as_drive,5,1,1
Castle.IO.Tests.paths,pathinfo_drive_specification,with_relative_path_with_drive,5,1,2
Castle.IO.Tests.paths,pathinfo_root_specification,path_info_with_root,9,1,2
Castle.IO.Tests.paths,pathinfo_root_specification,path_info_with_root_further,5,1,1
Castle.IO.Tests.paths,pathinfo_root_specification,path_info_relative,5,1,1
Castle.IO.Tests.paths,pathinfo_root_specification,path_info_relative_with_reldrive,6,1,1
Castle.IO.Tests.paths,standard_file_names<T>,standard_file_names,3,1,0
Castle.IO.Tests.paths,standard_file_names<T>,name_contains_extension,3,1,0
Castle.IO.Tests.paths,standard_file_names<T>,name_without_extension_doesnt_contain_extension,3,1,0
Castle.IO.Tests.paths,standard_file_names<T>,extension_is_correct,3,1,0
Castle.IO.Tests.paths,pathinfo_server_specification,named_server_path,7,1,3
Castle.IO.Tests.paths,pathinfo_server_specification,ipv6_server_path,7,1,3
Castle.IO.Tests.paths,pathinfo_server_specification,invalid_ipv5_server_path,7,1,1
Castle.IO.Tests.paths,path_equality_specification,identical_root_equality,5,1,0
Castle.IO.Tests.paths,path_equality_specification,unc_root_equality,10,1,2
Castle.IO.Tests.paths,path_equality_specification,not_equal,10,1,2
Castle.IO.Tests.paths,path_specification,path_has_segments,4,1,0
Castle.IO.Tests.paths,path_specification,path_with_unc_root_doesnt_include_unc_root_in_segments,5,1,0
Castle.IO.Tests.paths,path_specification,trailing_slash_is_always_normalized,4,1,0
Castle.IO.Tests.paths,path_specification,relative_path_is_not_rooted,3,1,1
Castle.IO.Tests.paths,path_specification,absolute_path_is_made_relative,5,1,3
Castle.IO.Tests.paths,path_specification,relative_path_is_made_relative_by_returning_itself,5,1,0
Castle.IO.Tests.paths,path_specification,gettting_without_last_bit_should_act_only_on_folder_and_file_part,4,1,2
Castle.IO.Tests.paths,path_specification,drive_and_directory_depends_on_position_of_separator,5,1,2
Castle.IO.Tests.renaming_files,locked_file<T>,cannot_be_moved,7,1,1
Castle.IO.Tests.TestClasses,TestInMemoryFileSystem,TestInMemoryFileSystem,3,1,0
Castle.IO.Tests.TestClasses,TestLocalFileSystem,GetDirectory,3,1,1
Castle.IO.Tests.TestClasses,TestLocalFileSystem,GetDirectory,3,1,1
Castle.IO.Tests.TestClasses,TestLocalFileSystem,GetPath,3,1,1
Castle.IO.Tests.TestClasses,TestLocalFileSystem,CreateTempDirectory,3,1,0
Castle.IO.Tests.TestClasses,TestLocalFileSystem,CreateDirectory,3,1,1
Castle.IO.Tests.TestClasses,TestLocalFileSystem,CreateDirectory,3,1,1
Castle.IO.Tests.TestClasses,TestLocalFileSystem,GetFile,3,1,1
Castle.IO.Tests.TestClasses,TestLocalFileSystem,CreateTempFile,3,1,0
Castle.IO.Tests.TestClasses,TestLocalFileSystem,GetTempDirectory,3,1,0
Castle.IO.Tests.TestClasses,TestLocalFileSystem,GetCurrentDirectory,3,1,0
Castle.IO.Tests.writing_content,using_append<T>,using_append,5,1,0
Castle.IO.Tests.writing_content,using_append<T>,given_content,3,1,1
Castle.IO.Tests.writing_content,using_append<T>,file_length_is_updated,3,1,0
Castle.IO.Tests.writing_content,using_append<T>,file_content_is_written,3,1,0
Castle.IO.Tests.writing_content,using_append<T>,DisposeFile,4,2,0
Castle.IO.Tests.writing_content,using_opencreate<T>,using_opencreate,5,1,0
Castle.IO.Tests.writing_content,using_opencreate<T>,given_content,3,1,1
Castle.IO.Tests.writing_content,using_opencreate<T>,file_length_is_updated,3,1,0
Castle.IO.Tests.writing_content,using_opencreate<T>,file_content_is_written,3,1,0
