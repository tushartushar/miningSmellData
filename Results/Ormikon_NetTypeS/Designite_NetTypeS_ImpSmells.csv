Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NetTypeS,ImportExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ImportExtensions.cs,IncludeFrom,Cyclomatic complexity of the method is 11
Complex Method,NetTypeS,TypeElementBuilder,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeElementBuilder.cs,GetTypeModuleElement,Cyclomatic complexity of the method is 8
Complex Method,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,Collect,Cyclomatic complexity of the method is 11
Complex Method,NetTypeS,Generator,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Generator.cs,GenerateNamespace,Cyclomatic complexity of the method is 10
Complex Method,NetTypeS.Types,SimpleType,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Types\SimpleType.cs,Create,Cyclomatic complexity of the method is 21
Complex Method,NetTypeS.Utils,TypeUtils,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Utils\TypeUtils.cs,IsNumber,Cyclomatic complexity of the method is 10
Long Parameter List,NetTypeS,GenericExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\GenericExtensions.cs,Module,The method has 5 parameters.
Long Parameter List,NetTypeS,GenericExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\GenericExtensions.cs,SubModule,The method has 5 parameters.
Long Parameter List,NetTypeS,ImportExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ImportExtensions.cs,IncludeFrom,The method has 5 parameters.
Long Parameter List,NetTypeS,GeneratorModuleContext,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\GeneratorModuleContext.cs,GeneratorModuleContext,The method has 5 parameters.
Long Parameter List,NetTypeS,GeneratorModule,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\GeneratorModule.cs,GeneratorModule,The method has 5 parameters.
Long Parameter List,NetTypeS.Elements,TypeScriptEnum,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptEnum.cs,TypeScriptEnum,The method has 5 parameters.
Long Parameter List,NetTypeS.Elements,TypeScriptEnum,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptEnum.cs,TypeScriptEnum,The method has 5 parameters.
Long Parameter List,NetTypeS.Elements,TypeScriptInterface,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptInterface.cs,TypeScriptInterface,The method has 5 parameters.
Long Parameter List,NetTypeS.Elements,TypeScriptInterface,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptInterface.cs,TypeScriptInterface,The method has 5 parameters.
Long Parameter List,NetTypeS.Elements,TypeScriptInterface,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptInterface.cs,TypeScriptInterface,The method has 5 parameters.
Long Parameter List,NetTypeS.Elements,TypeScriptInterface,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptInterface.cs,TypeScriptInterface,The method has 6 parameters.
Long Identifier,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,TypeCollector,The length of the parameter generateNumberTypeForDictionaryKeys is 35.
Long Statement,NetTypeS,ElementNameFormatter,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\ElementNameFormatter.cs,FormatModuleName,The length of the statement  "	return moduleNme.IndexOf ('.') > 0 ? string.Join ("."' moduleNme.Split ('.').Select (n => settings.ModuleNameFormatter (n))) : settings.ModuleNameFormatter (moduleNme); " is 168.
Long Statement,NetTypeS,ElementNameFormatter,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\ElementNameFormatter.cs,FormatInterfaceName,The length of the statement  "	return FormatModuleName (name.Remove (moduleIdx)) + "." + settings.InterfaceNameFormatter (name.Substring (moduleIdx + 1)); " is 123.
Long Statement,NetTypeS,GenericExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\GenericExtensions.cs,SubModule,The length of the statement  "	var newName = string.IsNullOrEmpty (generatorModule.FullName) ? moduleName : generatorModule.FullName + "." + moduleName; " is 121.
Long Statement,NetTypeS,ModuleDynamicElementExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ModuleDynamicElementExtensions.cs,ForInterfaces,The length of the statement  "		generatorModule.DynamicElements.Add (new DynamicElement (() => generatorModule.Generator.TypeCollector.GetComplexTypes (generatorModule.FullName).Select (ct => builder (ct)))); " is 176.
Long Statement,NetTypeS,ModuleDynamicElementExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ModuleDynamicElementExtensions.cs,ForInterfaces,The length of the statement  "		generatorModule.DynamicElements.Add (new DynamicElement (() => generatorModule.Generator.TypeCollector.GetComplexTypes (generatorModule.FullName).Select (ct => builder (ct.Type)))); " is 181.
Long Statement,NetTypeS,ModuleDynamicElementExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ModuleDynamicElementExtensions.cs,ForEnums,The length of the statement  "		generatorModule.DynamicElements.Add (new DynamicElement (() => generatorModule.Generator.TypeCollector.GetEnumTypes (generatorModule.FullName).Select (et => builder (et)))); " is 173.
Long Statement,NetTypeS,ModuleDynamicElementExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ModuleDynamicElementExtensions.cs,ForEnums,The length of the statement  "		generatorModule.DynamicElements.Add (new DynamicElement (() => generatorModule.Generator.TypeCollector.GetEnumTypes (generatorModule.FullName).Select (et => builder (et.Type)))); " is 178.
Long Statement,NetTypeS,GeneratorModule,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\GeneratorModule.cs,Generate,The length of the statement  "	var moduleContext = new GeneratorModuleContext (FullName' context.Builder' generator.TypeCollector' generator.CustomTypeNameHolder' generator.Settings); " is 152.
Long Statement,NetTypeS,GeneratorModule,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\GeneratorModule.cs,GetModuleElements,The length of the statement  "	return BuildEnums (enums).Concat (BuildInterfaces (complexTypes)).Concat (elements.SelectMany (de => de.GetElements ().Where (e => e != null))); " is 144.
Long Statement,NetTypeS,InheritedTypeSpy,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\InheritedTypeSpy.cs,InitializeTypes,The length of the statement  "	var loadedAssemblies = assemblies == null || assemblies.Length == 0 ? AppDomain.CurrentDomain.GetAssemblies () : assemblies; " is 124.
Long Statement,NetTypeS,InheritedTypeSpy,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\InheritedTypeSpy.cs,InitializeTypes,The length of the statement  "			if (type.IsEnum || type.IsGenericParameter || type.IsArray || type.IsConstructedGenericType || type.IsPointer || type.IsPrimitive || (type.IsAbstract && type.IsSealed/*static*/) || type == typeof(object) || type.IsCollection ()) " is 228.
Long Statement,NetTypeS,TypeElementBuilder,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeElementBuilder.cs,GetTypeNameElement,The length of the statement  "		return new FixedElement (new TextElement ("{ [ key: ")' GetTypeNameElement (((DictionaryType)tst).KeyType)' new TextElement (" ] : ")' GetTypeNameElement (((DictionaryType)tst).ValueType)' new TextElement (" }")); " is 213.
Long Statement,NetTypeS,TypeElementBuilder,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeElementBuilder.cs,GetModuleLink,The length of the statement  "	if (moduleBinding.Equals (moduleName' StringComparison.Ordinal) || moduleName.StartsWith (moduleBinding + "."' StringComparison.Ordinal)) " is 137.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,Mutate,The length of the statement  "			throw new InvalidOperationException ("Unable to collect information about " + type.FullName + " type. Some of type replacements replace type with the same type and " + " it makes circular replacement references. Please check the code of registered" + " Replace delegates and remove circular type replacement."); " is 311.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,Replace,The length of the statement  "		throw new InvalidOperationException ("For some reason it is unable to collect information for type " + withType.FullName); " is 122.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,Replace,The length of the statement  "				throw new InvalidOperationException ("For some reason it is unable to collect information for type " + withType.FullName); " is 122.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,GetComplexTypes,The length of the statement  "	return Collected.Where (tst => tst.Code == TypeScriptTypeCode.Complex).Cast<ComplexType> ().Where (ct => !ct.IsGeneric || ct.IsGenericDefinition); " is 146.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,GetComplexTypes,The length of the statement  "	return GetTypes (module).Where (tst => tst.Code == TypeScriptTypeCode.Complex).Cast<ComplexType> ().Where (ct => !ct.IsGeneric || ct.IsGenericDefinition); " is 154.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,CompareModuleBindings,The length of the statement  "	return string.IsNullOrEmpty (binding1) ? string.IsNullOrEmpty (binding2) : !string.IsNullOrEmpty (binding2) && binding1.Equals (binding2' StringComparison.Ordinal); " is 164.
Long Statement,NetTypeS,TypeCollector,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\TypeCollector.cs,GetTypes,The length of the statement  "	return collected.Values.Distinct ().Where (cti => CompareModuleBindings (cti.ModuleBinding' module)).Select (cti => cti.Type); " is 126.
Long Statement,NetTypeS,Generator,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Generator.cs,GenerateNamespace,The length of the statement  "		var moduleName = string.IsNullOrEmpty (parentModuleName) ? tree.Root : tree.Root.Substring (parentModuleName.Length + 1); " is 121.
Long Statement,NetTypeS.Elements,TypeScriptInterface,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Elements\TypeScriptInterface.cs,Generate,The length of the statement  "	var bd = properties == null ? body : new BlockElement (AppendSemicolon (properties.Where (p => context.Filter.IsPropertyIncluded (p)).Select (p => context.AllPropertiesAreOptional ? new PropertyElement (p' false) : new PropertyElement (p)))); " is 242.
Long Statement,NetTypeS.Types,ComplexType,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Types\ComplexType.cs,ToString,The length of the statement  "	return "Complex[" + (isValueType ? "struct" : "class") + "](" + name + "[" + string.Join ("; "' properties.Select (p => p.Name + "{" + (p.CanRead ? "get" + (p.CanWrite ? ";set" : "") : p.CanWrite ? "set" : "") + "}")) + "])"; " is 225.
Long Statement,NetTypeS.Utils,TypeUtils,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Utils\TypeUtils.cs,GetTypeInterface,The length of the statement  "		var foundInterface = type.GetInterfaces ().FirstOrDefault (i => i == definition || (i.IsConstructedGenericType && i.GetGenericTypeDefinition () == definition)); " is 160.
Complex Conditional,NetTypeS,InheritedTypeSpy,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\InheritedTypeSpy.cs,InitializeTypes,The conditional expression  "type.IsEnum || type.IsGenericParameter || type.IsArray || type.IsConstructedGenericType || type.IsPointer || type.IsPrimitive || (type.IsAbstract && type.IsSealed/*static*/) || type == typeof(object) || type.IsCollection ()"  is complex.
Empty Catch Block,NetTypeS,ImportExtensions,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Extensions\ImportExtensions.cs,IncludeFromCurrentAssembly,The method has an empty catch block.
Magic Number,NetTypeS,GeneratorFormatSettings,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\GeneratorFormatSettings.cs,GeneratorFormatSettings,The following statement contains a magic number: indentSize = 4;  
Missing Default,NetTypeS.Utils,TypeUtils,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Utils\TypeUtils.cs,IsNumber,The following switch statement is missing a default case: switch (tc) {  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  case TypeCode.UInt16:  case TypeCode.UInt32:  case TypeCode.UInt64:  case TypeCode.SByte:  case TypeCode.Byte:  case TypeCode.Decimal:  	return true;  }  
Missing Default,NetTypeS.Utils,TypeUtils,C:\repos\Ormikon_NetTypeS\src\NetTypeS\NetTypeS\Utils\TypeUtils.cs,IsSimple,The following switch statement is missing a default case: switch (tc) {  case TypeCode.DBNull:  case TypeCode.DateTime:  case TypeCode.Decimal:  case TypeCode.Empty:  	return true;  }  
