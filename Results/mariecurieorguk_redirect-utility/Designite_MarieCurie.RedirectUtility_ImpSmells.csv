Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MarieCurie.RedirectUtility,ConfigFileReader,C:\repos\mariecurieorguk_redirect-utility\src\MarieCurie.RedirectUtility\ConfigFileReader.cs,GetInstructionsFromRewriteMap,The length of the statement  "	return configMap.Elements ("rewriteMaps").Elements ("rewriteMap").Elements ("add").Select (e => new RedirectInstruction () { " is 124.
Long Statement,MarieCurie.RedirectUtility,WebRedirectorRequester,C:\repos\mariecurieorguk_redirect-utility\src\MarieCurie.RedirectUtility\WebRedirectorRequester.cs,ValidateInstructions,The length of the statement  "			result.ResponseStatusCode = ex.Status == WebExceptionStatus.ProtocolError ? HttpStatusCode.NotFound : HttpStatusCode.InternalServerError; " is 137.
Magic Number,MarieCurie.RedirectUtility,WebRedirectorRequester,C:\repos\mariecurieorguk_redirect-utility\src\MarieCurie.RedirectUtility\WebRedirectorRequester.cs,ValidateInstructions,The following statement contains a magic number: foreach (var instruction in instructionsList) {  	var request = (HttpWebRequest)WebRequest.Create (instruction.OldUrl);  	request.Method = "HEAD";  	request.Timeout = 10000;  	//request.AllowAutoRedirect = false;  	//request.MaximumAutomaticRedirections = 0;  	Console.WriteLine ("Requesting {2}/{3} | {0} | {1}"' request.Method' instruction.OldUrl' i' instructionCount);  	i++;  	var result = new RedirectResult {  		Instruction = instruction  	};  	try {  		var response = (HttpWebResponse)request.GetResponse ();  		result.FinalDestinationUrl = response.ResponseUri.ToString ();  		result.ResponseStatusCode = response.StatusCode;  	}  	catch (WebException ex) {  		var response = ex.Response;  		if (ex.Status != WebExceptionStatus.Timeout)  			result.FinalDestinationUrl = response.ResponseUri.ToString ();  		result.ResponseStatusCode = ex.Status == WebExceptionStatus.ProtocolError ? HttpStatusCode.NotFound : HttpStatusCode.InternalServerError;  		result.ExceptionMessage = ex.Message;  	}  	results.Add (result);  }  
Magic Number,MarieCurie.RedirectUtility,WebRedirectorRequester,C:\repos\mariecurieorguk_redirect-utility\src\MarieCurie.RedirectUtility\WebRedirectorRequester.cs,ValidateInstructions,The following statement contains a magic number: request.Timeout = 10000;  
