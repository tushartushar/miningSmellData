Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Gdk,Device,C:\repos\mono_gtk-sharp\gdk\Device.cs,gdk_device_get_history,The method has 6 parameters. Parameters: device' window' start' stop' events' n_events
Long Parameter List,Gdk,Display,C:\repos\mono_gtk-sharp\gdk\Display.cs,gdk_display_get_pointer,The method has 5 parameters. Parameters: raw' screen' x' y' mask
Long Parameter List,Gdk,Display,C:\repos\mono_gtk-sharp\gdk\Display.cs,gdk_display_get_pointer,The method has 5 parameters. Parameters: raw' screen' x' y' mask
Long Parameter List,Gdk,Keymap,C:\repos\mono_gtk-sharp\gdk\Keymap.cs,gdk_keymap_get_entries_for_keycode,The method has 5 parameters. Parameters: raw' hardware_keycode' keys' keyvals' n_entries
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_composite_color_simple,The method has 8 parameters. Parameters: raw' dest_width' dest_height' interp_type' overall_alpha' check_size' color1' color2
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,CompositeColorSimple,The method has 7 parameters. Parameters: dest_width' dest_height' interp_type' overall_alpha' check_size' color1' color2
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_add_alpha,The method has 5 parameters. Parameters: raw' substitute_color' r' g' b
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_new_from_data,The method has 9 parameters. Parameters: data' colorspace' has_alpha' bits_per_sample' width' height' rowstride' destroy_fn' destroy_fn_data
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,Pixbuf,The method has 8 parameters. Parameters: data' colorspace' has_alpha' bits_per_sample' width' height' rowstride' destroy_fn
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,Pixbuf,The method has 7 parameters. Parameters: data' has_alpha' bits_per_sample' width' height' rowstride' destroy_fn
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,Pixbuf,The method has 6 parameters. Parameters: data' has_alpha' bits_per_sample' width' height' rowstride
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,Pixbuf,The method has 7 parameters. Parameters: data' colorspace' has_alpha' bits_per_sample' width' height' rowstride
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_save,The method has 5 parameters. Parameters: raw' filename' type' error' dummy
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_save_to_bufferv,The method has 7 parameters. Parameters: raw' buffer' buffer_size' type' option_keys' option_values' error
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_save_to_callbackv,The method has 7 parameters. Parameters: raw' save_func' user_data' type' option_keys' option_values' error
Long Parameter List,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,gdk_pixbuf_savev,The method has 6 parameters. Parameters: raw' filename' type' option_keys' option_values' error
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,gdk_property_change,The method has 7 parameters. Parameters: window' property' type' format' mode' data' nelements
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Change,The method has 6 parameters. Parameters: window' property' type' format' mode' nelements
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,gdk_property_get,The method has 10 parameters. Parameters: window' property' type' offset' length' pdelete' actual_property_type' actual_format' actual_length' data
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The method has 10 parameters. Parameters: window' property' type' offset' length' pdelete' actual_property_type' actual_format' actual_length' data
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The method has 7 parameters. Parameters: window' property' type' offset' length' pdelete' data
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The method has 6 parameters. Parameters: window' property' offset' length' pdelete' data
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The method has 6 parameters. Parameters: window' property' offset' length' pdelete' atoms
Long Parameter List,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The method has 6 parameters. Parameters: window' property' offset' length' pdelete' rects
Long Parameter List,Gdk,TextProperty,C:\repos\mono_gtk-sharp\gdk\TextProperty.cs,gdk_text_property_to_utf8_list_for_display,The method has 6 parameters. Parameters: display' encoding' format' text' length' list
Long Parameter List,Gdk,TextProperty,C:\repos\mono_gtk-sharp\gdk\TextProperty.cs,ToStringListForDisplay,The method has 5 parameters. Parameters: display' encoding' format' text' length
Long Identifier,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The length of the parameter actual_property_type_as_native is 30.
Long Statement,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,CompositeColorSimple,The length of the statement  "			IntPtr raw_ret = gdk_pixbuf_composite_color_simple(Handle' dest_width' dest_height' (int) interp_type' overall_alpha' check_size' color1' color2); " is 146.
Long Statement,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,SaveToCallback,The length of the statement  "			bool saved = gdk_pixbuf_save_to_callbackv (Handle' save_func_wrapper.NativeDelegate' IntPtr.Zero' ntype' nkeys' nvals' out error); " is 130.
Long Statement,Gdk,Pixbuf,C:\repos\mono_gtk-sharp\gdk\Pixbuf.cs,Savev,The length of the statement  "			bool saved = gdk_pixbuf_savev(Handle' native_filename' native_type' native_option_keys' native_option_values' out error); " is 121.
Long Statement,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Change,The length of the statement  "			gdk_property_change(window == null ? IntPtr.Zero : window.Handle' property == null ? IntPtr.Zero : property.Handle' type == null ? IntPtr.Zero : type.Handle' format' (int) mode' out data' nelements); " is 199.
Long Statement,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The length of the statement  "			bool raw_ret = gdk_property_get(window == null ? IntPtr.Zero : window.Handle' property == null ? IntPtr.Zero : property.Handle' type == null ? IntPtr.Zero : type.Handle' new UIntPtr (offset)' new UIntPtr (length)' pdelete == 0 ? false : true' out actual_property_type_as_native' out actual_format' out actual_length' out actual_data); " is 334.
Long Statement,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The length of the statement  "			actual_property_type = actual_property_type_as_native == IntPtr.Zero ? null : (Gdk.Atom) GLib.Opaque.GetOpaque (actual_property_type_as_native' typeof (Gdk.Atom)' false); " is 170.
Long Statement,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The length of the statement  "			bool ret = gdk_property_get(window == null ? IntPtr.Zero : window.Handle' property == null ? IntPtr.Zero : property.Handle' type == null ? IntPtr.Zero : type.Handle' new UIntPtr (offset)' new UIntPtr (length)' pdelete' out actual_property_type' out format' out actual_length' out raw_data); " is 290.
Long Statement,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The length of the statement  "				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]); " is 129.
Long Statement,Gdk,TextProperty,C:\repos\mono_gtk-sharp\gdk\TextProperty.cs,ToStringListForDisplay,The length of the statement  "			int count = gdk_text_property_to_utf8_list_for_display (display.Handle' encoding.Handle' format' text' length' out list_ptr); " is 125.
Magic Number,Gdk,Color,C:\repos\mono_gtk-sharp\gdk\Color.cs,Color,The following statement contains a magic number: Red = (ushort) (r << 8 | r);
Magic Number,Gdk,Color,C:\repos\mono_gtk-sharp\gdk\Color.cs,Color,The following statement contains a magic number: Green = (ushort) (g << 8 | g);
Magic Number,Gdk,Color,C:\repos\mono_gtk-sharp\gdk\Color.cs,Color,The following statement contains a magic number: Blue = (ushort) (b << 8 | b);
Magic Number,Gdk,PixbufLoader,C:\repos\mono_gtk-sharp\gdk\PixbufLoader.cs,LoadFromStream,The following statement contains a magic number: byte [] buffer = new byte [8192];
Magic Number,Gdk,PixbufLoader,C:\repos\mono_gtk-sharp\gdk\PixbufLoader.cs,LoadFromStream,The following statement contains a magic number: while ((n = input.Read (buffer' 0' 8192)) != 0)  				Write (buffer' (uint) n);
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: if (ret) {  				try {  					int block_size;  					if (format == 32) { // data returned in blocks the size of a C long  #if WIN64LONGS  						block_size = int.Size;  #else  						block_size = IntPtr.Size;  #endif  					} else if (format == 8 || format == 16)  						block_size = format;  					else  						throw new NotSupportedException (String.Format ("Unable to read properties in {0}-bit format"' format));    					int size = actual_length / block_size;  					data = new int [size];  					for (int idx = 0; idx < size; idx++) {  						IntPtr elem_ptr = new IntPtr (raw_data.ToInt64 () + idx * block_size);  						switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}  					}  				} finally {  					GLib.Marshaller.Free (raw_data);  				}  			} else  				data = null;
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: if (ret) {  				try {  					int block_size;  					if (format == 32) { // data returned in blocks the size of a C long  #if WIN64LONGS  						block_size = int.Size;  #else  						block_size = IntPtr.Size;  #endif  					} else if (format == 8 || format == 16)  						block_size = format;  					else  						throw new NotSupportedException (String.Format ("Unable to read properties in {0}-bit format"' format));    					int size = actual_length / block_size;  					data = new int [size];  					for (int idx = 0; idx < size; idx++) {  						IntPtr elem_ptr = new IntPtr (raw_data.ToInt64 () + idx * block_size);  						switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}  					}  				} finally {  					GLib.Marshaller.Free (raw_data);  				}  			} else  				data = null;
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: if (ret) {  				try {  					int block_size;  					if (format == 32) { // data returned in blocks the size of a C long  #if WIN64LONGS  						block_size = int.Size;  #else  						block_size = IntPtr.Size;  #endif  					} else if (format == 8 || format == 16)  						block_size = format;  					else  						throw new NotSupportedException (String.Format ("Unable to read properties in {0}-bit format"' format));    					int size = actual_length / block_size;  					data = new int [size];  					for (int idx = 0; idx < size; idx++) {  						IntPtr elem_ptr = new IntPtr (raw_data.ToInt64 () + idx * block_size);  						switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}  					}  				} finally {  					GLib.Marshaller.Free (raw_data);  				}  			} else  				data = null;
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: if (ret) {  				try {  					int block_size;  					if (format == 32) { // data returned in blocks the size of a C long  #if WIN64LONGS  						block_size = int.Size;  #else  						block_size = IntPtr.Size;  #endif  					} else if (format == 8 || format == 16)  						block_size = format;  					else  						throw new NotSupportedException (String.Format ("Unable to read properties in {0}-bit format"' format));    					int size = actual_length / block_size;  					data = new int [size];  					for (int idx = 0; idx < size; idx++) {  						IntPtr elem_ptr = new IntPtr (raw_data.ToInt64 () + idx * block_size);  						switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}  					}  				} finally {  					GLib.Marshaller.Free (raw_data);  				}  			} else  				data = null;
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: if (ret) {  				try {  					int block_size;  					if (format == 32) { // data returned in blocks the size of a C long  #if WIN64LONGS  						block_size = int.Size;  #else  						block_size = IntPtr.Size;  #endif  					} else if (format == 8 || format == 16)  						block_size = format;  					else  						throw new NotSupportedException (String.Format ("Unable to read properties in {0}-bit format"' format));    					int size = actual_length / block_size;  					data = new int [size];  					for (int idx = 0; idx < size; idx++) {  						IntPtr elem_ptr = new IntPtr (raw_data.ToInt64 () + idx * block_size);  						switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}  					}  				} finally {  					GLib.Marshaller.Free (raw_data);  				}  			} else  				data = null;
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: if (ret) {  				try {  					int block_size;  					if (format == 32) { // data returned in blocks the size of a C long  #if WIN64LONGS  						block_size = int.Size;  #else  						block_size = IntPtr.Size;  #endif  					} else if (format == 8 || format == 16)  						block_size = format;  					else  						throw new NotSupportedException (String.Format ("Unable to read properties in {0}-bit format"' format));    					int size = actual_length / block_size;  					data = new int [size];  					for (int idx = 0; idx < size; idx++) {  						IntPtr elem_ptr = new IntPtr (raw_data.ToInt64 () + idx * block_size);  						switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}  					}  				} finally {  					GLib.Marshaller.Free (raw_data);  				}  			} else  				data = null;
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: return Get (window' property' 0' uint.MaxValue - 3' pdelete' out data);
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: return Get (window' property' 0' uint.MaxValue - 3' pdelete' out data);
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: return Get (window' property' 0' uint.MaxValue - 3' pdelete' out rects);
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: rects = new Gdk.Rectangle [raw_rects.GetLength (0) / 4];
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: for (int idx = 0; idx < rects.GetLength (0); idx ++) {  				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]);  			}
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: for (int idx = 0; idx < rects.GetLength (0); idx ++) {  				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]);  			}
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: for (int idx = 0; idx < rects.GetLength (0); idx ++) {  				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]);  			}
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: for (int idx = 0; idx < rects.GetLength (0); idx ++) {  				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]);  			}
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: for (int idx = 0; idx < rects.GetLength (0); idx ++) {  				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]);  			}
Magic Number,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following statement contains a magic number: for (int idx = 0; idx < rects.GetLength (0); idx ++) {  				rects [idx] = new Gdk.Rectangle (raw_rects [idx * 4]' raw_rects [idx * 4 + 1]' raw_rects [idx * 4 + 2]' raw_rects [idx * 4 + 3]);  			}
Magic Number,Gdk,Rectangle,C:\repos\mono_gtk-sharp\gdk\Rectangle.cs,Inflate,The following statement contains a magic number: Width += width * 2;
Magic Number,Gdk,Rectangle,C:\repos\mono_gtk-sharp\gdk\Rectangle.cs,Inflate,The following statement contains a magic number: Height += height * 2;
Missing Default,Gdk,Property,C:\repos\mono_gtk-sharp\gdk\Property.cs,Get,The following switch statement is missing a default case: switch (format) {  						case 8:  							data [idx] = Marshal.ReadByte (elem_ptr);  							break;  						case 16:  							data [idx] = Marshal.ReadInt16 (elem_ptr);  							break;  						case 32:  							data [idx] = Marshal.ReadInt32 (elem_ptr);  							break;  						}
