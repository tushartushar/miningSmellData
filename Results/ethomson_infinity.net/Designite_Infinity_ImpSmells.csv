Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Infinity,TfsClientExecutor,D:\newReposJune17\ethomson_infinity.net\Infinity\TfsClientExecutor.cs,HandleResponse,Cyclomatic complexity of the method is 13
Long Parameter List,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,DownloadBlob,The method has 4 parameters.
Long Parameter List,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,GetItem,The method has 4 parameters.
Long Parameter List,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,CreatePullRequest,The method has 6 parameters.
Long Parameter List,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,UpdatePullRequest,The method has 4 parameters.
Long Parameter List,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,AddPullRequestReviewer,The method has 4 parameters.
Long Parameter List,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,UpdatePullRequestReviewer,The method has 4 parameters.
Long Statement,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,UpdatePullRequest,The length of the statement  "	var request = new TfsRestRequest ("/_apis/git/repositories/{RepositoryId}/pullRequests/{PullRequestId}"' new HttpMethod ("PATCH")); " is 131.
Long Statement,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,GetPullRequestReviewer,The length of the statement  "	var request = new TfsRestRequest ("/_apis/git/repositories/{RepositoryId}/pullRequests/{PullRequestId}/reviewers/{ReviewerId}"); " is 128.
Long Statement,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,AddPullRequestReviewer,The length of the statement  "	var request = new TfsRestRequest ("/_apis/git/repositories/{RepositoryId}/pullRequests/{PullRequestId}/reviewers/{ReviewerId}"' HttpMethod.Post); " is 145.
Long Statement,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,DeletePullRequestReviewer,The length of the statement  "	var request = new TfsRestRequest ("/_apis/git/repositories/{RepositoryId}/pullRequests/{PullRequestId}/reviewers/{ReviewerId}"' HttpMethod.Delete); " is 147.
Long Statement,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,UpdatePullRequestReviewer,The length of the statement  "	var request = new TfsRestRequest ("/_apis/git/repositories/{RepositoryId}/pullRequests/{PullRequestId}/reviewers/{ReviewerId}"' HttpMethod.Put); " is 144.
Long Statement,Infinity,TfsClientExecutor,D:\newReposJune17\ethomson_infinity.net\Infinity\TfsClientExecutor.cs,IsVisualStudioOnline,The length of the statement  "	return Configuration.Url.Scheme.Equals ("https"' StringComparison.OrdinalIgnoreCase) && (Configuration.Url.Host.EndsWith (".visualstudio.com"' StringComparison.OrdinalIgnoreCase) || Configuration.Url.Host.EndsWith (".tfspreview.com"' StringComparison.OrdinalIgnoreCase)); " is 271.
Magic Number,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,GetReferences,The following statement contains a magic number: if (filter != null) {  	Assert.IsTrue (filter.StartsWith ("refs/")' "filter.StartsWith(refs/)");  	filter = filter.Substring (4);  }  
Magic Number,Infinity.Clients,GitClient,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\GitClient.cs,GetReferences,The following statement contains a magic number: filter = filter.Substring (4);  
Magic Number,Infinity.Clients,Revision,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\Revision.cs,Revision,The following statement contains a magic number: if (refNameOrCommitId.StartsWith ("refs/heads/")) {  	type = RevisionType.Branch;  	version = refNameOrCommitId.Substring (11);  } else if (refNameOrCommitId.StartsWith ("refs/tags/")) {  	type = RevisionType.Tag;  	version = refNameOrCommitId.Substring (10);  } else {  	type = RevisionType.Commit;  	version = new ObjectId (refNameOrCommitId).ToString ();  }  
Magic Number,Infinity.Clients,Revision,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\Revision.cs,Revision,The following statement contains a magic number: if (refNameOrCommitId.StartsWith ("refs/heads/")) {  	type = RevisionType.Branch;  	version = refNameOrCommitId.Substring (11);  } else if (refNameOrCommitId.StartsWith ("refs/tags/")) {  	type = RevisionType.Tag;  	version = refNameOrCommitId.Substring (10);  } else {  	type = RevisionType.Commit;  	version = new ObjectId (refNameOrCommitId).ToString ();  }  
Magic Number,Infinity.Clients,Revision,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\Revision.cs,Revision,The following statement contains a magic number: version = refNameOrCommitId.Substring (11);  
Magic Number,Infinity.Clients,Revision,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\Revision.cs,Revision,The following statement contains a magic number: if (refNameOrCommitId.StartsWith ("refs/tags/")) {  	type = RevisionType.Tag;  	version = refNameOrCommitId.Substring (10);  } else {  	type = RevisionType.Commit;  	version = new ObjectId (refNameOrCommitId).ToString ();  }  
Magic Number,Infinity.Clients,Revision,D:\newReposJune17\ethomson_infinity.net\Infinity\Clients\Revision.cs,Revision,The following statement contains a magic number: version = refNameOrCommitId.Substring (10);  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ObjectId,The following statement contains a magic number: if (str.Length != Length * 2) {  	throw new ArgumentException ("Invalid object id");  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ObjectId,The following statement contains a magic number: for (int i = 0' j = 0; i < Length; i++' j += 2) {  	id [i] = (byte)((byte)(HexValue (str [j]) << 4) | HexValue (str [j + 1]));  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ObjectId,The following statement contains a magic number: for (int i = 0' j = 0; i < Length; i++' j += 2) {  	id [i] = (byte)((byte)(HexValue (str [j]) << 4) | HexValue (str [j + 1]));  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ObjectId,The following statement contains a magic number: j += 2
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ObjectId,The following statement contains a magic number: id [i] = (byte)((byte)(HexValue (str [j]) << 4) | HexValue (str [j + 1]));  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,HexValue,The following statement contains a magic number: if (c >= 'a' && c <= 'f') {  	return (byte)((c - 'a') + 10);  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,HexValue,The following statement contains a magic number: return (byte)((c - 'a') + 10);  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,HexValue,The following statement contains a magic number: if (c >= 'A' && c <= 'F') {  	return (byte)((c - 'a') + 10);  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,HexValue,The following statement contains a magic number: return (byte)((c - 'a') + 10);  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ToString,The following statement contains a magic number: for (int i = 0' j = 0; i < Length; i++' j += 2) {  	str [j] = CharValue ((byte)((id [i] & 0xf0) >> 4));  	str [j + 1] = CharValue ((byte)(id [i] & 0x0f));  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ToString,The following statement contains a magic number: for (int i = 0' j = 0; i < Length; i++' j += 2) {  	str [j] = CharValue ((byte)((id [i] & 0xf0) >> 4));  	str [j + 1] = CharValue ((byte)(id [i] & 0x0f));  }  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ToString,The following statement contains a magic number: j += 2
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,ToString,The following statement contains a magic number: str [j] = CharValue ((byte)((id [i] & 0xf0) >> 4));  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,CharValue,The following statement contains a magic number: return (char)(b > 9 ? (b - 10) + 'a' : b + '0');  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,CharValue,The following statement contains a magic number: return (char)(b > 9 ? (b - 10) + 'a' : b + '0');  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,GetHashCode,The following statement contains a magic number: return id [0] << 24 | id [1] << 16 | id [2] << 8 | id [3];  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,GetHashCode,The following statement contains a magic number: return id [0] << 24 | id [1] << 16 | id [2] << 8 | id [3];  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,GetHashCode,The following statement contains a magic number: return id [0] << 24 | id [1] << 16 | id [2] << 8 | id [3];  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,GetHashCode,The following statement contains a magic number: return id [0] << 24 | id [1] << 16 | id [2] << 8 | id [3];  
Magic Number,Infinity.Models,ObjectId,D:\newReposJune17\ethomson_infinity.net\Infinity\Models\ObjectId.cs,GetHashCode,The following statement contains a magic number: return id [0] << 24 | id [1] << 16 | id [2] << 8 | id [3];  
