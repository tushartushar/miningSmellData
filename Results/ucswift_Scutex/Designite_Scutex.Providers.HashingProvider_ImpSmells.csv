Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,ComputeHashWithSalt,Cyclomatic complexity of the method is 11
Complex Method,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,Cyclomatic complexity of the method is 8
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,Checksum16,The following statement contains a magic number: crc = (ushort)(((crc >> 8) & 0xff) ^ crc16tab[(crc ^ bytCurrent) & 0xff]);
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,Checksum32,The following statement contains a magic number: table = new uint[256];
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,Checksum32,The following statement contains a magic number: crc = (uint)((crc >> 8) ^ table[index]);
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,GetChecksumChar,The following statement contains a magic number: int factor = 2;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,GetChecksumChar,The following statement contains a magic number: factor = (factor == 2) ? 1 : 2;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,GetChecksumChar,The following statement contains a magic number: factor = (factor == 2) ? 1 : 2;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,ValidateChecksumChar,The following statement contains a magic number: factor = (factor == 2) ? 1 : 2;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,ValidateChecksumChar,The following statement contains a magic number: factor = (factor == 2) ? 1 : 2;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,ComputeHashWithSalt,The following statement contains a magic number: int minSaltSize = 4;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,ComputeHashWithSalt,The following statement contains a magic number: int maxSaltSize = 8;
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,The following statement contains a magic number: switch (hashAlgorithm.ToUpper())  			{  				case "SHA1":  					hashSizeInBits = 160;  					break;    				case "SHA256":  					hashSizeInBits = 256;  					break;    				case "SHA384":  					hashSizeInBits = 384;  					break;    				case "SHA512":  					hashSizeInBits = 512;  					break;    				default: // Must be MD5  					hashSizeInBits = 128;  					break;  			}
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,The following statement contains a magic number: switch (hashAlgorithm.ToUpper())  			{  				case "SHA1":  					hashSizeInBits = 160;  					break;    				case "SHA256":  					hashSizeInBits = 256;  					break;    				case "SHA384":  					hashSizeInBits = 384;  					break;    				case "SHA512":  					hashSizeInBits = 512;  					break;    				default: // Must be MD5  					hashSizeInBits = 128;  					break;  			}
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,The following statement contains a magic number: switch (hashAlgorithm.ToUpper())  			{  				case "SHA1":  					hashSizeInBits = 160;  					break;    				case "SHA256":  					hashSizeInBits = 256;  					break;    				case "SHA384":  					hashSizeInBits = 384;  					break;    				case "SHA512":  					hashSizeInBits = 512;  					break;    				default: // Must be MD5  					hashSizeInBits = 128;  					break;  			}
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,The following statement contains a magic number: switch (hashAlgorithm.ToUpper())  			{  				case "SHA1":  					hashSizeInBits = 160;  					break;    				case "SHA256":  					hashSizeInBits = 256;  					break;    				case "SHA384":  					hashSizeInBits = 384;  					break;    				case "SHA512":  					hashSizeInBits = 512;  					break;    				default: // Must be MD5  					hashSizeInBits = 128;  					break;  			}
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,The following statement contains a magic number: switch (hashAlgorithm.ToUpper())  			{  				case "SHA1":  					hashSizeInBits = 160;  					break;    				case "SHA256":  					hashSizeInBits = 256;  					break;    				case "SHA384":  					hashSizeInBits = 384;  					break;    				case "SHA512":  					hashSizeInBits = 512;  					break;    				default: // Must be MD5  					hashSizeInBits = 128;  					break;  			}
Magic Number,WaveTech.Scutex.Providers.HashingProvider,HashingProvider,D:\research\architectureSmells\repos\ucswift_Scutex\Providers\HashingProvider\HashingProvider.cs,VerifyHashWithSalt,The following statement contains a magic number: hashSizeInBytes = hashSizeInBits / 8;
