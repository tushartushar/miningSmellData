Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GenerateLicenseKey,Cyclomatic complexity of the method is 15
Complex Method,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,ValidateLicenseKey,Cyclomatic complexity of the method is 18
Complex Method,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetLicenseKeyData,Cyclomatic complexity of the method is 12
Long Statement,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,ValidateLicenseKey,The length of the statement  "					// Try and covert the value from originalHash into a Hex number' if this value has been changed (altered) the key is invalid as " is 127.
Long Statement,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,ValidateLicenseKey,The length of the statement  "					int verifyHashValue = int.Parse(hashingProvider.GetChecksumChar(decodedLicenseKey.Substring(0' p.Key)).ToString()' NumberStyles.HexNumber); " is 139.
Long Statement,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,ValidateLicenseKey,The length of the statement  "							bool licenseKeyTypeValueCheck = int.TryParse(decodedLicenseKey.Substring(p.Key' p.Value.Length)' out licenseKeyTypeValue); " is 122.
Long Statement,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,ValidateLicenseKey,The length of the statement  "								typeFlag = (LicenseKeyTypeFlag)Enum.Parse(typeof(LicenseKeyTypeFlag)' ((LicenseKeyTypes)licenseKeyTypeValue).ToString()' true); " is 127.
Long Statement,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetLicenseKeyData,The length of the statement  "			if (scutexLicense.LicenseSets != null && scutexLicense.LicenseSets.Count == 1 && scutexLicense.LicenseSets.First().LicenseSetId == int.MaxValue) " is 144.
Long Statement,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetLicenseKeyData,The length of the statement  "							bool licenseKeyTypeValueCheck = int.TryParse(decodedLicenseKey.Substring(p.Key' p.Value.Length)' out licenseKeyTypeValue); " is 122.
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetLicenseCapability,The following statement contains a magic number: lc.MaxLicenseKeysPerBatch = 50000;
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetLicenseCapability,The following statement contains a magic number: lc.MaxTotalLicenseKeys = 500000;
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,CreateLicensePlaceholders,The following statement contains a magic number: Placeholders.Add(new LicensePlaceholder  			{  				Length = 2'  				Token = Char.Parse("a")'  				Type = PlaceholderTypes.Number'  				Value = scutexLicense.Product.GetFormattedProductId(2)'  				IsChecksum = false'  				ValidationType = ValidationTypes.None  			});
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,CreateLicensePlaceholders,The following statement contains a magic number: Placeholders.Add(new LicensePlaceholder  			{  				Length = 2'  				Token = Char.Parse("a")'  				Type = PlaceholderTypes.Number'  				Value = scutexLicense.Product.GetFormattedProductId(2)'  				IsChecksum = false'  				ValidationType = ValidationTypes.None  			});
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,CreateLicensePlaceholders,The following statement contains a magic number: licProdChecksum = licProdChecksum.PadLeft(4' char.Parse("0"));
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,CreateLicensePlaceholders,The following statement contains a magic number: licProdChecksum.Length < 4
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,CreateLicensePlaceholders,The following statement contains a magic number: Placeholders.Add(new LicensePlaceholder  			{  				Length = 4'  				Token = Char.Parse("p")'  				Type = PlaceholderTypes.Number'  				Value = licProdChecksum'  				IsChecksum = false'  				ValidationType = ValidationTypes.None  			});
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetRandomCharacter,The following statement contains a magic number: return CharacterMap.Map[rand % 36];
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: double c1 = Math.Log((c0 * (weight2 * 75)));
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: double c3 = Math.Abs(c2 * c1 + (weight2 / 2d));
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: c4 = c4 - (double)Math.Truncate((weight2 / 2m));
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: c4 = 15;
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: c4 > 15
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: c4 > 15
Magic Number,WaveTech.Scutex.Generators.StaticKeyGeneratorSmall,KeyGenerator,D:\research\architectureSmells\repos\ucswift_Scutex\Generators\SmallStaticKeyGenerator\KeyGenerator.cs,GetWeightingModifer,The following statement contains a magic number: c4 = c4 + (double)Math.Truncate((weight2 / 2m));
