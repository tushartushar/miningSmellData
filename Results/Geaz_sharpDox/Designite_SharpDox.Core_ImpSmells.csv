Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SharpDox.Core.Config,ConfigSerializer,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Config\ConfigSerializer.cs,GetAndSetConfigValue,The length of the statement  "                        property.SetValue(config' new ObservableCollection<string>(item.Attribute("value").Value.Split(new [] { ';' }' StringSplitOptions.RemoveEmptyEntries).ToList())' null); " is 167.
Long Statement,SharpDox.Core.Local,LocalController,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Local\LocalController.cs,GetLocalString,The length of the statement  "            var localStringItem = _localStrings.SingleOrDefault(l => l.Language == currentLanguage && l.LocalStrings.GetType() == localType) ?? " is 131.
Long Statement,SharpDox.Core.Local,LocalController,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Local\LocalController.cs,GetLocalString,The length of the statement  "                var value = localStringItem.LocalStrings.GetType().GetProperty(stringName).GetValue(localStringItem.LocalStrings' null); " is 120.
Long Statement,SharpDox.Core.Local,LocalCreator,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Local\LocalCreator.cs,EnsureDefaultLanguageFolder,The length of the statement  "            var appRootFolder = new DirectoryInfo(Path.GetDirectoryName(Assembly.GetAssembly(typeof(LocalCreator)).Location)).Parent.FullName; " is 130.
Long Statement,SharpDox.Core.Local,LocalLoader,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Local\LocalLoader.cs,LoadLocalizations,The length of the statement  "            var appRootFolder = new DirectoryInfo(Path.GetDirectoryName(Assembly.GetAssembly(typeof(LocalCreator)).Location)).Parent.FullName; " is 130.
Long Statement,SharpDox.Core.Local,LocalLoader,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Local\LocalLoader.cs,GetAllLocalizations,The length of the statement  "                localStringsCollection.Add(new LocalStringsItem("default"' (ILocalStrings)Activator.CreateInstance(localStringsItem.GetType()))); " is 129.
Long Statement,SharpDox.Core,MainContainerConfig,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\MainContainerConfig.cs,RegisterConfiguration,The length of the statement  "            _containerBuilder.RegisterType<CoreConfigSection>().AsSelf().As<ICoreConfigSection>().As<IConfigSection>().SingleInstance(); " is 124.
Long Statement,SharpDox.Core,MainContainerConfig,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\MainContainerConfig.cs,RegisterAllInPath,The length of the statement  "                _containerBuilder.RegisterAssemblyTypes(pluginAssembly).Where(o => typeof(IConfigSection).IsAssignableFrom(o)).AsSelf().As<IConfigSection>().SingleInstance(); " is 158.
Long Statement,SharpDox.Core,MainContainerConfig,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\MainContainerConfig.cs,RegisterAllInPath,The length of the statement  "                _containerBuilder.RegisterAssemblyTypes(pluginAssembly).Where(o => typeof(ILocalStrings).IsAssignableFrom(o)).AsSelf().As<ILocalStrings>().SingleInstance(); " is 156.
Long Statement,SharpDox.Core,MainContainerConfig,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\MainContainerConfig.cs,RegisterAllInPath,The length of the statement  "                _containerBuilder.RegisterAssemblyTypes(pluginAssembly).Where(o => typeof(IExporter).IsAssignableFrom(o)).As<IExporter>(); " is 122.
Magic Number,SharpDox.Core.Config,ConfigController,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Config\ConfigController.cs,AddRecentConfig,The following statement contains a magic number: if (RecentProjects.Count > 5)              {                  RecentProjects.RemoveAt(5);              }
Magic Number,SharpDox.Core.Config,ConfigController,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Config\ConfigController.cs,AddRecentConfig,The following statement contains a magic number: if (RecentProjects.Count > 5)              {                  RecentProjects.RemoveAt(5);              }
Magic Number,SharpDox.Core.Local,LocalLoader,C:\repos\Geaz_sharpDox\src\Core\SharpDox.Core\Local\LocalLoader.cs,ParseLocalizationFile,The following statement contains a magic number: foreach (var line in lines)              {                  var splittedLine = line.Split('=');                  if (splittedLine.Length == 2)                  {                      strings.Add(splittedLine[0].Trim()' splittedLine[1].Trim());                  }              }
