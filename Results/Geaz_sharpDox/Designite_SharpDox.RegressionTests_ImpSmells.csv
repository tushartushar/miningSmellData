Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SharpDox.RegressionTests,Regression1,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression1.cs,VoidShouldNotBeUpperCase,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression1"); " is 122.
Long Statement,SharpDox.RegressionTests,Regression2,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression2.cs,SvgShouldRenderCorrectlyWithArrayReturnType,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression2"); " is 122.
Long Statement,SharpDox.RegressionTests,InheritDoc,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\InheritDoc.cs,DocShouldInherit,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.InheritDoc"); " is 121.
Long Statement,SharpDox.RegressionTests,Regression7,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression7.cs,SyntaxShouldContainAllTypeParameters,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression7"); " is 122.
Long Statement,SharpDox.RegressionTests,Regression8,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression8.cs,NoneAccessibilityShouldGetCorrectly,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression8"); " is 122.
Long Statement,SharpDox.RegressionTests,WebApiDoc,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\WebApiDoc.cs,DocShouldContainWebApiDoc,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.WebApiDoc"); " is 120.
Long Statement,SharpDox.RegressionTests,Regression5,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression5.cs,RepositoryShouldContainNestedTypes,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression5"); " is 122.
Long Statement,SharpDox.RegressionTests,Regression4,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression4.cs,DocumentationShouldContainExceptions,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression4"); " is 122.
Long Statement,SharpDox.RegressionTests,Regression3,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression3.cs,SyntaxShouldContainStaticKeyword,The length of the statement  "            var type = sdProject.Solutions.First().Value.Repositories.First().GetTypeByIdentifier("SharpDox.TestProject.Regression3"); " is 122.
Long Statement,SharpDox.RegressionTests,TestConfig,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\TestConfig.cs,ParseProject,The length of the statement  "            var stepInput = new StepInput(configController' new RoslynParser(Mock.Of<ParserStrings>())' new SDBuildStrings()' null); " is 120.
Magic Number,SharpDox.RegressionTests,Regression4,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\Regression4.cs,DocumentationShouldContainExceptions,The following statement contains a magic number: Assert.AreEqual(2' type.Methods[0].Documentations.GetElementOrDefault("default").Exceptions.Count);
Magic Number,SharpDox.RegressionTests,TestConfig,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\TestConfig.cs,ParseProject,The following statement contains a magic number: var checkConfig = new CheckConfigStep(stepInput' 0' 15);
Magic Number,SharpDox.RegressionTests,TestConfig,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\TestConfig.cs,ParseProject,The following statement contains a magic number: config.Add(new ParseProjectStep(stepInput' 0' 50));
Magic Number,SharpDox.RegressionTests,TestConfig,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\TestConfig.cs,ParseProject,The following statement contains a magic number: config.Add(new ParseCodeStep(stepInput' 50' 100));
Magic Number,SharpDox.RegressionTests,TestConfig,D:\research\architectureSmells\repos\Geaz_sharpDox\src\Tests\SharpDox.RegressionTests\TestConfig.cs,ParseProject,The following statement contains a magic number: config.Add(new ParseCodeStep(stepInput' 50' 100));
