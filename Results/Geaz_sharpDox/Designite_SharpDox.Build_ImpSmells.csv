Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SharpDox.Build,ICodeParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\ICodeParser.cs,GetParsedSolution,The method has 5 parameters. Parameters: solutionFile' sharpDoxConfig' tokens' parseMethodCalls' ignoreExcludes
Long Parameter List,SharpDox.Build,BuildController,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\BuildController.cs,BuildController,The method has 5 parameters. Parameters: buildMessenger' configController' codeParser' allExporters' sdBuildStrings
Long Parameter List,SharpDox.Build,SDTargetFxParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDTargetFxParser.cs,GetTargetFx,The method has 5 parameters. Parameters: targetFrameworkIdentifier' targetFrameworkVersion' targetPlatformIdentifier' targetPlatformVersion' targetFrameworkProfile
Long Statement,SharpDox.Build,SDNavParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDNavParser.cs,GetArticle,The length of the statement  "                if (articleFile != string.Empty && Path.GetExtension(articleFile) == ".csproj" || Path.GetExtension(articleFile) == ".sln") " is 123.
Long Statement,SharpDox.Build,SDNavParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDNavParser.cs,GetArticleFile,The length of the statement  "                articleFile = _articles.SingleOrDefault(a => Path.GetFileNameWithoutExtension(a.ToLower()) == articleFileName.ToLower()); " is 121.
Long Statement,SharpDox.Build,SDTargetFxParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDTargetFxParser.cs,GetTargetFx,The length of the statement  "                targetFx = GetTargetFx(targetFrameworkIdentifier' targetFrameworkVersion' targetPlatformIdentifier' targetPlatformVersion' targetFrameworkProfile); " is 147.
Long Statement,SharpDox.Build,SDTargetFxParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDTargetFxParser.cs,GetTargetFx,The length of the statement  "            else if (string.Equals(targetFrameworkIdentifier' "silverlight"' StringComparison.OrdinalIgnoreCase) && string.Equals(targetFrameworkVersion' "v5.0"' StringComparison.OrdinalIgnoreCase)) " is 186.
Long Statement,SharpDox.Build,SDTargetFxParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDTargetFxParser.cs,GetTargetFx,The length of the statement  "            else if (string.Equals(targetPlatformIdentifier' "WindowsPhoneApp"' StringComparison.OrdinalIgnoreCase) && string.Equals(targetPlatformVersion' "8.1"' StringComparison.OrdinalIgnoreCase)) " is 187.
Long Statement,SharpDox.Build.Context.Step,ExportStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ExportStep.cs,RunAllExporters,The length of the statement  "                    exporter.OnStepProgress += (p) => ExecuteOnStepProgress((int)(((double)p / _stepInput.CoreConfigSection.ActivatedExporters.Count) + (i / _stepInput.CoreConfigSection.ActivatedExporters.Count * 100))); " is 200.
Long Statement,SharpDox.Build.Context.Step,StructeParseCodeStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\StructeParseCodeStep.cs,RunStep,The length of the statement  "                sdProject.Solutions[solution] = _stepInput.CodeParser.GetParsedSolution(solution' _stepInput.CoreConfigSection' sdProject.Tokens' false' true); " is 143.
Long Statement,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,RunStep,The length of the statement  "                _sdProject.Solutions.Add(_stepInput.CoreConfigSection.InputFile' new SDSolution(_stepInput.CoreConfigSection.InputFile)); " is 121.
Long Statement,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,GetImages,The length of the statement  "            var images = Directory.EnumerateFiles(Path.GetDirectoryName(_stepInput.CoreConfigSection.InputFile)' "sdi.*"' SearchOption.AllDirectories); " is 139.
Long Statement,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseTokens,The length of the statement  "            var potentialTokenFiles = Directory.EnumerateFiles(Path.GetDirectoryName(_stepInput.CoreConfigSection.InputFile)' "*.sdt"); " is 123.
Long Statement,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseDescriptions,The length of the statement  "            var potentialReadMes = Directory.EnumerateFiles(Path.GetDirectoryName(_stepInput.CoreConfigSection.InputFile)' "*.sdpd"); " is 121.
Long Statement,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseDescriptions,The length of the statement  "                    if (splitted.Length > 0 && CultureInfo.GetCultures(CultureTypes.NeutralCultures).Any(c => c.TwoLetterISOLanguageName == splitted[0].ToLower())) " is 143.
Long Statement,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseNavigationFiles,The length of the statement  "            var navFiles = Directory.EnumerateFiles(Path.GetDirectoryName(_stepInput.CoreConfigSection.InputFile)' "*.sdnav"' SearchOption.AllDirectories); " is 143.
Long Statement,SharpDox.Build.Context.Step,ParseCodeStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseCodeStep.cs,RunStep,The length of the statement  "                sdProject.Solutions[solution] = _stepInput.CodeParser.GetParsedSolution(solution' _stepInput.CoreConfigSection' sdProject.Tokens' true); " is 136.
Magic Number,SharpDox.Build,SDNavParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDNavParser.cs,ParseNavFile,The following statement contains a magic number: if (navFile != null)              {                  foreach (var line in File.ReadAllLines(navFile))                  {                      var article = GetArticle(line' sdProject.Tokens);                      if (article is SDDocPlaceholder)                      {                          var solutionFile = ((SDDocPlaceholder)article).SolutionFile;                          sdProject.AddSolution(solutionFile);                      }                        var navLevel = GetNavLevel(line);                        if (levelNodes.Count < navLevel)                      {                          levelNodes.Add(article);                      }                      else                      {                          levelNodes[navLevel - 1] = article;                      }                        if (navLevel == 1)                      {                          articles.Add(article);                      }                      else                      {                          article.Parent = levelNodes[navLevel - 2];                          levelNodes[navLevel - 2].Children.Add(article);                      }                  }              }
Magic Number,SharpDox.Build,SDNavParser,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\SDNavParser.cs,ParseNavFile,The following statement contains a magic number: if (navFile != null)              {                  foreach (var line in File.ReadAllLines(navFile))                  {                      var article = GetArticle(line' sdProject.Tokens);                      if (article is SDDocPlaceholder)                      {                          var solutionFile = ((SDDocPlaceholder)article).SolutionFile;                          sdProject.AddSolution(solutionFile);                      }                        var navLevel = GetNavLevel(line);                        if (levelNodes.Count < navLevel)                      {                          levelNodes.Add(article);                      }                      else                      {                          levelNodes[navLevel - 1] = article;                      }                        if (navLevel == 1)                      {                          articles.Add(article);                      }                      else                      {                          article.Parent = levelNodes[navLevel - 2];                          levelNodes[navLevel - 2].Children.Add(article);                      }                  }              }
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: var checkConfig = new CheckConfigStep(stepInput' 0' 15);
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ExtendedCheckConfigStep(stepInput' checkConfig' 0' 15));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ParseProjectStep(stepInput' 15' 25));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ParseProjectStep(stepInput' 15' 25));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ParseCodeStep(stepInput' 25' 70));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ParseCodeStep(stepInput' 25' 70));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ExportStep(stepInput' 70' 100));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,FullBuildConfig,The following statement contains a magic number: config.Add(new ExportStep(stepInput' 70' 100));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,StructureParseConfig,The following statement contains a magic number: config.Add(new CheckConfigStep(stepInput' 0' 15));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,StructureParseConfig,The following statement contains a magic number: config.Add(new ParseProjectStep(stepInput' 15' 25));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,StructureParseConfig,The following statement contains a magic number: config.Add(new ParseProjectStep(stepInput' 15' 25));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,StructureParseConfig,The following statement contains a magic number: config.Add(new StructeParseCodeStep(stepInput' 25' 100));
Magic Number,SharpDox.Build.Context,BuildConfig,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildConfig.cs,StructureParseConfig,The following statement contains a magic number: config.Add(new StructeParseCodeStep(stepInput' 25' 100));
Magic Number,SharpDox.Build.Context,BuildContext,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildContext.cs,StartBuild,The following statement contains a magic number: try              {                  _buildMessenger.ExecuteOnBuildProgress(0);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.StartingBuild);                    var sdProject = new SDProject();                  foreach (var step in _buildSteps)                  {                      _buildMessenger.ExecuteOnBuildMessage(string.Format(_sdBuildStrings.StartingStep' step.StepName));                      _buildMessenger.ExecuteOnBuildProgress(step.StepRange.ProgressStart);                      _buildMessenger.ExecuteOnStepProgress(0);                        step.OnBuildProgress += _buildMessenger.ExecuteOnBuildProgress;                      step.OnBuildMessage += _buildMessenger.ExecuteOnBuildMessage;                      step.OnStepMessage += _buildMessenger.ExecuteOnStepMessage;                      step.OnStepProgress += _buildMessenger.ExecuteOnStepProgress;                        sdProject = step.RunStep(sdProject);                        _buildMessenger.ExecuteOnStepProgress(100);                  }                    _buildMessenger.ExecuteOnBuildProgress(100);                  _buildMessenger.ExecuteOnStepMessage(string.Empty);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildSuccess);                  _buildMessenger.ExecuteOnBuildCompleted(sdProject);              }              catch (Exception ex)              {                  if (ex is ThreadAbortException)                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildStopped);                      _buildMessenger.ExecuteOnStepProgress(0);                      _buildMessenger.ExecuteOnBuildProgress(0);                        _buildMessenger.ExecuteOnBuildStopped();                  }                  else                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.CouldNotEndBuild);                      _buildMessenger.ExecuteOnStepProgress(100);                      _buildMessenger.ExecuteOnBuildProgress(100);                        _buildMessenger.ExecuteOnBuildFailed(ex.ToString());                  }              }
Magic Number,SharpDox.Build.Context,BuildContext,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildContext.cs,StartBuild,The following statement contains a magic number: try              {                  _buildMessenger.ExecuteOnBuildProgress(0);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.StartingBuild);                    var sdProject = new SDProject();                  foreach (var step in _buildSteps)                  {                      _buildMessenger.ExecuteOnBuildMessage(string.Format(_sdBuildStrings.StartingStep' step.StepName));                      _buildMessenger.ExecuteOnBuildProgress(step.StepRange.ProgressStart);                      _buildMessenger.ExecuteOnStepProgress(0);                        step.OnBuildProgress += _buildMessenger.ExecuteOnBuildProgress;                      step.OnBuildMessage += _buildMessenger.ExecuteOnBuildMessage;                      step.OnStepMessage += _buildMessenger.ExecuteOnStepMessage;                      step.OnStepProgress += _buildMessenger.ExecuteOnStepProgress;                        sdProject = step.RunStep(sdProject);                        _buildMessenger.ExecuteOnStepProgress(100);                  }                    _buildMessenger.ExecuteOnBuildProgress(100);                  _buildMessenger.ExecuteOnStepMessage(string.Empty);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildSuccess);                  _buildMessenger.ExecuteOnBuildCompleted(sdProject);              }              catch (Exception ex)              {                  if (ex is ThreadAbortException)                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildStopped);                      _buildMessenger.ExecuteOnStepProgress(0);                      _buildMessenger.ExecuteOnBuildProgress(0);                        _buildMessenger.ExecuteOnBuildStopped();                  }                  else                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.CouldNotEndBuild);                      _buildMessenger.ExecuteOnStepProgress(100);                      _buildMessenger.ExecuteOnBuildProgress(100);                        _buildMessenger.ExecuteOnBuildFailed(ex.ToString());                  }              }
Magic Number,SharpDox.Build.Context,BuildContext,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildContext.cs,StartBuild,The following statement contains a magic number: try              {                  _buildMessenger.ExecuteOnBuildProgress(0);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.StartingBuild);                    var sdProject = new SDProject();                  foreach (var step in _buildSteps)                  {                      _buildMessenger.ExecuteOnBuildMessage(string.Format(_sdBuildStrings.StartingStep' step.StepName));                      _buildMessenger.ExecuteOnBuildProgress(step.StepRange.ProgressStart);                      _buildMessenger.ExecuteOnStepProgress(0);                        step.OnBuildProgress += _buildMessenger.ExecuteOnBuildProgress;                      step.OnBuildMessage += _buildMessenger.ExecuteOnBuildMessage;                      step.OnStepMessage += _buildMessenger.ExecuteOnStepMessage;                      step.OnStepProgress += _buildMessenger.ExecuteOnStepProgress;                        sdProject = step.RunStep(sdProject);                        _buildMessenger.ExecuteOnStepProgress(100);                  }                    _buildMessenger.ExecuteOnBuildProgress(100);                  _buildMessenger.ExecuteOnStepMessage(string.Empty);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildSuccess);                  _buildMessenger.ExecuteOnBuildCompleted(sdProject);              }              catch (Exception ex)              {                  if (ex is ThreadAbortException)                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildStopped);                      _buildMessenger.ExecuteOnStepProgress(0);                      _buildMessenger.ExecuteOnBuildProgress(0);                        _buildMessenger.ExecuteOnBuildStopped();                  }                  else                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.CouldNotEndBuild);                      _buildMessenger.ExecuteOnStepProgress(100);                      _buildMessenger.ExecuteOnBuildProgress(100);                        _buildMessenger.ExecuteOnBuildFailed(ex.ToString());                  }              }
Magic Number,SharpDox.Build.Context,BuildContext,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\BuildContext.cs,StartBuild,The following statement contains a magic number: try              {                  _buildMessenger.ExecuteOnBuildProgress(0);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.StartingBuild);                    var sdProject = new SDProject();                  foreach (var step in _buildSteps)                  {                      _buildMessenger.ExecuteOnBuildMessage(string.Format(_sdBuildStrings.StartingStep' step.StepName));                      _buildMessenger.ExecuteOnBuildProgress(step.StepRange.ProgressStart);                      _buildMessenger.ExecuteOnStepProgress(0);                        step.OnBuildProgress += _buildMessenger.ExecuteOnBuildProgress;                      step.OnBuildMessage += _buildMessenger.ExecuteOnBuildMessage;                      step.OnStepMessage += _buildMessenger.ExecuteOnStepMessage;                      step.OnStepProgress += _buildMessenger.ExecuteOnStepProgress;                        sdProject = step.RunStep(sdProject);                        _buildMessenger.ExecuteOnStepProgress(100);                  }                    _buildMessenger.ExecuteOnBuildProgress(100);                  _buildMessenger.ExecuteOnStepMessage(string.Empty);                  _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildSuccess);                  _buildMessenger.ExecuteOnBuildCompleted(sdProject);              }              catch (Exception ex)              {                  if (ex is ThreadAbortException)                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.BuildStopped);                      _buildMessenger.ExecuteOnStepProgress(0);                      _buildMessenger.ExecuteOnBuildProgress(0);                        _buildMessenger.ExecuteOnBuildStopped();                  }                  else                  {                      _buildMessenger.ExecuteOnBuildMessage(_sdBuildStrings.CouldNotEndBuild);                      _buildMessenger.ExecuteOnStepProgress(100);                      _buildMessenger.ExecuteOnBuildProgress(100);                        _buildMessenger.ExecuteOnBuildFailed(ex.ToString());                  }              }
Magic Number,SharpDox.Build.Context.Step,ExportStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ExportStep.cs,RunAllExporters,The following statement contains a magic number: foreach (var exporter in _stepInput.AllExporters)              {                  if (_stepInput.CoreConfigSection.ActivatedExporters.Contains(exporter.ExporterName))                  {                      var outputPath = GetOutputPath(_stepInput.CoreConfigSection.OutputPath' exporter.ExporterName);                        ExecuteOnStepMessage(string.Format(_stepInput.SDBuildStrings.RunningExporter' exporter.ExporterName));                      exporter.OnStepMessage += (m) => ExecuteOnStepMessage(string.Format("[{0}] {1}"' exporter.ExporterName' m));                      exporter.OnStepProgress += (p) => ExecuteOnStepProgress((int)(((double)p / _stepInput.CoreConfigSection.ActivatedExporters.Count) + (i / _stepInput.CoreConfigSection.ActivatedExporters.Count * 100)));                      exporter.Export(sdProject' outputPath);                      i++;                  }              }
Magic Number,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,SetProjectInfos,The following statement contains a magic number: ExecuteOnStepProgress(25);
Magic Number,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseTokens,The following statement contains a magic number: ExecuteOnStepProgress(40);
Magic Number,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseDescriptions,The following statement contains a magic number: ExecuteOnStepProgress(50);
Magic Number,SharpDox.Build.Context.Step,ParseProjectStep,C:\repos\Geaz_sharpDox\src\Libraries\SharpDox.Build\Context\Step\ParseProjectStep.cs,ParseNavigationFiles,The following statement contains a magic number: ExecuteOnStepProgress(50);
