Implementation smell,Namespace,Class,File,Method,Description
Long Statement,VS2013.Update3,ApplicationUserManager,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\IdentityConfig.cs,Create,The length of the statement  "            var manager = new ApplicationUserManager(new IdentityRebootUserStore<ApplicationUser>(context.Get<ApplicationDbContext>())); " is 124.
Long Statement,VS2013.Update3,ApplicationUserManager,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\IdentityConfig.cs,Create,The length of the statement  "            // Register two factor authentication providers. This application uses Phone and Emails as a step of receiving a code for verifying the user " is 140.
Long Statement,VS2013.Update3,Startup,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\Startup.Auth.cs,ConfigureAuth,The length of the statement  "            // Enables the application to temporarily store user information when they are verifying the second factor in the two-factor authentication process. " is 148.
Long Statement,VS2013.Update3,Startup,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\Startup.Auth.cs,ConfigureAuth,The length of the statement  "            // Once you check this option' your second step of verification during the login process will be remembered on the device where you logged in from. " is 147.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,Login,The length of the statement  "            var result = await SignInManager.PasswordSignInAsync(model.Email' model.Password' model.RememberMe' shouldLockout: false); " is 122.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,VerifyCode,The length of the statement  "            var result = await SignInManager.TwoFactorSignInAsync(model.Provider' model.Code' isPersistent:  model.RememberMe' rememberBrowser: model.RememberBrowser); " is 155.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,Register,The length of the statement  "                    // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=320771 " is 139.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,Register,The length of the statement  "                    // var callbackUrl = Url.Action("ConfirmEmail"' "Account"' new { userId = user.Id' code = code }' protocol: Request.Url.Scheme); " is 128.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,Register,The length of the statement  "                    // await UserManager.SendEmailAsync(user.Id' "Confirm your account"' "Please confirm your account by clicking <a href=\"" + callbackUrl + "\">here</a>"); " is 153.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,ForgotPassword,The length of the statement  "                // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=320771 " is 139.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,ForgotPassword,The length of the statement  "                // var callbackUrl = Url.Action("ResetPassword"' "Account"' new { userId = user.Id' code = code }' protocol: Request.Url.Scheme);		 " is 129.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,ForgotPassword,The length of the statement  "                // await UserManager.SendEmailAsync(user.Id' "Reset Password"' "Please reset your password by clicking <a href=\"" + callbackUrl + "\">here</a>"); " is 146.
Long Statement,VS2013.Update3.Controllers,AccountController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\AccountController.cs,SendCode,The length of the statement  "            return RedirectToAction("VerifyCode"' new { Provider = model.SelectedProvider' ReturnUrl = model.ReturnUrl' RememberMe = model.RememberMe }); " is 141.
Long Statement,VS2013.Update3.Controllers,ManageController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\ManageController.cs,RemoveLogin,The length of the statement  "            var result = await UserManager.RemoveLoginAsync(User.Identity.GetUserId()' new UserLoginInfo(loginProvider' providerKey)); " is 122.
Long Statement,VS2013.Update3.Controllers,ManageController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\ManageController.cs,ManageLogins,The length of the statement  "            var otherLogins = AuthenticationManager.GetExternalAuthenticationTypes().Where(auth => userLogins.All(ul => auth.AuthenticationType != ul.LoginProvider)).ToList(); " is 163.
Long Statement,VS2013.Update3.Controllers,ManageController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\ManageController.cs,LinkLogin,The length of the statement  "            return new AccountController.ChallengeResult(provider' Url.Action("LinkLoginCallback"' "Manage")' User.Identity.GetUserId()); " is 125.
Long Statement,VS2013.Update3.Controllers,ManageController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\ManageController.cs,LinkLoginCallback,The length of the statement  "            return result.Succeeded ? RedirectToAction("ManageLogins") : RedirectToAction("ManageLogins"' new { Message = ManageMessageId.Error }); " is 135.
Long Statement,VS2013.Update3.Controllers,ManageController,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\Controllers\ManageController.cs,SignInAsync,The length of the statement  "            AuthenticationManager.SignIn(new AuthenticationProperties { IsPersistent = isPersistent }' await user.GenerateUserIdentityAsync(UserManager)); " is 142.
Magic Number,VS2013.Update3,ApplicationUserManager,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\IdentityConfig.cs,Create,The following statement contains a magic number: manager.PasswordValidator = new PasswordValidator              {                  RequiredLength = 6'                  RequireNonLetterOrDigit = true'                  RequireDigit = true'                  RequireLowercase = true'                  RequireUppercase = true'              };
Magic Number,VS2013.Update3,ApplicationUserManager,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\IdentityConfig.cs,Create,The following statement contains a magic number: manager.DefaultAccountLockoutTimeSpan = TimeSpan.FromMinutes(5);
Magic Number,VS2013.Update3,ApplicationUserManager,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\IdentityConfig.cs,Create,The following statement contains a magic number: manager.MaxFailedAccessAttemptsBeforeLockout = 5;
Magic Number,VS2013.Update3,Startup,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\Startup.Auth.cs,ConfigureAuth,The following statement contains a magic number: app.UseCookieAuthentication(new CookieAuthenticationOptions              {                  AuthenticationType = DefaultAuthenticationTypes.ApplicationCookie'                  LoginPath = new PathString("/Account/Login")'                  Provider = new CookieAuthenticationProvider                  {                      // Enables the application to validate the security stamp when the user logs in.                      // This is a security feature which is used when you change a password or add an external login to your account.                        OnValidateIdentity = SecurityStampValidator.OnValidateIdentity<ApplicationUserManager' ApplicationUser>(                          validateInterval: TimeSpan.FromMinutes(30)'                          regenerateIdentity: (manager' user) => user.GenerateUserIdentityAsync(manager))                  }              });
Magic Number,VS2013.Update3,Startup,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\samples\VS2013.Update3\VS2013.Update3\App_Start\Startup.Auth.cs,ConfigureAuth,The following statement contains a magic number: app.UseTwoFactorSignInCookie(DefaultAuthenticationTypes.TwoFactorCookie' TimeSpan.FromMinutes(5));
