Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The length of the statement  "                StringAssert.StartsWith(result' subject.EncodeIterations(IterationsForCurrentYear) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator); " is 148.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The length of the statement  "                StringAssert.StartsWith(result' subject.EncodeIterations(5000) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator); " is 128.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The length of the statement  "                StringAssert.StartsWith(result' subject.EncodeIterations(10000) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator); " is 129.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The length of the statement  "                StringAssert.StartsWith(result' subject.EncodeIterations(50) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator); " is 126.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,NegativeCount_UsesCurrentYearPrefix,The length of the statement  "            StringAssert.StartsWith(result' subject.EncodeIterations(IterationsForCurrentYear) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator); " is 148.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,ZeroCount_UsesCurrentYearPrefix,The length of the statement  "            StringAssert.StartsWith(result' subject.EncodeIterations(IterationsForCurrentYear) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator); " is 148.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashedPassword_Verifies,The length of the statement  "            Assert.IsTrue(subject.VerifyHashedPassword(hash' "pass")==Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 120.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPassword_DoesNotVerify,The length of the statement  "            Assert.IsFalse(subject.VerifyHashedPassword(hash' "pass2") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 124.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,PasswordHashingIterationCountChangedAfterHash_StillVerifies,The length of the statement  "            Assert.IsTrue(subject.VerifyHashedPassword(hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 122.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,PasswordWithoutPrefix_StillValidatesWithDefault,The length of the statement  "            Assert.IsTrue(subject.VerifyHashedPassword(hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 122.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The length of the statement  "                Assert.IsFalse(subject.VerifyHashedPassword(subject.EncodeIterations(5000) + "." + hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 162.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The length of the statement  "                Assert.IsFalse(subject.VerifyHashedPassword(subject.EncodeIterations(5000) + ".5." + hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 164.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The length of the statement  "                Assert.IsFalse(subject.VerifyHashedPassword("hello." + hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 134.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The length of the statement  "                Assert.IsFalse(subject.VerifyHashedPassword("-1." + hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 131.
Long Statement,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The length of the statement  "                Assert.IsFalse(subject.VerifyHashedPassword(hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success); " is 123.
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The following statement contains a magic number: subject.IterationCount = 5000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The following statement contains a magic number: StringAssert.StartsWith(result' subject.EncodeIterations(5000) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator);
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The following statement contains a magic number: subject.IterationCount = 10000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The following statement contains a magic number: StringAssert.StartsWith(result' subject.EncodeIterations(10000) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator);
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The following statement contains a magic number: subject.IterationCount = 50;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashPassword_CountStoredInHashedPassword,The following statement contains a magic number: StringAssert.StartsWith(result' subject.EncodeIterations(50) + AdaptivePasswordHasher.PasswordHashingIterationCountSeparator);
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,HashedPassword_Verifies,The following statement contains a magic number: subject.IterationCount = 5000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPassword_DoesNotVerify,The following statement contains a magic number: subject.IterationCount = 5000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,PasswordHashingIterationCountChangedAfterHash_StillVerifies,The following statement contains a magic number: subject.IterationCount = 5000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The following statement contains a magic number: Assert.IsFalse(subject.VerifyHashedPassword(subject.EncodeIterations(5000) + "." + hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success);
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The following statement contains a magic number: Assert.IsFalse(subject.VerifyHashedPassword(subject.EncodeIterations(5000) + ".5." + hash' "pass") == Microsoft.AspNet.Identity.PasswordVerificationResult.Success);
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The following statement contains a magic number: subject.IterationCount = 10000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The following statement contains a magic number: hash = hash.Replace(subject.EncodeIterations(10000)' subject.EncodeIterations(5000));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,IncorrectPrefix_DoesNotVerify,The following statement contains a magic number: hash = hash.Replace(subject.EncodeIterations(10000)' subject.EncodeIterations(5000));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(-1));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(1999));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(1999));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(2000));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(2000));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(2001));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(1000' subject.GetIterationsFromYear(2001));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(2000' subject.GetIterationsFromYear(2002));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(2000' subject.GetIterationsFromYear(2002));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(2000' subject.GetIterationsFromYear(2003));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(2000' subject.GetIterationsFromYear(2003));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(4000' subject.GetIterationsFromYear(2004));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(4000' subject.GetIterationsFromYear(2004));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(8000' subject.GetIterationsFromYear(2006));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(8000' subject.GetIterationsFromYear(2006));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(16000' subject.GetIterationsFromYear(2008));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(16000' subject.GetIterationsFromYear(2008));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(32000' subject.GetIterationsFromYear(2010));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(32000' subject.GetIterationsFromYear(2010));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(64000' subject.GetIterationsFromYear(2012));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(64000' subject.GetIterationsFromYear(2012));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(2097152000' subject.GetIterationsFromYear(2042));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(2097152000' subject.GetIterationsFromYear(2042));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(Int32.MaxValue' subject.GetIterationsFromYear(2044));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(Int32.MaxValue' subject.GetIterationsFromYear(2045));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,GetIterationsFromYear_CalculatesCorrectValues,The following statement contains a magic number: Assert.AreEqual(Int32.MaxValue' subject.GetIterationsFromYear(2046));
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,VerifyHashedPassword_StoredCountIsDifferentThanCurrentCount_ReturnsSuccessRehashNeeded,The following statement contains a magic number: subject.IterationCount = 1000;
Magic Number,BrockAllen.IdentityReboot.Tests,AdaptivePasswordHasherTests,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\AdaptivePasswordHasherTests.cs,VerifyHashedPassword_StoredCountIsDifferentThanCurrentCount_ReturnsSuccessRehashNeeded,The following statement contains a magic number: subject.IterationCount = 2000;
Magic Number,BrockAllen.IdentityReboot.Tests,IdentityRebootTestBase,D:\research\architectureSmells\repos\brockallen_BrockAllen.IdentityReboot\source\BrockAllen.IdentityReboot.Tests\IdentityRebootTestBase.cs,Init,The following statement contains a magic number: manager = new TestIdentityRebootUserManager(store' 100);
