Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Merchello.Tests.Base.DataMakers,MockProductDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockProductDataMaker.cs,MockProductForInserting,The method has 5 parameters. Parameters: name' sku' price' weight' taxable
Long Statement,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,GetServiceContext,The length of the statement  "            return  new ServiceContext(repositoryFactory' new PetaPocoUnitOfWorkProvider(TestLogger)' TestLogger' new TransientMessageFactory()); " is 133.
Long Statement,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,ProductItemName,The length of the statement  "                "Gravy boat"' "Sushi"' "Chop sticks"' "Golf ball"' "Paraglider"' "Pet rock"' "Parachute pants"' "Pink Pirates Flag"' "Picture of Miguel"' "Bar of soap"' "1 Kg. Oysters"' " is 169.
Long Statement,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,ProductItemName,The length of the statement  "                "Maple Syrup"' "Spark plug"' "Paper cup"' "Monitor adapter"' "Sun glasses"' "Shoe laces"' "Fern"' "Ghandi Facts and Fiction"' "Snorkel"' "Box of frogs"' "Peanut Butter"' "Zip lock bags"' " is 186.
Long Statement,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,ProductItemName,The length of the statement  "                "Goats milk"' "Iguana"' "Sheppard's crook"' "Pricess Liea Slave Custome"' "Refrigerator Perry Collectable Card"' "Corn flour"' "Organic chocolate"' "Laser pistol"' "Alien bogey"' " is 178.
Long Statement,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,ProductItemName,The length of the statement  "                "Harry Potter Speedo"' "Golf ball"' "Slingshot"' "Pepper Spray"' "Chicken Feathers"' "Slinky"' "Toe Nail Clippers"' "iPad"' "Diaper Service"' "Bait"' " is 149.
Long Statement,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,ProductItemName,The length of the statement  "                "Escalator"' "Gold Ring"' "Whistle Pop"' "Spicy Sauce"' "Snails"' "Roses"' "Razor"' "Remote Control"' "Frosting"' "Camoflage Muscle Shirt"' " is 139.
Long Statement,Merchello.Tests.Base.DataMakers,MockProductDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockProductDataMaker.cs,MockProductCollectionForInserting,The length of the statement  "            for (var i = 0; i < count; i++) yield return MockProductForInserting(ProductItemName()' Guid.NewGuid().ToString().Replace("-"' string.Empty)' PriceCheck()); " is 156.
Long Statement,Merchello.Tests.Base.SqlSyntax,SqlSyntaxProviderTestHelper,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\SqlSyntax\SqlSyntaxProviderTestHelper.cs,EstablishSqlSyntax,The length of the statement  "            //PaymentGatewayProviderResolver.Current = new PaymentGatewayProviderResolver(() => PluginManager.Current.ResolveTypesWithAttribute<PaymentGatewayProviderBase' GatewayProviderActivationAttribute>()); " is 199.
Long Statement,Merchello.Tests.Base.SqlSyntax,SqlSyntaxProviderTestHelper,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\SqlSyntax\SqlSyntaxProviderTestHelper.cs,EstablishSqlSyntax,The length of the statement  "            //NotificationGatewayProviderResolver.Current = new NotificationGatewayProviderResolver(() => PluginManager.Current.ResolveTypesWithAttribute<NotificationGatewayProviderBase' GatewayProviderActivationAttribute>()); " is 214.
Long Statement,Merchello.Tests.Base.SqlSyntax,SqlSyntaxProviderTestHelper,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\SqlSyntax\SqlSyntaxProviderTestHelper.cs,EstablishSqlSyntax,The length of the statement  "            //TaxationGatewayProviderResolver.Current = new TaxationGatewayProviderResolver(() => PluginManager.Current.ResolveTypesWithAttribute<TaxationGatewayProviderBase' GatewayProviderActivationAttribute>()); " is 202.
Long Statement,Merchello.Tests.Base.SqlSyntax,SqlSyntaxProviderTestHelper,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\SqlSyntax\SqlSyntaxProviderTestHelper.cs,EstablishSqlSyntax,The length of the statement  "            //ShippingGatewayProviderResolver.Current = new ShippingGatewayProviderResolver(() => PluginManager.Current.ResolveTypesWithAttribute<ShippingGatewayProviderBase' GatewayProviderActivationAttribute>()); " is 202.
Long Statement,Merchello.Tests.Base.SqlSyntax,SqlSyntaxProviderTestHelper,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\SqlSyntax\SqlSyntaxProviderTestHelper.cs,EstablishSqlSyntax,The length of the statement  "            //    new EventTriggerRegistry(() => PluginManager.Current.ResolveTypesWithAttribute<IEventTriggeredAction' EventTriggeredActionForAttribute>()); " is 145.
Long Statement,Merchello.Tests.Base.TestHelpers,DbPreTestDataWorker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\TestHelpers\DbPreTestDataWorker.cs,DeleteAllShipCountries,The length of the statement  "            foreach (var country in shipCountries.Where(x => !x.CountryCode.Equals(global::Merchello.Core.Constants.CountryCodes.EverywhereElse))) " is 134.
Long Statement,Merchello.Tests.Base.TestHelpers,DbPreTestDataWorker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\TestHelpers\DbPreTestDataWorker.cs,ValidateDatabaseSetup,The length of the statement  "                if (!providerDtos.Any() || !warehouseDtos.Any() || !catalogDtos.Any() || !typeFieldDtos.Any() || !invoiceStatusDtos.Any() || !orderStatusDtos.Any() || !storeSettingDtos.Any()) " is 175.
Long Statement,Merchello.Tests.Base.TestHelpers,DbPreTestDataWorker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\TestHelpers\DbPreTestDataWorker.cs,RebuildDatabase,The length of the statement  "            var schema = new DatabaseSchemaCreation(Database' TestLogger' new DatabaseSchemaHelper(Database' TestLogger' this.SqlSyntaxProvider)' this.SqlSyntaxProvider); " is 158.
Long Statement,Merchello.Tests.Base.TestHelpers,MerchelloAllInTestBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\TestHelpers\MerchelloAllInTestBase.cs,IndexProductVariant,The length of the statement  "            ExamineManager.Instance.IndexProviderCollection["MerchelloProductIndexer"].ReIndexNode(productVariant.SerializeToXml(productOptions).Root' IndexTypes.ProductVariant); " is 166.
Long Statement,Merchello.Tests.Base.TestHelpers,MerchelloAllInTestBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\TestHelpers\MerchelloAllInTestBase.cs,DeleteProductVariantFromIndex,The length of the statement  "            ExamineManager.Instance.IndexProviderCollection["MerchelloProductIndexer"].DeleteFromIndex(((ProductVariant)productVariant).ExamineId.ToString(CultureInfo.InvariantCulture)); " is 174.
Complex Conditional,Merchello.Tests.Base.TestHelpers,DbPreTestDataWorker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\TestHelpers\DbPreTestDataWorker.cs,ValidateDatabaseSetup,The conditional expression  "!providerDtos.Any() || !warehouseDtos.Any() || !catalogDtos.Any() || !typeFieldDtos.Any() || !invoiceStatusDtos.Any() || !orderStatusDtos.Any() || !storeSettingDtos.Any()"  is complex.
Magic Number,Merchello.Tests.Base.DataMakers,MockInvoiceDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockInvoiceDataMaker.cs,GetMockInvoiceForTaxation,The following statement contains a magic number: var l1 = new InvoiceLineItem(LineItemType.Product' "Item 1"' "I1"' 10' 1' extendedData);
Magic Number,Merchello.Tests.Base.DataMakers,MockInvoiceDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockInvoiceDataMaker.cs,GetMockInvoiceForTaxation,The following statement contains a magic number: var l2 = new InvoiceLineItem(LineItemType.Product' "Item 2"' "I2"' 2' 40' extendedData);
Magic Number,Merchello.Tests.Base.DataMakers,MockInvoiceDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockInvoiceDataMaker.cs,GetMockInvoiceForTaxation,The following statement contains a magic number: var l2 = new InvoiceLineItem(LineItemType.Product' "Item 2"' "I2"' 2' 40' extendedData);
Magic Number,Merchello.Tests.Base.DataMakers,MockInvoiceDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockInvoiceDataMaker.cs,GetMockInvoiceForTaxation,The following statement contains a magic number: var quote = new ShipmentRateQuote(shipment' shipmethod) { Rate = 16.22M };
Magic Number,Merchello.Tests.Base.DataMakers,MockOrderStatusMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockOrderStatusMaker.cs,OrderStatusFulfilledMock,The following statement contains a magic number: return new OrderStatus()                  {                      Key = Constants.OrderStatus.Fulfilled'                      Alias = "fulfilled"'                      Name = "Fulfilled"'                      Active = true'                      Reportable = true'                      SortOrder = 3'                      CreateDate = DateTime.Now'                      UpdateDate = DateTime.Now                    };
Magic Number,Merchello.Tests.Base.DataMakers,MockInvoiceStatusDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockInvoiceStatusDataMaker.cs,InvoiceStatusPaidMock,The following statement contains a magic number: return new InvoiceStatus()              {                  Key = Constants.InvoiceStatus.Paid'                  Alias = "completed"'                  Name = "Completed"'                  Active = true'                  Reportable = true'                  SortOrder = 3'                  CreateDate = DateTime.Now'                  UpdateDate = DateTime.Now                };
Magic Number,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,MockSku,The following statement contains a magic number: return Guid.NewGuid().ToString().Substring(0' 8);
Magic Number,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,GetAmount,The following statement contains a magic number: return NoWhammyStop.Next(150);
Magic Number,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,GetWeight,The following statement contains a magic number: return NoWhammyStop.Next(8);
Magic Number,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,PriceCheck,The following statement contains a magic number: var cost = NoWhammyStop.Next(100);
Magic Number,Merchello.Tests.Base.DataMakers,MockDataMakerBase,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockDataMakerBase.cs,Quanity,The following statement contains a magic number: return NoWhammyStop.Next(25);
Magic Number,Merchello.Tests.Base.DataMakers,MockProductDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockProductDataMaker.cs,MockProductDisplayForInserting,The following statement contains a magic number: return new ProductDisplay()              {                  Name = ProductItemName()'                  Available = true'                  Barcode = "Barcode1"'                  CostOfGoods = 0'                  Download = false'                  Length = 0'                  Height = 0'                  Width = 0'                  SalePrice = 0'                  Price = 10M'                  Shippable = true'                  Taxable = true'                  TrackInventory = false'                  OutOfStockPurchase = false'                  Sku = Guid.NewGuid().ToString()'                  ProductOptions = new List<ProductOptionDisplay>                  {                      new ProductOptionDisplay()                      {                          Key = Guid.Empty'                          Name = "Color"'                          Required = true'                          Choices = new List<ProductAttributeDisplay>                          {                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Blue"'                                  Sku = "blue"'                                  SortOrder = 0'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Red"'                                  Sku = "red"'                                  SortOrder = 1'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Green"'                                  Sku = "green"'                                  SortOrder = 2'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }                          }'                          SortOrder = 0                      }'                      new ProductOptionDisplay()                      {                          Key = Guid.Empty'                          Name = "Size"'                          Required = true'                          Choices = new List<ProductAttributeDisplay>                          {                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Small"'                                  Sku = "small"'                                  SortOrder = 0'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Medium"'                                  Sku = "medium"'                                  SortOrder = 1'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Large"'                                  Sku = "large"'                                  SortOrder = 2'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }                          }'                          SortOrder = 1                      }                  }'                  DetachedContents = Enumerable.Empty<ProductVariantDetachedContentDisplay>()              };
Magic Number,Merchello.Tests.Base.DataMakers,MockProductDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockProductDataMaker.cs,MockProductDisplayForInserting,The following statement contains a magic number: return new ProductDisplay()              {                  Name = ProductItemName()'                  Available = true'                  Barcode = "Barcode1"'                  CostOfGoods = 0'                  Download = false'                  Length = 0'                  Height = 0'                  Width = 0'                  SalePrice = 0'                  Price = 10M'                  Shippable = true'                  Taxable = true'                  TrackInventory = false'                  OutOfStockPurchase = false'                  Sku = Guid.NewGuid().ToString()'                  ProductOptions = new List<ProductOptionDisplay>                  {                      new ProductOptionDisplay()                      {                          Key = Guid.Empty'                          Name = "Color"'                          Required = true'                          Choices = new List<ProductAttributeDisplay>                          {                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Blue"'                                  Sku = "blue"'                                  SortOrder = 0'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Red"'                                  Sku = "red"'                                  SortOrder = 1'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Green"'                                  Sku = "green"'                                  SortOrder = 2'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }                          }'                          SortOrder = 0                      }'                      new ProductOptionDisplay()                      {                          Key = Guid.Empty'                          Name = "Size"'                          Required = true'                          Choices = new List<ProductAttributeDisplay>                          {                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Small"'                                  Sku = "small"'                                  SortOrder = 0'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Medium"'                                  Sku = "medium"'                                  SortOrder = 1'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Large"'                                  Sku = "large"'                                  SortOrder = 2'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }                          }'                          SortOrder = 1                      }                  }'                  DetachedContents = Enumerable.Empty<ProductVariantDetachedContentDisplay>()              };
Magic Number,Merchello.Tests.Base.DataMakers,MockProductDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockProductDataMaker.cs,MockProductDisplayForInserting,The following statement contains a magic number: return new ProductDisplay()              {                  Name = ProductItemName()'                  Available = true'                  Barcode = "Barcode1"'                  CostOfGoods = 0'                  Download = false'                  Length = 0'                  Height = 0'                  Width = 0'                  SalePrice = 0'                  Price = 10M'                  Shippable = true'                  Taxable = true'                  TrackInventory = false'                  OutOfStockPurchase = false'                  Sku = Guid.NewGuid().ToString()'                  ProductOptions = new List<ProductOptionDisplay>                  {                      new ProductOptionDisplay()                      {                          Key = Guid.Empty'                          Name = "Color"'                          Required = true'                          Choices = new List<ProductAttributeDisplay>                          {                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Blue"'                                  Sku = "blue"'                                  SortOrder = 0'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Red"'                                  Sku = "red"'                                  SortOrder = 1'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Green"'                                  Sku = "green"'                                  SortOrder = 2'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }                          }'                          SortOrder = 0                      }'                      new ProductOptionDisplay()                      {                          Key = Guid.Empty'                          Name = "Size"'                          Required = true'                          Choices = new List<ProductAttributeDisplay>                          {                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Small"'                                  Sku = "small"'                                  SortOrder = 0'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Medium"'                                  Sku = "medium"'                                  SortOrder = 1'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }'                              new ProductAttributeDisplay()                              {                                  Key = Guid.Empty'                                  Name = "Large"'                                  Sku = "large"'                                  SortOrder = 2'                                  DetachedDataValues = Enumerable.Empty<KeyValuePair<string' string>>()                              }                          }'                          SortOrder = 1                      }                  }'                  DetachedContents = Enumerable.Empty<ProductVariantDetachedContentDisplay>()              };
Magic Number,Merchello.Tests.Base.DataMakers,MockCustomerDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockCustomerDataMaker.cs,Email,The following statement contains a magic number: var select = NoWhammyStop.Next(3);
Magic Number,Merchello.Tests.Base.DataMakers,MockCustomerDataMaker,D:\research\architectureSmells\repos\Merchello_Merchello\test\Merchello.Tests.Base\DataMakers\MockCustomerDataMaker.cs,Email,The following statement contains a magic number: switch (select)              {                  case 1:                      name = first;                      break;                  case 2:                      name = first + "." + last;                      break;                  default:                      name = first.Substring(0' 1) + last;                      break;              }
