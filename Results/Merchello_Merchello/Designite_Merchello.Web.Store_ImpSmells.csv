Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Merchello.Web.Store.Controllers.Payment,BraintreePaymentControllerBase<TPaymentModel>,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Controllers\Payment\BraintreePaymentControllerBase{T}.cs,ProcessPayment,The length of the statement  "            // The braintree package includes an extension method off of the ProcessorArgumentCollection - SetPaymentMethodNonce([nonce]); " is 126.
Long Statement,Merchello.Web.Store.Controllers.Payment,PayPalExpressPaymentController,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Controllers\Payment\PayPalExpressPaymentController.cs,EnsureDeleteInvoiceOnCancel,The length of the statement  "            var provider = GatewayContext.Payment.GetProviderByKey(Merchello.Providers.Constants.PayPal.GatewayProviderSettingsKey); " is 120.
Long Statement,Merchello.Web.Store.Controllers.Payment,PayPalExpressPaymentController,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Controllers\Payment\PayPalExpressPaymentController.cs,EnsureDeleteInvoiceOnCancel,The length of the statement  "                        MultiLogHelper.Info<PayPalExpressPaymentController>(string.Format("Deleted invoice number {0} to prevent duplicate. PayPal ACK response not success"' invoice.PrefixedInvoiceNumber())); " is 184.
Long Statement,Merchello.Web.Store.Controllers,CheckoutResolvePaymentController,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Controllers\CheckoutResolvePaymentController.cs,PaymentForm,The length of the statement  "            var nullRef = new NullReferenceException("Controller for specific PaymentMethod could not be found.  Does the controller have a GatewayMethodUiAttribute attribute for both the controller and render form ActionResult?"); " is 219.
Complex Conditional,Merchello.Web.Store.Validation,ValidateExpiresDateAttribute,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Validation\ValidateExpiresDateAttribute.cs,IsValid,The conditional expression  "expStr.IsNullOrWhiteSpace() ||                   expStr.Length != 5 ||                  !expStr.Contains("/") ||                  expStr.IndexOf('/') != 2"  is complex.
Complex Conditional,Merchello.Web.Store.Validation,ValidateExpiresDateAttribute,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Validation\ValidateExpiresDateAttribute.cs,IsValid,The conditional expression  "(mm <= 0 || mm > 12) ||                   (yyyy < DateTime.Today.Year) ||                  (mm < DateTime.Today.Month && yyyy == DateTime.Today.Year)"  is complex.
Magic Number,Merchello.Web.Store.Validation,ValidateExpiresDateAttribute,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Validation\ValidateExpiresDateAttribute.cs,IsValid,The following statement contains a magic number: if (expStr.IsNullOrWhiteSpace() ||                   expStr.Length != 5 ||                  !expStr.Contains("/") ||                  expStr.IndexOf('/') != 2) return new ValidationResult(this.ErrorMessageString);
Magic Number,Merchello.Web.Store.Validation,ValidateExpiresDateAttribute,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Validation\ValidateExpiresDateAttribute.cs,IsValid,The following statement contains a magic number: if (expStr.IsNullOrWhiteSpace() ||                   expStr.Length != 5 ||                  !expStr.Contains("/") ||                  expStr.IndexOf('/') != 2) return new ValidationResult(this.ErrorMessageString);
Magic Number,Merchello.Web.Store.Validation,ValidateExpiresDateAttribute,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Validation\ValidateExpiresDateAttribute.cs,IsValid,The following statement contains a magic number: var yyyy = 2000 + yy;
Magic Number,Merchello.Web.Store.Validation,ValidateExpiresDateAttribute,C:\repos\Merchello_Merchello\src\Merchello.Web.Store\Validation\ValidateExpiresDateAttribute.cs,IsValid,The following statement contains a magic number: if ((mm <= 0 || mm > 12) ||                   (yyyy < DateTime.Today.Year) ||                  (mm < DateTime.Today.Month && yyyy == DateTime.Today.Year))              {                  return new ValidationResult(this.ErrorMessageString);              }
