Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.VisualStudio.Web.CodeGeneration.Tools,Program,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\Program.cs,BuildAndDispatchDependencyCommand,The method has 6 parameters. Parameters: args' projectPath' buildBasePath' configuration' noBuild' logger
Long Parameter List,Microsoft.VisualStudio.Web.CodeGeneration.Tools,Program,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\Program.cs,CreateDipatchCommand,The method has 6 parameters. Parameters: context' args' buildBasePath' configuration' frameworkToUse' server
Long Parameter List,Microsoft.VisualStudio.Web.CodeGeneration.Tools,Program,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\Program.cs,Build,The method has 5 parameters. Parameters: logger' projectPath' configuration' frameworkToUse' buildBasePath
Long Parameter List,Microsoft.Extensions.Internal,DotnetToolDispatcher,C:\repos\aspnet_Scaffolding\src\Shared\DotNetDispatcher\DotnetToolDispatcher.cs,CreateDispatchCommand,The method has 8 parameters. Parameters: runtimeConfigPath' depsFile' dependencyToolPath' dispatchArgs' framework' configuration' projectDirectory' assemblyFullPath
Long Identifier,Microsoft.Extensions.Internal,DotnetToolDispatcher,C:\repos\aspnet_Scaffolding\src\Shared\DotNetDispatcher\DotnetToolDispatcher.cs,CreateDispatchCommand,The length of the parameter dispatcherVersionArgumentValue is 30.
Long Identifier,Microsoft.Extensions.Internal,DotnetToolDispatcher,C:\repos\aspnet_Scaffolding\src\Shared\DotNetDispatcher\DotnetToolDispatcher.cs,EnsureValidDispatchRecipient,The length of the parameter dispatcherVersionArgumentValue is 30.
Long Statement,Microsoft.VisualStudio.Web.CodeGeneration.Tools,Program,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\Program.cs,GetProjectInformation,The length of the statement  "                return new MsBuildProjectContextBuilder(projectFileFinder.ProjectFilePath' codeGenerationTargetsLocation' configuration) " is 120.
Long Statement,Microsoft.VisualStudio.Web.CodeGeneration.Tools,Program,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\Program.cs,GetProjectInformation,The length of the statement  "            throw new InvalidOperationException(string.Format(Resources.InvalidMsBuildProjectFile' projectFileFinder.ProjectFilePath)); " is 123.
Long Statement,Microsoft.VisualStudio.Web.CodeGeneration.Tools,ProjectFileFinder,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\ProjectFileFinder.cs,Resolve,The length of the statement  "                    throw new Exception($"Multiple Project files found in the directory {_initialPath}. Please provide full path to the file to use."); " is 131.
Long Statement,Microsoft.VisualStudio.Web.CodeGeneration.Tools,ScaffoldingApp,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\ScaffoldingApp.cs,GetHelpTextForAvailableGenerators,The length of the statement  "                // This can happen if the project doesn't have a reference to 'Microsoft.VisualStudio.Web.CodeGeneration.Design' package. " is 121.
Long Statement,Microsoft.VisualStudio.Web.CodeGeneration.Tools,ScaffoldingApp,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\ScaffoldingApp.cs,BuildParamDefinitionCache,The length of the statement  "            Dictionary<string' ParamDefinition> paramDefinitionsCache = new Dictionary<string' ParamDefinition>(StringComparer.OrdinalIgnoreCase); " is 134.
Long Statement,Microsoft.VisualStudio.Web.CodeGeneration.Tools,TargetFrameworkFinder,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\TargetFrameworkFinder.cs,GetSuitableFrameworkFromProject,The length of the statement  "                    + string.Format(Resources.AvailableFrameworks' string.Join($"{Environment.NewLine} -"' frameworksInProject.Select(f => f.GetShortFolderName()))); " is 145.
Long Statement,Microsoft.Extensions.Internal,DotnetToolDispatcher,C:\repos\aspnet_Scaffolding\src\Shared\DotNetDispatcher\DotnetToolDispatcher.cs,EnsureValidDispatchRecipient,The length of the statement  "                $"Could not invoke tool {toolName}. Ensure it has matching versions in the project.json's 'dependencies' and 'tools' sections."); " is 129.
Magic Number,Microsoft.VisualStudio.Web.CodeGeneration.Tools,Program,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\Program.cs,Main,The following statement contains a magic number: try              {                  DotnetToolDispatcher.EnsureValidDispatchRecipient(ref args);                  Execute(args' _isNoBuild' _logger);              }              finally              {                  stopWatch.Stop();                  TimeSpan ts = stopWatch.Elapsed;                  string elapsedTime = string.Format("{0:00}:{1:00}:{2:00}.{3:00}"'                      ts.Hours' ts.Minutes' ts.Seconds'                      ts.Milliseconds / 10);                    _logger.LogMessage("RunTime " + elapsedTime' LogMessageLevel.Information);              }
Magic Number,Microsoft.VisualStudio.Web.CodeGeneration.Tools,ScaffoldingApp,C:\repos\aspnet_Scaffolding\src\VS.Web.CG.Tools\ScaffoldingApp.cs,BuildHelpForGenerator,The following statement contains a magic number: if (generatorParamDef.Options != null && generatorParamDef.Options.Any())              {                  sb.AppendLine();                  sb.AppendLine(Resources.GeneratorOptionsHeader);                  var maxLenOption = generatorParamDef.Options.Max(o => o.Name.Length + o.ShortName.Length) + 4;                  var formatStr = "  {0'-"+maxLenOption+"} : {1}";                                    foreach (var opt in generatorParamDef.Options)                  {                      if (string.IsNullOrEmpty(opt.ShortName))                      {                          sb.AppendLine(string.Format(formatStr' "--"+opt.Name' opt.Description));                      }                      else                      {                          sb.AppendLine(string.Format(formatStr' "--"+opt.Name+"|-"+opt.ShortName' opt.Description));                      }                  }              }
Magic Number,Microsoft.Extensions.Internal,ArgumentEscaper,C:\repos\aspnet_Scaffolding\src\Shared\Cli.Utils\ArgumentEscaper.cs,EscapeSingleArg,The following statement contains a magic number: for (int i = 0; i < arg.Length; ++i)              {                  var backslashCount = 0;                    // Consume All Backslashes                  while (i < arg.Length && arg[i] == '\\')                  {                      backslashCount++;                      i++;                  }                    // Escape any backslashes at the end of the arg                  // when the argument is also quoted.                  // This ensures the outside quote is interpreted as                  // an argument delimiter                  if (i == arg.Length && isQuoted)                  {                      sb.Append('\\'' 2 * backslashCount);                  }                    // At then end of the arg' which isn't quoted'                  // just add the backslashes' no need to escape                  else if (i == arg.Length)                  {                      sb.Append('\\'' backslashCount);                  }                    // Escape any preceding backslashes and the quote                  else if (arg[i] == '"')                  {                      sb.Append('\\'' (2 * backslashCount) + 1);                      sb.Append('"');                  }                    // Output any consumed backslashes and the character                  else                  {                      sb.Append('\\'' backslashCount);                      sb.Append(arg[i]);                  }              }
Magic Number,Microsoft.Extensions.Internal,ArgumentEscaper,C:\repos\aspnet_Scaffolding\src\Shared\Cli.Utils\ArgumentEscaper.cs,EscapeSingleArg,The following statement contains a magic number: for (int i = 0; i < arg.Length; ++i)              {                  var backslashCount = 0;                    // Consume All Backslashes                  while (i < arg.Length && arg[i] == '\\')                  {                      backslashCount++;                      i++;                  }                    // Escape any backslashes at the end of the arg                  // when the argument is also quoted.                  // This ensures the outside quote is interpreted as                  // an argument delimiter                  if (i == arg.Length && isQuoted)                  {                      sb.Append('\\'' 2 * backslashCount);                  }                    // At then end of the arg' which isn't quoted'                  // just add the backslashes' no need to escape                  else if (i == arg.Length)                  {                      sb.Append('\\'' backslashCount);                  }                    // Escape any preceding backslashes and the quote                  else if (arg[i] == '"')                  {                      sb.Append('\\'' (2 * backslashCount) + 1);                      sb.Append('"');                  }                    // Output any consumed backslashes and the character                  else                  {                      sb.Append('\\'' backslashCount);                      sb.Append(arg[i]);                  }              }
Magic Number,Microsoft.Extensions.Internal,DotnetToolDispatcher,C:\repos\aspnet_Scaffolding\src\Shared\DotNetDispatcher\DotnetToolDispatcher.cs,EnsureValidDispatchRecipient,The following statement contains a magic number: if (dispatcherArgumentValueIndex < programArgs.Length)              {                  var dispatcherVersion = programArgs[dispatcherArgumentValueIndex];                    var dispatcherVersionArgumentValue = ResolveDispatcherVersionArgumentValue(toolName);                  if (string.Equals(dispatcherVersion' dispatcherVersionArgumentValue' StringComparison.Ordinal))                  {                      // Remove dispatcher arguments from                      var preDispatcherArgument = programArgs.Take(dispatcherArgumentIndex);                      var postDispatcherArgument = programArgs.Skip(dispatcherArgumentIndex + 2);                      var newProgramArguments = preDispatcherArgument.Concat(postDispatcherArgument);                      programArgs = newProgramArguments.ToArray();                      return;                  }              }
Missing Default,Microsoft.VisualStudio.Web.CodeGeneration.Utils.Messaging,FileSystemChangeMessageHandler,C:\repos\aspnet_Scaffolding\src\Shared\General\Messaging\FileSystemChangeMessageHandler.cs,HandleMessageInternal,The following switch statement is missing a default case: switch (info.FileSystemChangeType)              {                  case FileSystemChangeType.AddFile:                      Logger.LogMessage(string.Format(MessageStrings.AddFileMessage' info.FullPath));                      Logger.LogMessage(string.Format(MessageStrings.ContentsMessage' info.FileContents));                      break;                  case FileSystemChangeType.EditFile:                      Logger.LogMessage(string.Format(MessageStrings.EditFileMessage' info.FullPath));                      Logger.LogMessage(string.Format(MessageStrings.ContentsMessage' info.FileContents));                      break;                  case FileSystemChangeType.DeleteFile:                      Logger.LogMessage(string.Format(MessageStrings.DeleteFileMessage' info.FullPath));                      break;                  case FileSystemChangeType.AddDirectory:                      Logger.LogMessage(string.Format(MessageStrings.AddDirectoryMessage' info.FullPath));                      break;                  case FileSystemChangeType.RemoveDirectory:                      Logger.LogMessage(string.Format(MessageStrings.RemoveDirectoryMessage' info.FullPath));                      break;              }
