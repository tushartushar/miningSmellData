Implementation smell,Namespace,Class,File,Method,Description
Magic Number,IoFx.Test.Http,HttpRequestResponse,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Http\HttpRequestResponse.cs,HelloWorld,The following statement contains a magic number: const int expected = 2;
Magic Number,IoFx.Test.Http,HttpRequestResponse,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Http\HttpRequestResponse.cs,HelloWorld,The following statement contains a magic number: waiter.Wait(TimeSpan.FromSeconds(2));
Magic Number,IoFx.Test.ServiceModel.Channels,MessageTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\ServiceModel\Channels\MessageTests.cs,Get50KMessages,The following statement contains a magic number: const int expectedMessageCount = 50 * 1000;
Magic Number,IoFx.Test.ServiceModel.Channels,MessageTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\ServiceModel\Channels\MessageTests.cs,Get50KMessages,The following statement contains a magic number: const int expectedMessageCount = 50 * 1000;
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,LengthPrefixedWithAck,The following statement contains a magic number: SendAndReceiveMultiplePayloadAck(2);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,LengthPrefixedWithAck,The following statement contains a magic number: SendAndReceiveMultiplePayloadAck(100);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,StartServerWithAck,The following statement contains a magic number: var listener = SocketEvents.CreateTcpStreamListener(5050);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,StartServerWithAck,The following statement contains a magic number: return listener                  .Subscribe(connection =>                  {                      var contexts = connection                          .ToLengthPrefixed()                          .Subscribe(m =>                          {                              Console.WriteLine("Server Received {0} bytes"' m.Message.Length);                              if (assert != null)                                  assert(m.Message);                              var next = Interlocked.Increment(ref _sequence);                              var sequence = BitConverter.GetBytes(next);                              Contract.Assert(sequence.Length == 4);                              m.Publish(sequence);                            }'                      ex => Console.WriteLine(ex.Message)'                      () => Console.WriteLine("Disconnected"));                  });
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,SendAndReceiveAck,The following statement contains a magic number: var chars = GetCharPayload(1024);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,SendAndReceiveAck,The following statement contains a magic number: result.Count != 4
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,GetConnectedSocket,The following statement contains a magic number: s.Connect(new DnsEndPoint("localhost"'5050));
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,SendAndReceiveMultiplePayloadAck,The following statement contains a magic number: var chars = GetCharPayload(1024);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,SendAndReceiveMultiplePayloadAck,The following statement contains a magic number: var data = connection.                  ToLengthPrefixed().                  Subscribe(result =>              {                  Contract.Assert(result.Message.Length == 4);                  Console.Write("Receive Message of size {0} "' result.Message.Length);                  Console.WriteLine("Data Received " + BitConverter.ToInt32(result.Message' 0));                  countdown.Signal();              });
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,AsciiEncoded4ByteTest,The following statement contains a magic number: SendData(5' 1);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,AsciiEncoded5_1MbbyteTest,The following statement contains a magic number: const int expecteSize = 1024 * 1024;
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,AsciiEncoded5_1MbbyteTest,The following statement contains a magic number: const int expecteSize = 1024 * 1024;
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,AsciiEncoded5_1MbbyteTest,The following statement contains a magic number: const int expectedCount = 5;
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,StartServer,The following statement contains a magic number: var listener = SocketEvents.CreateTcpStreamListener(5050);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,SendData,The following statement contains a magic number: var sender = await SocketEvents.CreateConnection("127.0.0.1"' 5050);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,GetCharPayload,The following statement contains a magic number: Contract.Assert(preamble.Length == 4);
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,GetChars,The following statement contains a magic number: var chars = Enumerable.Range(0' size)                  .Select(i => (char)((i % 26) + 65))                  .ToArray();
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,GetChars,The following statement contains a magic number: var chars = Enumerable.Range(0' size)                  .Select(i => (char)((i % 26) + 65))                  .ToArray();
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,CheckPayload,The following statement contains a magic number: int expected = ((input[i] - 65 + 1) % 26) + 65;
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,CheckPayload,The following statement contains a magic number: int expected = ((input[i] - 65 + 1) % 26) + 65;
Magic Number,IoFx.Test.Sockets.Framing,LenghtPrefixed,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\Framing\LenghtPrefixed.WithAck.cs,CheckPayload,The following statement contains a magic number: int expected = ((input[i] - 65 + 1) % 26) + 65;
Magic Number,IoFx.Test.Sockets,SocketAcceptTest,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketAcceptTest.cs,SocketConnect,The following statement contains a magic number: const int port = 5050;
Magic Number,IoFx.Test.Sockets,SocketAcceptTest,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketAcceptTest.cs,SocketConnect,The following statement contains a magic number: const int clientCount = 10;
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive,The following statement contains a magic number: const int port = 5050;
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive,The following statement contains a magic number: i < 100
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive,The following statement contains a magic number: sender.Close(5);
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive1Gb,The following statement contains a magic number: const int port = 5050;
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive1Gb,The following statement contains a magic number: var payload = new byte[1024];
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive1Gb,The following statement contains a magic number: const int totalSize = 1024 * 1024 * 1024;
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive1Gb,The following statement contains a magic number: const int totalSize = 1024 * 1024 * 1024;
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive1Gb,The following statement contains a magic number: const int totalSize = 1024 * 1024 * 1024;
Magic Number,IoFx.Test.Sockets,SocketReceiverTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketReceiverTests.cs,SocketReceive1Gb,The following statement contains a magic number: sender.Close(5);
Magic Number,IoFx.Test.Sockets,SocketSenderTests,D:\research\architectureSmells\repos\IoFx_IoFx\src\Tests\IoFx.Test\Sockets\SocketSenderTests.cs,SocketSend,The following statement contains a magic number: const int port = 5050;
