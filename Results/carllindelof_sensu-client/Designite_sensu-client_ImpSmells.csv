Implementation smell,Namespace,Class,File,Method,Description
Complex Method,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,getCounterlist,Cyclomatic complexity of the method is 19
Complex Method,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,runSender,Cyclomatic complexity of the method is 11
Long Parameter List,sensu_client,SensuClient,C:\repos\carllindelof_sensu-client\SensuClient.cs,SensuClient,The method has 5 parameters.
Long Parameter List,sensu_client.Configuration,ChecksConverter,C:\repos\carllindelof_sensu-client\Configuration\ChecksConverter.cs,ReadJson,The method has 7 parameters.
Long Identifier,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,CheckProcessor,The length of the parameter sensuClientConfigurationReader is 30.
Long Identifier,sensu_client,KeepAliveScheduler,C:\repos\carllindelof_sensu-client\KeepAliveScheduler.cs,KeepAliveScheduler,The length of the parameter sensuClientConfigurationReader is 30.
Long Identifier,sensu_client,SensuClient,C:\repos\carllindelof_sensu-client\SensuClient.cs,SensuClient,The length of the parameter sensuClientConfigurationReader is 30.
Long Identifier,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,SubScriptionsReceiver,The length of the parameter sensuClientConfigurationReader is 30.
Long Identifier,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,SubScriptionsReceiver,The length of the parameter sensuRabbitMqConnectionFactory is 30.
Long Identifier,sensu_client.StandAlone,StandAloneCheckScheduler,C:\repos\carllindelof_sensu-client\StandAlone\StandAloneCheckScheduler.cs,StandAloneCheckScheduler,The length of the parameter sensuClientConfigurationReader is 30.
Long Identifier,sensu_client.Connection,SensuRabbitMqConnectionFactory,C:\repos\carllindelof_sensu-client\Connection\SensuRabbitMqConnectionFactory.cs,SensuRabbitMqConnectionFactory,The length of the parameter sensuClientConfigurationReader is 30.
Long Statement,sensu_client,InProgressCheck,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,Lock,The length of the statement  "			log.Warn ("Previous check command execution in progress {0} for {1} milliseconds' with current status: {2}"' name' elapsed.TotalMilliseconds' task.Status); " is 155.
Long Statement,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,PublishCheckResult,The length of the statement  "		if (_sensuClientConfigurationReader.SensuClientConfig.Client.SendMetricWithCheck && ((string)check ["type"]).Equals ("standard")) { " is 131.
Long Statement,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ExecuteCheckCommand,The length of the statement  "		check ["command"] = SensuClientHelper.SubstitueCommandTokens (check' out commandParseErrors' (JObject)_sensuClientConfigurationReader.Configuration.Config ["client"]); " is 167.
Long Statement,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "			Log.Error ("Error when executing command: '{0}' on '{1}' \n resulted in: {2} \n"' _unparsedCommand' _commandConfiguration.Plugins' errors); " is 139.
Long Statement,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "		Log.Warn (ex' "Unexpected error when executing command: '{0}' on '{1}'"' _unparsedCommand' _commandConfiguration.Plugins); " is 122.
Long Statement,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "		var schema = getParam ("schema"' String.Format (CultureInfo.InvariantCulture' "{0}.http.{1}.{2}"' System.Environment.MachineName' uri.Host' uri.Port)); " is 151.
Long Statement,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "			result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp); " is 144.
Long Statement,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "			result.Output = String.Format ("# Error accessing to {0} (code: {1}): {2}"' url' response.StatusCode' response.StatusDescription); " is 130.
Long Statement,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "				schema = normalizeString (parameters ["schema"].Replace ("{INSTANCE}"' counter.InstanceName).Replace ("{COUNTER}"' counter.CounterName).Replace ("{CATEGORY}"' counter.CategoryName).Replace ("%"' "_PERCENT_")).Replace ("_PERCENT_"' "percent."); " is 243.
Long Statement,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The length of the statement  "				schema = String.Format (CultureInfo.InvariantCulture' "{0}.{1}.{2}.{3}"' System.Environment.MachineName' normalizeString (counter.CategoryName)' normalizeString (counter.CounterName.Replace ('.'' '_').Replace ("%"' "_PERCENT_")).Replace ("_PERCENT_"' "percent.")' "performance_counter"); " is 287.
Long Statement,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,getNewStatus,The length of the statement  "	if (parameters.ContainsKey ("error") && ((ascendent && value > Int64.Parse (parameters ["error"])) || (!ascendent && value < Int64.Parse (parameters ["error"])))) { " is 164.
Long Statement,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,getNewStatus,The length of the statement  "	else if (parameters.ContainsKey ("warn") && ((ascendent && value > Int64.Parse (parameters ["warn"])) || (!ascendent && value < Int64.Parse (parameters ["warn"])))) { " is 166.
Long Statement,sensu_client.Helpers,SensuClientHelper,C:\repos\carllindelof_sensu-client\Helpers\SensuClientHelper.cs,CreateTimeStamp,The length of the statement  "	return Convert.ToInt64 (Math.Round ((DateTime.UtcNow - new DateTime (1970' 1' 1' 0' 0' 0)).TotalSeconds' MidpointRounding.AwayFromZero)); " is 137.
Long Statement,sensu_client.Helpers,SensuClientHelper,C:\repos\carllindelof_sensu-client\Helpers\SensuClientHelper.cs,GetCheckByName,The length of the statement  "	return checks.Values<JToken> ().Values<JObject> ().Where (n => ((JProperty)n.Parent).Name == check ["name"].Value<string> ()).Select (n => n).FirstOrDefault (); " is 160.
Long Statement,sensu_client.Helpers,SensuClientHelper,C:\repos\carllindelof_sensu-client\Helpers\SensuClientHelper.cs,GetStandAloneChecks,The length of the statement  "		standAloneChecks = obj.Values<JToken> ().Values<JObject> ().Where (n => n ["standalone"].Value<bool> ()).Select (n => JObject.FromObject (new { " is 143.
Long Statement,sensu_client.StandAlone,StandAloneCheckScheduler,C:\repos\carllindelof_sensu-client\StandAlone\StandAloneCheckScheduler.cs,InitializeSheduledItems,The length of the statement  "		SheduledItems.TryAdd (item ["name"].Value<string> ()' new SchedueledItem (() => _processor.ProcessCheck (item)' item ["name"].Value<string> ()' defaultInterval)); " is 162.
Long Statement,sensu_client.Connection,SensuRabbitMqConnectionFactory,C:\repos\carllindelof_sensu-client\Connection\SensuRabbitMqConnectionFactory.cs,CreateConnection,The length of the statement  "			AcceptablePolicyErrors = SslPolicyErrors.RemoteCertificateNotAvailable | SslPolicyErrors.RemoteCertificateNameMismatch | SslPolicyErrors.RemoteCertificateChainErrors' " is 166.
Long Statement,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,runSender,The length of the statement  "				else if (connections [i].connected () && (connections [i].LastVerifyTime.AddMilliseconds (m_verifyConnectionInterval) > DateTime.UtcNow || connections [i].verifyConnected ())) { " is 177.
Long Statement,sensu_client.TcpServer,TcpServerConnection,C:\repos\carllindelof_sensu-client\TcpServer\TcpServerConnection.cs,verifyConnected,The length of the statement  "	bool connected = m_socket.Client.Available != 0 || !m_socket.Client.Poll (1' SelectMode.SelectRead) || m_socket.Client.Available != 0; " is 134.
Long Statement,sensu_client.TcpServer,TcpServerConnection,C:\repos\carllindelof_sensu-client\TcpServer\TcpServerConnection.cs,canStartNewThread,The length of the statement  "	return (m_thread.ThreadState & (ThreadState.Aborted | ThreadState.Stopped)) != 0 && (m_thread.ThreadState & ThreadState.Unstarted) == 0; " is 136.
Complex Conditional,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,getNewStatus,The conditional expression  "parameters.ContainsKey ("error") && ((ascendent && value > Int64.Parse (parameters ["error"])) || (!ascendent && value < Int64.Parse (parameters ["error"])))"  is complex.
Complex Conditional,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,getNewStatus,The conditional expression  "parameters.ContainsKey ("warn") && ((ascendent && value > Int64.Parse (parameters ["warn"])) || (!ascendent && value < Int64.Parse (parameters ["warn"])))"  is complex.
Empty Catch Block,sensu_client.Connection,SensuRabbitMqConnectionFactory,C:\repos\carllindelof_sensu-client\Connection\SensuRabbitMqConnectionFactory.cs,CloseRabbitConnection,The method has an empty catch block.
Empty Catch Block,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,runListener,The method has an empty catch block.
Empty Catch Block,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,runSender,The method has an empty catch block.
Empty Catch Block,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,runSender,The method has an empty catch block.
Empty Catch Block,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Close,The method has an empty catch block.
Empty Catch Block,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Close,The method has an empty catch block.
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ShouldRunInSafeMode,The following statement contains a magic number: check ["status"] = 3;  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ExecuteCheck,The following statement contains a magic number: return Task.Factory.StartNew (() =>  {  	var stopwatch = new Stopwatch ();  	stopwatch.Start ();  	try {  		var result = command.Execute ();  		check ["output"] = result.Output;  		check ["status"] = result.Status;  	}  	catch (Exception e) {  		Log.Warn (e' "Error running check {0}"' check.ToString ());  		check ["output"] = "";  		check ["status"] = 2;  	}  	stopwatch.Stop ();  	check ["duration"] = ((float)stopwatch.ElapsedMilliseconds) / 1000;  	return check;  });  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ExecuteCheck,The following statement contains a magic number: return Task.Factory.StartNew (() =>  {  	var stopwatch = new Stopwatch ();  	stopwatch.Start ();  	try {  		var result = command.Execute ();  		check ["output"] = result.Output;  		check ["status"] = result.Status;  	}  	catch (Exception e) {  		Log.Warn (e' "Error running check {0}"' check.ToString ());  		check ["output"] = "";  		check ["status"] = 2;  	}  	stopwatch.Stop ();  	check ["duration"] = ((float)stopwatch.ElapsedMilliseconds) / 1000;  	return check;  });  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ExecuteCheck,The following statement contains a magic number: try {  	var result = command.Execute ();  	check ["output"] = result.Output;  	check ["status"] = result.Status;  }  catch (Exception e) {  	Log.Warn (e' "Error running check {0}"' check.ToString ());  	check ["output"] = "";  	check ["status"] = 2;  }  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ExecuteCheck,The following statement contains a magic number: check ["status"] = 2;  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,ExecuteCheck,The following statement contains a magic number: check ["duration"] = ((float)stopwatch.ElapsedMilliseconds) / 1000;  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,CheckDidNotHaveValidParameters,The following statement contains a magic number: check ["status"] = 3;  
Magic Number,sensu_client,CheckProcessor,C:\repos\carllindelof_sensu-client\CheckProcessor.cs,CheckDidNotHaveValidName,The following statement contains a magic number: check ["status"] = 3;  
Magic Number,sensu_client,KeepAliveScheduler,C:\repos\carllindelof_sensu-client\KeepAliveScheduler.cs,KeepAlive,The following statement contains a magic number: while (Running) {  	try {  		if (ch == null || !ch.IsOpen) {  			if (ch != null && !ch.IsOpen)  				Log.Error ("rMQ Q is closed' Getting connection");  			ch = CreateChannel (ch);  		}  		if (ch != null && ch.IsOpen) {  			PublishKeepAlive (ch);  		}  		else {  			Log.Error ("Valiant attempts to get a valid rMQ connection were in vain. Skipping this keepalive loop.");  		}  		//Lets us quit while we're still sleeping.  		lock (MonitorObject) {  			if (!Running) {  				Log.Warn ("Quitloop set' exiting main loop");  				break;  			}  			Monitor.Wait (MonitorObject' KeepAliveTimeout);  			if (!Running) {  				Log.Warn ("Quitloop set' exiting main loop");  				break;  			}  		}  	}  	catch (Exception e) {  		Log.Warn (e' "Exception on KeepAlive thread");  		Thread.Sleep (20000);  	}  }  
Magic Number,sensu_client,KeepAliveScheduler,C:\repos\carllindelof_sensu-client\KeepAliveScheduler.cs,KeepAlive,The following statement contains a magic number: try {  	if (ch == null || !ch.IsOpen) {  		if (ch != null && !ch.IsOpen)  			Log.Error ("rMQ Q is closed' Getting connection");  		ch = CreateChannel (ch);  	}  	if (ch != null && ch.IsOpen) {  		PublishKeepAlive (ch);  	}  	else {  		Log.Error ("Valiant attempts to get a valid rMQ connection were in vain. Skipping this keepalive loop.");  	}  	//Lets us quit while we're still sleeping.  	lock (MonitorObject) {  		if (!Running) {  			Log.Warn ("Quitloop set' exiting main loop");  			break;  		}  		Monitor.Wait (MonitorObject' KeepAliveTimeout);  		if (!Running) {  			Log.Warn ("Quitloop set' exiting main loop");  			break;  		}  	}  }  catch (Exception e) {  	Log.Warn (e' "Exception on KeepAlive thread");  	Thread.Sleep (20000);  }  
Magic Number,sensu_client,KeepAliveScheduler,C:\repos\carllindelof_sensu-client\KeepAliveScheduler.cs,KeepAlive,The following statement contains a magic number: Thread.Sleep (20000);  
Magic Number,sensu_client,Program,C:\repos\carllindelof_sensu-client\Program.cs,RunInteractive,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,Subscriptions,The following statement contains a magic number: while (Running) {  	try {  		lock (MonitorObject) {  			if (ch != null && ch.IsOpen && consumer.IsRunning) {  				GetPayloadFromOpenChannel (consumer);  			}  			else {  				if (ch != null && ch.IsClosed)  					Log.Error ("rMQ Channel is closed' Getting connection");  				else if (consumer != null && !consumer.IsRunning)  					Log.Error ("rMQ Consummer is closed' Getting connection");  				ch = CreateChannelAndConsumer (ch' ref consumer);  			}  			if (!Running) {  				Log.Info ("Quitloop set' exiting main loop");  				Monitor.Wait (MonitorObject' KeepAliveTimeout);  				break;  			}  		}  	}  	catch (Exception e) {  		Log.Warn (e' "Exception on Subscriptions thread");  		Thread.Sleep (20000);  	}  }  
Magic Number,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,Subscriptions,The following statement contains a magic number: try {  	lock (MonitorObject) {  		if (ch != null && ch.IsOpen && consumer.IsRunning) {  			GetPayloadFromOpenChannel (consumer);  		}  		else {  			if (ch != null && ch.IsClosed)  				Log.Error ("rMQ Channel is closed' Getting connection");  			else if (consumer != null && !consumer.IsRunning)  				Log.Error ("rMQ Consummer is closed' Getting connection");  			ch = CreateChannelAndConsumer (ch' ref consumer);  		}  		if (!Running) {  			Log.Info ("Quitloop set' exiting main loop");  			Monitor.Wait (MonitorObject' KeepAliveTimeout);  			break;  		}  	}  }  catch (Exception e) {  	Log.Warn (e' "Exception on Subscriptions thread");  	Thread.Sleep (20000);  }  
Magic Number,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,Subscriptions,The following statement contains a magic number: Thread.Sleep (20000);  
Magic Number,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,GetPayloadFromOpenChannel,The following statement contains a magic number: try {  	consumer.Queue.Dequeue (100' out msg);  }  catch (Exception e) {  	Log.Warn (e);  	_sensuRabbitMqConnectionFactory.CloseRabbitConnection ();  	msg = null;  	// do not process this pass  }  
Magic Number,sensu_client,SubScriptionsReceiver,C:\repos\carllindelof_sensu-client\SubScriptionsReceiver.cs,GetPayloadFromOpenChannel,The following statement contains a magic number: consumer.Queue.Dequeue (100' out msg);  
Magic Number,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: try {  	process.Start ();  	if (_commandConfiguration.TimeOut.HasValue) {  		if (!process.WaitForExit (1000 * _commandConfiguration.TimeOut.Value)) {  			Log.Debug ("Process to be killed {0}"' FileName);  			process.Kill ();  		}  	}  	else {  		process.WaitForExit ();  	}  	var output = process.StandardOutput.ReadToEnd ();  	var errors = process.StandardError.ReadToEnd ();  	var status = process.ExitCode;  	result.Output = String.Format ("{0}{1}"' output' errors);  	result.Status = status;  	if (!string.IsNullOrEmpty (errors)) {  		Log.Error ("Error when executing command: '{0}' on '{1}' \n resulted in: {2} \n"' _unparsedCommand' _commandConfiguration.Plugins' errors);  	}  }  catch (Exception ex) {  	Log.Warn (ex' "Unexpected error when executing command: '{0}' on '{1}'"' _unparsedCommand' _commandConfiguration.Plugins);  	result.Output = String.Format ("Unexpected error: {0}"' ex.Message);  	result.Status = 2;  }  finally {  	process.Close ();  }  
Magic Number,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: try {  	process.Start ();  	if (_commandConfiguration.TimeOut.HasValue) {  		if (!process.WaitForExit (1000 * _commandConfiguration.TimeOut.Value)) {  			Log.Debug ("Process to be killed {0}"' FileName);  			process.Kill ();  		}  	}  	else {  		process.WaitForExit ();  	}  	var output = process.StandardOutput.ReadToEnd ();  	var errors = process.StandardError.ReadToEnd ();  	var status = process.ExitCode;  	result.Output = String.Format ("{0}{1}"' output' errors);  	result.Status = status;  	if (!string.IsNullOrEmpty (errors)) {  		Log.Error ("Error when executing command: '{0}' on '{1}' \n resulted in: {2} \n"' _unparsedCommand' _commandConfiguration.Plugins' errors);  	}  }  catch (Exception ex) {  	Log.Warn (ex' "Unexpected error when executing command: '{0}' on '{1}'"' _unparsedCommand' _commandConfiguration.Plugins);  	result.Output = String.Format ("Unexpected error: {0}"' ex.Message);  	result.Status = 2;  }  finally {  	process.Close ();  }  
Magic Number,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: if (_commandConfiguration.TimeOut.HasValue) {  	if (!process.WaitForExit (1000 * _commandConfiguration.TimeOut.Value)) {  		Log.Debug ("Process to be killed {0}"' FileName);  		process.Kill ();  	}  }  else {  	process.WaitForExit ();  }  
Magic Number,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: if (!process.WaitForExit (1000 * _commandConfiguration.TimeOut.Value)) {  	Log.Debug ("Process to be killed {0}"' FileName);  	process.Kill ();  }  
Magic Number,sensu_client.Command,Command,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: result.Status = 2;  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,ParseArguments,The following statement contains a magic number: for (var i = 0; i < split.Length; ++i) {  	var Item = split [i];  	if (!Item.Contains ("=")) {  		Log.Warn ("Invalid format for argument {0}. Ignored."' Item);  		continue;  	}  	string[] aux = Item.Split (new char[] {  		'='  	}' 2);  	string key = aux [0].Trim ();  	string value = aux [1].Trim ();  	parameters [key] = value;  }  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: result.Status = 2;  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: try {  	var url = getParam ("url"' null);  	var timeout = Int64.Parse (getParam ("timeout"' "10000"));  	var uri = new Uri (url);  	var method = getParam ("method"' "GET");  	var schema = getParam ("schema"' String.Format (CultureInfo.InvariantCulture' "{0}.http.{1}.{2}"' System.Environment.MachineName' uri.Host' uri.Port));  	var validStatusRaw = getParam ("valid_codes"' "200' 302");  	var validStatus = new List<int> ();  	foreach (var code in validStatusRaw.Split ('''))  		validStatus.Add (Int32.Parse (code));  	var stopwatch = new Stopwatch ();  	stopwatch.Start ();  	var request = (HttpWebRequest)WebRequest.Create (url);  	request.Method = method;  	var response = (HttpWebResponse)request.GetResponse ();  	stopwatch.Stop ();  	if (validStatus.Contains ((int)response.StatusCode)) {  		var unixTimestamp = (Int32)(DateTime.UtcNow.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  		result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp);  		result.Status = 0;  	}  	else {  		result.Output = String.Format ("# Error accessing to {0} (code: {1}): {2}"' url' response.StatusCode' response.StatusDescription);  		result.Status = 1;  	}  }  catch (Exception e) {  	Log.Error (e' "There was an error accessing to an HTTP check");  	result.Output = e.Message;  	result.Status = 2;  }  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: try {  	var url = getParam ("url"' null);  	var timeout = Int64.Parse (getParam ("timeout"' "10000"));  	var uri = new Uri (url);  	var method = getParam ("method"' "GET");  	var schema = getParam ("schema"' String.Format (CultureInfo.InvariantCulture' "{0}.http.{1}.{2}"' System.Environment.MachineName' uri.Host' uri.Port));  	var validStatusRaw = getParam ("valid_codes"' "200' 302");  	var validStatus = new List<int> ();  	foreach (var code in validStatusRaw.Split ('''))  		validStatus.Add (Int32.Parse (code));  	var stopwatch = new Stopwatch ();  	stopwatch.Start ();  	var request = (HttpWebRequest)WebRequest.Create (url);  	request.Method = method;  	var response = (HttpWebResponse)request.GetResponse ();  	stopwatch.Stop ();  	if (validStatus.Contains ((int)response.StatusCode)) {  		var unixTimestamp = (Int32)(DateTime.UtcNow.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  		result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp);  		result.Status = 0;  	}  	else {  		result.Output = String.Format ("# Error accessing to {0} (code: {1}): {2}"' url' response.StatusCode' response.StatusDescription);  		result.Status = 1;  	}  }  catch (Exception e) {  	Log.Error (e' "There was an error accessing to an HTTP check");  	result.Output = e.Message;  	result.Status = 2;  }  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: try {  	var url = getParam ("url"' null);  	var timeout = Int64.Parse (getParam ("timeout"' "10000"));  	var uri = new Uri (url);  	var method = getParam ("method"' "GET");  	var schema = getParam ("schema"' String.Format (CultureInfo.InvariantCulture' "{0}.http.{1}.{2}"' System.Environment.MachineName' uri.Host' uri.Port));  	var validStatusRaw = getParam ("valid_codes"' "200' 302");  	var validStatus = new List<int> ();  	foreach (var code in validStatusRaw.Split ('''))  		validStatus.Add (Int32.Parse (code));  	var stopwatch = new Stopwatch ();  	stopwatch.Start ();  	var request = (HttpWebRequest)WebRequest.Create (url);  	request.Method = method;  	var response = (HttpWebResponse)request.GetResponse ();  	stopwatch.Stop ();  	if (validStatus.Contains ((int)response.StatusCode)) {  		var unixTimestamp = (Int32)(DateTime.UtcNow.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  		result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp);  		result.Status = 0;  	}  	else {  		result.Output = String.Format ("# Error accessing to {0} (code: {1}): {2}"' url' response.StatusCode' response.StatusDescription);  		result.Status = 1;  	}  }  catch (Exception e) {  	Log.Error (e' "There was an error accessing to an HTTP check");  	result.Output = e.Message;  	result.Status = 2;  }  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: if (validStatus.Contains ((int)response.StatusCode)) {  	var unixTimestamp = (Int32)(DateTime.UtcNow.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  	result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp);  	result.Status = 0;  }  else {  	result.Output = String.Format ("# Error accessing to {0} (code: {1}): {2}"' url' response.StatusCode' response.StatusDescription);  	result.Status = 1;  }  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: if (validStatus.Contains ((int)response.StatusCode)) {  	var unixTimestamp = (Int32)(DateTime.UtcNow.Subtract (new DateTime (1970' 1' 1))).TotalSeconds;  	result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp);  	result.Status = 0;  }  else {  	result.Output = String.Format ("# Error accessing to {0} (code: {1}): {2}"' url' response.StatusCode' response.StatusDescription);  	result.Status = 1;  }  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: result.Output = String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' stopwatch.ElapsedMilliseconds / 1000.0' unixTimestamp);  
Magic Number,sensu_client.Command,HTTPCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: result.Status = 2;  
Magic Number,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: foreach (var counter in counterlist) {  	if (parameters.ContainsKey ("schema"))  		schema = normalizeString (parameters ["schema"].Replace ("{INSTANCE}"' counter.InstanceName).Replace ("{COUNTER}"' counter.CounterName).Replace ("{CATEGORY}"' counter.CategoryName).Replace ("%"' "_PERCENT_")).Replace ("_PERCENT_"' "percent.");  	else  		schema = String.Format (CultureInfo.InvariantCulture' "{0}.{1}.{2}.{3}"' System.Environment.MachineName' normalizeString (counter.CategoryName)' normalizeString (counter.CounterName.Replace ('.'' '_').Replace ("%"' "_PERCENT_")).Replace ("_PERCENT_"' "percent.")' "performance_counter");  	schema = Regex.Replace (schema' @"_*\._*"' @".");  	try {  		var value = counter.NextValue ();  		stdout.Append (String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' value' unixTimestamp));  		if (result.Status == 0) {  			result.Status = getNewStatus (parameters' counter.ToString ()' value' stderr);  		}  	}  	catch (Exception e) {  		Log.Warn ("Error running performance counter {0}:\n {1}"' counter.CounterName' e);  		stderr.AppendLine ("# " + e.Message);  		result.Status = 2;  	}  	result.Output = stderr.Append (stdout).ToString ().Trim (' '' '_');  }  
Magic Number,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: try {  	var value = counter.NextValue ();  	stdout.Append (String.Format (CultureInfo.InvariantCulture' "{0} {1:f2} {2}\n"' schema' value' unixTimestamp));  	if (result.Status == 0) {  		result.Status = getNewStatus (parameters' counter.ToString ()' value' stderr);  	}  }  catch (Exception e) {  	Log.Warn ("Error running performance counter {0}:\n {1}"' counter.CounterName' e);  	stderr.AppendLine ("# " + e.Message);  	result.Status = 2;  }  
Magic Number,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,Execute,The following statement contains a magic number: result.Status = 2;  
Magic Number,sensu_client.Command,PerformanceCounterCommand,C:\repos\carllindelof_sensu-client\Command\CommandFactory.cs,ParseParameters,The following statement contains a magic number: for (var i = 1; i < split.Length; ++i) {  	var Item = split [i];  	if (!Item.Contains ("=")) {  		Log.Warn ("Invalid format for argument {0}. Ignored."' Item);  		continue;  	}  	string[] aux = Item.Split (new char[] {  		'='  	}' 2);  	string key = aux [0].Trim ();  	string value = aux [1].Trim ();  	parameters [key] = value;  }  
Magic Number,sensu_client.Helpers,SensuClientHelper,C:\repos\carllindelof_sensu-client\Helpers\SensuClientHelper.cs,CreateTimeStamp,The following statement contains a magic number: return Convert.ToInt64 (Math.Round ((DateTime.UtcNow - new DateTime (1970' 1' 1' 0' 0' 0)).TotalSeconds' MidpointRounding.AwayFromZero));  
Magic Number,sensu_client.StandAlone,StandAloneCheckScheduler,C:\repos\carllindelof_sensu-client\StandAlone\StandAloneCheckScheduler.cs,InitializeSheduledTimer,The following statement contains a magic number: _localCheckSchedulerTimer.Interval = 500;  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,initialise,The following statement contains a magic number: m_maxSendAttempts = 3;  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,initialise,The following statement contains a magic number: m_idleTime = 50;  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,initialise,The following statement contains a magic number: m_maxCallbackThreads = 100;  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,initialise,The following statement contains a magic number: m_verifyConnectionInterval = 100;  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Open,The following statement contains a magic number: lock (this) {  	if (m_isOpen) {  		//already open' no work to do  		return;  	}  	if (m_port < 0) {  		throw new Exception ("Invalid port");  	}  	try {  		listener.Start (5);  	}  	catch (Exception) {  		listener.Stop ();  		listener = new TcpListener (IPAddress.Any' m_port);  		listener.Start (5);  	}  	m_isOpen = true;  	listenThread = new Thread (new ThreadStart (runListener));  	listenThread.Start ();  	sendThread = new Thread (new ThreadStart (runSender));  	sendThread.Start ();  }  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Open,The following statement contains a magic number: lock (this) {  	if (m_isOpen) {  		//already open' no work to do  		return;  	}  	if (m_port < 0) {  		throw new Exception ("Invalid port");  	}  	try {  		listener.Start (5);  	}  	catch (Exception) {  		listener.Stop ();  		listener = new TcpListener (IPAddress.Any' m_port);  		listener.Start (5);  	}  	m_isOpen = true;  	listenThread = new Thread (new ThreadStart (runListener));  	listenThread.Start ();  	sendThread = new Thread (new ThreadStart (runSender));  	sendThread.Start ();  }  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Open,The following statement contains a magic number: try {  	listener.Start (5);  }  catch (Exception) {  	listener.Stop ();  	listener = new TcpListener (IPAddress.Any' m_port);  	listener.Start (5);  }  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Open,The following statement contains a magic number: try {  	listener.Start (5);  }  catch (Exception) {  	listener.Stop ();  	listener = new TcpListener (IPAddress.Any' m_port);  	listener.Start (5);  }  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Open,The following statement contains a magic number: listener.Start (5);  
Magic Number,sensu_client.TcpServer,TcpServer,C:\repos\carllindelof_sensu-client\TcpServer\TcpServer.cs,Open,The following statement contains a magic number: listener.Start (5);  
Magic Number,sensu_client.UdpReceiver,UdpReceiver,C:\repos\carllindelof_sensu-client\UdpReceiver\UdpReciever.cs,UdpReceiver,The following statement contains a magic number: Port = 3030;  
