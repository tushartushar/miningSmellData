Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DomaMove.Engine,TransferMap,C:\repos\runerys_DomaMove\DomaMove\Engine\TransferMap.cs,TransferMap,The method has 5 parameters.
Long Statement,DomaMove,Bootstrapper,C:\repos\runerys_DomaMove\DomaMove\Bootstrapper.cs,OnStartup,The length of the statement  "	if (ConfigurationManager.AppSettings.AllKeys.Any (x => x == "skiptracking") && ConfigurationManager.AppSettings ["skiptracking"] == "true") " is 139.
Long Statement,DomaMove,Bootstrapper,C:\repos\runerys_DomaMove\DomaMove\Bootstrapper.cs,OnStartup,The length of the statement  "	if (ConfigurationManager.AppSettings.AllKeys.Any (x => x == "messageboxerrors") && ConfigurationManager.AppSettings ["messageboxerrors"] == "true") " is 147.
Long Statement,DomaMove,Bootstrapper,C:\repos\runerys_DomaMove\DomaMove\Bootstrapper.cs,Configure,The length of the statement  "	FrameworkElement.LanguageProperty.OverrideMetadata (typeof(FrameworkElement)' new FrameworkPropertyMetadata (XmlLanguage.GetLanguage (CultureInfo.CurrentCulture.IetfLanguageTag))); " is 180.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,GetAllMaps,The length of the statement  "	var getCategoriesTask = Task<GetAllCategoriesResponse>.Factory.FromAsync (doma.BeginGetAllCategories' doma.EndGetAllCategories' getAllCategoriesRequest' null); " is 159.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,GetAllMaps,The length of the statement  "	var getAllMapsTask = Task<GetAllMapsResponse>.Factory.FromAsync (doma.BeginGetAllMaps' doma.EndGetAllMaps' getAllMapsRequest' null); " is 132.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,TestConnection,The length of the statement  "			_supportsPublishWithPreUpload = response.Version != null && String.Compare (response.Version' "3.0"' StringComparison.Ordinal) >= 0; " is 132.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,PublishMap,The length of the statement  "		var publishMapTask = Task<PublishMapResponse>.Factory.FromAsync (doma.BeginPublishMap' doma.EndPublishMap' publishMapRequest' null); " is 132.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,PublishWithPreUpload,The length of the statement  "		var publishMapTask = Task<PublishPreUploadedMapResponse>.Factory.FromAsync (doma.BeginPublishPreUploadedMap' doma.EndPublishPreUploadedMap' publishRequest' null); " is 162.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,UploadPartialFile,The length of the statement  "	return Task<UploadPartialFileResponse>.Factory.FromAsync (doma.BeginUploadPartialFile' doma.EndUploadPartialFile' request' null); " is 129.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,TagAllExistingMapsAndSetTargetCategories,The length of the statement  "		sourceMap.ExistsOnTarget = (Maps.Any (x => x.MapInfo.Date == sourceMap.MapInfo.Date && string.Compare (x.MapInfo.Name' sourceMap.MapInfo.Name' StringComparison.InvariantCultureIgnoreCase) == 0)); " is 195.
Long Statement,DomaMove.Engine,DomaConnection,C:\repos\runerys_DomaMove\DomaMove\Engine\DomaConnection.cs,TagAllExistingMapsAndSetTargetCategories,The length of the statement  "		Category foundCategory = Categories.FirstOrDefault (x => string.Compare (x.Name' sourceMap.Category.Name' StringComparison.OrdinalIgnoreCase) == 0); " is 148.
Long Statement,DomaMove.Engine,ImageDownloader,C:\repos\runerys_DomaMove\DomaMove\Engine\ImageDownloader.cs,DownloadImage,The length of the statement  "		if ((response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved || response.StatusCode == HttpStatusCode.Redirect) && response.ContentType.StartsWith ("image"' StringComparison.OrdinalIgnoreCase)) { " is 227.
Long Statement,DomaMove.Tracking,Tracker,C:\repos\runerys_DomaMove\DomaMove\Tracking\Tracker.cs,TransferException,The length of the statement  "		if (MessageBox.Show ("Errors occured. Details logged to: " + file + " Open log file?"' "Error logged"' MessageBoxButton.YesNo) == MessageBoxResult.Yes) { " is 153.
Long Statement,DomaMove.Tracking,Tracker,C:\repos\runerys_DomaMove\DomaMove\Tracking\Tracker.cs,Shutdown,The length of the statement  "	TrackEvent ("Lifetime"' "Shutdown"' "SessionLengthInSeconds"' (int)DateTime.UtcNow.Subtract (_startupTime).TotalSeconds); " is 121.
Long Statement,DomaMove.UI,MoveViewModel,C:\repos\runerys_DomaMove\DomaMove\UI\MoveViewModel.cs,GetMaps,The length of the statement  "	Task.Factory.StartNew (() => Task.WaitAll (Task.Factory.StartNew (() => Source.GetAllMaps ())' Task.Factory.StartNew (() => Target.GetAllMaps ()))).ContinueWith (t => Target.TagAllExistingMapsAndSetTargetCategories (Source)' TaskContinuationOptions.NotOnFaulted).ContinueWith (t =>  { " is 284.
Long Statement,DomaMove.UI,MoveViewModel,C:\repos\runerys_DomaMove\DomaMove\UI\MoveViewModel.cs,GetMaps,The length of the statement  "	}' CancellationToken.None' TaskContinuationOptions.NotOnFaulted' TaskScheduler.FromCurrentSynchronizationContext ()).ContinueWith (t => waitCursor.Stop ()' TaskScheduler.FromCurrentSynchronizationContext ()); " is 208.
Long Statement,DomaMove.UI,MoveViewModel,C:\repos\runerys_DomaMove\DomaMove\UI\MoveViewModel.cs,TransferSelected,The length of the statement  "		}' TaskScheduler.FromCurrentSynchronizationContext ()).ContinueWith (t => waitCursor.Stop ()' TaskScheduler.FromCurrentSynchronizationContext ()); " is 146.
Long Statement,DomaMove.Doma,DOMAServicePortTypeClient,C:\repos\runerys_DomaMove\DomaMove\Service References\Doma\Reference.cs,OnPublishPreUploadedMapCompleted,The length of the statement  "		this.PublishPreUploadedMapCompleted (this' new PublishPreUploadedMapCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 135.
Long Statement,DomaMove.Doma,DOMAServicePortTypeClient,C:\repos\runerys_DomaMove\DomaMove\Service References\Doma\Reference.cs,PublishPreUploadedMapAsync,The length of the statement  "		this.onPublishPreUploadedMapCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnPublishPreUploadedMapCompleted); " is 128.
Long Statement,DomaMove.Doma,DOMAServicePortTypeClient,C:\repos\runerys_DomaMove\DomaMove\Service References\Doma\Reference.cs,OnUploadPartialFileCompleted,The length of the statement  "		this.UploadPartialFileCompleted (this' new UploadPartialFileCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 127.
Long Statement,DomaMove.Doma,DOMAServicePortTypeClient,C:\repos\runerys_DomaMove\DomaMove\Service References\Doma\Reference.cs,UploadPartialFileAsync,The length of the statement  "		this.onUploadPartialFileCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnUploadPartialFileCompleted); " is 120.
Long Statement,DomaMove.Doma,DOMAServicePortTypeClient,C:\repos\runerys_DomaMove\DomaMove\Service References\Doma\Reference.cs,OnGetAllCategoriesCompleted,The length of the statement  "		this.GetAllCategoriesCompleted (this' new GetAllCategoriesCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 125.
Complex Conditional,DomaMove.Engine,ImageDownloader,C:\repos\runerys_DomaMove\DomaMove\Engine\ImageDownloader.cs,DownloadImage,The conditional expression  "(response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved || response.StatusCode == HttpStatusCode.Redirect) && response.ContentType.StartsWith ("image"' StringComparison.OrdinalIgnoreCase)"  is complex.
Magic Number,DomaMove.Engine,ImageDownloader,C:\repos\runerys_DomaMove\DomaMove\Engine\ImageDownloader.cs,DownloadImage,The following statement contains a magic number: try {  	var request = (HttpWebRequest)WebRequest.Create (uri);  	var response = (HttpWebResponse)request.GetResponse ();  	if (response.StatusCode == HttpStatusCode.NotFound)  		return null;  	// Check that the remote file was found. The ContentType  	// check is performed since a request for a non-existent  	// image file might be redirected to a 404-page' which would  	// yield the StatusCode "OK"' even though the image was not  	// found.  	if ((response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved || response.StatusCode == HttpStatusCode.Redirect) && response.ContentType.StartsWith ("image"' StringComparison.OrdinalIgnoreCase)) {  		// if the remote file was found' download it  		using (var inputStream = response.GetResponseStream ())  			using (var outputStream = new MemoryStream ()) {  				if (inputStream == null)  					return null;  				var buffer = new byte[4096];  				int bytesRead;  				do {  					bytesRead = inputStream.Read (buffer' 0' buffer.Length);  					outputStream.Write (buffer' 0' bytesRead);  				}  				while (bytesRead != 0);  				return outputStream.ToArray ();  			}  	}  }  catch (WebException e) {  	var response = e.Response as HttpWebResponse;  	if (response != null) {  		if (response.StatusCode == HttpStatusCode.NotFound) {  			// Expected - will retry another filetype  			return null;  		}  	}  	throw;  }  
Magic Number,DomaMove.Engine,ImageDownloader,C:\repos\runerys_DomaMove\DomaMove\Engine\ImageDownloader.cs,DownloadImage,The following statement contains a magic number: if ((response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.Moved || response.StatusCode == HttpStatusCode.Redirect) && response.ContentType.StartsWith ("image"' StringComparison.OrdinalIgnoreCase)) {  	// if the remote file was found' download it  	using (var inputStream = response.GetResponseStream ())  		using (var outputStream = new MemoryStream ()) {  			if (inputStream == null)  				return null;  			var buffer = new byte[4096];  			int bytesRead;  			do {  				bytesRead = inputStream.Read (buffer' 0' buffer.Length);  				outputStream.Write (buffer' 0' bytesRead);  			}  			while (bytesRead != 0);  			return outputStream.ToArray ();  		}  }  
Magic Number,DomaMove.Engine,ImageDownloader,C:\repos\runerys_DomaMove\DomaMove\Engine\ImageDownloader.cs,DownloadImage,The following statement contains a magic number: using (var inputStream = response.GetResponseStream ())  	using (var outputStream = new MemoryStream ()) {  		if (inputStream == null)  			return null;  		var buffer = new byte[4096];  		int bytesRead;  		do {  			bytesRead = inputStream.Read (buffer' 0' buffer.Length);  			outputStream.Write (buffer' 0' bytesRead);  		}  		while (bytesRead != 0);  		return outputStream.ToArray ();  	}  
Magic Number,DomaMove.Engine,ImageDownloader,C:\repos\runerys_DomaMove\DomaMove\Engine\ImageDownloader.cs,DownloadImage,The following statement contains a magic number: using (var outputStream = new MemoryStream ()) {  	if (inputStream == null)  		return null;  	var buffer = new byte[4096];  	int bytesRead;  	do {  		bytesRead = inputStream.Read (buffer' 0' buffer.Length);  		outputStream.Write (buffer' 0' bytesRead);  	}  	while (bytesRead != 0);  	return outputStream.ToArray ();  }  
