Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,ReleaseDesignerOutlets,Cyclomatic complexity of the method is 23
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setupDatePickerControl,The following statement contains a magic number: CGRect frame = new CGRect (10' 10' 295' 154);
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setupDatePickerControl,The following statement contains a magic number: CGRect frame = new CGRect (10' 10' 295' 154);
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setupDatePickerControl,The following statement contains a magic number: CGRect frame = new CGRect (10' 10' 295' 154);
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setupDatePickerControl,The following statement contains a magic number: CGRect frame = new CGRect (10' 10' 295' 154);
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setupDatePickerControl,The following statement contains a magic number: shrinkGrowFacter = (int)frame.Size.Height - 30;
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setFontSize,The following statement contains a magic number: switch ((NSControlSize)tag) {                          case NSControlSize.Mini:                                  datePickerControl.Cell.ControlSize = NSControlSize.Mini;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (9.0f);                                  break;                          case NSControlSize.Small:                                  datePickerControl.Cell.ControlSize = NSControlSize.Small;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (11.0f);                                  break;                          case NSControlSize.Regular:                                  datePickerControl.Cell.ControlSize = NSControlSize.Regular;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (13.0f);                                  break;                          }
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setFontSize,The following statement contains a magic number: switch ((NSControlSize)tag) {                          case NSControlSize.Mini:                                  datePickerControl.Cell.ControlSize = NSControlSize.Mini;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (9.0f);                                  break;                          case NSControlSize.Small:                                  datePickerControl.Cell.ControlSize = NSControlSize.Small;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (11.0f);                                  break;                          case NSControlSize.Regular:                                  datePickerControl.Cell.ControlSize = NSControlSize.Regular;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (13.0f);                                  break;                          }
Magic Number,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setFontSize,The following statement contains a magic number: switch ((NSControlSize)tag) {                          case NSControlSize.Mini:                                  datePickerControl.Cell.ControlSize = NSControlSize.Mini;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (9.0f);                                  break;                          case NSControlSize.Small:                                  datePickerControl.Cell.ControlSize = NSControlSize.Small;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (11.0f);                                  break;                          case NSControlSize.Regular:                                  datePickerControl.Cell.ControlSize = NSControlSize.Regular;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (13.0f);                                  break;                          }
Missing Default,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setFontSize,The following switch statement is missing a default case: switch ((NSControlSize)tag) {                          case NSControlSize.Mini:                                  datePickerControl.Cell.ControlSize = NSControlSize.Mini;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (9.0f);                                  break;                          case NSControlSize.Small:                                  datePickerControl.Cell.ControlSize = NSControlSize.Small;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (11.0f);                                  break;                          case NSControlSize.Regular:                                  datePickerControl.Cell.ControlSize = NSControlSize.Regular;                                  datePickerControl.Cell.Font = NSFont.SystemFontOfSize (13.0f);                                  break;                          }
Missing Default,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setBorderStyle,The following switch statement is missing a default case: switch ((DatePickerBorderStyle)(int)sender.SelectedCell.Tag) {  						case DatePickerBorderStyle.Bezeled:  									datePickerControl.Bezeled = true;  									break;  						case DatePickerBorderStyle.Bordered:  									datePickerControl.Bordered = true;  									break;  						}
Missing Default,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setDateElementFlags,The following switch statement is missing a default case: switch ((DateElementSelections)(int)sender.SelectedCell.Tag) {                                                    case DateElementSelections.YearMonth:                                  if (checkedState)                                          flags |= NSDatePickerElementFlags.YearMonthDate;                                  else                                          flags ^= NSDatePickerElementFlags.YearMonthDate;                                  break;                          case DateElementSelections.YearMonthDay:                                  if (checkedState)                                          flags |= NSDatePickerElementFlags.YearMonthDateDay;                                  else                                          flags ^= NSDatePickerElementFlags.YearMonthDateDay;                                  break;                          case DateElementSelections.Era:                                  if (checkedState)                                          flags |= NSDatePickerElementFlags.Era;                                  else                                          flags ^= NSDatePickerElementFlags.Era;                                  break;                          }
Missing Default,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setTimeElementFlags,The following switch statement is missing a default case: switch ((TimeElementSelections)(int)sender.SelectedCell.Tag) {                                                    case TimeElementSelections.HourMinute:                                  if (checkedState)                                          flags |= NSDatePickerElementFlags.HourMinute;                                  else                                          flags ^= NSDatePickerElementFlags.HourMinute;                                  break;                          case TimeElementSelections.HourMinuteSecond:                                  if (checkedState)                                          flags |= NSDatePickerElementFlags.HourMinuteSecond;                                  else                                          flags ^= NSDatePickerElementFlags.HourMinuteSecond;                                  break;                          case TimeElementSelections.TimeZone:                                  if (checkedState)                                          flags |= NSDatePickerElementFlags.TimeZone;                                  else                                          flags ^= NSDatePickerElementFlags.TimeZone;                                  break;                          }
Missing Default,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,setDatePickerMode,The following switch statement is missing a default case: switch ((DatePickerModeSelections)(int)sender.SelectedCell.Tag) {                          case DatePickerModeSelections.SingleDateMode:                                  datePickerControl.DatePickerMode = NSDatePickerMode.Single;                                  break;                          case DatePickerModeSelections.RangeDateMode:                                  datePickerControl.DatePickerMode = NSDatePickerMode.Range;                                  break;                          }
Missing Default,DatePicker,TestWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\DatePicker\TestWindowController.cs,updateDatePickerMode,The following switch statement is missing a default case: switch (mode) {                          case NSDatePickerMode.Single:                                  datePickerModeRadios.SelectCellWithTag (0);                                                                    // interval value not applicable                                  secondsRangeEdit.Enabled = false;                                  secondsRangeEditLabel.TextColor = NSColor.LightGray;                                                                    datePickerControl.TimeInterval = 0;                                  break;                          case NSDatePickerMode.Range:                                  datePickerModeRadios.SelectCellWithTag (1);                                                                    // interval value applies                                  secondsRangeEdit.Enabled = true;                                  secondsRangeEditLabel.TextColor = NSColor.Black;                                                                    // set the date range by start date (here we use the current date in the date picker control)'                                   // and time interval (in seconds)  								string secsStr = secondsRangeEdit.StringValue;    								try {  									double numSeconds = Double.Parse (secsStr);  									datePickerControl.TimeInterval = numSeconds;  								} catch {  									secondsRangeEdit.StringValue = string.Empty;  								}                                    break;                          }
