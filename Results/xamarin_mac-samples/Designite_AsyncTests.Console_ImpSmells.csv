Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NDesk.Options,Option,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,NDesk.Options,Option,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Complex Conditional,NDesk.Options,Option,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&   					((names.Length == 1 && this.type != OptionValueType.None) ||  					 (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&  					Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'   					delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,WriteOptionDescriptions,The following statement contains a magic number: string prefix = new string (' '' OptionWidth+2);
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Magic Number,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 2;
Missing Default,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  					case OptionValueType.None:  						c.OptionValues.Add (n);  						c.Option.Invoke (c);  						break;  					case OptionValueType.Optional:  					case OptionValueType.Required:   						ParseValue (v' c);  						break;  				}
Missing Default,NDesk.Options,OptionSet,D:\research\architectureSmells\repos\xamarin_mac-samples\CFNetwork\AsyncTests.Console\NDeskOptions.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  					case ' ':  					case '\t':  					case '\v':  					case '-':  					case ''':  					case '.':  					case ';':  						sep = i;  						break;  					case '\n':  						return i;  				}
