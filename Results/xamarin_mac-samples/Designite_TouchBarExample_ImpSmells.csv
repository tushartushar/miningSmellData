Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The length of the statement  "					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label")); " is 155.
Long Statement,TouchBarExample,ColorPickerDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ColorPickerDelegate.cs,CreateColorPicker,The length of the statement  "					item = NSColorPickerTouchBarItem.CreateColorPicker (identifier' NSImage.ImageNamed (NSImageName.TouchBarColorPickerFill)); " is 122.
Long Statement,TouchBarExample,ColorPickerDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ColorPickerDelegate.cs,OnColorChange,The length of the statement  "			Console.WriteLine ("Color changed on {0} ({1}' {2}' {3}' {4})"' name' color.RedComponent' color.GreenComponent' color.BlueComponent' color.AlphaComponent); " is 155.
Long Statement,TouchBarExample,SharingDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\SharingDelegate.cs,ItemsForSharingServicePickerTouchBarItem,The length of the statement  "				(NSString)"Lorem ipsum dolor sit amet' consectetur adipiscing elit' sed do eiusmod tempor incididunt ut labore et dolore magna aliqua" " is 134.
Magic Number,TouchBarExample,WindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\WindowController.cs,MakeTouchBar,The following statement contains a magic number: bar.DefaultItemIdentifiers = idList.Take (2).ToArray ();
Magic Number,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier))  			{  				case 0:{  					item.View = NSButton.CreateButton ("1️⃣ Button"' () => Console.WriteLine ("Button"));  					return item;  				}  				case 1: {  					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label"));  					return item;  				}  				case 2: {  					item.View = new NSImageView () {  						Image = NSImage.ImageNamed (NSImageName.TouchBarGetInfoTemplate)'  					};  					return item;  				}  				case 3: {  					item.View = NSSegmentedControl.FromImages (  						new NSImage [] {  							NSImage.ImageNamed (NSImageName.TouchBarVolumeDownTemplate)'  							NSImage.ImageNamed (NSImageName.TouchBarVolumeUpTemplate) }'  						NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Images"));  					return item;  				}  				case 4: {  					item.View = NSSlider.FromValue (5' 0' 10' () =>  Console.WriteLine ("Slider"));  					return item;  				}    			}
Magic Number,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier))  			{  				case 0:{  					item.View = NSButton.CreateButton ("1️⃣ Button"' () => Console.WriteLine ("Button"));  					return item;  				}  				case 1: {  					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label"));  					return item;  				}  				case 2: {  					item.View = new NSImageView () {  						Image = NSImage.ImageNamed (NSImageName.TouchBarGetInfoTemplate)'  					};  					return item;  				}  				case 3: {  					item.View = NSSegmentedControl.FromImages (  						new NSImage [] {  							NSImage.ImageNamed (NSImageName.TouchBarVolumeDownTemplate)'  							NSImage.ImageNamed (NSImageName.TouchBarVolumeUpTemplate) }'  						NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Images"));  					return item;  				}  				case 4: {  					item.View = NSSlider.FromValue (5' 0' 10' () =>  Console.WriteLine ("Slider"));  					return item;  				}    			}
Magic Number,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier))  			{  				case 0:{  					item.View = NSButton.CreateButton ("1️⃣ Button"' () => Console.WriteLine ("Button"));  					return item;  				}  				case 1: {  					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label"));  					return item;  				}  				case 2: {  					item.View = new NSImageView () {  						Image = NSImage.ImageNamed (NSImageName.TouchBarGetInfoTemplate)'  					};  					return item;  				}  				case 3: {  					item.View = NSSegmentedControl.FromImages (  						new NSImage [] {  							NSImage.ImageNamed (NSImageName.TouchBarVolumeDownTemplate)'  							NSImage.ImageNamed (NSImageName.TouchBarVolumeUpTemplate) }'  						NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Images"));  					return item;  				}  				case 4: {  					item.View = NSSlider.FromValue (5' 0' 10' () =>  Console.WriteLine ("Slider"));  					return item;  				}    			}
Magic Number,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier))  			{  				case 0:{  					item.View = NSButton.CreateButton ("1️⃣ Button"' () => Console.WriteLine ("Button"));  					return item;  				}  				case 1: {  					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label"));  					return item;  				}  				case 2: {  					item.View = new NSImageView () {  						Image = NSImage.ImageNamed (NSImageName.TouchBarGetInfoTemplate)'  					};  					return item;  				}  				case 3: {  					item.View = NSSegmentedControl.FromImages (  						new NSImage [] {  							NSImage.ImageNamed (NSImageName.TouchBarVolumeDownTemplate)'  							NSImage.ImageNamed (NSImageName.TouchBarVolumeUpTemplate) }'  						NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Images"));  					return item;  				}  				case 4: {  					item.View = NSSlider.FromValue (5' 0' 10' () =>  Console.WriteLine ("Slider"));  					return item;  				}    			}
Magic Number,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier))  			{  				case 0:{  					item.View = NSButton.CreateButton ("1️⃣ Button"' () => Console.WriteLine ("Button"));  					return item;  				}  				case 1: {  					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label"));  					return item;  				}  				case 2: {  					item.View = new NSImageView () {  						Image = NSImage.ImageNamed (NSImageName.TouchBarGetInfoTemplate)'  					};  					return item;  				}  				case 3: {  					item.View = NSSegmentedControl.FromImages (  						new NSImage [] {  							NSImage.ImageNamed (NSImageName.TouchBarVolumeDownTemplate)'  							NSImage.ImageNamed (NSImageName.TouchBarVolumeUpTemplate) }'  						NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Images"));  					return item;  				}  				case 4: {  					item.View = NSSlider.FromValue (5' 0' 10' () =>  Console.WriteLine ("Slider"));  					return item;  				}    			}
Magic Number,TouchBarExample,CanidateBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CanidateBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier)) {  				case 0: {  					canidateItem = new NSCandidateListTouchBarItem (identifier);  					canidateItem.Delegate = this;  					canidateItem.SetCandidates (new NSString [] { (NSString)"Hello"' (NSString)"World"' (NSString)"Touch" }'  							new NSRange (0' 3)' "");  					return canidateItem;  				}  			}
Magic Number,TouchBarExample,ColorPickerDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ColorPickerDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier)) {  				case 0:   					return CreateColorPicker (identifier' "Apple");  				case 1:  					return CreateColorPicker (identifier' "System");  				case 2:  					return CreateColorPicker (identifier' "Crayons");  				case 3:  					return CreateColorPicker (identifier' "Text");  				case 4:  					return CreateColorPicker (identifier' "Stroke");  			}
Magic Number,TouchBarExample,ColorPickerDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ColorPickerDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier)) {  				case 0:   					return CreateColorPicker (identifier' "Apple");  				case 1:  					return CreateColorPicker (identifier' "System");  				case 2:  					return CreateColorPicker (identifier' "Crayons");  				case 3:  					return CreateColorPicker (identifier' "Text");  				case 4:  					return CreateColorPicker (identifier' "Stroke");  			}
Magic Number,TouchBarExample,ColorPickerDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ColorPickerDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier)) {  				case 0:   					return CreateColorPicker (identifier' "Apple");  				case 1:  					return CreateColorPicker (identifier' "System");  				case 2:  					return CreateColorPicker (identifier' "Crayons");  				case 3:  					return CreateColorPicker (identifier' "Text");  				case 4:  					return CreateColorPicker (identifier' "Stroke");  			}
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,GetNumberOfItems,The following statement contains a magic number: return 100;
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,GetViewForItem,The following statement contains a magic number: item.Layer.BorderWidth = 2;
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,GetViewForItem,The following statement contains a magic number: item.Layer.CornerRadius = 8;
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: int r = random.Next (128' 255);
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: int r = random.Next (128' 255);
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: int g = random.Next (128' 255);
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: int g = random.Next (128' 255);
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: int b = random.Next (128' 255);
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: int b = random.Next (128' 255);
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: r = (int)(r + baseColor.RedComponent) / 2;
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: g = (int)(g + baseColor.GreenComponent) / 2;
Magic Number,TouchBarExample,ImageScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,TintImage,The following statement contains a magic number: b = (int)(b + baseColor.BlueComponent) / 2;
Magic Number,TouchBarExample,TextScrubberData,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,GetNumberOfItems,The following statement contains a magic number: return 100;
Magic Number,TouchBarExample,CustomizeBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomizeBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier)) {  				case 0: {  					item.View = NSButton.CreateButton ("Custom 1"' () => Console.WriteLine ("Custom First"));  					return item;  				}  				case 1: {  					item.View = NSButton.CreateButton ("Custom 2"' () => Console.WriteLine ("Custom Second"));  					return item;  				}  				case 2: {  					item.View = NSButton.CreateButton ("Custom 3"' () => Console.WriteLine ("Custom Third"));  					return item;  				}  				case 3: {  					item.View = NSButton.CreateButton ("Custom 4"' () => Console.WriteLine ("Custom Fourth"));  					return item;  				}  			}
Magic Number,TouchBarExample,CustomizeBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomizeBarDelegate.cs,MakeItem,The following statement contains a magic number: switch (ParseId (identifier)) {  				case 0: {  					item.View = NSButton.CreateButton ("Custom 1"' () => Console.WriteLine ("Custom First"));  					return item;  				}  				case 1: {  					item.View = NSButton.CreateButton ("Custom 2"' () => Console.WriteLine ("Custom Second"));  					return item;  				}  				case 2: {  					item.View = NSButton.CreateButton ("Custom 3"' () => Console.WriteLine ("Custom Third"));  					return item;  				}  				case 3: {  					item.View = NSButton.CreateButton ("Custom 4"' () => Console.WriteLine ("Custom Fourth"));  					return item;  				}  			}
Missing Default,TouchBarExample,CustomTouchBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomTouchBarDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier))  			{  				case 0:{  					item.View = NSButton.CreateButton ("1️⃣ Button"' () => Console.WriteLine ("Button"));  					return item;  				}  				case 1: {  					item.View = NSSegmentedControl.FromLabels (new string [] { "Label1"' "Label2" }' NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Label"));  					return item;  				}  				case 2: {  					item.View = new NSImageView () {  						Image = NSImage.ImageNamed (NSImageName.TouchBarGetInfoTemplate)'  					};  					return item;  				}  				case 3: {  					item.View = NSSegmentedControl.FromImages (  						new NSImage [] {  							NSImage.ImageNamed (NSImageName.TouchBarVolumeDownTemplate)'  							NSImage.ImageNamed (NSImageName.TouchBarVolumeUpTemplate) }'  						NSSegmentSwitchTracking.SelectAny' () => Console.WriteLine ("Seg Images"));  					return item;  				}  				case 4: {  					item.View = NSSlider.FromValue (5' 0' 10' () =>  Console.WriteLine ("Slider"));  					return item;  				}    			}
Missing Default,TouchBarExample,CanidateBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CanidateBarDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier)) {  				case 0: {  					canidateItem = new NSCandidateListTouchBarItem (identifier);  					canidateItem.Delegate = this;  					canidateItem.SetCandidates (new NSString [] { (NSString)"Hello"' (NSString)"World"' (NSString)"Touch" }'  							new NSRange (0' 3)' "");  					return canidateItem;  				}  			}
Missing Default,TouchBarExample,ColorPickerDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ColorPickerDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier)) {  				case 0:   					return CreateColorPicker (identifier' "Apple");  				case 1:  					return CreateColorPicker (identifier' "System");  				case 2:  					return CreateColorPicker (identifier' "Crayons");  				case 3:  					return CreateColorPicker (identifier' "Text");  				case 4:  					return CreateColorPicker (identifier' "Stroke");  			}
Missing Default,TouchBarExample,PopoverDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\PopoverDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseNestedId (identifier))  				{  					case 0:   						return ColorPickerDelegate.CreateColorPicker (identifier' "Apple");  					case 1:  						return new NSCustomTouchBarItem (identifier)   							{ View = NSButton.CreateButton ("NSPopup Button"' () => Console.WriteLine ("Popup Button"))};  				}
Missing Default,TouchBarExample,PopoverDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\PopoverDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier))   				{  					case 0:   					{  						NSPopoverTouchBarItem item = new NSPopoverTouchBarItem (identifier);  						item.PopoverTouchBar = new NSTouchBar () {  							Delegate = this'  							DefaultItemIdentifiers = new string [] { CreateNestedID (0) }  						};  						item.CollapsedRepresentationLabel = "Popup Color";  						return item;  					}  					case 1:   					{  						NSPopoverTouchBarItem item = new NSPopoverTouchBarItem (identifier);  						item.PopoverTouchBar = new NSTouchBar () {  							Delegate = this'  							DefaultItemIdentifiers = new string [] { CreateNestedID (1) }  						};  						item.CollapsedRepresentationLabel = "Popup Text";  						return item;  					}  				}
Missing Default,TouchBarExample,SliderDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\SliderDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier)) {  				case 0: {  					var item = new NSSliderTouchBarItem (identifier) {  						MinimumValueAccessory = NSSliderAccessory.CreateAccessory (NSImage.ImageNamed (NSImageName.GoLeftTemplate))'  						MaximumValueAccessory = NSSliderAccessory.CreateAccessory (NSImage.ImageNamed (NSImageName.GoRightTemplate))'  					};  					item.Activated += (sender' e) => {  						NSSliderTouchBarItem activatedItem = (NSSliderTouchBarItem)sender;  						Console.WriteLine ("Position: " + activatedItem.Slider.DoubleValue);  					};  					return item;  				}  				case 1: {  						var item = new NSSliderTouchBarItem (identifier);  						return item;  					}  				}
Missing Default,TouchBarExample,ScrubberDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseNestedId (identifier)) {  				case 0: {  						var data = new TextScrubberData ();    						scrubber.Delegate = data;  						scrubber.DataSource = data;    						scrubber.RegisterClass (new Class ("NSScrubberTextItemView")' "com.xamarin.scrubber.text");  	  						return item;  					}  				case 1: {  						var data = new ImageScrubberData ();    						scrubber.Delegate = data;  						scrubber.DataSource = data;    						scrubber.RegisterClass (new Class (typeof (ScrubberImage))' "com.xamarin.scrubber.image");  						scrubber.ShowsAdditionalContentIndicators = true;    						return item;  					}  				}
Missing Default,TouchBarExample,ScrubberDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\ScrubberDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier)) {  				case 0: {  						NSPopoverTouchBarItem item = new NSPopoverTouchBarItem (identifier);  						item.PopoverTouchBar = new NSTouchBar () {  							Delegate = this'  							DefaultItemIdentifiers = new string [] { CreateNestedID (0) }  						};  						item.CollapsedRepresentationLabel = "NSScrubber Text";  						return item;  					}  				case 1: {  						NSPopoverTouchBarItem item = new NSPopoverTouchBarItem (identifier);  						item.PopoverTouchBar = new NSTouchBar () {  							Delegate = this'  							DefaultItemIdentifiers = new string [] { CreateNestedID (1) }  						};  						item.CollapsedRepresentationLabel = "NSScrubber Image";  						return item;  					}  				}
Missing Default,TouchBarExample,CustomizeBarDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\TouchBarExample\TouchBarExample\Examples\CustomizeBarDelegate.cs,MakeItem,The following switch statement is missing a default case: switch (ParseId (identifier)) {  				case 0: {  					item.View = NSButton.CreateButton ("Custom 1"' () => Console.WriteLine ("Custom First"));  					return item;  				}  				case 1: {  					item.View = NSButton.CreateButton ("Custom 2"' () => Console.WriteLine ("Custom Second"));  					return item;  				}  				case 2: {  					item.View = NSButton.CreateButton ("Custom 3"' () => Console.WriteLine ("Custom Third"));  					return item;  				}  				case 3: {  					item.View = NSButton.CreateButton ("Custom 4"' () => Console.WriteLine ("Custom Fourth"));  					return item;  				}  			}
