Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,Cyclomatic complexity of the method is 8
Long Statement,MacTables,ViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ViewController.cs,ViewDidLoad,The length of the statement  "			DataSource.Products.Add (new Product ("Xamarin Studio Community"' "A free' full-featured IDE for Mac users to create Android and iOS apps using Xamarin.")); " is 156.
Long Statement,MacTables,ViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ViewController.cs,ViewDidLoad,The length of the statement  "			DataSource.Products.Add (new Product ("Visual Studio Community"' "A free' full-featured and extensible IDE for Windows users to create Android and iOS apps with Xamarin' as well as Windows apps' web apps' and cloud services.")); " is 228.
Long Statement,MacTables,ViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ViewController.cs,ViewDidLoad,The length of the statement  "			DataSource.Products.Add (new Product ("Visual Studio Professional"' "Professional developer tools and services for individual developers or small teams.")); " is 156.
Long Statement,MacTables,ViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ViewController.cs,ViewDidLoad,The length of the statement  "			DataSource.Products.Add (new Product ("Visual Studio Enterprise"' "End-to-end solution for teams of any size with demanding quality and scale needs")); " is 151.
Long Statement,MacTables,ViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ViewController.cs,ViewDidLoad,The length of the statement  "			DataSource.Products.Add (new Product ("Xamarin Test Cloud"' "Automatically test your app on thousands of mobile devices.")); " is 124.
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Magic Number,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Missing Default,MacTables,ProductTableDataSource,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDataSource.cs,Sort,The following switch statement is missing a default case: switch (key) {  			case "Title":  				if (ascending) {  					Products.Sort ((x' y) => x.Title.CompareTo (y.Title));  				} else {  					Products.Sort ((x' y) => -1 * x.Title.CompareTo (y.Title));  				}  				break;  			case "Description":  				if (ascending) {  					Products.Sort ((x' y) => x.Description.CompareTo (y.Description));  				} else {  					Products.Sort ((x' y) => -1 * x.Description.CompareTo (y.Description));  				}  				break;  			}
Missing Default,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,ConfigureTextField,The following switch statement is missing a default case: switch (view.Identifier) {  				case "Product":  					DataSource.Products [(int)view.TextField.Tag].Title = view.TextField.StringValue;  					break;  				case "Details":  					DataSource.Products [(int)view.TextField.Tag].Description = view.TextField.StringValue;  					break;  				}
Missing Default,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following switch statement is missing a default case: switch (tableColumn.Title) {  				case "Product":  					view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));  					view.AddSubview (view.ImageView);  					view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Details":  					view.TextField = new NSTextField (new CGRect (0' 0' 400' 16));  					ConfigureTextField (view' row);  					break;  				case "Action":  					// Create new button  					var button = new NSButton (new CGRect (0' 0' 81' 16));  					button.SetButtonType (NSButtonType.MomentaryPushIn);  					button.Title = "Delete";  					button.Tag = row;    					// Wireup events  					button.Activated += (sender' e) => {  						// Get button and product  						var btn = sender as NSButton;  						var product = DataSource.Products [(int)btn.Tag];    						// Configure alert  						var alert = new NSAlert () {  							AlertStyle = NSAlertStyle.Informational'  							InformativeText = $"Are you sure you want to delete {product.Title}? This operation cannot be undone."'  							MessageText = $"Delete {product.Title}?"'  						};  						alert.AddButton ("Cancel");  						alert.AddButton ("Delete");  						alert.BeginSheetForResponse (Controller.View.Window' (result) => {  							// Should we delete the requested row?  							if (result == 1001) {  								// Remove the given row from the dataset  								DataSource.Products.RemoveAt((int)btn.Tag);  								Controller.ReloadTable ();  							}  						});  					};    					// Add to view  					view.AddSubview (button);  					break;  				}
Missing Default,MacTables,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacTables\MacTables\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following switch statement is missing a default case: switch (tableColumn.Title) {  			case "Product":  				view.ImageView.Image = NSImage.ImageNamed ("tag.png");  				view.TextField.StringValue = DataSource.Products [(int)row].Title;  				view.TextField.Tag = row;  				break;  			case "Details":  				view.TextField.StringValue = DataSource.Products [(int)row].Description;  				view.TextField.Tag = row;  				break;  			case "Action":  				foreach (NSView subview in view.Subviews) {  					var btn = subview as NSButton;  					if (btn != null) {  						btn.Tag = row;  					}  				}  				break;  			}
