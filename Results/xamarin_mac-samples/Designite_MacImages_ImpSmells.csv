Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MacImages,OutlineViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\OutlineViewController.cs,ViewDidLoad,The length of the statement  "			var Fruits = new Product ("Fruits"' "Fruit is a part of a flowering plant that derives from specific tissues of the flower"); " is 125.
Magic Number,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following statement contains a magic number: view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));
Magic Number,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following statement contains a magic number: view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));
Magic Number,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following statement contains a magic number: view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));
Magic Number,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following statement contains a magic number: view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));
Magic Number,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following statement contains a magic number: view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));
Magic Number,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));
Magic Number,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: view.ImageView = new NSImageView (new CGRect (0' 0' 16' 16));
Magic Number,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));
Magic Number,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));
Magic Number,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following statement contains a magic number: view.TextField = new NSTextField (new CGRect (20' 0' 400' 16));
Missing Default,MacImages,ViewController,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ViewController.cs,PrepareForSegue,The following switch statement is missing a default case: switch (segue.Identifier) {  			case "PictureSegue":  				var pictureView = segue.DestinationController as PictureViewController;  				pictureView.Picture = Picture;  				break;  			}
Missing Default,MacImages,ProductOutlineDataSource,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDataSource.cs,Sort,The following switch statement is missing a default case: switch (key) {  			case "Title":  				if (ascending) {  					Products.Sort ((x' y) => x.Title.CompareTo (y.Title));  				} else {  					Products.Sort ((x' y) => -1 * x.Title.CompareTo (y.Title));  				}  				break;  			}
Missing Default,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following switch statement is missing a default case: switch(view.Identifier) {  				case "Product":  					prod.Title = view.TextField.StringValue;  					break;  				case "Details":  					prod.Description = view.TextField.StringValue;  					break;   				}
Missing Default,MacImages,ProductOutlineDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductOutline\ProductOutlineDelegate.cs,GetView,The following switch statement is missing a default case: switch (tableColumn.Title) {  			case "Product":  				if (product.IsProductGroup) {   					view.ImageView.Image = NSImage.ImageNamed("tags.png");  				} else {  					view.ImageView.Image = NSImage.ImageNamed("tag.png");  				}  				view.TextField.StringValue = product.Title;  				break;  			case "Details":  				view.TextField.StringValue = product.Description;  				break;  			}
Missing Default,MacImages,ProductTableDataSource,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDataSource.cs,Sort,The following switch statement is missing a default case: switch (key) {  			case "Title":  				if (ascending) {  					Products.Sort ((x' y) => x.Title.CompareTo (y.Title));  				} else {  					Products.Sort ((x' y) => -1 * x.Title.CompareTo (y.Title));  				}  				break;  			case "Description":  				if (ascending) {  					Products.Sort ((x' y) => x.Description.CompareTo (y.Description));  				} else {  					Products.Sort ((x' y) => -1 * x.Description.CompareTo (y.Description));  				}  				break;  			}
Missing Default,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following switch statement is missing a default case: switch(view.Identifier) {  					case "Product":  						DataSource.Products [(int)view.TextField.Tag].Title = view.TextField.StringValue;  						break;  					case "Details":  						DataSource.Products [(int)view.TextField.Tag].Description = view.TextField.StringValue;  						break;   					}
Missing Default,MacImages,ProductTableDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\MacImages\MacImages\ProductTable\ProductTableDelegate.cs,GetViewForItem,The following switch statement is missing a default case: switch (tableColumn.Title) {  			case "Product":  				view.ImageView.Image = NSImage.ImageNamed ("tags.png");  				view.TextField.StringValue = DataSource.Products [(int)row].Title;  				break;  			case "Details":  				view.TextField.StringValue = DataSource.Products [(int)row].Description;  				break;  			}
