Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NeHeLesson13,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\MainWindow.xib.designer.cs,MyDisplayLinkOutputCallback,The method has 5 parameters. Parameters: displayLink' inNow' inOutputTime' flagsIn' flagsOut
Long Statement,NeHeLesson13,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\MainWindow.xib.designer.cs,DrawView,The length of the statement  "			// This method will be called on both the main thread (through -drawRect:) and a secondary thread (through the display link rendering loop) " is 139.
Long Statement,NeHeLesson13,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\MainWindow.xib.designer.cs,UpdateView,The length of the statement  "			// This method will be called on the main thread when resizing' but we may be drawing on a secondary thread through the display link " is 132.
Long Statement,NeHeLesson13,BitmapFont,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\BitmapFont.cs,MakeDisplayList,The length of the statement  "			System.Runtime.InteropServices.Marshal.Copy (bitmap.BitmapData' bitmapBytesArray' 0' (pixelsWide * pixelsHigh) * samplesPerPixel); " is 130.
Magic Number,NeHeLesson13,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {    			// [Esc] exits full-screen mode  			case (char)27:  				if (isInFullScreenMode)  					goWindow ();  				break;  			default:  				break;    			}
Magic Number,NeHeLesson13,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\MainWindow.xib.designer.cs,MyOpenGLView,The following statement contains a magic number: var attribs = new object [] {  				NSOpenGLPixelFormatAttribute.Accelerated'  				NSOpenGLPixelFormatAttribute.NoRecovery'  				NSOpenGLPixelFormatAttribute.DoubleBuffer'  				NSOpenGLPixelFormatAttribute.ColorSize' 24'  				NSOpenGLPixelFormatAttribute.DepthSize' 16 };
Magic Number,NeHeLesson13,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\MainWindow.xib.designer.cs,MyOpenGLView,The following statement contains a magic number: var attribs = new object [] {  				NSOpenGLPixelFormatAttribute.Accelerated'  				NSOpenGLPixelFormatAttribute.NoRecovery'  				NSOpenGLPixelFormatAttribute.DoubleBuffer'  				NSOpenGLPixelFormatAttribute.ColorSize' 24'  				NSOpenGLPixelFormatAttribute.DepthSize' 16 };
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,Scene,The following statement contains a magic number: bmFont = new BitmapFont("Monaco"' 24);
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,Perspective,The following statement contains a magic number: const  			double DEG2RAD = Math.PI / 180 ;
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,Perspective,The following statement contains a magic number: double tangent = Math.Tan (fovY / 2 * DEG2RAD);
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,DrawGLScene,The following statement contains a magic number: GL.Color3 (1.0f * (float)Math.Cos (cnt1)' 1.0f * (float)Math.Sin (cnt2)' 1.0f - 0.5f * (float)Math.Cos (cnt1 + cnt2));
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,DrawGLScene,The following statement contains a magic number: GL.RasterPos2 (-0.45f + 0.05f * (float)Math.Cos (cnt1)' 0.35f * (float)Math.Sin (cnt2));
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,DrawGLScene,The following statement contains a magic number: GL.RasterPos2 (-0.45f + 0.05f * (float)Math.Cos (cnt1)' 0.35f * (float)Math.Sin (cnt2));
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,DrawGLScene,The following statement contains a magic number: GL.RasterPos2 (-0.45f + 0.05f * (float)Math.Cos (cnt1)' 0.35f * (float)Math.Sin (cnt2));
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,DrawGLScene,The following statement contains a magic number: cnt1 += 0.051f;
Magic Number,NeHeLesson13,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\Scene.cs,DrawGLScene,The following statement contains a magic number: cnt2 += 0.005f;
Magic Number,NeHeLesson13,BitmapFont,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\BitmapFont.cs,BuildFont,The following statement contains a magic number: baseDL = GL.GenLists (95);
Magic Number,NeHeLesson13,BitmapFont,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson13\BitmapFont.cs,MakeDisplayList,The following statement contains a magic number: newBuffer = new byte[(int)Math.Ceiling ((float)bytesPerRow / 8.0) * pixelsHigh];
