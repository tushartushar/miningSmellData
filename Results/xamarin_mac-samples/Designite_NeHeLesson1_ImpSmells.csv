Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NeHeLesson1,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\MainWindow.xib.designer.cs,MyDisplayLinkOutputCallback,The method has 5 parameters. Parameters: displayLink' inNow' inOutputTime' flagsIn' flagsOut
Long Statement,NeHeLesson1,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\MainWindow.xib.designer.cs,DrawView,The length of the statement  "			// This method will be called on both the main thread (through -drawRect:) and a secondary thread (through the display link rendering loop) " is 139.
Long Statement,NeHeLesson1,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\MainWindow.xib.designer.cs,UpdateView,The length of the statement  "			// This method will be called on the main thread when resizing' but we may be drawing on a secondary thread through the display link " is 132.
Magic Number,NeHeLesson1,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (char)27:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;                          default:                                  break;                                                            }
Magic Number,NeHeLesson1,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\MainWindow.xib.designer.cs,MyOpenGLView,The following statement contains a magic number: var attribs = new object [] {  				NSOpenGLPixelFormatAttribute.Accelerated'  				NSOpenGLPixelFormatAttribute.NoRecovery'  				NSOpenGLPixelFormatAttribute.DoubleBuffer'  				NSOpenGLPixelFormatAttribute.ColorSize' 24'  				NSOpenGLPixelFormatAttribute.DepthSize' 16 };
Magic Number,NeHeLesson1,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\MainWindow.xib.designer.cs,MyOpenGLView,The following statement contains a magic number: var attribs = new object [] {  				NSOpenGLPixelFormatAttribute.Accelerated'  				NSOpenGLPixelFormatAttribute.NoRecovery'  				NSOpenGLPixelFormatAttribute.DoubleBuffer'  				NSOpenGLPixelFormatAttribute.ColorSize' 24'  				NSOpenGLPixelFormatAttribute.DepthSize' 16 };
Magic Number,NeHeLesson1,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson1,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson1,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson1,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\Scene.cs,Perspective,The following statement contains a magic number: const double DEG2RAD = Math.PI / 180;
Magic Number,NeHeLesson1,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson1\Scene.cs,Perspective,The following statement contains a magic number: double tangent = Math.Tan (fovY / 2 * DEG2RAD);
