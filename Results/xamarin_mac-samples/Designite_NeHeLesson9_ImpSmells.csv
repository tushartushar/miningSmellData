Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,Cyclomatic complexity of the method is 8
Long Parameter List,NeHeLesson9,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindow.xib.designer.cs,MyDisplayLinkOutputCallback,The method has 5 parameters. Parameters: displayLink' inNow' inOutputTime' flagsIn' flagsOut
Long Statement,NeHeLesson9,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindow.xib.designer.cs,DrawView,The length of the statement  "			// This method will be called on both the main thread (through -drawRect:) and a secondary thread (through the display link rendering loop) " is 139.
Long Statement,NeHeLesson9,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindow.xib.designer.cs,UpdateView,The length of the statement  "			// This method will be called on the main thread when resizing' but we may be drawing on a secondary thread through the display link " is 132.
Long Statement,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The length of the statement  "			// Since we are sharing OpenGL objects between the full-screen and non-fullscreen contexts' we only need to do this once " is 120.
Long Statement,NeHeLesson9,Texture,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Texture.cs,LoadTexture,The length of the statement  "			GL.BufferData (BufferTarget.PixelUnpackBuffer' new IntPtr (width * height * 4 * sizeof(byte))' data' BufferUsageHint.StaticDraw); " is 129.
Long Statement,NeHeLesson9,Texture,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Texture.cs,LoadTexture,The length of the statement  "			GL.TexImage2D (TextureTarget.Texture2D' 0' PixelInternalFormat.Rgba' width' height' 0' PixelFormat.Rgba' PixelType.UnsignedByte' IntPtr.Zero); " is 142.
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MainWindowController,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindowController.cs,KeyDown,The following statement contains a magic number: switch (c) {                                                    // [Esc] exits full-screen mode                          case (ushort)NSKey.Escape:                                  if (isInFullScreenMode)                                          goWindow ();                                  break;  			case (ushort)NSKey.T:  				Scene.IsTwinkling = !Scene.IsTwinkling;  				break;  			// up arrow key  			case 126:  				Scene.Tilt -= 0.05f;  				break;  			// fn + up arrow key for page up  			case 116:  				Scene.Zoom -= 0.2f;  				break;  			// down arrow key  			case 125:  				Scene.Tilt += 0.05f;  				break;  			// fn + down arrow key for page down  			case 121:  				Scene.Zoom += 0.20f;  				break;                            default:                                  break;                                                            }
Magic Number,NeHeLesson9,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindow.xib.designer.cs,MyOpenGLView,The following statement contains a magic number: var attribs = new object [] {  				NSOpenGLPixelFormatAttribute.Accelerated'  				NSOpenGLPixelFormatAttribute.NoRecovery'  				NSOpenGLPixelFormatAttribute.DoubleBuffer'  				NSOpenGLPixelFormatAttribute.ColorSize' 24'  				NSOpenGLPixelFormatAttribute.DepthSize' 16 };
Magic Number,NeHeLesson9,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindow.xib.designer.cs,MyOpenGLView,The following statement contains a magic number: var attribs = new object [] {  				NSOpenGLPixelFormatAttribute.Accelerated'  				NSOpenGLPixelFormatAttribute.NoRecovery'  				NSOpenGLPixelFormatAttribute.DoubleBuffer'  				NSOpenGLPixelFormatAttribute.ColorSize' 24'  				NSOpenGLPixelFormatAttribute.DepthSize' 16 };
Magic Number,NeHeLesson9,MyOpenGLView,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\MainWindow.xib.designer.cs,InitGL,The following statement contains a magic number: GL.ClearColor (0' 0' 0' 0.5f);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,InitStars,The following statement contains a magic number: var nc = Color.FromArgb (rng.Next () % 256' rng.Next () % 256' rng.Next () % 256);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,InitStars,The following statement contains a magic number: var nc = Color.FromArgb (rng.Next () % 256' rng.Next () % 256' rng.Next () % 256);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,InitStars,The following statement contains a magic number: var nc = Color.FromArgb (rng.Next () % 256' rng.Next () % 256' rng.Next () % 256);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,InitStars,The following statement contains a magic number: stars [loop] = new star (nc' ((float)loop / num) * 5' 0);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,ResizeGLScene,The following statement contains a magic number: Perspective (45' bounds.Size.Width / bounds.Size.Height' 0.1' 100);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,Perspective,The following statement contains a magic number: const  			double DEG2RAD = Math.PI / 180 ;
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,Perspective,The following statement contains a magic number: double tangent = Math.Tan (fovY / 2 * DEG2RAD);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The following statement contains a magic number: spin += 0.01f;
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The following statement contains a magic number: stars [loop].distance -= 0.01f;
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The following statement contains a magic number: stars [loop].distance += 5;
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The following statement contains a magic number: stars [loop].color = Color.FromArgb (rng.Next () % 256' rng.Next () % 256' rng.Next () % 256);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The following statement contains a magic number: stars [loop].color = Color.FromArgb (rng.Next () % 256' rng.Next () % 256' rng.Next () % 256);
Magic Number,NeHeLesson9,Scene,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Scene.cs,DrawGLScene,The following statement contains a magic number: stars [loop].color = Color.FromArgb (rng.Next () % 256' rng.Next () % 256' rng.Next () % 256);
Magic Number,NeHeLesson9,Texture,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Texture.cs,GetImagaDataFromPath,The following statement contains a magic number: data = new byte[width * height * 4];
Magic Number,NeHeLesson9,Texture,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Texture.cs,GetImagaDataFromPath,The following statement contains a magic number: context = new CGBitmapContext (data' width' height' 8' 4 * width' image.ColorSpace' ai);
Magic Number,NeHeLesson9,Texture,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Texture.cs,GetImagaDataFromPath,The following statement contains a magic number: context = new CGBitmapContext (data' width' height' 8' 4 * width' image.ColorSpace' ai);
Magic Number,NeHeLesson9,Texture,D:\research\architectureSmells\repos\xamarin_mac-samples\OpenGL-NeHe\NeHeLesson9\Texture.cs,LoadTexture,The following statement contains a magic number: GL.BufferData (BufferTarget.PixelUnpackBuffer' new IntPtr (width * height * 4 * sizeof(byte))' data' BufferUsageHint.StaticDraw);
