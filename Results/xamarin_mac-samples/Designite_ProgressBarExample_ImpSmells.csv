Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ProgressBarExample,AppDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\ProgressBarExample\ProgressBarExample\AppDelegate.cs,DidFinishLaunching,The following statement contains a magic number: var progressIndicator = new NSProgressIndicator (new CGRect (50' 0' 400' 200)) {  				DoubleValue = 0'  				Indeterminate = false  			};
Magic Number,ProgressBarExample,AppDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\ProgressBarExample\ProgressBarExample\AppDelegate.cs,DidFinishLaunching,The following statement contains a magic number: var progressIndicator = new NSProgressIndicator (new CGRect (50' 0' 400' 200)) {  				DoubleValue = 0'  				Indeterminate = false  			};
Magic Number,ProgressBarExample,AppDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\ProgressBarExample\ProgressBarExample\AppDelegate.cs,DidFinishLaunching,The following statement contains a magic number: var progressIndicator = new NSProgressIndicator (new CGRect (50' 0' 400' 200)) {  				DoubleValue = 0'  				Indeterminate = false  			};
Magic Number,ProgressBarExample,AppDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\ProgressBarExample\ProgressBarExample\AppDelegate.cs,DidFinishLaunching,The following statement contains a magic number: NSTimer.CreateRepeatingScheduledTimer (.5' timer => {  				if (!NSThread.Current.IsMainThread)  					throw new System.InvalidOperationException ("NSTimer should invoke on main?");    				if (progressValue >= 100)  					progressValue = 0;  				progressValue += 20;  				progressIndicator.DoubleValue = progressValue;  			});
Magic Number,ProgressBarExample,AppDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\ProgressBarExample\ProgressBarExample\AppDelegate.cs,DidFinishLaunching,The following statement contains a magic number: NSTimer.CreateRepeatingScheduledTimer (.5' timer => {  				if (!NSThread.Current.IsMainThread)  					throw new System.InvalidOperationException ("NSTimer should invoke on main?");    				if (progressValue >= 100)  					progressValue = 0;  				progressValue += 20;  				progressIndicator.DoubleValue = progressValue;  			});
Magic Number,ProgressBarExample,AppDelegate,D:\research\architectureSmells\repos\xamarin_mac-samples\ProgressBarExample\ProgressBarExample\AppDelegate.cs,DidFinishLaunching,The following statement contains a magic number: NSTimer.CreateRepeatingScheduledTimer (.5' timer => {  				if (!NSThread.Current.IsMainThread)  					throw new System.InvalidOperationException ("NSTimer should invoke on main?");    				if (progressValue >= 100)  					progressValue = 0;  				progressValue += 20;  				progressIndicator.DoubleValue = progressValue;  			});
