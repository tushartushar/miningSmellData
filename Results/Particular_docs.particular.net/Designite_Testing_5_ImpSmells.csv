Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Testing_5.Saga,MySaga,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Testing\Testing_5\Saga\MySaga.cs,Handle,The following statement contains a magic number: RequestTimeout(TimeSpan.FromDays(7)' message);
Magic Number,Testing_5.Saga,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Testing\Testing_5\Saga\Tests.cs,Run,The following statement contains a magic number: Test.Saga<MySaga>()                  .ExpectReplyToOriginator<MyResponse>()                  .ExpectTimeoutToBeSetIn<StartsSaga>(                      check: (state' span) =>                      {                          return span == TimeSpan.FromDays(7);                      })                  .ExpectPublish<MyEvent>()                  .ExpectSend<MyCommand>()                  .When(                      sagaIsInvoked: saga =>                      {                          saga.Handle(new StartsSaga());                      })                  .WhenSagaTimesOut()                  .ExpectPublish<MyOtherEvent>()                  .AssertSagaCompletionIs(true);
Magic Number,Testing_5.UpgradeGuides._5to6,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Testing\Testing_5\UpgradeGuides\5to6\UsingWhen.cs,Run,The following statement contains a magic number: Test.Saga<MySaga>()                  .ExpectReplyToOriginator<MyResponse>()                  .ExpectTimeoutToBeSetIn<StartsSaga>(                      check: (state' span) =>                      {                          return span == TimeSpan.FromDays(7);                      })                  .ExpectPublish<MyEvent>()                  .ExpectSend<MyCommand>()                  #region 5to6-usingWhen                    .When(s => s.Handle(new StartsSaga()))                  #endregion                    .ExpectPublish<MyEvent>()                  .WhenSagaTimesOut()                  .AssertSagaCompletionIs(true);
