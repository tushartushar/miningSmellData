Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SqsAll.NativeSend,NativeSend,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\NativeSend\NativeSend.cs,SendLargeMessage,The method has 7 parameters. Parameters: sqsClient' s3Client' queue' s3Prefix' bucketName' messageBody' headers
Long Parameter List,SqsAll.QueueCreation,CreateEndpointQueues,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\CreateEndpointQueues.cs,CreateQueuesForEndpoint,The method has 5 parameters. Parameters: endpointName' maxTimeToLive' queueNamePrefix' includeRetries' delayedDeliveryMethod
Long Parameter List,SqsAll.QueueCreation,CreateEndpointQueuesCloudFormation,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\CreateEndpointQueuesCloudFormation.cs,CreateQueuesForEndpoint,The method has 6 parameters. Parameters: endpointName' templatePath' maxTimeToLive' queueNamePrefix' includeRetries' delayedDeliveryMethod
Long Parameter List,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The method has 7 parameters. Parameters: endpointName' errorQueueName' auditQueueName' maxTimeToLive' queueNamePrefix' includeRetries' delayedDeliveryMethod
Long Parameter List,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,StartEndpoint,The method has 5 parameters. Parameters: state' endpointName' errorQueueName' auditQueueName' delayedDeliveryMethod
Long Parameter List,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,RetryDeleteOnThrottle,The method has 5 parameters. Parameters: client' queueUrl' delay' maxRetryAttempts' retryAttempts
Long Parameter List,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,RetryCreateOnThrottle,The method has 6 parameters. Parameters: client' queueName' delay' maxRetryAttempts' queueNamePrefix' retryAttempts
Long Parameter List,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The method has 6 parameters. Parameters: endpointName' errorQueueName' auditQueueName' queueNamePrefix' includeRetries' delayedDeliveryMethod
Long Identifier,SqsAll,SqsTransportConfigurationExtensions,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\SqsTransportConfigurationExtensions.cs,,The length of the parameter S3BucketEnvironmentVariableName is 31.
Long Statement,SqsAll,QueueNameHelper,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueNameHelper.cs,GetSqsQueueName,The length of the statement  "                    $"Address {destination} with configured prefix {queueNamePrefix} is longer than 80 characters and therefore cannot be used to create an SQS queue. Use a shorter endpoint name or a shorter queue name prefix."); " is 209.
Long Statement,SqsAll.ErrorQueue,ErrorQueue,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\ErrorQueue\ErrorQueue.cs,InspectMessagesUntilFound,The length of the statement  "                await client.SendMessageAsync(new SendMessageRequest(failedQueueUrl' foundMessage.Body)) // what to do with the attributes? " is 123.
Long Statement,SqsAll.NativeSend,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\NativeSend\Tests.cs,SendLarge,The length of the statement  "                    await NativeSend.SendLargeMessage(client' s3Client' endpointName' "test"' SqsTransportConfigurationExtensions.S3BucketName' message' headers) " is 141.
Long Statement,SqsAll.QueueCreation,QueueCreationUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtils.cs,CreateQueue,The length of the statement  "                sqsRequest.Attributes.Add(QueueAttributeName.MessageRetentionPeriod' Convert.ToInt32((maxTimeToLive ?? DefaultTimeToLive).TotalSeconds).ToString()); " is 148.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithOverridenMaxTTL_Powershell,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' maxTimeToLive' delayedDeliveryMethod: delayedDeliveryMethod) " is 130.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithOverridenMaxTTL,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' maxTimeToLive' delayedDeliveryMethod: delayedDeliveryMethod) " is 130.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_Powershell,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' delayedDeliveryMethod: delayedDeliveryMethod) " is 137.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' delayedDeliveryMethod: delayedDeliveryMethod) " is 137.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_CloudFormation,The length of the statement  "            var queueCreationTemplatePath = Path.Combine(TestContext.CurrentContext.TestDirectory' "QueueCreation/QueueCreation.json"); " is 123.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_CloudFormation,The length of the statement  "            var endpointTemplatePath = Path.Combine(TestContext.CurrentContext.TestDirectory' "QueueCreation/CreateEndpointQueues.json"); " is 125.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_CloudFormation,The length of the statement  "                await CreateEndpointQueuesCloudFormation.CreateQueuesForEndpoint(endpointName' endpointTemplatePath' delayedDeliveryMethod:delayedDeliveryMethod) " is 145.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_CloudFormation,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' delayedDeliveryMethod: delayedDeliveryMethod) " is 137.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithPrefix_Powershell,The length of the statement  "                await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithPrefix,The length of the statement  "                await CreateEndpointQueues.CreateQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithPrefix,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 161.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithPrefix,The length of the statement  "                await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithLongEndpointNameThrowsAndNoQueuesAreCreated,The length of the statement  "            Assert.IsTrue(exception.Message.Contains("is longer than 80 characters and therefore cannot be used to create an SQS queue.")); " is 127.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries_CloudFormation,The length of the statement  "            var queueCreationTemplatePath = Path.Combine(TestContext.CurrentContext.TestDirectory' "QueueCreation/QueueCreation.json"); " is 123.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries_CloudFormation,The length of the statement  "            var endpointTemplatePath = Path.Combine(TestContext.CurrentContext.TestDirectory' "QueueCreation/CreateEndpointQueues.json"); " is 125.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries_CloudFormation,The length of the statement  "                await CreateEndpointQueuesCloudFormation.CreateQueuesForEndpoint(endpointName' endpointTemplatePath' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 168.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries_CloudFormation,The length of the statement  "                await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' includeRetries: true' delayedDeliveryMethod:delayedDeliveryMethod) " is 158.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The length of the statement  "                    Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.Timeouts"' queueNamePrefix)' "Timeouts Queue did not exist"); " is 125.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The length of the statement  "                    Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.TimeoutsDispatcher"' queueNamePrefix)' "TimeoutsDispatcher Queue did not exist"); " is 145.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The length of the statement  "                    Assert.IsTrue(await QueueExistenceUtils.Exists(endpointFifoQueueName' queueNamePrefix)' "Endpoint FIFO Queue did not exist"); " is 125.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The length of the statement  "                Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.Retries"' queueNamePrefix)' "Retries Queue did not exist"); " is 123.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueues,The length of the statement  "                await CreateEndpointQueues.CreateQueuesForEndpoint(endpointName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 132.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueues,The length of the statement  "                endpoint = await StartEndpoint(state' endpointName' errorQueueName' auditQueueName' delayedDeliveryMethod).ConfigureAwait(false); " is 129.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueues,The length of the statement  "                await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 132.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueues_Powershell,The length of the statement  "                endpoint = await StartEndpoint(state' endpointName' errorQueueName' auditQueueName' delayedDeliveryMethod).ConfigureAwait(false); " is 129.
Long Statement,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueues_Powershell,The length of the statement  "                await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 132.
Long Statement,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,DeleteQueues,The length of the statement  "            deletionTasks[numberOfQueuesFound] = numberOfQueuesFound > 0 ? Task.Delay(TimeSpan.FromSeconds(60)) : Task.CompletedTask; " is 121.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The length of the statement  "                    creationTasks[i] = RetryCreateOnThrottle(client' $"deleteprefix-{i}"' TimeSpan.FromSeconds(10)' 6' queueNamePrefix: "DEV"); " is 123.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,RetryCreateOnThrottle,The length of the statement  "                    await RetryCreateOnThrottle(client' queueName' delay' maxRetryAttempts' retryAttempts: ++retryAttempts).ConfigureAwait(false); " is 126.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueueForEndpointWithPrefix_Powershell,The length of the statement  "            await CreateEndpointQueues.CreateQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueueForEndpointWithPrefix_Powershell,The length of the statement  "                await AssertQueuesDeleted(endpointName' errorQueueName' auditQueueName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 141.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueueForEndpointWithPrefix_Powershell,The length of the statement  "                await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueuesForEndpointWithPrefix,The length of the statement  "            await CreateEndpointQueues.CreateQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueuesForEndpointWithPrefix,The length of the statement  "            await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 134.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueuesForEndpointWithPrefix,The length of the statement  "            await AssertQueuesDeleted(endpointName' errorQueueName' auditQueueName' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod) " is 141.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueueForEndpointWithRetries_Powershell,The length of the statement  "            await CreateEndpointQueues.CreateQueuesForEndpoint(endpointName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 132.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueueForEndpointWithRetries_Powershell,The length of the statement  "            await AssertQueuesDeleted(endpointName' errorQueueName' auditQueueName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 139.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueuesForEndpointWithRetries,The length of the statement  "            await CreateEndpointQueues.CreateQueuesForEndpoint(endpointName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 132.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueuesForEndpointWithRetries,The length of the statement  "            await DeleteEndpointQueues.DeleteQueuesForEndpoint(endpointName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 132.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteQueuesForEndpointWithRetries,The length of the statement  "            await AssertQueuesDeleted(endpointName' errorQueueName' auditQueueName' includeRetries: true' delayedDeliveryMethod: delayedDeliveryMethod) " is 139.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The length of the statement  "                    Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}.Timeouts"' queueNamePrefix)' $"Queue {endpointName}.timeouts still exists."); " is 142.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The length of the statement  "                    Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}.TimeoutsDispatcher"' queueNamePrefix)' $"Queue {endpointName}.timeoutsdispatcher still exists."); " is 162.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The length of the statement  "                    Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}-delay.fifo"' queueNamePrefix)' $"Queue {endpointName}-delay.fifo still exists."); " is 146.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The length of the statement  "                Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}.Retries"' queueNamePrefix)' $"Queue {endpointName}.retries still exists."); " is 140.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The length of the statement  "            Assert.IsFalse(await QueueExistenceUtils.Exists(errorQueueName' queueNamePrefix)' $"Queue {errorQueueName} still exists."); " is 123.
Long Statement,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The length of the statement  "            Assert.IsFalse(await QueueExistenceUtils.Exists(auditQueueName' queueNamePrefix)' $"Queue {auditQueueName} still exists."); " is 123.
Empty Catch Block,SqsAll.QueueCreation,QueueCreationUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtils.cs,CreateQueue,The method has an empty catch block.
Empty Catch Block,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,DeleteQueue,The method has an empty catch block.
Empty Catch Block,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,RetryDeleteOnThrottle,The method has an empty catch block.
Magic Number,SqsAll,QueueNameHelper,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueNameHelper.cs,GetSqsQueueName,The following statement contains a magic number: s.Length > 80
Magic Number,SqsAll,QueueNameHelper,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueNameHelper.cs,GetSqsQueueName,The following statement contains a magic number: var skipCharacters = s.EndsWith(".fifo") ? 5 : 0;
Magic Number,SqsAll.ErrorQueue,ErrorQueue,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\ErrorQueue\ErrorQueue.cs,InspectMessagesUntilFound,The following statement contains a magic number: var receivedMessages = await client.ReceiveMessageAsync(new ReceiveMessageRequest                  {                      QueueUrl = queueUrl'                      WaitTimeSeconds = 20'                      MaxNumberOfMessages = 10'                  })                  .ConfigureAwait(false);
Magic Number,SqsAll.ErrorQueue,ErrorQueue,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\ErrorQueue\ErrorQueue.cs,InspectMessagesUntilFound,The following statement contains a magic number: var receivedMessages = await client.ReceiveMessageAsync(new ReceiveMessageRequest                  {                      QueueUrl = queueUrl'                      WaitTimeSeconds = 20'                      MaxNumberOfMessages = 10'                  })                  .ConfigureAwait(false);
Magic Number,SqsAll.ErrorQueue,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\ErrorQueue\Tests.cs,GetMessageId,The following statement contains a magic number: var messages = await client.ReceiveMessageAsync(                          new ReceiveMessageRequest(getQueueUrlResponse.QueueUrl)                          {                              MaxNumberOfMessages = 1'                              WaitTimeSeconds = 20'                              VisibilityTimeout = 0' // message needs to be immediately visible again to be seen by the ReturnToSourceQueue algorithm                          })                      .ConfigureAwait(false);
Magic Number,SqsAll.ErrorQueue,State,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\ErrorQueue\Tests.cs,State,The following statement contains a magic number: var tokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.NativeSend,State,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\NativeSend\Tests.cs,State,The following statement contains a magic number: var tokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueCreation,CreateEndpointQueues,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\CreateEndpointQueues.cs,Usage,The following statement contains a magic number: await CreateQueuesForEndpoint(                      endpointName: "myendpoint"'                      maxTimeToLive: TimeSpan.FromDays(2)'                      queueNamePrefix: "PROD"'                      includeRetries: true /* required for V5 and below */)                  .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,CreateEndpointQueuesCloudFormation,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\CreateEndpointQueuesCloudFormation.cs,Usage,The following statement contains a magic number: await CreateQueuesForEndpoint(                      endpointName: "myendpoint"'                      templatePath: @".\CreateQueuesEndpoint.json"'                      maxTimeToLive: TimeSpan.FromDays(2)'                      queueNamePrefix: "PROD"'                      includeRetries: true /* required for V5 and below */)                  .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,CreateEndpointQueuesCloudFormation,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\CreateEndpointQueuesCloudFormation.cs,CreateQueuesForEndpoint,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,SqsAll.QueueCreation,QueueCreationUtilsCloudFormation,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtilsCloudFormation.cs,CreateQueue,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,SqsAll.QueueCreation,QueueCreationUtilsUsage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtilsUsage.cs,Usage,The following statement contains a magic number: await QueueCreationUtils.CreateQueue(                      queueName: "error"'                      maxTimeToLive: TimeSpan.FromDays(2)'                      queueNamePrefix: "PROD")                  .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,QueueCreationUtilsUsage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtilsUsage.cs,Usage,The following statement contains a magic number: await QueueCreationUtils.CreateQueue(                      queueName: "audit"'                      maxTimeToLive: TimeSpan.FromDays(2)'                      queueNamePrefix: "PROD")                  .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,QueueCreationUtilsUsage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtilsUsage.cs,Usage,The following statement contains a magic number: await QueueCreationUtilsCloudFormation.CreateQueue(                      queueName: "error"'                      templatePath: @".\QueueCreation.json"'                      maxTimeToLive: TimeSpan.FromDays(2)'                      queueNamePrefix: "PROD")                  .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,QueueCreationUtilsUsage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\QueueCreationUtilsUsage.cs,Usage,The following statement contains a magic number: await QueueCreationUtilsCloudFormation.CreateQueue(                      queueName: "audit"'                      templatePath: @".\QueueCreation.json"'                      maxTimeToLive: TimeSpan.FromDays(2)'                      queueNamePrefix: "PROD")                  .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_Powershell,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' delayedDeliveryMethod: delayedDeliveryMethod)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' delayedDeliveryMethod: delayedDeliveryMethod)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointDefaultMaxTTL_CloudFormation,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' delayedDeliveryMethod: delayedDeliveryMethod)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithPrefix_Powershell,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' queueNamePrefix: "DEV")                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithPrefix,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' queueNamePrefix: "DEV"' delayedDeliveryMethod: delayedDeliveryMethod)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries_Powershell,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' includeRetries: true)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' includeRetries: true)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,CreateQueuesForEndpointWithRetries_CloudFormation,The following statement contains a magic number: await AssertQueuesExist(endpointName' errorQueueName' auditQueueName' TimeSpan.FromDays(4)' includeRetries: true' delayedDeliveryMethod:delayedDeliveryMethod)                      .ConfigureAwait(false);
Magic Number,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The following statement contains a magic number: switch (delayedDeliveryMethod)              {                  case "TimeoutManager":                        Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.Timeouts"' queueNamePrefix)' "Timeouts Queue did not exist");                      Assert.AreEqual(timeSpanInSeconds' (await QueueAccessUtils.Exists(endpointName' queueNamePrefix' new List<string>                      {                          QueueAttributeName.MessageRetentionPeriod                      })).MessageRetentionPeriod);                        Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.TimeoutsDispatcher"' queueNamePrefix)' "TimeoutsDispatcher Queue did not exist");                      Assert.AreEqual(timeSpanInSeconds' (await QueueAccessUtils.Exists(endpointName' queueNamePrefix' new List<string>                      {                          QueueAttributeName.MessageRetentionPeriod                      })).MessageRetentionPeriod);                        break;                  case "UnrestrictedDelayedDelivery":                        var endpointFifoQueueName = $"{endpointName}-delay.fifo";                        Assert.IsTrue(await QueueExistenceUtils.Exists(endpointFifoQueueName' queueNamePrefix)' "Endpoint FIFO Queue did not exist");                        var queueAttributes = await QueueAccessUtils.Exists(endpointFifoQueueName' queueNamePrefix' new List<string>                      {                          QueueAttributeName.MessageRetentionPeriod'                          QueueAttributeName.DelaySeconds'                          QueueAttributeName.FifoQueue                      });                        Assert.AreEqual(timeSpanInSeconds' queueAttributes.MessageRetentionPeriod);                      Assert.AreEqual(900' queueAttributes.DelaySeconds);                      Assert.IsTrue(queueAttributes.FifoQueue);                        break;              }
Magic Number,SqsAll.QueueCreation,State,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,State,The following statement contains a magic number: var tokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,DeleteEndpointQueuesCloudFormation,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\DeleteEndpointQueuesCloudFormation.cs,DeleteQueuesForEndpoint,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,DeleteQueues,The following statement contains a magic number: deletionTasks[i] = RetryDeleteOnThrottle(client' queuesToDelete.QueueUrls[i]' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,DeleteQueues,The following statement contains a magic number: deletionTasks[i] = RetryDeleteOnThrottle(client' queuesToDelete.QueueUrls[i]' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,DeleteQueues,The following statement contains a magic number: deletionTasks[numberOfQueuesFound] = numberOfQueuesFound > 0 ? Task.Delay(TimeSpan.FromSeconds(60)) : Task.CompletedTask;
Magic Number,SqsAll.QueueDeletion,QueueDeletionUtils,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtils.cs,DeleteQueues,The following statement contains a magic number: numberOfQueuesFound == 1000
Magic Number,SqsAll.QueueDeletion,QueueDeletionUtilsCloudFormation,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\QueueDeletionUtilsCloudFormation.cs,DeleteQueue,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: var creationTasks = new Task[12];
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[i] = RetryCreateOnThrottle(client' $"deleteprefix-{i}"' TimeSpan.FromSeconds(10)' 6' queueNamePrefix: "DEV");
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[i] = RetryCreateOnThrottle(client' $"deleteprefix-{i}"' TimeSpan.FromSeconds(10)' 6' queueNamePrefix: "DEV");
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: i < 10
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[10] = RetryCreateOnThrottle(client' "deleteprefix-10"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[10] = RetryCreateOnThrottle(client' "deleteprefix-10"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[10] = RetryCreateOnThrottle(client' "deleteprefix-10"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[11] = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: creationTasks[11] = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWithPrefix,The following statement contains a magic number: i < 10
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: var creationTasks = new Task[11];
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: creationTasks[i] = RetryCreateOnThrottle(client' $"deleteall-{i}"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: creationTasks[i] = RetryCreateOnThrottle(client' $"deleteall-{i}"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: i < 10
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: creationTasks[10] = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: creationTasks[10] = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueues,The following statement contains a magic number: i < 10
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: var creationTasks = new Task[2001];
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: creationTasks[i] = RetryCreateOnThrottle(client' $"deletemore2000-{i}"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: creationTasks[i] = RetryCreateOnThrottle(client' $"deletemore2000-{i}"' TimeSpan.FromSeconds(10)' 6);
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: i < 2000
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: creationTasks[2000] = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: creationTasks[2000] = Task.Delay(TimeSpan.FromSeconds(60));
Magic Number,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,DeleteAllQueuesWhenMoreThanAThousandQueues,The following statement contains a magic number: i < 2000
Missing Default,SqsAll.QueueCreation,CreateEndpointQueues,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\CreateEndpointQueues.cs,CreateQueuesForEndpoint,The following switch statement is missing a default case: switch (delayedDeliveryMethod)              {                  case "TimeoutManager":                        // timeout dispatcher queue                      // This queue is created first because it has the longest name.                       // If the endpointName and queueNamePrefix are too long this call will throw and no queues will be created.                       // In this event' a shorter value for endpointName or queueNamePrefix should be used.                      await QueueCreationUtils.CreateQueue($"{endpointName}.TimeoutsDispatcher"' maxTimeToLive' queueNamePrefix)                          .ConfigureAwait(false);                        // timeout queue                      await QueueCreationUtils.CreateQueue($"{endpointName}.Timeouts"' maxTimeToLive' queueNamePrefix)                          .ConfigureAwait(false);                        break;                  case "UnrestrictedDelayedDelivery":                                            await QueueCreationUtils.CreateQueue($"{endpointName}-delay.fifo"' maxTimeToLive' queueNamePrefix)                          .ConfigureAwait(false);                        break;              }
Missing Default,SqsAll.QueueCreation,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueCreation\Tests.cs,AssertQueuesExist,The following switch statement is missing a default case: switch (delayedDeliveryMethod)              {                  case "TimeoutManager":                        Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.Timeouts"' queueNamePrefix)' "Timeouts Queue did not exist");                      Assert.AreEqual(timeSpanInSeconds' (await QueueAccessUtils.Exists(endpointName' queueNamePrefix' new List<string>                      {                          QueueAttributeName.MessageRetentionPeriod                      })).MessageRetentionPeriod);                        Assert.IsTrue(await QueueExistenceUtils.Exists($"{endpointName}.TimeoutsDispatcher"' queueNamePrefix)' "TimeoutsDispatcher Queue did not exist");                      Assert.AreEqual(timeSpanInSeconds' (await QueueAccessUtils.Exists(endpointName' queueNamePrefix' new List<string>                      {                          QueueAttributeName.MessageRetentionPeriod                      })).MessageRetentionPeriod);                        break;                  case "UnrestrictedDelayedDelivery":                        var endpointFifoQueueName = $"{endpointName}-delay.fifo";                        Assert.IsTrue(await QueueExistenceUtils.Exists(endpointFifoQueueName' queueNamePrefix)' "Endpoint FIFO Queue did not exist");                        var queueAttributes = await QueueAccessUtils.Exists(endpointFifoQueueName' queueNamePrefix' new List<string>                      {                          QueueAttributeName.MessageRetentionPeriod'                          QueueAttributeName.DelaySeconds'                          QueueAttributeName.FifoQueue                      });                        Assert.AreEqual(timeSpanInSeconds' queueAttributes.MessageRetentionPeriod);                      Assert.AreEqual(900' queueAttributes.DelaySeconds);                      Assert.IsTrue(queueAttributes.FifoQueue);                        break;              }
Missing Default,SqsAll.QueueDeletion,DeleteEndpointQueues,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\DeleteEndpointQueues.cs,DeleteQueuesForEndpoint,The following switch statement is missing a default case: switch (delayedDeliveryMethod)              {                  case "TimeoutManager":                        // timeout queue                      await QueueDeletionUtils.DeleteQueue($"{endpointName}.Timeouts"' queueNamePrefix)                          .ConfigureAwait(false);                        // timeout dispatcher queue                      await QueueDeletionUtils.DeleteQueue($"{endpointName}.TimeoutsDispatcher"' queueNamePrefix)                          .ConfigureAwait(false);                        break;                  case "UnrestrictedDelayedDelivery":                        await QueueDeletionUtils.DeleteQueue($"{endpointName}-delay.fifo"' queueNamePrefix)                          .ConfigureAwait(false);                        break;              }
Missing Default,SqsAll.QueueDeletion,Tests,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Sqs\Sqs_All\QueueDeletion\Tests.cs,AssertQueuesDeleted,The following switch statement is missing a default case: switch (delayedDeliveryMethod)              {                  case "TimeoutManager":                        Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}.Timeouts"' queueNamePrefix)' $"Queue {endpointName}.timeouts still exists.");                        Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}.TimeoutsDispatcher"' queueNamePrefix)' $"Queue {endpointName}.timeoutsdispatcher still exists.");                        break;                  case "UnrestrictedDelayedDelivery":                        Assert.IsFalse(await QueueExistenceUtils.Exists($"{endpointName}-delay.fifo"' queueNamePrefix)' $"Queue {endpointName}-delay.fifo still exists.");                        break;              }
