Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Core6.Headers.Writers,Saga2,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterSaga.cs,Handle,The length of the parameter replyToOriginatorFromSagaMessage is 32.
Long Identifier,Core6.UpgradeGuides._5to6,Upgrade,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Upgrade.cs,SuppressDistributedTransactions,The length of the parameter suppressDistributedTransactions is 31.
Long Statement,Core6,SwitchInstallersWithCommandline,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Installers.cs,Main,The length of the statement  "            var runInstallers = Environment.GetCommandLineArgs().Any(x => string.Equals(x' "/runInstallers"' StringComparison.OrdinalIgnoreCase)); " is 134.
Long Statement,Core6.Headers.Writers,EndpointConfigurationExtensions,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\EndpointConfigurationExtensions.cs,SetTypesToScan,The length of the statement  "            var methodInfo = typeof(EndpointConfiguration).GetMethod("TypesToScanInternal"'BindingFlags.NonPublic|BindingFlags.Instance); " is 125.
Long Statement,Core6.Headers.Writers,HeaderWriterEncryption,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterEncryption.cs,Write,The length of the statement  "            endpointConfiguration.RijndaelEncryptionService("2015-10"' Convert.FromBase64String("gdDbqRpqdRbTs3mhdZh9qCaDaxJXl+e6")); " is 121.
Magic Number,Core6.Audit,ProvideConfiguration,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Audit\ProvideConfiguration.cs,GetConfiguration,The following statement contains a magic number: return new AuditConfig              {                  QueueName = "targetAuditQueue"'                  OverrideTimeToBeReceived = TimeSpan.FromMinutes(10)              };
Magic Number,Core6,TimeToWaitBeforeTriggeringCriticalErrorOnTimeoutOutages,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\TimeToWaitBeforeTriggeringCriticalErrorOnTimeoutOutages.cs,TimeToWaitBeforeTriggeringCriticalErrorOnTimeoutOutages,The following statement contains a magic number: endpointConfiguration.TimeToWaitBeforeTriggeringCriticalErrorOnTimeoutOutages(                  timeToWait: TimeSpan.FromMinutes(5));
Magic Number,Core6,TransactionScopeUnitOfWork,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\TransactionScopeUnitOfWork.cs,UnitOfWorkCustomTransactionTimeout,The following statement contains a magic number: unitOfWork.WrapHandlersInATransactionScope(                  timeout: TimeSpan.FromSeconds(30));
Magic Number,Core6,TransportTransactions,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\TransportTransactions.cs,CustomTransactionTimeout,The following statement contains a magic number: transport.TransactionScopeOptions(                  timeout: TimeSpan.FromSeconds(30));
Magic Number,Core6.Conventions,Usage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Conventions\Usage.cs,Usage,The following statement contains a magic number: conventions.DefiningTimeToBeReceivedAs(                  type =>                  {                      if (type.Name.EndsWith("Expires"))                      {                          return TimeSpan.FromSeconds(30);                      }                      return TimeSpan.MaxValue;                  });
Magic Number,Core6.DelayedDelivery,DeferForDateTime,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\DelayedDelivery\DeferForDateTime.cs,SendDelayedMessage,The following statement contains a magic number: options.DoNotDeliverBefore(new DateTime(2016' 12' 25));
Magic Number,Core6.DelayedDelivery,DeferForDateTime,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\DelayedDelivery\DeferForDateTime.cs,SendDelayedMessage,The following statement contains a magic number: options.DoNotDeliverBefore(new DateTime(2016' 12' 25));
Magic Number,Core6.DelayedDelivery,DeferForDateTime,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\DelayedDelivery\DeferForDateTime.cs,SendDelayedMessage,The following statement contains a magic number: options.DoNotDeliverBefore(new DateTime(2016' 12' 25));
Magic Number,Core6.DelayedDelivery,DeferForTimeSpan,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\DelayedDelivery\DeferForTimeSpan.cs,SendDelayedMessage,The following statement contains a magic number: sendOptions.DelayDeliveryWith(TimeSpan.FromMinutes(30));
Magic Number,Core6.Features,FeatureWithDefaults,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Features\Features.cs,FeatureWithDefaults,The following statement contains a magic number: Defaults(s =>              {                  s.Set("Key"' "Value");                  s.SetDefault("OtherKey"' 42);              });
Magic Number,Core6.Features,SatelliteRecoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Features\SatelliteRecoverability.cs,DelayedRetry,The following statement contains a magic number: context.AddSatelliteReceiver(                  name: "CustomSatellite"'                  transportAddress: "targetQueue"'                  runtimeSettings: PushRuntimeSettings.Default'                  recoverabilityPolicy: (config' errorContext) =>                  {                      return RecoverabilityAction.DelayedRetry(                          timeSpan: TimeSpan.FromMinutes(2));                  }'                  onMessage: OnMessage);
Magic Number,Core6.Handlers,BatchedDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: i < 100
Magic Number,Core6.Handlers,ImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: var tasks = new Task[100];
Magic Number,Core6.Handlers,ImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: i < 100
Magic Number,Core6.Handlers,PacketsImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: var tasks = new Task[100];
Magic Number,Core6.Handlers,PacketsImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: j < 100
Magic Number,Core6.Handlers,PacketsImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: i < 100
Magic Number,Core6.Handlers,LimitConcurrencyImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: var semaphore = new SemaphoreSlim(100);
Magic Number,Core6.Handlers,LimitConcurrencyImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: var tasks = new Task[10000];
Magic Number,Core6.Handlers,LimitConcurrencyImmediateDispatchHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\AsyncHandler.cs,Handle,The following statement contains a magic number: i < 10000
Magic Number,Core6.Handlers,HandlerWhichIntegratesWithEvent,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\IntegrationWithNonTaskBasedAPI.cs,Handle,The following statement contains a magic number: cancellationToken.CancelAfter(TimeSpan.FromSeconds(10));
Magic Number,Core6.Handlers,RemoteService,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Handlers\IntegrationWithNonTaskBasedAPI.cs,TimeConsumingRemoteCall,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Core6.Headers.Writers,MessageHandler,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterAudit.cs,Handle,The following statement contains a magic number: return context.Reply(100);
Magic Number,Core6.Headers.Writers,HeaderWriterDataBusConvention,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterDataBusConvention.cs,Write,The following statement contains a magic number: var messageToSend = new MessageToSend              {                  LargeProperty1 = new byte[10]'                  LargeProperty2 = new byte[10]              };
Magic Number,Core6.Headers.Writers,HeaderWriterDataBusConvention,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterDataBusConvention.cs,Write,The following statement contains a magic number: var messageToSend = new MessageToSend              {                  LargeProperty1 = new byte[10]'                  LargeProperty2 = new byte[10]              };
Magic Number,Core6.Headers.Writers,HeaderWriterDataBusProperty,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterDataBusProperty.cs,Write,The following statement contains a magic number: var messageToSend = new MessageToSend              {                  LargeProperty1 = new DataBusProperty<byte[]>(new byte[10])'                  LargeProperty2 = new DataBusProperty<byte[]>(new byte[10])              };
Magic Number,Core6.Headers.Writers,HeaderWriterDataBusProperty,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterDataBusProperty.cs,Write,The following statement contains a magic number: var messageToSend = new MessageToSend              {                  LargeProperty1 = new DataBusProperty<byte[]>(new byte[10])'                  LargeProperty2 = new DataBusProperty<byte[]>(new byte[10])              };
Magic Number,Core6.Headers.Writers,HeaderWriterDefer,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterDefer.cs,Write,The following statement contains a magic number: options.DelayDeliveryWith(TimeSpan.FromMilliseconds(10));
Magic Number,Core6.Headers.Writers,HeaderWriterPublish,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Headers\Writers\HeaderWriterPublish.cs,Write,The following statement contains a magic number: await Task.Delay(3000)                  .ConfigureAwait(false);
Magic Number,Core6.Injection,Injection,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Injection\Injection.cs,ConfigurePropertyInjectionForHandler,The following statement contains a magic number: endpointConfiguration.RegisterComponents(                  registration: components =>                  {                      components.ConfigureComponent(                          builder =>                          {                              return new EmailHandler                              {                                  SmtpPort = 25'                                  SmtpAddress = "10.0.1.233"                              };                          }'                          dependencyLifecycle: DependencyLifecycle.InstancePerUnitOfWork);                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,CustomExceptionPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\CustomExceptionPolicy.cs,CustomExceptionPolicy,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(3);                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,ExceptionPolicyOverridingDelayedRetriesPart,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\ExceptionPolicyOverridingDelayedRetriesPart.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,FullyCustomizedPolicy,The following statement contains a magic number: recoverability.Immediate(                  immediate =>                  {                      immediate.NumberOfRetries(3);                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,FullyCustomizedPolicy,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      var retries = delayed.NumberOfRetries(3);                      retries.TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,FullyCustomizedPolicy,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      var retries = delayed.NumberOfRetries(3);                      retries.TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,FullyCustomizedPolicy62,The following statement contains a magic number: recoverability.Immediate(                  immediate =>                  {                      immediate.NumberOfRetries(3);                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,FullyCustomizedPolicy62,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      var retries = delayed.NumberOfRetries(3);                      retries.TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,FullyCustomizedPolicy62,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      var retries = delayed.NumberOfRetries(3);                      retries.TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,FullyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\FullyCustomizedPolicy.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,PartiallyCustomizedPolicy,The following statement contains a magic number: recoverability.Immediate(                  immediate =>                  {                      immediate.NumberOfRetries(3);                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,PartiallyCustomizedPolicy,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(3).TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,PartiallyCustomizedPolicy,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(3).TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,PartiallyCustomizedPolicy62,The following statement contains a magic number: recoverability.Immediate(                  immediate =>                  {                      immediate.NumberOfRetries(3);                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,PartiallyCustomizedPolicy62,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(3).TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,PartiallyCustomizedPolicy62,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(3).TimeIncrease(TimeSpan.FromSeconds(2));                  });
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,PartiallyCustomizedPolicy62,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\PartiallyCustomizedPolicy.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.Recoverability.Delayed.CustomPolicies,SimplePolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\CustomPolicies\SimplePolicy.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.Recoverability.Delayed,Usage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\Usage.cs,Configure,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(2);                      delayed.TimeIncrease(TimeSpan.FromMinutes(5));                  });
Magic Number,Core6.Recoverability.Delayed,Usage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Delayed\Usage.cs,Configure,The following statement contains a magic number: recoverability.Delayed(                  delayed =>                  {                      delayed.NumberOfRetries(2);                      delayed.TimeIncrease(TimeSpan.FromMinutes(5));                  });
Magic Number,Core6.Recoverability.Immediate,Usage,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Recoverability\Immediate\Usage.cs,Configure,The following statement contains a magic number: recoverability.Immediate(                  immediate =>                  {                      immediate.NumberOfRetries(3);                  });
Magic Number,Core6.Routing,Refresher,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Routing\Extensibility.cs,OnStart,The following statement contains a magic number: timer = new Timer(                          callback: _ =>                          {                              routeTable.AddOrReplaceRoutes("MySource"' LoadRoutes());                          }'                          state: null'                          dueTime: TimeSpan.FromSeconds(30)'                          period: TimeSpan.FromSeconds(30));
Magic Number,Core6.Routing,Refresher,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Routing\Extensibility.cs,OnStart,The following statement contains a magic number: timer = new Timer(                          callback: _ =>                          {                              routeTable.AddOrReplaceRoutes("MySource"' LoadRoutes());                          }'                          state: null'                          dueTime: TimeSpan.FromSeconds(30)'                          period: TimeSpan.FromSeconds(30));
Magic Number,Core6.Routing,RobustRefresher,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Routing\Extensibility.cs,OnStart,The following statement contains a magic number: timer = new Timer(                          callback: _ =>                          {                              try                              {                                  routeTable.AddOrReplaceRoutes("MySource"' LoadRoutes());                              }                              catch (Exception exception)                              {                                  criticalError.Raise("Ambiguous route detected"' exception);                              }                          }'                          state: null'                          dueTime: TimeSpan.FromSeconds(30)'                          period: TimeSpan.FromSeconds(30));
Magic Number,Core6.Routing,RobustRefresher,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Routing\Extensibility.cs,OnStart,The following statement contains a magic number: timer = new Timer(                          callback: _ =>                          {                              try                              {                                  routeTable.AddOrReplaceRoutes("MySource"' LoadRoutes());                              }                              catch (Exception exception)                              {                                  criticalError.Raise("Ambiguous route detected"' exception);                              }                          }'                          state: null'                          dueTime: TimeSpan.FromSeconds(30)'                          period: TimeSpan.FromSeconds(30));
Magic Number,Core6.Scheduling,Scheduling,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Scheduling\Scheduling.cs,Simple,The following statement contains a magic number: await endpointInstance.ScheduleEvery(                      timeSpan: TimeSpan.FromMinutes(5)'                      task: pipelineContext =>                      {                          // use the pipelineContext parameter to send messages                          var message = new CallLegacySystem();                          return pipelineContext.Send(message);                      })                  .ConfigureAwait(false);
Magic Number,Core6.Scheduling,Scheduling,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Scheduling\Scheduling.cs,Simple,The following statement contains a magic number: await endpointInstance.ScheduleEvery(                      timeSpan: TimeSpan.FromMinutes(5)'                      name: "MyCustomTask"'                      task: pipelineContext =>                      {                          log.Info("Custom Task executed");                          return Task.CompletedTask;                      })                  .ConfigureAwait(false);
Magic Number,Core6.Transports.Throughput,ConcurrencyConfiguration,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Transports\Throughput\ConcurrencyConfiguration.cs,ConcurrencyConfiguration,The following statement contains a magic number: endpointConfiguration.LimitMessageProcessingConcurrencyTo(5);
Magic Number,Core6.Transports.Throughput,ConcurrencyConfiguration,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Transports\Throughput\ConcurrencyConfiguration.cs,ConcurrencyConfiguration,The following statement contains a magic number: timeoutManager.LimitMessageProcessingConcurrencyTo(4);
Magic Number,Core6.Tutorials.SetupMonitoring,Configuration,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\Tutorials\SetupMonitoring\Configuration.cs,Configure,The following statement contains a magic number: metrics.SendMetricDataToServiceControl(                  serviceControlMetricsAddress: "Particular.Monitoring"'                  interval: TimeSpan.FromSeconds(2)              );
Magic Number,Core6.UpgradeGuides._5to6,Injection,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Injection.cs,Injection,The following statement contains a magic number: endpointConfiguration.RegisterComponents(                  registration: components =>                  {                      components.ConfigureComponent(                          componentFactory: builder =>                          {                              return new MyHandler                              {                                  MyIntProperty = 25'                                  MyStringProperty = "Some string"                              };                          }'                          dependencyLifecycle: DependencyLifecycle.InstancePerUnitOfWork);                  });
Magic Number,Core6.UpgradeGuides._5to6,TimeToBeReceived,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\TimeToBeReceived.cs,TimeToBeReceived,The following statement contains a magic number: var timeToBeReceived = TimeSpan.FromSeconds(25);
Magic Number,Core6.UpgradeGuides._5to6,Upgrade,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Upgrade.cs,TransportTransactionIsolationLevelAndTimeout,The following statement contains a magic number: transport.TransactionScopeOptions(                  isolationLevel: IsolationLevel.RepeatableRead'                  timeout: TimeSpan.FromSeconds(30));
Magic Number,Core6.UpgradeGuides._5to6,Upgrade,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Upgrade.cs,DelayedDelivery,The following statement contains a magic number: sendOptions.DelayDeliveryWith(TimeSpan.FromMinutes(30));
Magic Number,Core6.UpgradeGuides._5to6,Upgrade,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Upgrade.cs,DelayedDelivery,The following statement contains a magic number: sendOptions.DoNotDeliverBefore(new DateTime(2016' 12' 25));
Magic Number,Core6.UpgradeGuides._5to6,Upgrade,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Upgrade.cs,DelayedDelivery,The following statement contains a magic number: sendOptions.DoNotDeliverBefore(new DateTime(2016' 12' 25));
Magic Number,Core6.UpgradeGuides._5to6,Upgrade,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Upgrade.cs,DelayedDelivery,The following statement contains a magic number: sendOptions.DoNotDeliverBefore(new DateTime(2016' 12' 25));
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,SimplePolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\CustomRetryPolicy.cs,SimplePolicy,The following statement contains a magic number: recoverability.Delayed(                  customizations: delayed =>                  {                      // desired number of retries                      delayed.NumberOfRetries(3);                  });
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,SimplePolicy,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\CustomRetryPolicy.cs,MyCustomRetryPolicy,The following statement contains a magic number: return RecoverabilityAction.DelayedRetry(TimeSpan.FromSeconds(5));
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,Recoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\Recoverability.cs,ConfigureRetries,The following statement contains a magic number: recoverability.Immediate(                  customizations: immediate =>                  {                      immediate.NumberOfRetries(3);                  });
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,Recoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\Recoverability.cs,ConfigureRetries,The following statement contains a magic number: recoverability.Delayed(                  customizations: delayed =>                  {                      var numberOfRetries = delayed.NumberOfRetries(5);                      numberOfRetries.TimeIncrease(TimeSpan.FromSeconds(30));                  });
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,Recoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\Recoverability.cs,ConfigureRetries,The following statement contains a magic number: recoverability.Delayed(                  customizations: delayed =>                  {                      var numberOfRetries = delayed.NumberOfRetries(5);                      numberOfRetries.TimeIncrease(TimeSpan.FromSeconds(30));                  });
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,Recoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\Recoverability.cs,XmlReplacementImmediate,The following statement contains a magic number: recoverability.Immediate(                  customizations: immediate =>                  {                      immediate.NumberOfRetries(2);                  });
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,Recoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\Recoverability.cs,XmlReplacementDelayed,The following statement contains a magic number: recoverability.Delayed(                  customizations: delayed =>                  {                      delayed.NumberOfRetries(3);                      delayed.TimeIncrease(TimeSpan.FromSeconds(10));                  });
Magic Number,Core6.UpgradeGuides._5to6.Recoverability,Recoverability,C:\research\architectureSmells\repos\Particular_docs.particular.net\Snippets\Core\Core_6\UpgradeGuides\5to6\Recoverability\Recoverability.cs,XmlReplacementDelayed,The following statement contains a magic number: recoverability.Delayed(                  customizations: delayed =>                  {                      delayed.NumberOfRetries(3);                      delayed.TimeIncrease(TimeSpan.FromSeconds(10));                  });
