Implementation smell,Namespace,Class,File,Method,Description
Long Method,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,ProcessEvent,The method has 166 lines of code.
Complex Method,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,ProcessEvent,Cyclomatic complexity of the method is 23
Complex Method,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GetEventCodeCategoryName,Cyclomatic complexity of the method is 49
Complex Method,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GetRequestXml,Cyclomatic complexity of the method is 8
Complex Method,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,HttpApplicationBeginRequest,Cyclomatic complexity of the method is 10
Long Statement,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,ProcessEvent,The length of the statement  "			if ((raisedEvent.EventCode == WebEventCodes.ApplicationCompilationStart) || (raisedEvent.EventCode == WebEventCodes.ApplicationCompilationEnd)) { " is 145.
Long Statement,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,ProcessEvent,The length of the statement  "		//three ways we create our message source provider: Exception (best)' Thread info (gotta parse' but accurate)' and Request INfo (fake location) " is 143.
Long Statement,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,ProcessEvent,The length of the statement  "		if ((requestSource as WebRequestSourceProvider != null) && (string.IsNullOrEmpty (requestSource.ClassName) && (raisedEvent.EventSource != null))) { " is 147.
Long Statement,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,ProcessEvent,The length of the statement  "		Log.Write (severity' LogSystem' requestSource' userName' exception' LogWriteMode.Queued' detailsXml' categoryName' caption' description); " is 137.
Long Statement,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,Init,The length of the statement  "			Log.Information (ex' "System"' "Unable to time request logging"' "We're probably running in a version of IIS older than 7 or not in Integrated pipeline mode' because an exception was thrown when we attempted to bind to the LogRequest events.  Exception:\r\n {0}"' ex.Message); " is 276.
Long Statement,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,HttpApplicationBeginRequest,The length of the statement  "			m_CurrentRequestMetric.PageName = (nameLength > 0) ? fullAppRelativePath.Substring (fileStartIndex' (extensionIndex - fileStartIndex)) : string.Empty; " is 150.
Empty Catch Block,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Gibraltar.Agent.Web.Internal,WebRequestSourceProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\Internal\WebRequestSourceProvider.cs,SetSource,The method has an empty catch block.
Magic Number,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GenerateLogMessage,The following statement contains a magic number: if ((ex.Data != null) && (ex.Data.Count > 0)) {  	StringBuilder descriptionBuilder = new StringBuilder (1024);  	descriptionBuilder.AppendLine ("Details:");  	foreach (DictionaryEntry data in ex.Data) {  		descriptionBuilder.AppendFormat ("  {0}: {1}\r\n"' data.Key ?? "(null)"' data.Value ?? "(null)");  	}  	description = descriptionBuilder.ToString ();  }  else {  	description = null;  }  
Magic Number,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GetRequestXml,The following statement contains a magic number: if (!string.IsNullOrEmpty (sessionId) && HttpContext.Current.Cache [sessionId] != null) {  	var clientDetails = HttpContext.Current.Cache [sessionId] as string;  	clientDetails = clientDetails.Substring (15' clientDetails.Length - 31);  	XmlElement clientDetailsNode = requestXml.CreateElement ("clientDetails");  	clientDetailsNode.InnerXml = clientDetails;  	requestNode.AppendChild (clientDetailsNode);  }  
Magic Number,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GetRequestXml,The following statement contains a magic number: if (!string.IsNullOrEmpty (sessionId) && HttpContext.Current.Cache [sessionId] != null) {  	var clientDetails = HttpContext.Current.Cache [sessionId] as string;  	clientDetails = clientDetails.Substring (15' clientDetails.Length - 31);  	XmlElement clientDetailsNode = requestXml.CreateElement ("clientDetails");  	clientDetailsNode.InnerXml = clientDetails;  	requestNode.AppendChild (clientDetailsNode);  }  
Magic Number,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GetRequestXml,The following statement contains a magic number: clientDetails = clientDetails.Substring (15' clientDetails.Length - 31);  
Magic Number,Gibraltar.Agent.Web,GibraltarEventProvider,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\GibraltarEventProvider.cs,GetRequestXml,The following statement contains a magic number: clientDetails = clientDetails.Substring (15' clientDetails.Length - 31);  
Magic Number,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,HttpApplicationBeginRequest,The following statement contains a magic number: try {  	HttpApplication application = sender as HttpApplication;  	Debug.Assert (application != null);  	//figure out the page and the full path in our friendly form.  	HttpRequest request = application.Request;  	string fullAppRelativePath = request.AppRelativeCurrentExecutionFilePath;  	if (string.IsNullOrEmpty (fullAppRelativePath) == false) {  		//but pull off the ~/ to get rid of silliness  		if (fullAppRelativePath.StartsWith ("~/")) {  			fullAppRelativePath = fullAppRelativePath.Substring (2);  		}  		// check if this is a call from a loupe JS agent  		if (fullAppRelativePath == "loupe/log") {  			// we don't record requests from our own JS agents  			// to avoid it cluttering the users metrics  so we   			// set the current request metric to null and exit  			m_CurrentRequestMetric = null;  			return;  		}  		m_CurrentRequestMetric.AbsolutePath = fullAppRelativePath;  		//now see if we can find just the file name.  		int fileStartIndex = fullAppRelativePath.LastIndexOfAny (Delimiters);  		if (fileStartIndex == -1)  			fileStartIndex = 0;  		//we never found a slash' so we start at zero.  		else  			fileStartIndex++;  		//because we don't really want the slash.  		//and we don't want any extension for this pretty name...  		int extensionIndex = fullAppRelativePath.IndexOf ('.'' fileStartIndex);  		if (extensionIndex == -1)  			extensionIndex = fullAppRelativePath.Length - 1;  		//so we go to the end.  		int nameLength = (extensionIndex - fileStartIndex);  		m_CurrentRequestMetric.PageName = (nameLength > 0) ? fullAppRelativePath.Substring (fileStartIndex' (extensionIndex - fileStartIndex)) : string.Empty;  		m_CurrentRequestMetric.QueryString = request.Url.Query;  		//and get the extension as well' so we can decide if we even care about this guy.  		if (extensionIndex < (fullAppRelativePath.Length - 1)) {  			string extension = fullAppRelativePath.Substring (extensionIndex + 1);  			//add the one to get rid of the period.  			if ((string.IsNullOrEmpty (extension) == false) && (IsExcludedExtension (extension.ToLowerInvariant ())))  				m_CurrentRequestMetric = null;  			//so we don't record jack.  		}  		//careful!  at this point the current request may be null  	}  }  catch (Exception ex) {  	GC.KeepAlive (ex);  	#if DEBUG  	Log.RecordException (ex' "System"' true);  	#endif  }  
Magic Number,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,HttpApplicationBeginRequest,The following statement contains a magic number: if (string.IsNullOrEmpty (fullAppRelativePath) == false) {  	//but pull off the ~/ to get rid of silliness  	if (fullAppRelativePath.StartsWith ("~/")) {  		fullAppRelativePath = fullAppRelativePath.Substring (2);  	}  	// check if this is a call from a loupe JS agent  	if (fullAppRelativePath == "loupe/log") {  		// we don't record requests from our own JS agents  		// to avoid it cluttering the users metrics  so we   		// set the current request metric to null and exit  		m_CurrentRequestMetric = null;  		return;  	}  	m_CurrentRequestMetric.AbsolutePath = fullAppRelativePath;  	//now see if we can find just the file name.  	int fileStartIndex = fullAppRelativePath.LastIndexOfAny (Delimiters);  	if (fileStartIndex == -1)  		fileStartIndex = 0;  	//we never found a slash' so we start at zero.  	else  		fileStartIndex++;  	//because we don't really want the slash.  	//and we don't want any extension for this pretty name...  	int extensionIndex = fullAppRelativePath.IndexOf ('.'' fileStartIndex);  	if (extensionIndex == -1)  		extensionIndex = fullAppRelativePath.Length - 1;  	//so we go to the end.  	int nameLength = (extensionIndex - fileStartIndex);  	m_CurrentRequestMetric.PageName = (nameLength > 0) ? fullAppRelativePath.Substring (fileStartIndex' (extensionIndex - fileStartIndex)) : string.Empty;  	m_CurrentRequestMetric.QueryString = request.Url.Query;  	//and get the extension as well' so we can decide if we even care about this guy.  	if (extensionIndex < (fullAppRelativePath.Length - 1)) {  		string extension = fullAppRelativePath.Substring (extensionIndex + 1);  		//add the one to get rid of the period.  		if ((string.IsNullOrEmpty (extension) == false) && (IsExcludedExtension (extension.ToLowerInvariant ())))  			m_CurrentRequestMetric = null;  		//so we don't record jack.  	}  	//careful!  at this point the current request may be null  }  
Magic Number,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,HttpApplicationBeginRequest,The following statement contains a magic number: if (fullAppRelativePath.StartsWith ("~/")) {  	fullAppRelativePath = fullAppRelativePath.Substring (2);  }  
Magic Number,Gibraltar.Agent.Web,RequestTrackingModule,C:\repos\GibraltarSoftware_Gibraltar.Agent.Web\src\Agent.Web\RequestTrackingModule.cs,HttpApplicationBeginRequest,The following statement contains a magic number: fullAppRelativePath = fullAppRelativePath.Substring (2);  
